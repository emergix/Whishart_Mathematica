(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



<< "C:\\Documents and Settings\\ocroissant\\My Documents\\SABR.m"


NormDis[x_]:=If[x>5,1,If[x<-5,0,(Erf[x/Sqrt[2]]+1)/2]]


NormDisInv[y_]:=Sqrt[2] InverseErf[0,-1+2 y]


NormDens[x_]:=Exp[-x^2/2.]/Sqrt[2Pi]


CoeffBasedIntegrate[f_,coeffs_]:=Module[{n=Length[coeffs],sum=0,i},Do[sum+=f[coeffs[[i,1]]] coeffs[[i,2]],{i,1,n}];sum]


CoeffBasedIntegrate[f_,coeffs1_,coeffs2_]:=Module[{n1=Length[coeffs1],n2=Length[coeffs2],sum=0,i,j},Do[Do[sum+=f[coeffs1[[i,1]],coeffs2[[j,1]]] coeffs1[[i,2]] coeffs2[[j,2]],{i,1,n1}],{j,1,n2}];sum]


CoeffBasedIntegrate[f_,coeffs1_,coeffs2_,coeffs3_]:=Module[{n1=Length[coeffs1],n2=Length[coeffs2],n3=Length[coeffs3],sum=0,i,j},Do[Do[Do[sum+=f[coeffs1[[i,1]],coeffs2[[j,1]],coeffs3[[k,1]]] coeffs1[[i,2]] coeffs2[[j,2]]coeffs3[[k,2]],{i,1,n1}],{j,1,n2}],{k,1,n3}];sum]


AdaptativeIntegrate[Func_,LegendreCoef0_,LegendreCoefn_,period0_,periodn_,\[Epsilon]_,imax_, initialperiod_,LegendreCoefn2_]:=Module[{sum=0.0,increment=0,i=0},
sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn2,0,initialperiod]];
sum+=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,initialperiod,period0]];
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];
While[(Abs[increment]>\[Epsilon])&&(i<imax),
sum+=increment;i+=1;
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];
];{i,sum}]


VectorAdaptativeIntegrate[Func_,LegendreCoef0_,LegendreCoefn_,period0_,periodn_,\[Epsilon]_,imax_, initialperiod_,LegendreCoefn2_]:=Module[{sum=0.0,increment=0,i=0,sum1},
Print["\[Epsilon]=",\[Epsilon]," imax=",imax];
sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn2,0,initialperiod]];
Print["Sum initiale",sum];
sum1=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,initialperiod,period0]];
Print["Sum Main Period",sum1];
sum+=sum1;
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];
Print["premier increment",increment];
While[(Abs[increment[[1]]]>\[Epsilon])&&(i<imax),
sum+=increment;i+=1;
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];
Print["i=",i,"  increment",increment];
];{i,sum}]


MatrixAdaptativeIntegrate[Func_,LegendreCoef0_,LegendreCoefn_,period0_,periodn_,\[Epsilon]_,imax_, initialperiod_,LegendreCoefn2_]:=Module[{sum=0.0,increment=0,i=0,sum1},
Print["\[Epsilon]=",\[Epsilon]," imax=",imax];
sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn2,0,initialperiod]];
Print["Sum initiale",sum];
sum1=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,initialperiod,period0]];
Print["Sum Main Period",sum1];
sum+=sum1;
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];
Print["premier increment",increment];
While[(Abs[increment[[1,1]]]>\[Epsilon])&&(i<imax),
sum+=increment;i+=1;
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];
Print["i=",i,"  increment",increment];
];{i,sum}]


VectorAdaptativeIntegrate[Func_,LegendreCoef0_,LegendreCoefn_,period0_,periodn_,\[Epsilon]_,imax_, initialperiod_,LegendreCoefn2_]:=Module[{sum=0.0,increment=0,i=0},

sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn2,0,initialperiod]];
sum+=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,initialperiod,period0]];
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];
While[(Abs[increment[[1]]]>\[Epsilon])&&(i<imax),
sum+=increment;i+=1;
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];
];{i,sum}]


MatrixAdaptativeIntegrate[Func_,LegendreCoef0_,LegendreCoefn_,period0_,periodn_,\[Epsilon]_,imax_, initialperiod_,LegendreCoefn2_]:=Module[{sum=0.0,increment=0,i=0},

sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn2,0,initialperiod]];
sum+=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,initialperiod,period0]];
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];
While[(Abs[increment[[1,1]]]>\[Epsilon])&&(i<imax),
sum+=increment;i+=1;
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];
];{i,sum}]


AdaptativeIntegrate[Func_,LegendreCoef0_,LegendreCoefn_,period0_,periodn_,\[Epsilon]_,imax_]:=Module[{sum=0.0,increment=\[Epsilon] 1.1,incrementPrec=10^8,i=0},

sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,period0]];
While[(Abs[increment]>\[Epsilon])&&(i<imax)&&(Abs[increment]<2 Abs[incrementPrec]),sum+=increment;incrementPrec=increment;increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];i+=1];{i,sum}]


AdaptativeIntegrate[Func_,LegendreCoef0_,period0_,periodn_,\[Epsilon]_,imax_]:=Module[{sum=0.0,increment=\[Epsilon]+1,incrementPrec=10^8,i=0},
sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,period0]];
While[(Abs[increment]>\[Epsilon])&&(i<imax)&&(Abs[increment]<2Abs[incrementPrec]),sum+=increment;incrementPrec=increment;
increment=Func[period0+(i+1/2)*periodn]periodn;i+=1];{i,sum}]


VectorAdaptativeIntegrate[Func_,LegendreCoef0_,LegendreCoefn_,period0_,periodn_,\[Epsilon]_,imax_,n_]:=
Module[{sum=Table[0.0,{i,1,n}],
increment=Table[0,{i,1,n}],i=0,incrementPrec=Table[0,{i,1,n}]},
sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,period0]];
While[(i==0)||((i==1)&&(Max[Abs[increment]]>\[Epsilon]))||((Max[Abs[increment]]>\[Epsilon])&&(i<imax)&&(Max[Abs[increment]]<3Max[Abs[incrementPrec]])),sum+=increment;incrementPrec=increment;
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];i+=1];{{i,imax,Max[Abs[increment]],Max[Abs[incrementPrec]],{(Max[Abs[increment]]>\[Epsilon]),(i<imax),(Max[Abs[increment]]<3Max[Abs[incrementPrec]])}},sum}]


VectorAdaptativeIntegrate[Func_,LegendreCoef0_,LegendreCoefn_,period0_,periodn_,\[Epsilon]_,imax_,n_]:=
Module[{sum=Table[0.0,{i,1,n}],
increment=Table[0,{i,1,n}],i=0,incrementPrec=Table[0,{i,1,n}]},
sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,period0]];
While[(i==0)||((i==1)&&(Max[Abs[increment]]>\[Epsilon]))||((Max[Abs[increment]]>\[Epsilon])&&(i<imax)&&(Max[Abs[increment]]<3Max[Abs[incrementPrec]])),sum+=increment;incrementPrec=increment;
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];i+=1];{{i,imax,Max[Abs[increment]],Max[Abs[incrementPrec]],{(Max[Abs[increment]]>\[Epsilon]),(i<imax),(Max[Abs[increment]]<3Max[Abs[incrementPrec]])}},sum}]


VectorAdaptativeIntegrate[Func_,LegendreCoef0_,period0_,periodn_,\[Epsilon]_,imax_,n_]:=Module[{sum=Table[0.0,{i,1,n}],increment=Table[\[Epsilon] 1.1,{i,1,n}],incrementPrec=Table[10^8,{i,1,n}],i=0},
sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,period0]];
While[(i==0)||((i==1)&&(Max[Abs[increment]]>\[Epsilon]))||((Max[Abs[increment]]>\[Epsilon])&&(i<imax)&&(Max[Abs[increment]]<3Max[Abs[incrementPrec]])),sum+=increment;incrementPrec=increment;
increment=Func[period0+(i+1/2)*periodn]periodn;i+=1];{i,sum}]


(*
VectorAdaptativeIntegrateUnprotected[Func_,LegendreCoef0_,LegendreCoefn_,period0_,periodn_,\[Epsilon]_,imax_,n_,printflag_,initialTailFlag_,InitialTailPosition_]:=Module[{sum=Table[0.0,{i,1,n}],increment=Table[0,{i,1,n}],i=0},
If[initialTailFlag>0,sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,InitialTailPosition]];If[printflag==8|| MemberQ[printflag,8] ,Print[" sum pre-initiale=",sum]];sum+=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,InitialTailPosition,period0]],sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,period0]]];
If[printflag==8|| MemberQ[printflag,8] ,Print[" sum initiale=",sum]];
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];
If[printflag==8|| MemberQ[printflag,8] ,Print["kini=",period0+i*periodn," increment initial=",increment]];
If[(Abs[increment[[1]]]>\[Epsilon])&&(i<imax),sum+=increment;i+=1];
While[(Abs[increment[[1]]]>\[Epsilon])&&(i<imax),
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];sum+=increment;i+=1;If[printflag==8|| MemberQ[printflag,8] ,Print[" i=",i," Kini=",period0+i*periodn," increment =",increment]]];
If[printflag==8|| MemberQ[printflag,8] ,Print[" Sum finale=",sum]];
{{i,Abs[increment[[1]]],{If[(Abs[increment[[1]]]>\[Epsilon]),"Abs[increment[[1]]]>\[Epsilon]:"<>ToString[Abs[increment[[1]]]]],If[(i<imax),"i<imax:"<>ToString[i]]}},sum}]
*)


(*
VectorAdaptativeIntegrateUnprotected[Func_,LegendreCoef0_,LegendreCoefn_,period0_,periodn_,\[Epsilon]_,imax_,n_,printflag_,initialTailFlag_,InitialTailPosition_,kmax_]:=Module[{sum=Table[0.0,{i,1,n}],increment=Table[0,{i,1,n}],i=0},
If[initialTailFlag>0,sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,InitialTailPosition]];If[printflag==8|| MemberQ[printflag,8] ,Print[" sum pre-initiale=",sum]];
If[period0<kmax,sum+=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,InitialTailPosition,period0]],
sum+=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,InitialTailPosition,kmax]]],If[period0<kmax,sum+=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,period0]],
sum+=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,kmax]]]];
If[printflag==8|| MemberQ[printflag,8] ,Print[" sum initiale=",sum]];

If[period0+(i+1)*periodn<kmax,increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]],
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,Max[period0+i*periodn,kmax]]];
];
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]];
If[printflag==8|| MemberQ[printflag,8] ,Print["kini=",period0+i*periodn," increment initial=",increment]];
If[(Abs[increment[[1]]]>\[Epsilon])&&(i<imax),sum+=increment;i+=1];
While[(Abs[increment[[1]]]>\[Epsilon])&&(i<imax)&&(period0+i*periodn<kmax),
If[period0+(i+1)*periodn<kmax,increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]],
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,Max[period0+i*periodn,kmax]]]
]
;sum+=increment;i+=1;If[printflag==8|| MemberQ[printflag,8] ,Print[" i=",i," Kini=",period0+i*periodn," increment =",increment]]];
If[printflag==8|| MemberQ[printflag,8] ,Print[" Sum finale=",sum]];
{{i,Abs[increment[[1]]],{If[(Abs[increment[[1]]]<=\[Epsilon]),"increment<=\[Epsilon] :"<>ToString[Abs[increment[[1]]]]],If[(i<imax),"i>imax :"<>ToString[i]],If[(period0+i*periodn>kmax),"period0+i*periodn>kmax:"<>ToString[period0+i*periodn]]}},sum}]
*)


VectorAdaptativeIntegrateUnprotected[Func_,LegendreCoef0_,LegendreCoefn_,period0_,periodn_,\[Epsilon]_,imax_,n_,printflag_,initialTailFlag_,InitialTailPosition_,kmax_,StartControl_,IncrementFactor_]:=Module[{sum=Table[0.0,{i,1,n}],increment=Table[0,{i,1,n}],i=0,incrementPrecedent},
If[initialTailFlag>0,sum=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,InitialTailPosition]];If[printflag==8|| MemberQ[printflag,8] ,Print[" sum pre-initiale=",sum]];
If[period0<kmax,sum+=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,InitialTailPosition,period0]],
sum+=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,InitialTailPosition,kmax]]],If[period0<kmax,sum+=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,period0]],
sum+=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,kmax]]]];
If[printflag==8|| MemberQ[printflag,8] ,Print[" sum initiale=",sum]];
If[period0+(i+1)*periodn<kmax,increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]],
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,Max[period0+i*periodn,kmax]]];
];
If[printflag==8|| MemberQ[printflag,8] ,Print["k={",period0+i*periodn,",",period0+(i+1)*periodn,"}  increment initial=",increment]];
If[(Abs[increment[[1]]]>\[Epsilon])&&(i<imax),sum+=increment;i+=1];
incrementPrecedent=1.1 increment;
While[(Abs[increment[[1]]]>\[Epsilon])&&(i<imax)&&(period0+i*periodn<kmax)&&(Abs[increment[[1]]]<= IncrementFactor Abs[incrementPrecedent[[1]]]),
incrementPrecedent=increment;
If[period0+(i+1)*periodn<kmax,increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn]],
increment=CoeffBasedIntegrate[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,Max[period0+i*periodn,kmax]]]
];
If[printflag==8|| MemberQ[printflag,8] ,Print[" i=",i," k={",period0+i*periodn,",",period0+(i+1)*periodn,"}  increment =",increment]];
sum+=increment;i+=1;
];
If[printflag==8|| MemberQ[printflag,8] ,Print["raison=",{If[(Abs[increment[[1]]]<=\[Epsilon]),"increment<=\[Epsilon] :"<>ToString[Abs[increment[[1]]]]],If[(i>=imax),"i>=imax :"<>ToString[i]],If[(period0+i*periodn>kmax),"period0+i*periodn>kmax:"<>ToString[period0+i*periodn]],
If[(Abs[increment[[1]]]> IncrementFactor Abs[incrementPrecedent[[1]]]),
"(Abs[increment[[1]]] > IncrementFactor Abs[incrementPrecedent[[1]]]):"<>ToString[Abs[increment[[1]]]]<>" > "<>ToString[IncrementFactor]<>" X "<>ToString[Abs[incrementPrecedent[[1]]]]]}];Print[" Sum finale=",sum]];
{{i,Abs[increment[[1]]],{If[(Abs[increment[[1]]]<=\[Epsilon]),"increment<=\[Epsilon] :"<>ToString[Abs[increment[[1]]]]],If[(i>=imax),"i>=imax :"<>ToString[i]],If[(period0+i*periodn>kmax),"period0+i*periodn>kmax:"<>ToString[period0+i*periodn]],
If[(Abs[increment[[1]]]> IncrementFactor Abs[incrementPrecedent[[1]]]),
"(Abs[increment[[1]]] > IncrementFactor Abs[incrementPrecedent[[1]]]):"<>ToString[Abs[increment[[1]]]]<>" > "<>ToString[IncrementFactor]<>" X "<>ToString[Abs[incrementPrecedent[[1]]]]]}},sum}]


VectorAdaptativeIntegrateExplosionSafe[Func_,LegendreCoef0_,LegendreCoefn_,period0_,periodn_,\[Epsilon]_,imax_,n_,startmonitortime_,plafondexplosion_,initialTailFlag_,InitialTailPosition_]:=Module[{sum=Table[0.0,{i,1,n}],increment=Table[0,{i,1,n}],i=0,incrementPrec=Table[0,{i,1,n}],exploded},
If[initialTailFlag>0,
{sum,exploded}=VectorCoeffBasedIntegrateExplosionSafe[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,InitialTailPosition],n,startmonitortime,plafondexplosion];
{increment,exploded}=VectorCoeffBasedIntegrateExplosionSafe[Func,LegendreCoeffsFromLegendre[LegendreCoef0,InitialTailPosition,period0],n,startmonitortime,plafondexplosion];
sum+=increment,
{sum,exploded}=VectorCoeffBasedIntegrateExplosionSafe[Func,LegendreCoeffsFromLegendre[LegendreCoef0,0,period0],n,startmonitortime,plafondexplosion]];
If[exploded<1,
{increment,exploded}=VectorCoeffBasedIntegrateExplosionSafe[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn],n,
startmonitortime,plafondexplosion];
While[((exploded<1)&&(Abs[increment[[1]]]>\[Epsilon])&&(i<imax)),sum+=increment;i+=1;
{increment,exploded}=VectorCoeffBasedIntegrateExplosionSafe[Func,LegendreCoeffsFromLegendre[LegendreCoefn,period0+i*periodn,period0+(i+1)*periodn],n,
startmonitortime,plafondexplosion]]];
{{i,If[exploded>0,"exploded"],If[Abs[increment[[1]]]<\[Epsilon],"Abs[increment[[1]]]<\[Epsilon]:"<>ToString[Abs[increment[[1]]]]],If[(i>=imax),"i>=imax"<>ToString[i]]},sum}]


VectorCoeffBasedIntegrateExplosionSafe[f_,coeffs_,nb_,startmonitortime_,plafond_]:=Module[{n=Length[coeffs],sum=Table[0.0,{i,1,nb}],i=1,increment=Table[0.0,{i,1,nb}],exploded=0},
increment=f[coeffs[[i,1]]];
If[coeffs[[i,1]]>startmonitortime&&Max[Abs[increment]]>plafond,exploded=1];
While[i<n&&exploded<1,sum+=increment coeffs[[i,2]];i++;increment=f[coeffs[[i,1]]] ;If[coeffs[[i,1]]>startmonitortime&&Max[Abs[increment]]>plafond,exploded=1]];
If[i==n&&exploded<1,sum+=increment coeffs[[i,2]]];
{sum,exploded}]


Naccurracy=16


LegendreWeight[n_,j_]:=Module[{xj=N[Solve[LegendreP[n,xxx1973]==0,xxx1973][[j]],Naccurracy]},
2/((1- xxx1973^2)/.xj)/(D[LegendreP[n,xxx1973],xxx1973] /. xj)^2]


LegendreRoot[n_,j_]:=Module[{xj=N[Solve[LegendreP[n,xxx1973]==0,xxx1973][[j]],Naccurracy]},
xxx1973/.xj]


LegendreCoeffs[n_]:=LegendreCoeffs[n,Naccurracy]


LegendreCoeffsFromLegendre[legendrelst_,a_,b_]:=Module[{lst=legendrelst,i,n=Length[legendrelst]},
Table[{((b-a)lst[[i]][[1]]+a+b)/2,lst[[i]][[2]](b-a)/2},{i,1,n}]]


LegendreCoeffsRepository=Table[{i,0},{i,1,200}];


LegendreCoeffs[n_]:=Module[{ll,ll1},ll=LegendreCoeffsRepository[[n,2]];If[ll===0,ll1=LegendreCoeffsAux[n];
LegendreCoeffsRepository[[n,2]]=ll1,
ll1=ll];ll1]


LegendreCoeffsAux[n_]:=Module[{Nacc=2Naccurracy,lst},
If[n>40,Nacc=40];
If[n>56,Nacc=60];
If[n>82,Nacc=70];
If[n>95,Nacc=80];
If[n>105,Nacc=100];
If[n>130,Nacc=120];
If[n>150,Nacc=n];
lst=LegendreCoeffs[n,Nacc];
SetAccuracy[lst,16]
]


LegendreCoeffs[n_,nprec_]:=Module[{xj,i,racines,legendreWeight,legendreRoot,xxx1973},racines=NSolve[LegendreP[n,xxx1973]==0,xxx1973,nprec];
legendreWeight=Table[
2/((1- xxx1973^2)/.racines[[j]])/(D[LegendreP[n,xxx1973],xxx1973] /. racines[[j]])^2,{j,1,Length[racines]}];
legendreRoot=Table[xxx1973 /.racines[[j]],{j,1,Length[racines]}];
Sort[Table[Re[{legendreRoot[[i]],legendreWeight[[i]]}],{i,1,n}],(#1[[1]]<#2[[1]])&]]


LegendreCoeffs[n_,a_,b_]:=LegendreCoeffsFromLegendre[LegendreCoeffs[n],a,b]


LaguerreWeight[n_,j_]:=-Module[{xj=N[Solve[LaguerreL[n,xxx1973]==0,xxx1973][[j]],Naccurracy]},
1/((LaguerreL[n-1,xxx1973] /. xj)(D[LaguerreL[n,xxx1973],xxx1973] /. xj))]/n


LaguerreRoot[n_,j_]:=Module[{xj=N[Solve[LaguerreL[n,xxx1973]==0,xxx1973][[j]],Naccurracy]},
xxx1973/.xj]


LaguerreCoeffs[n_]:=Module[{i},Sort[Table[{LaguerreRoot[n,i],LaguerreWeight[n,i]},{i,1,n}],(#1[[1]]<#2[[1]])&]]


HermiteWeight[n_,j_]:=Re[Module[{xj=N[Solve[HermiteH[n,xxx1973]==0,xxx1973][[j]],Naccurracy]},
2^(n-1) Factorial[n]Sqrt[Pi] /(n^2(HermiteH[n-1,xxx1973] /. xj)^2)]]


HermiteRoot[n_,j_]:=Re[Module[{xj=N[Solve[HermiteH[n,xxx1973]==0,xxx1973][[j]],Naccurracy]},
xxx1973/.xj]]


HermiteCoeffs[n_]:=Module[{i},Sort[Table[{HermiteRoot[n,i],HermiteWeight[n,i]},{i,1,n}],(#1[[1]]<#2[[1]])&]]


RiemanCoeffs[n_]:=Module[{i},Append[Prepend[Table[{N[2i/n-1],2/n},{i,1,n-1}],{-1,1/(n)}],{1,1/(n)}]]


RiemanCoeffsFromRieman[llst_,a_,b_]:=Module[{lst=llst,i,n=Length[llst]},
Table[{((b-a)lst[[i]][[1]]+a+b)/2,lst[[i]][[2]](b-a)/2},{i,1,n}]]


RiemanCoeffs[n_,a_,b_]:=RiemanCoeffsFromRieman[RiemanCoeffs[n],a,b]


ZeroTangeanteRiemanCoeffs[n_,a_,b_]:=Module[{rr=RiemanCoeffs[n,0,b]},rr[[1,2]]*=4/3;rr[[2,2]]*=5/6;rr]


ReenforcedRiemanCoeffs[n_,a_,b_,c_]:=Module[{rr0=RiemanCoeffs[n/2,a,b],rr1=RiemanCoeffs[n/2,b,c],rr},rr=Join[rr0,Drop[rr1]];
rr[[n/2+1,2]]=rr[[n/2-1,2]]/2+rr[[n/2+2,2]]/2;rr
]


ZeroTangeanteReenforcedRiemanCoeffs[n_,a_,b_,c_]:=Module[{rr=ReenforcedRiemanCoeffs[n,a,b,c]},
rr[[1,2]]*=4/3;rr[[2,2]]*=5/6;rr]


ModifiedHermiteCoeffs[n_]:=Module[{i},Sort[Table[{HermiteRoot[n,i] Sqrt[2],HermiteWeight[n,i]/Sqrt[Pi]},{i,1,n}],(#1[[1]]<#2[[1]])&]]


UpNormalCoeffs[n1_,a_]:=Module[{lst,y0=NormDis[a],ylst,xlst,n=n1+1,i},
ylst=Table[y0+(i-0.5)(1-y0)/n,{i,1,n}];
xlst=Map[NormDisInv,ylst];
lst=Table[{xlst[[i]],(xlst[[i+1]]-xlst[[i-1]])/2.( NormDens[xlst[[i-1]] ]+2NormDens[xlst[[i]] ]+NormDens[xlst[[i+1]] ])/4.},{i,2,n1}];
Prepend[lst,{xlst[[1]],(xlst[[2]]-a)/2}]
]


DownNormalCoeffs[n1_,a_]:=Module[{lst,y0=NormDis[-a],ylst,xlst,n=n1+1,i},
ylst=Table[y0+(i-0.5)(1-y0)/n,{i,1,n}];
xlst=Map[NormDisInv,ylst];
lst=Table[{-xlst[[i]],(xlst[[i+1]]-xlst[[i-1]])/2.( NormDens[xlst[[i-1]] ]+2NormDens[xlst[[i]] ]+NormDens[xlst[[i+1]] ])/4.},{i,2,n1}];
Prepend[lst,{-xlst[[1]],(xlst[[2]]+a)/2}]
]


UpNormalCoeffs2[n_,a_]:=Module[{lst=LaguerreCoeffs[n],i},
Table[{lst[[i]][[1]]+a,lst[[i]][[2]]Exp[lst[[i]][[1]]-(lst[[i]][[1]]+a)^2/2.]/Sqrt[2Pi]},{i,1,n}]]


DownNormalCoeffs2[n_,a_]:=Module[{lst=LaguerreCoeffs[n],i},
Table[{-lst[[i]][[1]]+a,lst[[i]][[2]]Exp[lst[[i]][[1]]-(lst[[i]][[1]]-a)^2/2.]/Sqrt[2Pi]},{i,1,n}]]


UpNormalCoeffs3[n_,a_]:=BetweenNormalCoeffs3[n,a,9]


DownNormalCoeffs3[n_,a_]:=BetweenNormalCoeffs3[n,-9,a]


BetweenNormalCoeffs3[n_,a_,b_]:=Module[{lst=LegendreCoeffs[n],i},
Table[{((b-a)lst[[i]][[1]]+a+b)/2,lst[[i]][[2]]Exp[-(((b-a)lst[[i]][[1]]+a+b)/2)^2/2.](b-a)/(2Sqrt[2Pi])},{i,1,n}]]


BetweenNormalCoeffs3X[legendrelst_,a_,b_]:=Module[{lst=legendrelst,i,n=Length[legendrelst]},
Table[{((b-a)lst[[i,1]]+a+b)/2,lst[[i,2]]Exp[-(((b-a)lst[[i,1]]+a+b)/2)^2/2.](b-a)/(2Sqrt[2Pi])},{i,1,n}]]


UpNormalCoeffs3X[lst_,a_]:=BetweenNormalCoeffs3X[lst,a,9]


DownNormalCoeffs3X[lst_,a_]:=BetweenNormalCoeffs3X[lst,-9,a]


UpCstCoeffs3[n_,a_]:=BetweenCstCoeffs3[n,a,9]


DownCstCoeffs3[n_,a_]:=BetweenNCstCoeffs3[n,-9,a]


BetweenCstCoeffs3[n_,a_,b_]:=Module[{lst=LegendreCoeffs[n],i},
Table[{((b-a)lst[[i]][[1]]+a+b)/2,lst[[i]][[2]](b-a)/2},{i,1,n}]]


BetweenCstCoeffs3X[legendrelst_,a_,b_]:=Module[{lst=legendrelst,i,n=Length[legendrelst]},
Table[{((b-a)lst[[i]][[1]]+a+b)/2,lst[[i]][[2]](b-a)/2},{i,1,n}]]


UpCstCoeffs3X[lst_,a_]:=BetweenCstCoeffs3X[lst,a,9]


DownCstCoeffs3X[lst_,a_]:=BetweenCstCoeffs3X[lst,-9,a]


InverseAsymptoticN[y_]:=If[y>0.5,N[Sqrt[ProductLog[1/(2 \[Pi] (-1+y)^2)]]],-N[Sqrt[ProductLog[1/(2 \[Pi] (y)^2)]]]]


AsymptoticN[x_]:=N[If[x>0,1-E^(-SetPrecision[x,3000]^2/2)/(Sqrt[\[Pi]]((2SetPrecision[x,3000])/Sqrt[2])),-E^(-SetPrecision[x,3000]^2/2)/(Sqrt[\[Pi]]((2SetPrecision[x,3000])/Sqrt[2]))],3000]


BetweenNormalCoeffs[legendrelst_,a_,b_,p_]:=Module[{lst=legendrelst,i,j,n=Length[legendrelst],a1,b1,Result,na,delta,x,xmax},Result=Table[0,{i,1,n p}];
If[p>1,
xmax=1-10^(-15);
ai=Table[0,{j,1,p+1}];
ai[[1]]=a;
na=NormDis[a];
delta=(NormDis[b]-na)/p;
(*Print["a=",a," b=",b," p=",p," delta=",delta];*)
Do[x=na+j delta;If[Abs[x]<xmax,ai[[j+1]]=NormDisInv[na+j delta],If[x>=xmax,ai[[j+1]]=b,ai[[j+1]]=a]];
(*Print["x=",x," ai[[j+1]]=",ai[[j+1]]]*),{j,1,p}];
Do[a1=ai[[j]];
b1=ai[[j+1]];
Do[Result[[(j-1)n+i]]={((b1-a1)lst[[i]][[1]]+a1+b1)/2,lst[[i]][[2]]Exp[-(((b1-a1)lst[[i]][[1]]+a1+b1)/2)^2/2.](b1-a1)/(2Sqrt[2Pi])},{i,1,n}]
,{j,1,p}],
Result=LegendreCoeffsFromLegendre[legendrelst,a,b]];
Result]


BetweenSABRCoeffs[legendrelst_,a_,b_,p_,f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetamethod_,favmethod_},T_]:=Module[{k1,k2,lst=legendrelst,i,j,n=Length[legendrelst],a1,b1,Result,na,delta,ai,sum,sumth},Result=Table[0,{i,1,n p}];
ai=Table[0,{j,1,p+1}];
ai[[1]]=a;
na=DistributionSABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetamethod,favmethod},a,T];
delta=(DistributionSABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetamethod,favmethod},b,T]-na)/p;
Do[ai[[j+1]]=N[DistributionSABROptionInverse[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetamethod,favmethod},na+j delta,T]],{j,1,p-1}];
ai[[p+1]]=b;
Do[
a1=ai[[j]];
b1=ai[[j+1]];
k2=ai[[j]];
f2=DistributionSABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetamethod,favmethod},k2,T];
Do[
k1=k2;
f1=f2;
k2=((b1-a1)lst[[i,1]]+a1+b1)/2;
Result[[(j-1)n+i]]={(k1+k2)/2,Max[10^(-10),
DensitySABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetamethod,favmethod},(k2+k1)/2,T]
(*(f2-f1)/(k2-k1)*)
]*
lst[[i,2]](b1-a1)/2},{i,1,n}],{j,1,p}];
sum=Sum[Result[[i,2]],{i,1,Length[Result]}];
sumth=delta p;
Do[Result[[i,2]]*=sumth/sum,{i,1,n p}];
Result]


SpecialExpCoeffs[{x1_,y1_},{x2_,y2_},{x3_,y3_},debut_,fin_,Nb_]:=Module[{a,b,c,a1,\[Delta],lst},
a=a1/.FindRoot[(-E^(a1 x3) y1+E^(a1 x2) (y1-y3)+E^(a1 x1) y3)/(E^(a1 x1)-E^(a1 x3))==y2,{a1,1}];
b=Log[(y1-y3)/(E^(a x1)-E^(a x3))];
c=-E^(b+a x3)+y3;\[Delta]=((-E^(b+a debut)+E^(b+a fin))/a+c (-debut+fin))/Nb;
lst=Table[debut,{i,1,Nb+1}];
Do[lst[[i]]=(E^(b+a lst[[-1+i]])+a \[Delta]+a c lst[[-1+i]]-c ProductLog[E^(b+(E^(b+a lst[[-1+i]])+a \[Delta]+a c lst[[-1+i]])/c)/c])/(a c),{i,2,Nb+1}];
Table[{(lst[[i]]+lst[[i+1]])/2,\[Delta]/(E^(b+a ((lst[[i]]+lst[[i+1]])/2))+c)},{i,1,Nb}]
]



SpecialExpCoeffs2[y0_,{x1_,y1_},fin_,Nb_]:=Module[{a,\[Delta],lst},
a=-Log[y1/y0]/x1^2;
\[Delta]=(Sqrt[\[Pi]] Erf[Sqrt[a] fin])/(2 Sqrt[a])/Nb;
Print["a=",a," \[Delta]=",\[Delta]];
lst=Table[0,{i,1,Nb+1}];
Do[lst[[i]]=InverseErf[(2 Sqrt[a] \[Delta]+Sqrt[\[Pi]] Erf[Sqrt[a] lst[[i-1]]])/Sqrt[\[Pi]]]/Sqrt[a],{i,2,Nb+1}];
Table[{(lst[[i]]+lst[[i+1]])/2,\[Delta]/E^(-a ((lst[[i]]+lst[[i+1]])/2)^2)},{i,1,Nb}]
]




