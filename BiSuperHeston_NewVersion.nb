(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[   2291779,      44731]
NotebookOptionsPosition[   2269151,      44103]
NotebookOutlinePosition[   2269545,      44120]
CellTagsIndexPosition[   2269502,      44117]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", " ", 
  "\"\<C:\\\\Documents and Settings\\\\ocroissant\\\\My \
Documents\\\\NumericalIntegration.m\>\""}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"<<", " ", 
  "\"\<C:\\\\Documents and Settings\\\\ocroissant\\\\My \
Documents\\\\BS.m\>\""}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3998713858696938`*^9, 3.3998713864009542`*^9}}],

Cell[BoxData[
 RowBox[{"<<", " ", 
  "\"\<C:\\\\Documents and Settings\\\\ocroissant\\\\My Documents\\\\BiHeston\
\\\\Heston_Definitif.m\>\""}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.404645251981682*^9, 3.40464527556026*^9}, {
  3.4049789141052*^9, 3.4049789197042*^9}, {3.4090497231524982`*^9, 
  3.409049731074526*^9}}],

Cell[BoxData[
 RowBox[{"<<", " ", 
  "\"\<C:\\\\Documents and Settings\\\\ocroissant\\\\My Documents\\\\BiHeston\
\\\\BiHeston_VanillaInstruments.m\>\""}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.404645251981682*^9, 3.40464527556026*^9}}],

Cell[BoxData[
 RowBox[{"<<", " ", 
  "\"\<C:\\\\Documents and Settings\\\\ocroissant\\\\My Documents\\\\BiHeston\
\\\\BiHeston_Calibration.m\>\""}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.404645251981682*^9, 3.40464527556026*^9}, 
   3.4052527623330274`*^9, {3.4058639550620213`*^9, 3.4058639664372396`*^9}, {
   3.405867892653247*^9, 3.4058678960283117`*^9}}],

Cell[BoxData["process"], "Input",
 Background->RGBColor[0.494118, 0.537255, 0.827451]],

Cell[BoxData[
 RowBox[{"Le", " ", "process", " ", 
  RowBox[{"est", " ", ":", "  "}]}]], "DisplayFormulaNumbered"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   FractionBox[
    SubscriptBox["dS", "t"], 
    SubscriptBox["S", "t"]], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "S"], 
     SqrtBox[
      SubscriptBox["v", 
       RowBox[{"1", ",", "t"}]]], " ", 
     SubscriptBox["dW", 
      RowBox[{"1", ",", "t"}]]}], "+", 
    RowBox[{
     SubscriptBox["\[Beta]", "S"], 
     SqrtBox[
      SubscriptBox["v", 
       RowBox[{"2", ",", "t"}]]], " ", 
     SubscriptBox["dW", 
      RowBox[{"2", ",", "t"}]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["dv", 
    RowBox[{"1", ",", "t"}]], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Lambda]", "1"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "-", 
       SubscriptBox["v", 
        RowBox[{"1", ",", "t"}]]}], ")"}], "dt"}], "+", 
    RowBox[{
     SubscriptBox["\[Kappa]", "1"], " ", 
     SqrtBox[
      SubscriptBox["v", 
       RowBox[{"1", ",", "t"}]]], " ", "d", 
     SubscriptBox[
      OverscriptBox["W", "_"], 
      RowBox[{"1", ",", "t"}]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["dv", 
   RowBox[{"2", ",", "t"}]], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Lambda]", "2"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "-", 
      SubscriptBox["v", 
       RowBox[{"2", ",", "t"}]]}], ")"}], "dt"}], "+", 
   RowBox[{
    SubscriptBox["\[Kappa]", "2"], " ", 
    SqrtBox[
     SubscriptBox["v", 
      RowBox[{"2", ",", "t"}]]], " ", "d", 
    SubscriptBox[
     OverscriptBox["W", "_"], 
     RowBox[{"2", ",", "t"}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["dW", 
      RowBox[{"1", ",", "t"}]], "d", 
     SubscriptBox[
      OverscriptBox["W", "_"], 
      RowBox[{"1", ",", "t"}]]}], "=", 
    RowBox[{
     SubscriptBox["\[Rho]", "1"], " ", "dt"}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    SubscriptBox["dW", 
     RowBox[{"2", ",", "t"}]], "d", 
    SubscriptBox[
     OverscriptBox["W", "_"], 
     RowBox[{"2", ",", "t"}]]}], "=", 
   RowBox[{
    SubscriptBox["\[Rho]", "2"], " ", "dt"}]}]}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.4087751574404287`*^9, 3.408775170987563*^9}, {
  3.4096589221361156`*^9, 3.4096589384646587`*^9}}],

Cell[BoxData[
 RowBox[{"ici", " ", 
  SubscriptBox["\[Alpha]", 
   RowBox[{"S", " "}]], "et", " ", 
  SubscriptBox["\[Beta]", "S"], " ", "jouent", "  ", "le", " ", "role", " ", 
  "de", " ", "valeur", " ", "initiale", " ", "de", " ", "V", " "}]], "Input",
 CellChangeTimes->{{3.4096589617308793`*^9, 3.4096590076070538`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Soit", " ", 
   SubscriptBox["X", "t"]}], "=", 
  RowBox[{"Log", "[", 
   SubscriptBox["S", "t"], "]"}]}]], "Input",
 CellChangeTimes->{{3.408775207347636*^9, 3.4087752273480206`*^9}}],

Cell[BoxData[
 RowBox[{"on", " ", "obtient", " ", "le", " ", "process"}]], "Input",
 CellChangeTimes->{{3.4087752325668707`*^9, 3.408775238051351*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["dX", "t"], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Alpha]", "1"], "2"], 
        SubscriptBox["v", 
         RowBox[{"1", ",", "t"}]]}], "+", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Beta]", "1"], "2"], 
        SubscriptBox["v", 
         RowBox[{"2", ",", "t"}]]}]}], ")"}], "dt"}], "+", 
    RowBox[{
     SubscriptBox["\[Alpha]", "1"], 
     SqrtBox[
      SubscriptBox["v", 
       RowBox[{"1", ",", "t"}]]], " ", 
     SubscriptBox["dW", 
      RowBox[{"1", ",", "t"}]]}], "+", 
    RowBox[{
     SubscriptBox["\[Beta]", "1"], 
     SqrtBox[
      SubscriptBox["v", 
       RowBox[{"2", ",", "t"}]]], " ", 
     SubscriptBox["dW", 
      RowBox[{"2", ",", "t"}]]}]}]}], ";", "  ", 
  RowBox[{
   RowBox[{"avec", " ", 
    SubscriptBox["X", "0"]}], "=", 
   RowBox[{"Log", "[", 
    SubscriptBox["S", "0"], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4087752444264736`*^9, 3.408775325615532*^9}, {
  3.4087973470638885`*^9, 3.4087973730331373`*^9}, {3.409659198674445*^9, 
  3.40965923833171*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.408797363361077*^9, 3.408797364454848*^9}}],

Cell[BoxData[
 RowBox[{"Transform\[EAcute]e", " ", "fondamentale"}]], "Input",
 Background->RGBColor[0.494118, 0.537255, 0.827451]],

Cell[BoxData[
 StyleBox[
  TagBox[
   StyleBox[
    RowBox[{"{", 
     StyleBox[GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[PartialD]", " ", "P"}], 
            RowBox[{
             RowBox[{"\[PartialD]", "t"}], " "}]]}], "=", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Alpha]", "1"], "2"], 
               SubscriptBox["V", "1"]}], "+", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Beta]", "1"], "2"], 
               SubscriptBox["V", "2"]}]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["x", "2"]}]]}], "+", 
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "1"], "2"], " ", 
              SubscriptBox["V", "1"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "1"], "2"]}]]}], "+", 
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "2"], "2"], " ", 
              SubscriptBox["V", "2"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "2"], "2"]}]]}], "+", 
           RowBox[{
            SubscriptBox["\[Rho]", "1"], " ", 
            SubscriptBox["\[Kappa]", "1"], "  ", 
            SubscriptBox["v", "1"], 
            SubscriptBox["\[Alpha]", "1"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "1"]}], " ", 
              RowBox[{"\[PartialD]", "x"}]}]]}], "+", 
           RowBox[{
            SubscriptBox["\[Rho]", "2"], " ", 
            SubscriptBox["\[Kappa]", "2"], "  ", 
            SubscriptBox["v", "2"], 
            SubscriptBox["\[Beta]", "1"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " ", 
              RowBox[{"\[PartialD]", "S"}]}]]}], "+", " ", 
           RowBox[{
            SubscriptBox["\[Lambda]", "1"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "1"], "-", 
              SubscriptBox["v", "1"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "1"]}], " "}]]}], "+", 
           RowBox[{
            SubscriptBox["\[Lambda]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "-", 
              SubscriptBox["v", "2"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}], "-", 
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Alpha]", "1"], "2"], 
               SubscriptBox["v", "1"]}], "+", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Beta]", "1"], "2"], 
               SubscriptBox["v", "2"]}]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "P"}], 
             RowBox[{"\[PartialD]", "x", " "}]]}]}]}]},
        {
         RowBox[{
          RowBox[{"P", 
           RowBox[{"(", "0", ")"}]}], "=", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", "x"], "-", "K"}], ")"}], 
           "+"]}]}
       }],
      ShowAutoStyles->True]}],
    ShowAutoStyles->False],
   #& ],
  FontSize->16]], "Text",
 CellChangeTimes->{{3.4087771189780893`*^9, 3.4087771989952507`*^9}, 
   3.4087776404724765`*^9, {3.408797763165628*^9, 3.4087977856348095`*^9}, {
   3.4096591090627756`*^9, 3.4096591244694204`*^9}, {3.409659173876935*^9, 
   3.4096591815646315`*^9}, {3.4096592705669103`*^9, 
   3.4096592769733243`*^9}, {3.409659390351227*^9, 3.4096594012108793`*^9}}],

Cell[BoxData[
 RowBox[{"soit", " ", "q", " ", "la", " ", "transform\[EAcute]", " ", "de", 
  " ", "fourier", " ", "par", " ", "rapport", " ", "a", " ", "S"}]], "Input",
 CellChangeTimes->{{3.4087775893933706`*^9, 3.408777625331561*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "[", "z", "]"}], "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "z", "  ", "x"}]], 
    RowBox[{"P", "[", "x", "]"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Text",
 CellChangeTimes->{{3.4087977888067455`*^9, 3.408797797869419*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "z", "  ", "x"}]], 
    FractionBox[
     RowBox[{"\[PartialD]", " ", "P"}], 
     RowBox[{"\[PartialD]", "x"}]], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox[
     SuperscriptBox[
      RowBox[{"[", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "z", "  ", "x"}]], "P"}], "]"}], 
      "\[Infinity]"], 
     RowBox[{"-", "\[Infinity]"}]], "-", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{"\[ImaginaryI]", " ", "Z", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "z", " ", "x"}]], "P", 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], " ", ")"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "z", "  ", "x"}]], "P", 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.408797803338274*^9, 3.408797855026767*^9}}],

Cell["\[Tau] = T - t", "Text"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox["{",
    ShowAutoStyles->False], 
   StyleBox[GridBox[{
      {
       RowBox[{
        StyleBox[
         FractionBox[
          RowBox[{"\[PartialD]", " ", "q"}], 
          RowBox[{
           RowBox[{"\[PartialD]", "\[Tau]"}], " "}]],
         FontSize->16], 
        StyleBox["=",
         FontSize->16], 
        RowBox[{
         RowBox[{
          StyleBox[
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SubscriptBox["V", "1"], "+", 
              SubscriptBox["V", "2"]}], "2"]}],
           FontSize->16], 
          SuperscriptBox[
           StyleBox["Z",
            FontSize->16], "2"], "q"}], 
         StyleBox["+",
          FontSize->16], 
         StyleBox[
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Kappa]", "1"], "2"], " ", 
             SubscriptBox["V", "1"]}], "2"], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], " ", "q"}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox[
              SubscriptBox["V", "1"], "2"]}]]}],
          FontSize->16], 
         StyleBox["+",
          FontSize->16], 
         StyleBox[
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Kappa]", "2"], "2"], " ", 
             SubscriptBox["V", "2"]}], "2"], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], " ", "q"}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox[
              SubscriptBox["V", "2"], "2"]}]]}],
          FontSize->16], 
         StyleBox["-",
          FontSize->16], 
         StyleBox[
          RowBox[{"\[ImaginaryI]", " ", "Z", " ", 
           SubscriptBox["\[Rho]", "1"], " ", 
           SubscriptBox["\[Kappa]", "1"], "  ", 
           SubscriptBox["v", "1"], 
           FractionBox[
            RowBox[{"\[PartialD]", " ", "q"}], 
            RowBox[{
             RowBox[{"\[PartialD]", 
              SubscriptBox["V", "1"]}], " "}]]}],
          FontSize->16], 
         StyleBox["-",
          FontSize->16], 
         StyleBox[
          RowBox[{"\[ImaginaryI]", " ", "Z", " ", 
           SubscriptBox["\[Rho]", "2"], " ", 
           SubscriptBox["\[Kappa]", "2"], "  ", 
           SubscriptBox["v", "2"], 
           FractionBox[
            RowBox[{"\[PartialD]", " ", "q"}], 
            RowBox[{
             RowBox[{"\[PartialD]", 
              SubscriptBox["V", "2"]}], " "}]]}],
          FontSize->16], 
         StyleBox["+",
          FontSize->16], 
         StyleBox[" ",
          FontSize->16], 
         StyleBox[
          RowBox[{
           SubscriptBox["\[Lambda]", "1"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Theta]", "1"], "-", 
             SubscriptBox["v", "1"]}], ")"}], 
           FractionBox[
            RowBox[{"\[PartialD]", " ", "q"}], 
            RowBox[{
             RowBox[{"\[PartialD]", 
              SubscriptBox["V", "1"]}], " "}]]}],
          FontSize->16], 
         StyleBox["+",
          FontSize->16], 
         StyleBox[
          RowBox[{
           SubscriptBox["\[Lambda]", "2"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "-", 
             SubscriptBox["v", "2"]}], ")"}], 
           FractionBox[
            RowBox[{"\[PartialD]", " ", "q"}], 
            RowBox[{
             RowBox[{"\[PartialD]", 
              SubscriptBox["V", "2"]}], " "}]]}],
          FontSize->16], 
         StyleBox["+",
          FontSize->16], 
         RowBox[{
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "Z"}], "2"], 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["v", "1"], "+", 
            SubscriptBox["v", "2"]}], ")"}], "q"}]}]}]},
      {
       RowBox[{
        RowBox[{"q", 
         RowBox[{"(", "0", ")"}]}], "=", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "x"}]], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", "x"], "-", "K"}], ")"}], "+"], 
          
          RowBox[{"\[DifferentialD]", "x"}]}]}]}]}
     }],
    ShowAutoStyles->True]}],
  FontSize->16]], "Text",
 CellChangeTimes->{{3.4087773889988985`*^9, 3.4087774203745008`*^9}, {
  3.408777841679465*^9, 3.4087778811489725`*^9}, {3.408797400111782*^9, 
  3.408797413440163*^9}}],

Cell[BoxData["soit"], "Input",
 CellChangeTimes->{{3.408777925759204*^9, 3.4087779262904644`*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox["{",
    ShowAutoStyles->False], 
   StyleBox[GridBox[{
      {
       RowBox[{
        StyleBox[
         FractionBox[
          RowBox[{"\[PartialD]", " ", "q"}], 
          RowBox[{
           RowBox[{"\[PartialD]", "\[Tau]"}], " "}]],
         FontSize->16], 
        StyleBox["=",
         FontSize->16], 
        RowBox[{
         RowBox[{
          StyleBox[
           FractionBox[
            RowBox[{
             SubscriptBox["V", "1"], "+", 
             SubscriptBox["V", "2"]}], "2"],
           FontSize->16], 
          RowBox[{
           StyleBox["(",
            FontSize->16], 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "Z"}], 
            StyleBox["-",
             FontSize->16], 
            SuperscriptBox[
             StyleBox["Z",
              FontSize->16], "2"]}], ")"}], "q"}], 
         StyleBox["+",
          FontSize->16], 
         StyleBox[
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Kappa]", "1"], "2"], " ", 
             SubscriptBox["V", "1"]}], "2"], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], " ", "q"}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox[
              SubscriptBox["V", "1"], "2"]}]]}],
          FontSize->16], 
         StyleBox["+",
          FontSize->16], 
         StyleBox[
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Kappa]", "2"], "2"], " ", 
             SubscriptBox["V", "2"]}], "2"], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], " ", "q"}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox[
              SubscriptBox["V", "2"], "2"]}]]}],
          FontSize->16], 
         StyleBox["-",
          FontSize->16], 
         StyleBox[
          RowBox[{"\[ImaginaryI]", " ", "Z", " ", 
           SubscriptBox["\[Rho]", "1"], " ", 
           SubscriptBox["\[Kappa]", "1"], "  ", 
           SubscriptBox["v", "1"], 
           FractionBox[
            RowBox[{"\[PartialD]", " ", "q"}], 
            RowBox[{
             RowBox[{"\[PartialD]", 
              SubscriptBox["V", "1"]}], " "}]]}],
          FontSize->16], 
         StyleBox["-",
          FontSize->16], 
         StyleBox[
          RowBox[{"\[ImaginaryI]", " ", "Z", " ", 
           SubscriptBox["\[Rho]", "2"], " ", 
           SubscriptBox["\[Kappa]", "2"], "  ", 
           SubscriptBox["v", "2"], 
           FractionBox[
            RowBox[{"\[PartialD]", " ", "q"}], 
            RowBox[{
             RowBox[{"\[PartialD]", 
              SubscriptBox["V", "2"]}], " "}]]}],
          FontSize->16], 
         StyleBox["+",
          FontSize->16], 
         StyleBox[" ",
          FontSize->16], 
         StyleBox[
          RowBox[{
           SubscriptBox["\[Lambda]", "1"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Theta]", "1"], "-", 
             SubscriptBox["v", "1"]}], ")"}], 
           FractionBox[
            RowBox[{"\[PartialD]", " ", "q"}], 
            RowBox[{
             RowBox[{"\[PartialD]", 
              SubscriptBox["V", "1"]}], " "}]]}],
          FontSize->16], 
         StyleBox["+",
          FontSize->16], 
         StyleBox[
          RowBox[{
           SubscriptBox["\[Lambda]", "2"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "-", 
             SubscriptBox["v", "2"]}], ")"}], 
           FractionBox[
            RowBox[{"\[PartialD]", " ", "q"}], 
            RowBox[{
             RowBox[{"\[PartialD]", 
              SubscriptBox["V", "2"]}], " "}]]}],
          FontSize->16]}]}]},
      {
       RowBox[{
        RowBox[{"q", 
         RowBox[{"(", "0", ")"}]}], "=", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "x"}]], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", "x"], "-", "K"}], ")"}], "+"], 
          
          RowBox[{"\[DifferentialD]", "x"}]}]}]}]}
     }],
    ShowAutoStyles->True]}],
  FontSize->16]], "Text",
 CellChangeTimes->{{3.4087773889988985`*^9, 3.4087774203745008`*^9}, {
  3.408777841679465*^9, 3.4087778811489725`*^9}, {3.408777954666009*^9, 
  3.4087779916354685`*^9}, {3.4087974065806565`*^9, 3.4087974103307285`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"a", " ", "x"}]]}], "-", "K"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4050030011103473`*^9, 3.405003045507947*^9}, {
  3.4087949525647907`*^9, 3.408794955721101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "::", "\<\"ifun\"\>"}], ":", 
  " ", "\<\"Inverse functions are being used by \\!\\(Solve\\), so some \
solutions may not be found; use Reduce for complete solution information. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.4050030496419473`*^9, 3.40879495775239*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{"Log", "[", 
      FractionBox["K", "\[Alpha]"], "]"}], "a"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.3997832193242493`*^9, 3.399783241121543*^9}, 
   3.3997832783097568`*^9, 3.403953784350909*^9, 3.4046243697370987`*^9, 
   3.405003049673147*^9, 3.40879495775239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    FractionBox[
     RowBox[{"Log", "[", 
      FractionBox["K", "\[Alpha]"], "]"}], "a"], "\[Infinity]"], " ", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "k", "  ", "x"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"a", " ", "x"}]]}], "-", "K"}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3997830788528023`*^9, 3.3997830934780827`*^9}, {
   3.399783175698412*^9, 3.3997832121991124`*^9}, {3.3997832703252287`*^9, 
   3.3997832746221857`*^9}, {3.403953757897276*^9, 3.403953760772331*^9}, {
   3.404624357783668*^9, 3.40462435886182*^9}, {3.405003070265147*^9, 
   3.4050030795471473`*^9}, {3.4087949732839384`*^9, 3.408794981346593*^9}, 
   3.4087975338487253`*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Im", "[", "k", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "a", "]"}], "<", 
     RowBox[{"Im", "[", "k", "]"}]}]}], ",", 
   FractionBox[
    RowBox[{"a", " ", "K", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["K", "\[Alpha]"], ")"}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "k"}], "a"]]}], 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}], "-", 
     SuperscriptBox["k", "2"]}]], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}]]}], " ", "K"}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"a", " ", "x"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}]}]], " ", 
       "\[Alpha]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       FractionBox[
        RowBox[{"Log", "[", 
         FractionBox["K", "\[Alpha]"], "]"}], "a"], ",", "\[Infinity]"}], 
      "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "a", "]"}], "\[LessEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"Im", "[", "k", "]"}], "\[LessEqual]", "0"}]}], ")"}], "||",
        
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "a", "]"}], ">", "0"}], "&&", 
         RowBox[{
          RowBox[{"Im", "[", "k", "]"}], "\[LessEqual]", 
          RowBox[{"Re", "[", "a", "]"}]}]}], ")"}]}]}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.4050030855843472`*^9, 3.408794991799919*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"donc", " ", "q", 
   RowBox[{"(", 
    RowBox[{"\[Omega]", ",", 
     SubscriptBox["V", "1"], ",", 
     SubscriptBox["V", "2"], ",", "0"}], ")"}]}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"a", " ", "K", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["K", "\[Alpha]"], ")"}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "k"}], "a"]]}], 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}], "-", 
     SuperscriptBox["k", "2"]}]], "\[Congruent]", 
   RowBox[{
    SubscriptBox["q", "0"], 
    RowBox[{"(", "\[Omega]", ")"}], " "}]}]}]], "Text",
 CellChangeTimes->{
  3.4087774567033234`*^9, {3.4087780749808187`*^9, 3.4087781012156973`*^9}, 
   3.408797549974035*^9}],

Cell["donc on definit", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "[", 
   RowBox[{"Z", ",", 
    SubscriptBox["V", "1"], ",", 
    SubscriptBox["V", "2"], ",", "t"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["q", "1"], "[", 
    RowBox[{"Z", ",", 
     SubscriptBox["V", "1"], ",", 
     SubscriptBox["V", "2"], ",", "t"}], "]"}], 
   RowBox[{
    SubscriptBox["q", "0"], "[", "Z", "]"}]}]}]], "Text",
 CellChangeTimes->{{3.4087780602774115`*^9, 3.4087780667619114`*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox["{",
    ShowAutoStyles->False], 
   StyleBox[GridBox[{
      {
       StyleBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", " ", 
           SubscriptBox["q", "1"]}], 
          RowBox[{
           RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], "=", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             SubscriptBox["V", "1"], "+", 
             SubscriptBox["V", "2"]}], "2"], 
           RowBox[{
            StyleBox["(",
             FontSize->16], 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "Z"}], 
             StyleBox["-",
              FontSize->16], 
             SuperscriptBox[
              StyleBox["Z",
               FontSize->16], "2"]}], ")"}], 
           SubscriptBox["q", "1"]}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Kappa]", "1"], "2"], " ", 
             SubscriptBox["V", "1"]}], "2"], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], " ", 
             SubscriptBox["q", "1"]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox[
              SubscriptBox["V", "1"], "2"]}]]}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Kappa]", "2"], "2"], " ", 
             SubscriptBox["V", "2"]}], "2"], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], " ", 
             SubscriptBox["q", "1"]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox[
              SubscriptBox["V", "2"], "2"]}]]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "Z", " ", 
           SubscriptBox["\[Rho]", "1"], " ", 
           SubscriptBox["\[Kappa]", "1"], "  ", 
           SubscriptBox["v", "1"], 
           FractionBox[
            RowBox[{"\[PartialD]", " ", 
             SubscriptBox["q", "1"]}], 
            RowBox[{
             RowBox[{"\[PartialD]", 
              SubscriptBox["V", "1"]}], " "}]]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "Z", " ", 
           SubscriptBox["\[Rho]", "2"], " ", 
           SubscriptBox["\[Kappa]", "2"], "  ", 
           SubscriptBox["v", "2"], 
           FractionBox[
            RowBox[{"\[PartialD]", " ", 
             SubscriptBox["q", "1"]}], 
            RowBox[{
             RowBox[{"\[PartialD]", 
              SubscriptBox["V", "2"]}], " "}]]}], "+", " ", 
          RowBox[{
           SubscriptBox["\[Lambda]", "1"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Theta]", "1"], "-", 
             SubscriptBox["v", "1"]}], ")"}], 
           FractionBox[
            RowBox[{"\[PartialD]", " ", 
             SubscriptBox["q", "1"]}], 
            RowBox[{
             RowBox[{"\[PartialD]", 
              SubscriptBox["V", "1"]}], " "}]]}], "+", 
          RowBox[{
           SubscriptBox["\[Lambda]", "2"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "-", 
             SubscriptBox["v", "2"]}], ")"}], 
           FractionBox[
            RowBox[{"\[PartialD]", " ", 
             SubscriptBox["q", "1"]}], 
            RowBox[{
             RowBox[{"\[PartialD]", 
              SubscriptBox["V", "2"]}], " "}]]}]}]}],
        FontSize->16]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["q", "1"], 
         RowBox[{"(", "0", ")"}]}], "=", "1"}]}
     }],
    ShowAutoStyles->True]}],
  FontSize->16]], "Text",
 CellChangeTimes->{
  3.408777717833337*^9, {3.4087780240267153`*^9, 3.408778042480195*^9}}],

Cell["\<\
ce qui nous permet de nous debarasser a la fois d' une dimension et de la \
dependance  vis a vis de la condition aux limite\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Call", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "\[Pi]"}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["z", "i"]}], "-", "\[Infinity]"}], 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["z", "i"]}], "+", "\[Infinity]"}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Omega]", "  ", 
        RowBox[{"Log", "[", 
         SubscriptBox["S", "0"], "]"}]}]], 
      RowBox[{
       SubscriptBox["q", "1"], "[", 
       RowBox[{"Z", ",", 
        SubscriptBox["V", "1"], ",", 
        SubscriptBox["V", "2"], ",", "t"}], "]"}], 
      RowBox[{
       SubscriptBox["q", "0"], "[", "Z", "]"}], 
      RowBox[{"\[DifferentialD]", "Z"}]}]}]}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"-", "1"}], 
     RowBox[{"2", "\[Pi]"}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["z", "i"]}], "-", "\[Infinity]"}], 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["z", "i"]}], "+", "\[Infinity]"}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Omega]", "  ", 
        RowBox[{"Log", "[", 
         SubscriptBox["S", "0"], "]"}]}]], 
      FractionBox[
       RowBox[{"a", " ", "K", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["K", "\[Alpha]"], ")"}], 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "k"}], "a"]]}], 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}], "-", 
        SuperscriptBox["k", "2"]}]], 
      RowBox[{
       SubscriptBox["q", "1"], "[", 
       RowBox[{"Z", ",", 
        SubscriptBox["V", "1"], ",", 
        SubscriptBox["V", "2"], ",", "t"}], "]"}], 
      RowBox[{"\[DifferentialD]", "Z"}]}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.408778135575732*^9, 3.408778165701311*^9}, {
   3.4087782668751287`*^9, 3.4087783717833924`*^9}, 3.408778410471635*^9, {
   3.4087976524291267`*^9, 3.408797667320038*^9}, {3.4087986756518974`*^9, 
   3.408798710480691*^9}},
 Background->GrayLevel[0.900008]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ou", " ", 
   SubscriptBox["z", "i"]}], " ", ">", " ", "1", " "}]], "Input",
 CellChangeTimes->{{3.408778209889659*^9, 3.408778223530546*^9}}],

Cell["On fait ensuite l' hypothese affine", "Text"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    SubscriptBox["q", "1"], "[", 
    RowBox[{
     SubscriptBox["V", "1"], ",", 
     SubscriptBox["V", "2"], ",", "\[Tau]"}], "]"}], "=", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"A", "[", "\[Tau]", "]"}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["B", "1"], "[", "\[Tau]", "]"}], " ", 
      SubscriptBox["V", "1"]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["B", "2"], "[", "\[Tau]", "]"}], " ", 
      SubscriptBox["V", "2"]}]}]]}]}]], "Text"],

Cell[BoxData[
 RowBox[{"afin", " ", "de", " ", "resoudre", " ", 
  RowBox[{"l", "'"}], "equation", " ", "differentielle", " ", "qui", " ", 
  "nous", " ", "reste"}]], "Input",
 CellChangeTimes->{{3.408778495660771*^9, 3.408778516020537*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"then", " ", "we", " ", "have", 
    RowBox[{"(", " ", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"\[PartialD]", 
         RowBox[{"A", "[", "\[Tau]", "]"}]}], " "}], 
       RowBox[{
        RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], "+", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[PartialD]", 
          RowBox[{
           SubscriptBox["B", "1"], "[", "\[Tau]", "]"}]}], " "}], 
        RowBox[{
         RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], " ", 
       SubscriptBox["V", "1"]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[PartialD]", 
          RowBox[{
           SubscriptBox["B", "2"], "[", "\[Tau]", "]"}]}], " "}], 
        RowBox[{
         RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], " ", 
       SubscriptBox["V", "2"]}]}], ")"}], 
    SubscriptBox["q", "1"]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Kappa]", "1"], "2"], " ", 
         SubscriptBox["V", "1"]}], "2"], 
       SuperscriptBox[
        RowBox[{
         SubscriptBox["B", "1"], "[", "\[Tau]", "]"}], "2"]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Kappa]", "2"], "2"], " ", 
         SubscriptBox["V", "2"]}], "2"], 
       SuperscriptBox[
        RowBox[{
         SubscriptBox["B", "2"], "[", "\[Tau]", "]"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Lambda]", "1"], " ", 
          SubscriptBox["\[Theta]", "1"]}], "-", 
         RowBox[{
          SubscriptBox["V", "1"], " ", 
          RowBox[{"(", " ", 
           RowBox[{
            SubscriptBox["\[Lambda]", "1"], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Rho]", "1"], " ", "Z", " ", 
             SubscriptBox["\[Kappa]", "1"]}]}], ")"}]}]}], ")"}], 
       RowBox[{
        SubscriptBox["B", "1"], "[", "\[Tau]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Lambda]", "2"], " ", 
          SubscriptBox["\[Theta]", "2"]}], "-", 
         RowBox[{
          SubscriptBox["V", "2"], " ", 
          RowBox[{"(", " ", 
           RowBox[{
            SubscriptBox["\[Lambda]", "12"], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["\[Rho]", "2"], " ", "Z", " ", 
             SubscriptBox["\[Kappa]", "2"]}]}], ")"}]}]}], ")"}], 
       RowBox[{
        SubscriptBox["B", "2"], "[", "\[Tau]", "]"}]}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["V", "1"], "+", 
          SubscriptBox["V", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           StyleBox["Z",
            FontSize->16], "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "Z"}]}], ")"}]}], "2"]}], ")"}], 
    SubscriptBox["q", "1"]}]}]}]], "Text",
 CellChangeTimes->{{3.4087785532243757`*^9, 3.4087785620526705`*^9}, {
  3.4087786097098355`*^9, 3.408778616381839*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "en", " ", "identifiant", " ", "les", " ", "termes", " ", "homogene", " ", 
   "a", " ", 
   SubscriptBox["V", "1"]}], ",", " ", 
  RowBox[{"puis", " ", 
   SubscriptBox["V", "2"]}], ",", " ", 
  RowBox[{
  "puis", " ", "les", " ", "termes", " ", "de", " ", "degres", " ", "0", " ", 
   "on", " ", "obtient", " ", "les", " ", "equations"}]}]], "Text"],

Cell[BoxData[
 TagBox[
  RowBox[{
   StyleBox["{",
    ShowAutoStyles->False], 
   StyleBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[PartialD]", 
           RowBox[{"A", "[", "\[Tau]", "]"}]}], " "}], 
         RowBox[{
          RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], "=", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Lambda]", "1"], " ", 
          SubscriptBox["\[Theta]", "1"], " ", 
          RowBox[{
           SubscriptBox["B", "1"], "[", "\[Tau]", "]"}]}], "+", 
         RowBox[{
          SubscriptBox["\[Lambda]", "2"], " ", 
          SubscriptBox["\[Theta]", "2"], " ", 
          RowBox[{
           SubscriptBox["B", "2"], "[", "\[Tau]", "]"}]}]}]}]},
      {GridBox[{
         {
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"\[PartialD]", 
              RowBox[{
               SubscriptBox["B", "1"], "[", "\[Tau]", "]"}]}], " "}], 
            RowBox[{
             RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], "=", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Kappa]", "1"], "2"], " "}], "2"], 
             SuperscriptBox[
              RowBox[{
               SubscriptBox["B", "1"], "[", "\[Tau]", "]"}], "2"]}], "-", " ",
             
            RowBox[{
             RowBox[{"(", " ", 
              RowBox[{
               SubscriptBox["\[Lambda]", "1"], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Rho]", "1"], " ", "Z", " ", 
                SubscriptBox["\[Kappa]", "1"]}]}], ")"}], 
             RowBox[{
              SubscriptBox["B", "1"], "[", "\[Tau]", "]"}]}], "-", 
            FractionBox[
             RowBox[{" ", 
              RowBox[{
               SuperscriptBox[
                StyleBox["Z",
                 FontSize->16], "2"], "-", 
               RowBox[{"\[ImaginaryI]", " ", "Z"}]}]}], "2"]}]}]},
         {
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"\[PartialD]", 
              RowBox[{
               SubscriptBox["B", "2"], "[", "\[Tau]", "]"}]}], " "}], 
            RowBox[{
             RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], "=", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Kappa]", "2"], "2"], " "}], "2"], 
             SuperscriptBox[
              RowBox[{
               SubscriptBox["B", "2"], "[", "\[Tau]", "]"}], "2"]}], "-", " ",
             
            RowBox[{
             RowBox[{"(", " ", 
              RowBox[{
               SubscriptBox["\[Lambda]", "2"], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SubscriptBox["\[Rho]", "2"], " ", "Z", " ", 
                SubscriptBox["\[Kappa]", "2"]}]}], ")"}], 
             RowBox[{
              SubscriptBox["B", "2"], "[", "\[Tau]", "]"}]}], "-", 
            FractionBox[
             RowBox[{" ", 
              RowBox[{
               SuperscriptBox[
                StyleBox["Z",
                 FontSize->16], "2"], "-", 
               RowBox[{"\[ImaginaryI]", " ", "Z"}]}]}], "2"]}]}]}
        }]}
     }],
    ShowAutoStyles->True,
    FontSize->18]}],
  #& ]], "Text",
 CellChangeTimes->{{3.408778572037237*^9, 3.40877858100616*^9}, {
  3.4087786628202305`*^9, 3.408778673289181*^9}, {3.408778761353372*^9, 
  3.4087787625721455`*^9}},
 Background->GrayLevel[0.900008]],

Cell[BoxData[
 RowBox[{
  RowBox[{"comme", " ", 
   SubscriptBox["q", "1"], 
   RowBox[{"(", "0", ")"}]}], "=", 
  RowBox[{
   RowBox[{"1", " ", "on", " ", "a", " ", "les", " ", "conditions", " ", 
    RowBox[{"initiales", ":", 
     RowBox[{
      SubscriptBox["B", "1"], "[", "0", "]"}]}]}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["B", "2"], "[", "0", "]"}], "=", 
    RowBox[{
     RowBox[{"A", "[", "0", "]"}], "=", "0", " "}]}]}]}]], "Input",
 CellChangeTimes->{{3.4087886232870207`*^9, 3.408788698960348*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Calcul", " ", "de", " ", 
  RowBox[{
   SubscriptBox["B", "i"], "[", "\[Tau]", "]"}]}]], "Subsubtitle",
 Background->RGBColor[0, 1, 0]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "nous", " ", "allons", " ", "resoudre", " ", "le", " ", "systeme", " ", 
   "ou", " ", 
   RowBox[{
    SubscriptBox["B", "i"], "[", "0", "]"}]}], "=", 
  RowBox[{
   SubscriptBox["B", 
    RowBox[{"i", ",", "0", " "}]], "    ", "pour", " ", "le", " ", "cas", " ",
    "ou", " ", "on", " ", "a", " ", "une", " ", "time", " ", "dependence", 
   " ", 
   RowBox[{"(", 
    RowBox[{"constant", " ", "par", " ", "morceaux"}], ")"}]}]}]], "Text"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"df", " "}], 
   RowBox[{"d\[Tau]", " "}]], "=", 
  RowBox[{
   RowBox[{"a", " ", 
    SuperscriptBox["f", "2"]}], "+", 
   RowBox[{"b", " ", "f"}], "+", "c"}]}]], "Text"],

Cell["with", "Text"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"{", 
    StyleBox[GridBox[{
       {
        RowBox[{"a", "=", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Kappa]", "2"], " "}], "2"]}]},
       {GridBox[{
          {
           RowBox[{"b", "=", 
            RowBox[{"-", " ", 
             RowBox[{"(", " ", 
              RowBox[{"\[Lambda]", "+", 
               RowBox[{
               "\[ImaginaryI]", " ", "\[Rho]", "  ", "\[Omega]", " ", 
                "\[Kappa]"}]}], ")"}]}]}]},
          {
           RowBox[{"c", "=", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{" ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  StyleBox["\[Omega]",
                   FontSize->16], "2"], "-", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  StyleBox["\[Omega]",
                   FontSize->16]}]}], ")"}]}], "2"]}]}]}
         }]}
      }],
     ShowAutoStyles->True]}],
   ShowAutoStyles->False],
  #& ]], "Text",
 CellChangeTimes->{
  3.390640704200011*^9, {3.408786579513406*^9, 3.4087866109046335`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"So", " ", "we", " ", "compute", " ", "the", " ", 
   RowBox[{"discriminant", ":", "\[CapitalDelta]"}]}], "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["b", "2"], "-", 
    RowBox[{"4", "a", " ", "c"}]}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", " ", 
      RowBox[{"\[Lambda]", "+", 
       RowBox[{
       "\[ImaginaryI]", " ", "\[Rho]", " ", "\[Omega]", " ", "\[Kappa]"}]}], 
      ")"}], "2"], "+", " ", 
    RowBox[{
     SuperscriptBox["\[Kappa]", "2"], "   ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        StyleBox["\[Omega]",
         FontSize->16], "2"], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        StyleBox["\[Omega]",
         FontSize->16]}]}], ")"}]}]}]}]}]], "Text",
 CellChangeTimes->{3.408786659202436*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"let", " ", "\[Zeta]"}], "=", 
  SqrtBox["\[CapitalDelta]"]}]], "Text"],

Cell[BoxData[
 RowBox[{" ", 
  StyleBox[
   TagBox[
    StyleBox[
     RowBox[{"{", 
      StyleBox[GridBox[{
         {
          RowBox[{
           SubscriptBox["x", "1"], "=", " ", 
           FractionBox[
            RowBox[{
             RowBox[{"(", " ", 
              RowBox[{"\[Lambda]", "+", 
               RowBox[{
               "\[ImaginaryI]", " ", "\[Rho]", " ", "\[Omega]", " ", 
                "\[Kappa]"}]}], ")"}], "-", "\[Zeta]"}], 
            SuperscriptBox["\[Kappa]", "2"]]}]},
         {
          RowBox[{
           SubscriptBox["x", "2"], "=", " ", 
           FractionBox[
            RowBox[{
             RowBox[{"(", " ", 
              RowBox[{"\[Lambda]", "+", 
               RowBox[{
               "\[ImaginaryI]", " ", "\[Rho]", " ", "\[Omega]", " ", 
                "\[Kappa]"}]}], ")"}], "+", "\[Zeta]"}], 
            SuperscriptBox["\[Kappa]", "2"]]}]}
        }],
       ShowAutoStyles->True]}],
     ShowAutoStyles->False],
    #& ],
   FontSize->18]}]], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"on", " ", "a", " ", "bien", " ", 
   RowBox[{"sur", " ", ":", " ", 
    RowBox[{
     SubscriptBox["x", "1"], 
     SubscriptBox["x", "2"]}]}]}], "=", 
  RowBox[{
   FractionBox["c", "a"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           StyleBox["\[Omega]",
            FontSize->16], "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           StyleBox["\[Omega]",
            FontSize->16]}]}], ")"}]}], 
       SuperscriptBox["\[Kappa]", "2"]], "  ", "et", "   ", 
      SubscriptBox["x", "1"]}], "+", 
     SubscriptBox["x", "2"]}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "b"}], "a"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"2", 
        FractionBox[
         RowBox[{"(", " ", 
          RowBox[{"\[Lambda]", "+", 
           RowBox[{
           "\[ImaginaryI]", " ", "\[Rho]", "  ", "\[Omega]\[Kappa]"}]}], 
          ")"}], 
         SuperscriptBox["\[Kappa]", "2"]], "  ", "et", "   ", "x1"}], "-", 
       "x2"}], "=", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "2"}], "\[Zeta]"}], 
       SuperscriptBox["\[Kappa]", "2"]]}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.4087878866010017`*^9, 3.4087878952574177`*^9}, {
  3.4087926442079706`*^9, 3.4087926449736104`*^9}}],

Cell[BoxData[
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"donc", "   ", 
    FractionBox[
     RowBox[{"df", " "}], 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"f", "-", "x1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"f", "-", "x2"}], ")"}], " "}]]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "d\[Tau]", "  ", "et", "  ", 
      FractionBox["1", 
       RowBox[{"(", " ", 
        RowBox[{"f", "-", "x1"}], ")"}]]}], "-", 
     FractionBox["1", 
      RowBox[{"(", 
       RowBox[{"f", "-", "x2"}], ")"}]]}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"f", "-", "x2"}], ")"}], "-", 
       RowBox[{"(", " ", 
        RowBox[{"f", "-", "x1"}], ")"}], " "}], 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"f", "-", "x1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"f", "-", "x2"}], ")"}], " "}]], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"x1", "-", "x2"}], ")"}], " "}], 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"f", "-", "x1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"f", "-", "x2"}], ")"}], " "}]]}]}]}]}]], "Text",
 CellChangeTimes->{{3.408792299841984*^9, 3.4087923024357843`*^9}, {
  3.4087926430673237`*^9, 3.4087926569269648`*^9}}],

Cell[BoxData[
 RowBox[{"   ", 
  RowBox[{
   RowBox[{"et", "      ", "df", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"(", " ", 
        RowBox[{"f", "-", "x1"}], ")"}]], "-", 
      FractionBox["1", 
       RowBox[{"(", 
        RowBox[{"f", "-", "x2"}], ")"}]]}], ")"}]}], "=", 
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{"x1", "-", "x2"}], ")"}], "d\[Tau]"}]}]}]], "Text",
 CellChangeTimes->{{3.4087926786305065`*^9, 3.40879268114618*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mais", "  ", "a", " ", 
   RowBox[{"(", 
    RowBox[{"x1", "-", "x2"}], ")"}]}], "=", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Kappa]", "2"], " "}], "2"], 
    FractionBox[
     RowBox[{
      RowBox[{"-", "2"}], "\[Zeta]"}], 
     SuperscriptBox["\[Kappa]", "2"]]}], "=", 
   RowBox[{"-", "\[Zeta]"}]}]}]], "Input",
 CellChangeTimes->{{3.408788493003269*^9, 3.4087885300664806`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"donc", "  ", 
   RowBox[{"Log", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], "-", 
      SubscriptBox["x", "1"]}], 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], "-", 
      SubscriptBox["x", "2"]}]], "]"}]}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Zeta]"}], " ", "\[Tau]"}], "+", 
    RowBox[{"C", "  ", "et", "   ", 
     RowBox[{"B", "[", "\[Tau]", "]"}]}], "-", 
    SubscriptBox["x", "1"]}], "=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}], "+", "C"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], "-", 
      SubscriptBox["x", "2"]}], ")"}]}]}]}]], "Text",
 CellChangeTimes->{{3.4087926842399893`*^9, 3.4087926852712593`*^9}}],

Cell["donc", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"B", "[", "\[Tau]", "]"}], "=", 
  FractionBox[
   RowBox[{
    SubscriptBox["x", "1"], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}], "+", "C"}]], 
     SubscriptBox["x", "2"]}]}], 
   RowBox[{"1", "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}], "+", "C"}]]}]]}]], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"We", " ", "determine", " ", "C", " ", 
   RowBox[{"by", " ", ":", "  ", 
    RowBox[{"B", "[", "0", "]"}]}]}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"0", " ", "\[DoubleLongLeftRightArrow]", "  ", 
     SubscriptBox["x", "1"]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "C"], 
     SubscriptBox["x", "2"]}]}], "=", 
   RowBox[{
    RowBox[{"0", "  ", "So", "  ", 
     SuperscriptBox["\[ExponentialE]", "C"], 
     RowBox[{"(", 
      RowBox[{"-", 
       SubscriptBox["x", "2"]}], ")"}]}], "=", 
    RowBox[{"-", 
     SubscriptBox["x", "1"]}]}]}]}]], "Text",
 CellChangeTimes->{{3.408790801828848*^9, 3.408790825266798*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", "C"], "=", 
  FractionBox[
   SubscriptBox["x", "1"], 
   SubscriptBox["x", "2"]]}]], "Text",
 CellChangeTimes->{{3.408790832313808*^9, 3.408790834298221*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"donc", " ", 
   RowBox[{"B", "[", "\[Tau]", "]"}]}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["x", "1"], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]], 
      SubscriptBox["x", "1"]}]}], 
    RowBox[{"1", "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]], 
      FractionBox[
       SubscriptBox["x", "1"], 
       SubscriptBox["x", "2"]]}]}]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["x", "1"], 
      SubscriptBox["x", "2"], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}], ")"}]}], 
     RowBox[{
      SubscriptBox["x", "2"], "-", 
      RowBox[{
       SubscriptBox["x", "1"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}]}]], "=", 
    FractionBox[
     RowBox[{
      FractionBox[
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           StyleBox["\[Omega]",
            FontSize->16], "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           StyleBox["\[Omega]",
            FontSize->16]}]}], ")"}]}], 
       SuperscriptBox["\[Kappa]", "2"]], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}], ")"}]}], 
     RowBox[{
      SubscriptBox["x", "2"], "-", 
      RowBox[{
       SubscriptBox["x", "1"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}]}]]}]}]}]], "Text",
 CellChangeTimes->{{3.408792017492813*^9, 3.4087920350243998`*^9}, 
   3.408792068384415*^9}],

Cell["we create", "Text"],

Cell[TextData[{
 "\[Psi]p = -(\[Lambda] + \[Rho] \[Kappa]  \[ImaginaryI] \[Omega]) + \[Zeta]= \
",
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", 
    SubscriptBox["x", "1"]}], " ", 
   SuperscriptBox["\[Kappa]", "2"]}]]],
 "   et   \[Psi]m = (\[Lambda] + \[Rho] \[Kappa]  \[ImaginaryI] \[Omega]) + \
\[Zeta]=  ",
 Cell[BoxData[
  SubscriptBox["x", "2"]]],
 " ",
 Cell[BoxData[
  SuperscriptBox["\[Kappa]", "2"]]]
}], "Text",
 CellChangeTimes->{{3.4087927435067525`*^9, 3.408792778069916*^9}, {
  3.408792952182634*^9, 3.408792956448341*^9}}],

Cell[TextData[{
 "donc ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "=", 
    FractionBox[
     RowBox[{"-", "\[Psi]p"}], 
     SuperscriptBox["\[Kappa]", "2"]]}], TraditionalForm]]],
 "  et ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "2"], "=", 
    FractionBox["\[Psi]m", 
     SuperscriptBox["\[Kappa]", "2"]]}], TraditionalForm]]],
 "   ainsi que \[Psi]p +\[Psi]m =2 \[Zeta]"
}], "Text",
 CellChangeTimes->{{3.4087927181156397`*^9, 3.4087927393504224`*^9}, {
   3.408792950901359*^9, 3.4087930569502707`*^9}, {3.4087939674521265`*^9, 
   3.408793997046445*^9}, 3.409740667710429*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"et", "   ", 
    RowBox[{"B", "[", "\[Tau]", "]"}]}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      FractionBox[
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           StyleBox["\[Omega]",
            FontSize->16], "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           StyleBox["\[Omega]",
            FontSize->16]}]}], ")"}]}], 
       SuperscriptBox["\[Kappa]", "2"]], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}], ")"}]}], 
     RowBox[{
      FractionBox["\[Psi]m", 
       SuperscriptBox["\[Kappa]", "2"]], "-", 
      RowBox[{
       FractionBox[
        RowBox[{"-", "\[Psi]p"}], 
        SuperscriptBox["\[Kappa]", "2"]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}]}]], "=", 
    FractionBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          StyleBox["\[Omega]",
           FontSize->16], "2"], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          StyleBox["\[Omega]",
           FontSize->16]}]}], ")"}]}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}], ")"}]}], 
     RowBox[{"\[Psi]m", "+", 
      RowBox[{"\[Psi]p", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}]}]]}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.4087921102914696`*^9, {3.4087933036112556`*^9, 3.4087933713469315`*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"B", "[", "\[Tau]", "]"}], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}], ")"}]}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        StyleBox["\[Omega]",
         FontSize->16], "2"], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        StyleBox["\[Omega]",
         FontSize->16]}]}], ")"}]}], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]], "\[Psi]p"}], "+", 
     "\[Psi]m", " "}]]}],
  Background->RGBColor[1, 1, 0]]], "Text",
 CellChangeTimes->{{3.4087909728008804`*^9, 3.408790975379055*^9}, 
   3.4087934518953533`*^9}],

Cell["on en deduit donc les equations :", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["B", "1"], "[", "\[Tau]", "]"}], "=", 
   FractionBox[
    RowBox[{" ", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          StyleBox["\[Omega]",
           FontSize->16], "2"], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          StyleBox["\[Omega]",
           FontSize->16]}]}], ")"}]}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["\[Zeta]", "1"]}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
    RowBox[{
     SubscriptBox["\[Psi]m", "1"], "+", 
     RowBox[{
      SubscriptBox["\[Psi]p", "1"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Zeta]", "1"]}], "  ", "\[Tau]"}]]}]}]]}], ";", " ", 
  RowBox[{
   SubscriptBox["\[Zeta]", "1"], "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", " ", 
       RowBox[{
        SubscriptBox["\[Lambda]", "1"], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["\[Rho]", "1"], " ", "\[Omega]", " ", 
         SubscriptBox["\[Kappa]", "1"]}]}], ")"}], "2"], "+", " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Kappa]", "1"], "2"], "   ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         StyleBox["\[Omega]",
          FontSize->16], "2"], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         StyleBox["\[Omega]",
          FontSize->16]}]}], ")"}]}]}]]}], ";", 
  RowBox[{
   SubscriptBox["\[Psi]p", "1"], " ", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", "1"], " ", 
        SubscriptBox["\[Kappa]", "1"], "  ", "\[ImaginaryI]", " ", 
        "\[Omega]"}]}], ")"}]}], "+", 
    SubscriptBox["\[Zeta]", "1"]}]}], ";", 
  RowBox[{
   SubscriptBox["\[Psi]m", "1"], " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Lambda]", "1"], "+", 
      RowBox[{
       SubscriptBox[
        RowBox[{"\[Rho]", " "}], "1"], 
       SubscriptBox["\[Kappa]", "1"], "  ", "\[ImaginaryI]", " ", 
       "\[Omega]"}]}], ")"}], "+", 
    SubscriptBox["\[Zeta]", "1"]}]}], ";"}]], "Text",
 CellChangeTimes->{{3.4087909460034904`*^9, 3.408790961847545*^9}, {
  3.408793461692416*^9, 3.408793471098847*^9}},
 Background->RGBColor[0.588235, 0.988235, 0.580392]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["B", "2"], "[", "\[Tau]", "]"}], "=", 
   FractionBox[
    RowBox[{" ", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          StyleBox["\[Omega]",
           FontSize->16], "2"], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          StyleBox["\[Omega]",
           FontSize->16]}]}], ")"}]}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["\[Zeta]", "2"]}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
    RowBox[{
     SubscriptBox["\[Psi]m", "2"], "+", 
     RowBox[{
      SubscriptBox["\[Psi]p", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Zeta]", "2"]}], "  ", "\[Tau]"}]]}]}]]}], ";", " ", 
  RowBox[{
   SubscriptBox["\[Zeta]", "2"], "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", " ", 
       RowBox[{
        SubscriptBox["\[Lambda]", "2"], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
         SubscriptBox["\[Kappa]", "2"]}]}], ")"}], "2"], "+", " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Kappa]", "2"], "2"], "   ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         StyleBox["\[Omega]",
          FontSize->16], "2"], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         StyleBox["\[Omega]",
          FontSize->16]}]}], ")"}]}]}]]}], ";", 
  RowBox[{
   SubscriptBox["\[Psi]p", "2"], " ", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Lambda]", "2"], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", "2"], " ", 
        SubscriptBox["\[Kappa]", "2"], "  ", "\[ImaginaryI]", " ", 
        "\[Omega]"}]}], ")"}]}], "+", 
    SubscriptBox["\[Zeta]", "2"]}]}], ";", 
  RowBox[{
   SubscriptBox["\[Psi]m", "1"], " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Lambda]", "2"], "+", 
      RowBox[{
       SubscriptBox[
        RowBox[{"\[Rho]", " "}], "2"], 
       SubscriptBox["\[Kappa]", "2"], "  ", "\[ImaginaryI]", " ", 
       "\[Omega]"}]}], ")"}], "+", 
    SubscriptBox["\[Zeta]", "2"]}]}], ";"}]], "Text",
 CellChangeTimes->{{3.4087909544099026`*^9, 3.408790959191244*^9}, {
  3.4087934653018603`*^9, 3.408793475130174*^9}},
 Background->RGBColor[0.588235, 0.988235, 0.580392]],

Cell[BoxData[
 RowBox[{
  RowBox[{"maintenant", " ", "on", " ", 
   RowBox[{"exploite", " ", ":", " ", 
    FractionBox[
     RowBox[{
      RowBox[{"\[PartialD]", 
       RowBox[{"A", "[", "\[Tau]", "]"}]}], " "}], 
     RowBox[{
      RowBox[{"\[PartialD]", "\[Tau]"}], " "}]]}]}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Lambda]", "1"], " ", 
     SubscriptBox["\[Theta]", "1"], " ", 
     RowBox[{
      SubscriptBox["B", "1"], "[", "\[Tau]", "]"}]}], "+", 
    RowBox[{
     SubscriptBox["\[Lambda]", "2"], " ", 
     SubscriptBox["\[Theta]", "2"], " ", 
     RowBox[{
      SubscriptBox["B", "2"], "[", "\[Tau]", "]"}], "        ", "avec", " ", 
     RowBox[{"A", "[", "0", "]"}]}]}], "=", "0"}]}]], "Text",
 CellChangeTimes->{3.408793506568278*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]"}], "  ", "t"}]]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         StyleBox["\[Omega]",
          FontSize->16], "2"], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         StyleBox["\[Omega]",
          FontSize->16]}]}], ")"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Zeta]"}], "  ", "t"}]], "\[Psi]p"}], "+", "\[Psi]m", 
      " "}]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.4087935374438705`*^9, {3.4087935833978777`*^9, 3.4087935857260475`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Omega]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Omega]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Zeta]", " ", "\[Tau]", " ", "\[Psi]m"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Psi]m", "+", "\[Psi]p"}], ")"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"\[Psi]m", "+", "\[Psi]p"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Psi]m", "+", "\[Psi]p"}], ")"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Zeta]", " ", "\[Tau]"}]], " ", "\[Psi]m"}], "+", 
        "\[Psi]p"}], "]"}]}]}], ")"}]}], 
  RowBox[{"\[Zeta]", " ", "\[Psi]m", " ", "\[Psi]p"}]]], "Output",
 CellChangeTimes->{3.4087935580380163`*^9, 3.4087936438052874`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "'"}], "est", " ", "a", " ", 
  RowBox[{"dire", " ", ":"}]}]], "Input",
 CellChangeTimes->{{3.4087939178886747`*^9, 3.408793923607535*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Omega]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Omega]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Zeta]", " ", "\[Tau]", " ", "\[Psi]m"}], "+", 
     RowBox[{"2", "\[Zeta]", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"2", "\[Zeta]"}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Zeta]", " ", "\[Tau]"}]], " ", "\[Psi]m"}], "+", 
         "\[Psi]p"}]], "]"}]}]}], ")"}]}], 
  RowBox[{"\[Zeta]", " ", "\[Psi]m", " ", "\[Psi]p"}]]], "Input",
 CellChangeTimes->{{3.4087940170312033`*^9, 3.4087940695322113`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[Theta]", " ", "\[Lambda]", " ", 
    SuperscriptBox["\[Omega]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Zeta]", " ", "\[Tau]", " ", "\[Psi]m"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Psi]m", "+", "\[Psi]p"}], ")"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"\[Psi]m", "+", "\[Psi]p"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Psi]m", "+", "\[Psi]p"}], ")"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Zeta]", " ", "\[Tau]"}]], " ", "\[Psi]m"}], "+", 
         "\[Psi]p"}], "]"}]}]}], ")"}]}], 
   RowBox[{"\[Zeta]", " ", "\[Psi]m", " ", "\[Psi]p"}]], " ", "/.", 
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]p", "+", "\[Psi]m"}], "->", 
     RowBox[{"2", "\[Zeta]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Psi]p", " ", "\[Psi]m"}], "->", 
     RowBox[{
      SuperscriptBox["\[Kappa]", "2"], "   ", 
      SuperscriptBox["\[Omega]", "2"]}]}]}], "}"}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Theta]", " ", "\[Lambda]", " ", 
   SuperscriptBox["\[Omega]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Zeta]", " ", "\[Tau]", " ", "\[Psi]m"}], "+", 
     RowBox[{"2", " ", "\[Zeta]", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"2", " ", "\[Zeta]"}], "]"}]}], "-", 
     RowBox[{"2", " ", "\[Zeta]", " ", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Zeta]", " ", "\[Tau]"}]], " ", "\[Psi]m"}], "+", 
        "\[Psi]p"}], "]"}]}]}], ")"}]}], 
  RowBox[{"\[Zeta]", " ", "\[Psi]m", " ", "\[Psi]p"}]]], "Output"]
}, Open  ]],

Cell["donc", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "[", "\[Tau]", "]"}], "=", 
  RowBox[{
   RowBox[{
    StyleBox[
     SubscriptBox["\[Theta]", "1"],
     Background->None], 
    StyleBox[" ",
     Background->None], 
    StyleBox[
     SubscriptBox["\[Lambda]", "1"],
     Background->None], 
    StyleBox[" ",
     Background->RGBColor[1, 1, 0]], 
    StyleBox[
     FractionBox[
      RowBox[{
       RowBox[{"\[Tau]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}], 
        SubscriptBox["\[Zeta]", "1"], " ", 
        SubscriptBox["\[Psi]m", "1"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{"2", 
            SubscriptBox["\[Zeta]", "1"]}], 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               SubscriptBox["\[Zeta]", "1"], " ", "\[Tau]"}]], " ", 
             SubscriptBox["\[Psi]m", "1"]}], "+", 
            SubscriptBox["\[Psi]p", "1"]}]], "]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", 
           SubscriptBox["\[Zeta]", "1"], " ", 
           SuperscriptBox["\[Omega]", "2"]}], "-", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Kappa]", "1"], "2"], " ", "2", 
           SubscriptBox["\[Zeta]", "1"], " ", 
           SubsuperscriptBox["B", 
            RowBox[{"0", ",", "1"}], "2"]}]}], ")"}]}]}], 
      RowBox[{
       SubscriptBox["\[Psi]p", "1"], 
       SubscriptBox["\[Zeta]", "1"], " ", 
       SubscriptBox["\[Psi]m", "1"]}]],
     Background->None]}], 
   StyleBox["+",
    Background->None], 
   RowBox[{
    StyleBox[
     SubscriptBox["\[Theta]", "2"],
     Background->None], 
    StyleBox[" ",
     Background->None], 
    StyleBox[
     SubscriptBox["\[Lambda]", "2"],
     Background->None], 
    StyleBox[" ",
     Background->RGBColor[1, 1, 0]], 
    StyleBox[
     FractionBox[
      RowBox[{
       RowBox[{"\[Tau]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}], 
        SubscriptBox["\[Zeta]", "2"], " ", 
        SubscriptBox["\[Psi]m", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{"2", 
            SubscriptBox["\[Zeta]", "2"]}], 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               SubscriptBox["\[Zeta]", "2"], " ", "\[Tau]"}]], " ", 
             SubscriptBox["\[Psi]m", "2"]}], "+", 
            SubscriptBox["\[Psi]p", "2"]}]], "]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", 
           SubscriptBox["\[Zeta]", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}], "-", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Kappa]", "2"], "2"], " ", "2", 
           SubscriptBox["\[Zeta]", "2"], " ", 
           SubsuperscriptBox["B", 
            RowBox[{"0", ",", "2"}], "2"]}]}], ")"}]}]}], 
      RowBox[{
       SubscriptBox["\[Psi]p", "2"], 
       SubscriptBox["\[Zeta]", "2"], " ", 
       SubscriptBox["\[Psi]m", "2"]}]],
     Background->None]}], "+", " ", 
   SubscriptBox["A", "0"]}]}]], "Text",
 CellChangeTimes->{{3.4087941910032935`*^9, 3.408794292708371*^9}},
 Background->RGBColor[0.709804, 0.933333, 0.737255]],

Cell[BoxData[
 RowBox[{
  RowBox[{"LNHestonFondamentalTransform", "[", 
   RowBox[{
   "\[Rho]1_", ",", "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", 
    ",", "V1_", ",", "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",",
     "\[Kappa]2_", ",", "V2_", ",", "\[Omega]_", ",", "\[Tau]_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Zeta]1", ",", "\[Psi]p1", " ", ",", "\[Psi]m1", ",", "B1", ",", 
      "arg\[Zeta]1", ",", "\[Zeta]2", ",", "\[Psi]p2", " ", ",", "\[Psi]m2", 
      ",", "A2", ",", "B2", ",", "arg\[Zeta]2", ",", "A"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"arg\[Zeta]1", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]v1", "+", 
          RowBox[{
          "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", 
           "\[Omega]"}]}], ")"}], "2"], "+", 
       RowBox[{
        SuperscriptBox["\[Kappa]1", "2"], 
        RowBox[{"(", " ", 
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Zeta]1", "=", 
      SqrtBox["arg\[Zeta]1"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p1", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v1", "+", 
          RowBox[{
          "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", 
           "\[Omega]"}]}], ")"}]}], "+", "\[Zeta]1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m1", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v1", "+", 
         RowBox[{
         "\[Rho]1", " ", "\[Kappa]1", "  ", "\[ImaginaryI]", " ", 
          "\[Omega]"}]}], ")"}], "+", "\[Zeta]1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"B1", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            SuperscriptBox["\[Omega]", "2"], "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m1", "+", 
        RowBox[{"\[Psi]p1", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"arg\[Zeta]2", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]v2", "+", 
          RowBox[{
          "\[Rho]2", " ", "\[Kappa]2", " ", "\[ImaginaryI]", " ", 
           "\[Omega]"}]}], ")"}], "2"], "+", 
       RowBox[{
        SuperscriptBox["\[Kappa]2", "2"], 
        RowBox[{"(", " ", 
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Zeta]2", "=", 
      SqrtBox["arg\[Zeta]2"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p2", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v2", "+", 
          RowBox[{
          "\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
           "\[Omega]"}]}], ")"}]}], "+", "\[Zeta]2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m2", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v2", "+", 
         RowBox[{
         "\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
          "\[Omega]"}]}], ")"}], "+", "\[Zeta]2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"B2", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            SuperscriptBox["\[Omega]", "2"], "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m2", "+", 
        RowBox[{"\[Psi]p2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[Theta]v1", " ", "\[Lambda]v1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Tau]", " ", "\[Psi]p1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               FractionBox[
                RowBox[{"\[Psi]m1", "+", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Zeta]1"}], " ", "\[Tau]"}]], " ", 
                  "\[Psi]p1"}]}], 
                RowBox[{"2", "\[Zeta]1"}]], "]"}]}]}], ")"}]}]}], 
         RowBox[{" ", 
          SuperscriptBox["\[Kappa]1", "2"], "   "}]]}], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Theta]v2", " ", "\[Lambda]v2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Tau]", " ", "\[Psi]p2"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"\[Psi]m2", "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Zeta]2"}], " ", "\[Tau]"}]], " ", 
                 "\[Psi]p2"}]}], 
               RowBox[{"2", "\[Zeta]2"}]], "]"}]}]}], ")"}]}]}], 
        RowBox[{" ", 
         SuperscriptBox["\[Kappa]2", "2"], "   "}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"A", "+", 
          RowBox[{"B1", " ", "V1"}], "+", 
          RowBox[{"B2", " ", "V2"}]}], "]"}], "<", 
        RowBox[{"-", "100"}]}], ",", "0", ",", "\[IndentingNewLine]", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"A", "+", 
         RowBox[{"B1", " ", "V1"}], "+", 
         RowBox[{"B2", " ", "V2"}]}]]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3882235308457947`*^9, 3.3882235316738873`*^9}, {
   3.388224119779866*^9, 3.388224182105996*^9}, {3.388224223745289*^9, 
   3.388224253056851*^9}, {3.3882242955398664`*^9, 3.388224333491777*^9}, 
   3.3882243854901133`*^9, {3.3882246913684683`*^9, 3.3882248385410004`*^9}, {
   3.3882250453754497`*^9, 3.3882251865828285`*^9}, {3.4087946368399787`*^9, 
   3.4087947276854725`*^9}, {3.4088001495864463`*^9, 
   3.4088001626335716`*^9}, {3.4088002219784613`*^9, 
   3.4088002731513186`*^9}, {3.4088004085445433`*^9, 3.408800431341856*^9}, {
   3.4088005745008545`*^9, 3.4088006171579237`*^9}}],

Cell[BoxData["Instrument"], "Input",
 CellChangeTimes->{{3.408794886766652*^9, 3.408794888954194*^9}},
 Background->RGBColor[0.494118, 0.537255, 0.827451]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"Log", "[", 
    RowBox[{"K", "/", "S0"}], "]"}], "\[Infinity]"], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "S"}]], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"S", "+", 
       RowBox[{"Log", "[", "S0", "]"}]}]], "-", "K"}], ")"}], 
   RowBox[{"\[DifferentialD]", "S"}]}]}]], "Input",
 CellChangeTimes->{{3.4087773278102236`*^9, 3.408777334716606*^9}, {
  3.4087971484350753`*^9, 3.4087971849670267`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Im", "[", "\[Omega]", "]"}], ">", "1"}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"K", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["K", "S0"], ")"}], 
       RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]]}], 
     RowBox[{"\[Omega]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Omega]"}], ")"}]}]]}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "S", " ", "\[Omega]"}]]}], " ", "K"}], 
      "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"S", "+", 
         RowBox[{"\[ImaginaryI]", " ", "S", " ", "\[Omega]"}]}]], " ", 
       "S0"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", 
       RowBox[{"Log", "[", 
        FractionBox["K", "S0"], "]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"Im", "[", "\[Omega]", "]"}], "\[LessEqual]", "1"}]}]}], 
    "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.388225666284481*^9, 3.38943420083225*^9, 
  3.408777348685624*^9, 3.4087971935609417`*^9}]
}, Open  ]],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", 
     RowBox[{"(", " ", 
      RowBox[{"K", "-", 
       RowBox[{"Log", "[", "S0", "]"}]}], ")"}], " ", "\[Omega]"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", "K"]}], " ", "Z"}], "+", 
     RowBox[{"K", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "+", "Z"}], ")"}]}]}], ")"}]}], 
  RowBox[{"Z", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], "+", "Z"}], ")"}]}]]], "Input",
 CellChangeTimes->{{3.4087966596600657`*^9, 3.40879666583206*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"a", " ", "x"}]]}], "-", "K"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4050030011103473`*^9, 3.405003045507947*^9}, {
  3.4087949525647907`*^9, 3.408794955721101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "::", "\<\"ifun\"\>"}], ":", 
  " ", "\<\"Inverse functions are being used by \\!\\(Solve\\), so some \
solutions may not be found; use Reduce for complete solution information. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.4050030496419473`*^9, 3.40879495775239*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{"Log", "[", 
      FractionBox["K", "\[Alpha]"], "]"}], "a"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.3997832193242493`*^9, 3.399783241121543*^9}, 
   3.3997832783097568`*^9, 3.403953784350909*^9, 3.4046243697370987`*^9, 
   3.405003049673147*^9, 3.40879495775239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integration1", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     FractionBox[
      RowBox[{"Log", "[", 
       FractionBox["K", "\[Alpha]"], "]"}], "a"], "\[Infinity]"], " ", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k", "  ", "x"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"a", " ", "x"}]]}], "-", "K"}], ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.3997830788528023`*^9, 3.3997830934780827`*^9}, {
  3.399783175698412*^9, 3.3997832121991124`*^9}, {3.3997832703252287`*^9, 
  3.3997832746221857`*^9}, {3.403953757897276*^9, 3.403953760772331*^9}, {
  3.404624357783668*^9, 3.40462435886182*^9}, {3.405003070265147*^9, 
  3.4050030795471473`*^9}, {3.4087949732839384`*^9, 3.408794981346593*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Im", "[", "k", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "a", "]"}], "<", 
     RowBox[{"Im", "[", "k", "]"}]}]}], ",", 
   FractionBox[
    RowBox[{"a", " ", "K", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["K", "\[Alpha]"], ")"}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "k"}], "a"]]}], 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}], "-", 
     SuperscriptBox["k", "2"]}]], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}]]}], " ", "K"}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"a", " ", "x"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}]}]], " ", 
       "\[Alpha]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       FractionBox[
        RowBox[{"Log", "[", 
         FractionBox["K", "\[Alpha]"], "]"}], "a"], ",", "\[Infinity]"}], 
      "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "a", "]"}], "\[LessEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"Im", "[", "k", "]"}], "\[LessEqual]", "0"}]}], ")"}], "||",
        
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "a", "]"}], ">", "0"}], "&&", 
         RowBox[{
          RowBox[{"Im", "[", "k", "]"}], "\[LessEqual]", 
          RowBox[{"Re", "[", "a", "]"}]}]}], ")"}]}]}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.4050030855843472`*^9, 3.408794991799919*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integration11", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"integration1", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Im", "[", "k", "]"}], ">", "0"}], "&&", 
     RowBox[{
      RowBox[{"Re", "[", "a", "]"}], "<", 
      RowBox[{"Im", "[", "k", "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.3997832863099103`*^9, 3.399783319044914*^9}, 
   3.4050031197639475`*^9, {3.408795004737667*^9, 3.4087950081908584`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"a", " ", "K", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["K", "\[Alpha]"], ")"}], 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k"}], "a"]]}], 
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}], "-", 
   SuperscriptBox["k", "2"]}]]], "Output",
 CellChangeTimes->{{3.3997833072165613`*^9, 3.399783319935556*^9}, 
   3.4039540785440574`*^9, 3.4046243764716463`*^9, 3.4050031214955473`*^9, 
   3.408795010050269*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"en", " ", "supposant", " ", "\[Lambda]B"}], ">", "a"}]], "Input",
 CellChangeTimes->{{3.408795324337553*^9, 3.4087953472754936`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierPayOff", "[", 
   RowBox[{"\[Omega]_", ",", "K_", ",", "\[Alpha]_", ",", "a_"}], "]"}], ":=",
   
  FractionBox[
   RowBox[{"a", " ", "K", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["K", "\[Alpha]"], ")"}], 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}], "a"]]}], 
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], "-", 
    RowBox[{"\[ImaginaryI]", " ", "a", " ", "\[Omega]"}]}]]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408795105364599*^9, 3.408795161725056*^9}, {
  3.4088016713344135`*^9, 3.4088016839440303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LNHestonCallIntegrand", "[", 
   RowBox[{
   "\[Rho]1_", ",", "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", 
    ",", "V1_", ",", "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",",
     "\[Kappa]2_", ",", "V2_", ",", "S0_", ",", "K_", ",", "\[Alpha]_", ",", 
    "a_", ",", "T_", ",", "\[Omega]_"}], "]"}], ":=", 
  RowBox[{"Re", "[", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Omega]", "  ", 
      RowBox[{"Log", "[", "S0", "]"}]}]], " ", 
    RowBox[{"LNHestonFondamentalTransform", "[", 
     RowBox[{
     "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
      "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
      "\[Kappa]2", ",", "V2", ",", "\[Omega]", ",", "T"}], "]"}], 
    RowBox[{"FourierPayOff", "[", 
     RowBox[{"\[Omega]", ",", "K", ",", "\[Alpha]", ",", "a"}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408801066338423*^9, 3.4088011236207724`*^9}, {
   3.4088014213139877`*^9, 3.408801425954702*^9}, {3.408801599161153*^9, 
   3.4088016025205917`*^9}, 3.408801991371808*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SuperHestonVanillaOptionQ", "[", 
   RowBox[{
   "\[Rho]1_", ",", "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", 
    ",", "V1_", ",", "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",",
     "\[Kappa]2_", ",", "V2_", ",", "S0_", ",", "K_", ",", "\[Alpha]_", ",", 
    "a_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"S0", "-", 
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[Omega]", "}"}], ",", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"LNHestonCallIntegrand", "[", 
         RowBox[{
         "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
          ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
          ",", "\[Kappa]2", ",", "V2", ",", "S0", ",", "K", ",", "\[Alpha]", 
          ",", "a", ",", "T", ",", 
          RowBox[{"\[Omega]", "+", 
           RowBox[{"\[ImaginaryI]", "/", "2"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\[Omega]", ",", "0", ",", "Infinity"}], "}"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "12"}]}], "]"}]}], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3882287720345187`*^9, 3.3882288772185097`*^9}, {
   3.4087952385546565`*^9, 3.4087952757897463`*^9}, {3.408795362838292*^9, 
   3.4087953725728545`*^9}, {3.408796532688878*^9, 3.4087965575956063`*^9}, {
   3.408798771481862*^9, 3.4087987799664*^9}, {3.40879888698408*^9, 
   3.4087988919372997`*^9}, {3.4088008522093115`*^9, 
   3.4088008583500547`*^9}, {3.408800899038336*^9, 3.40880090005398*^9}, {
   3.4088009408985143`*^9, 3.4088009444454575`*^9}, {3.408801146277457*^9, 
   3.408801187481374*^9}, {3.4088014327048316`*^9, 3.4088014335329723`*^9}, {
   3.40880173081993*^9, 3.4088017355231457`*^9}, {3.4088020035595417`*^9, 
   3.40880201726293*^9}, {3.408889776007573*^9, 3.408889791117238*^9}, 
   3.4088913028337626`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SuperHestonVanillaOption", "[", 
   RowBox[{
   "\[Rho]1_", ",", "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", 
    ",", "V1_", ",", "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",",
     "\[Kappa]2_", ",", "V2_", ",", "S0_", ",", "K_", ",", "\[Alpha]_", ",", 
    "a_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"S0", "-", 
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[Omega]", "}"}], ",", 
       RowBox[{"AdaptativeIntegrate", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"\[Omega]", ",", 
           RowBox[{"LNHestonCallIntegrand", "[", 
            RowBox[{
            "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
             "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", 
             "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "S0", ",", "K", 
             ",", "\[Alpha]", ",", "a", ",", "T", ",", 
             RowBox[{"\[Omega]", "+", 
              RowBox[{"\[ImaginaryI]", "/", "2"}]}]}], "]"}]}], "]"}], ",", 
         RowBox[{"LegendreCoeffs", "[", "60", "]"}], ",", 
         RowBox[{"LegendreCoeffs", "[", "8", "]"}], ",", "30", ",", "5", ",", 
         
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "9"}], ")"}]}], ",", "30"}], "]"}]}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3882287720345187`*^9, 3.3882288772185097`*^9}, {
   3.4087952385546565`*^9, 3.4087952757897463`*^9}, {3.408795362838292*^9, 
   3.4087953725728545`*^9}, {3.408796532688878*^9, 3.4087965575956063`*^9}, {
   3.408798771481862*^9, 3.4087987799664*^9}, {3.40879888698408*^9, 
   3.4087988919372997`*^9}, {3.4088008522093115`*^9, 
   3.4088008583500547`*^9}, {3.408800899038336*^9, 3.40880090005398*^9}, {
   3.4088009408985143`*^9, 3.4088009444454575`*^9}, {3.408801146277457*^9, 
   3.408801187481374*^9}, {3.4088014327048316`*^9, 3.4088014335329723`*^9}, {
   3.40880173081993*^9, 3.4088017355231457`*^9}, {3.4088020035595417`*^9, 
   3.40880201726293*^9}, {3.408889776007573*^9, 3.408889791117238*^9}, {
   3.4088900541066628`*^9, 3.4088900784352546`*^9}, {3.408890133623814*^9, 
   3.4088902017188716`*^9}, 3.408890365706395*^9, {3.408890688306339*^9, 
   3.408890688571969*^9}, {3.4088907191194305`*^9, 3.408890719291309*^9}, {
   3.40889077537051*^9, 3.4088907757455177`*^9}, {3.4088908628878155`*^9, 
   3.408890885825756*^9}, {3.4088909726711736`*^9, 3.4088909789681697`*^9}, {
   3.408891138783738*^9, 3.4088911393149977`*^9}, {3.4088914600867815`*^9, 
   3.4088914751651964`*^9}, {3.408892704376297*^9, 3.4088927127514577`*^9}, 
   3.40889275376787*^9, {3.4088928028625627`*^9, 3.4088928776296234`*^9}, {
   3.408893009022771*^9, 3.4088930107884293`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SuperHestonVanillaOption2", "[", 
   RowBox[{
   "\[Rho]1_", ",", "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", 
    ",", "V1_", ",", "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",",
     "\[Kappa]2_", ",", "V2_", ",", "S0_", ",", "K_", ",", "\[Alpha]_", ",", 
    "a_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"S0", "-", 
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[Omega]", "}"}], ",", 
      RowBox[{"CoeffBasedIntegrate", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"\[Omega]", ",", 
          RowBox[{"LNHestonCallIntegrand", "[", 
           RowBox[{
           "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1",
             ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2",
             ",", "\[Kappa]2", ",", "V2", ",", "S0", ",", "K", ",", 
            "\[Alpha]", ",", "a", ",", "T", ",", 
            RowBox[{"\[Omega]", "+", 
             RowBox[{"\[ImaginaryI]", "/", "2"}]}]}], "]"}]}], "]"}], ",", 
        RowBox[{"LegendreCoeffs", "[", 
         RowBox[{"60", ",", "0", ",", "30"}], "]"}]}], "]"}]}], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3882287720345187`*^9, 3.3882288772185097`*^9}, {
   3.4087952385546565`*^9, 3.4087952757897463`*^9}, {3.408795362838292*^9, 
   3.4087953725728545`*^9}, {3.408796532688878*^9, 3.4087965575956063`*^9}, {
   3.408798771481862*^9, 3.4087987799664*^9}, {3.40879888698408*^9, 
   3.4087988919372997`*^9}, {3.4088008522093115`*^9, 
   3.4088008583500547`*^9}, {3.408800899038336*^9, 3.40880090005398*^9}, {
   3.4088009408985143`*^9, 3.4088009444454575`*^9}, {3.408801146277457*^9, 
   3.408801187481374*^9}, {3.4088014327048316`*^9, 3.4088014335329723`*^9}, {
   3.40880173081993*^9, 3.4088017355231457`*^9}, {3.4088020035595417`*^9, 
   3.40880201726293*^9}, {3.408889776007573*^9, 3.408889791117238*^9}, {
   3.4088900541066628`*^9, 3.4088900784352546`*^9}, {3.408890133623814*^9, 
   3.4088902017188716`*^9}, 3.408890365706395*^9, {3.408890688306339*^9, 
   3.408890688571969*^9}, {3.4088907191194305`*^9, 3.408890719291309*^9}, {
   3.40889077537051*^9, 3.4088907757455177`*^9}, {3.4088908628878155`*^9, 
   3.408890885825756*^9}, {3.4088909726711736`*^9, 3.4088909789681697`*^9}, {
   3.408891138783738*^9, 3.4088911393149977`*^9}, {3.4088914600867815`*^9, 
   3.4088914751651964`*^9}, {3.408891579792205*^9, 3.40889163343386*^9}, {
   3.408891774983453*^9, 3.4088918125622993`*^9}, {3.4088920864113073`*^9, 
   3.4088921012865925`*^9}, {3.4088921377560425`*^9, 
   3.4088921380216727`*^9}, {3.4088921755536437`*^9, 
   3.4088921882413874`*^9}, {3.4088922312890882`*^9, 
   3.4088922684148016`*^9}, {3.4088931133997746`*^9, 3.408893113868534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Rho]1", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Rho]2", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Lambda]v1", "=", "0.15"}], ",", 
      RowBox[{"\[Kappa]1", "=", "0.2"}], ",", 
      RowBox[{"\[Lambda]v2", "=", "0.15"}], ",", 
      RowBox[{"\[Kappa]2", "=", "0.2"}], ",", 
      RowBox[{"k", "=", "0.06"}], ",", "V1", ",", "V2", ",", "Vinfini1", ",", 
      "Vinfini2", "\[IndentingNewLine]", ",", 
      RowBox[{"T", "=", "3"}], ",", 
      RowBox[{"\[Lambda]B", "=", "1.1"}], ",", 
      RowBox[{"S0", "=", "0.05"}], ",", 
      RowBox[{"\[Alpha]", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Vinfini1", "=", "0.02"}], ";", 
     RowBox[{"V1", "=", "Vinfini1"}], ";", 
     RowBox[{"Vinfini2", "=", "0.02"}], ";", 
     RowBox[{"V2", "=", "Vinfini2"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SuperHestonVanillaOptionQ", "[", 
        RowBox[{
        "\[Rho]1", ",", "\[Lambda]v1", ",", "Vinfini1", ",", "\[Kappa]1", ",",
          "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "Vinfini2", ",", 
         "\[Kappa]2", ",", "V2", ",", "S0", ",", "k", ",", "\[Alpha]", ",", 
         "a", ",", "T"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"SuperHestonVanillaOption", "[", 
        RowBox[{
        "\[Rho]1", ",", "\[Lambda]v1", ",", "Vinfini1", ",", "\[Kappa]1", ",",
          "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "Vinfini2", ",", 
         "\[Kappa]2", ",", "V2", ",", "S0", ",", "k", ",", "\[Alpha]", ",", 
         "a", ",", "T"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"SuperHestonVanillaOption2", "[", 
        RowBox[{
        "\[Rho]1", ",", "\[Lambda]v1", ",", "Vinfini1", ",", "\[Kappa]1", ",",
          "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "Vinfini2", ",", 
         "\[Kappa]2", ",", "V2", ",", "S0", ",", "k", ",", "\[Alpha]", ",", 
         "a", ",", "T"}], "]"}]}], "\[IndentingNewLine]", "}"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.388229977157708*^9, 3.3882299779077945`*^9}, {
   3.3882303685465407`*^9, 3.388230415411314*^9}, {3.3882304516342363`*^9, 
   3.388230587634277*^9}, {3.408795437777231*^9, 3.408795559201438*^9}, {
   3.408795992522257*^9, 3.408796011569498*^9}, {3.408796071680027*^9, 
   3.408796162634898*^9}, {3.408802116280456*^9, 3.408802134937064*^9}, {
   3.408802176047229*^9, 3.4088022087041054`*^9}, {3.408802246392329*^9, 
   3.4088022642364216`*^9}, 3.408889819133401*^9, {3.408890439035928*^9, 
   3.408890448614237*^9}, {3.408891327474861*^9, 3.408891404070081*^9}, {
   3.408891650277933*^9, 3.4088916512779527`*^9}, 3.4088917144041643`*^9, {
   3.408892199804109*^9, 3.40889220352293*^9}, {3.4088931260875187`*^9, 
   3.408893126884409*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.141000000000006`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0023812617522075558`", ",", "0.002381262000463902`", ",", 
     "0.0023812623506047834`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4088913955386677`*^9, 3.4088914105389557`*^9}, 
   3.408891504337631*^9, 3.408891720201151*^9, 3.408891831453287*^9, 
   3.4088921115367894`*^9, 3.408892147599982*^9, {3.408892213382495*^9, 
   3.408892259617758*^9}, 3.408892777315197*^9, {3.40889281261275*^9, 
   3.4088928860829105`*^9}, 3.408893095602558*^9, 3.4088931330876527`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Rho]1", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Rho]2", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Lambda]v1", "=", "0.15"}], ",", 
      RowBox[{"\[Kappa]1", "=", "0.2"}], ",", 
      RowBox[{"\[Lambda]v2", "=", "0.15"}], ",", 
      RowBox[{"\[Kappa]2", "=", "0.2"}], ",", 
      RowBox[{"k", "=", 
       RowBox[{"-", "0.01"}]}], ",", "V1", ",", "V2", ",", "Vinfini1", ",", 
      "Vinfini2", "\[IndentingNewLine]", ",", 
      RowBox[{"T", "=", "3"}], ",", 
      RowBox[{"\[Lambda]B", "=", "1.1"}], ",", 
      RowBox[{"S0", "=", "0.05"}], ",", 
      RowBox[{"\[Alpha]", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}], ",", 
      RowBox[{"K", "=", "0.05"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Vinfini1", "=", "0.02"}], ";", 
     RowBox[{"V1", "=", "Vinfini1"}], ";", 
     RowBox[{"Vinfini2", "=", "0.02"}], ";", 
     RowBox[{"V2", "=", "Vinfini2"}], ";", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LNHestonCallIntegrand", "[", 
        RowBox[{
        "\[Rho]1", ",", "\[Lambda]v1", ",", "Vinfini1", ",", "\[Kappa]1", ",",
          "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "Vinfini2", ",", 
         "\[Kappa]2", ",", "V2", ",", "S0", ",", "K", ",", "\[Alpha]", ",", 
         "a", ",", "T", ",", 
         RowBox[{"\[Omega]", "+", 
          RowBox[{"\[ImaginaryI]", "/", "2"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", "10", ",", "30"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.408890576694821*^9, 3.408890660915188*^9}, {
  3.408891232160531*^9, 3.4088912612079635`*^9}, {3.4088919293457913`*^9, 
  3.408892011050485*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.14100000000005464`", ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{10., 0},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4088906401022882`*^9, 3.40889066180583*^9}, {
  3.408891233363679*^9, 3.4088912618798513`*^9}, {3.4088919384084654`*^9, 
  3.4088920121286306`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Rho]1", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Rho]2", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Lambda]v1", "=", "0.15"}], ",", 
      RowBox[{"\[Kappa]1", "=", "0.2"}], ",", 
      RowBox[{"\[Lambda]v2", "=", "0.15"}], ",", 
      RowBox[{"\[Kappa]2", "=", "0.2"}], ",", 
      RowBox[{"k", "=", 
       RowBox[{"-", "0.01"}]}], ",", "V1", ",", "V2", ",", "Vinfini1", ",", 
      "Vinfini2", "\[IndentingNewLine]", ",", 
      RowBox[{"T", "=", "1"}], ",", 
      RowBox[{"\[Lambda]B", "=", "1.1"}], ",", 
      RowBox[{"S0", "=", "0.05"}], ",", 
      RowBox[{"\[Alpha]", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Vinfini1", "=", "0.05"}], ";", 
     RowBox[{"V1", "=", "Vinfini1"}], ";", 
     RowBox[{"Vinfini2", "=", "0.05"}], ";", 
     RowBox[{"V2", "=", "Vinfini2"}], ";", ";", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"SuperHestonVanillaOption", "[", 
         RowBox[{
         "\[Rho]1", ",", "\[Lambda]v1", ",", "Vinfini1", ",", "\[Kappa]1", 
          ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "Vinfini2", ",",
           "\[Kappa]2", ",", "V2", ",", "S0", ",", "k", ",", "\[Alpha]", ",", 
          "a", ",", "T"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0.02", ",", "0.08"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.388229977157708*^9, 3.3882299779077945`*^9}, {
   3.3882303685465407`*^9, 3.388230415411314*^9}, {3.3882304516342363`*^9, 
   3.388230587634277*^9}, {3.408795437777231*^9, 3.408795559201438*^9}, {
   3.408795992522257*^9, 3.408796011569498*^9}, {3.408796071680027*^9, 
   3.408796162634898*^9}, {3.408802116280456*^9, 3.408802134937064*^9}, 
   3.4088898164927254`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"400.454`", ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVy3s0lAkYx/E3W7t0W7kktd0mS7Z0pHpLpd9kTcno5lKMEYmRxbZKhbMr
MhMRM5hxiRmXRYzLIFKKGbdt2qIjl05ba5UoZFFtFId93z+e85zP+T7PWq8z
Dj4aBEEcoobegUE13JdhYoTGdKsuq2QQv1luV3VJjEWB1svr7spwzz18ezRf
jFq2mWDilgwL7Vg6ZgliNHzbIgwolaGE0XE/JIf6/+dvn+PXZRjq+NdCWy3G
2Vv8JPNgGU6TxlrQlyBirsnnMRMZvKfE1ZkKCdrzYntLhVLkc3X1j8yk4CLz
jli9LxOLuPPcu8g0FI2/Xx2tnwGHGiNrS790vG85au75Lh0vB1+bSaqvQ+pq
mNJbkobU2mUaTcMZaJzysHgmSEWq18iLt7ukUGp7uayxS0Ewb9RpRCCDze6k
Ex3LJAjR9KluupOFIdVDvxZCjD6V1eIHUdlI+q1M0NOdBNkjDTJ9dQ7aonX1
m/5IxP4rJ0pcbufgu833V5k2iiApnm+sdyIXzOvNOXXuQkxkjSXfnsxF+QPO
qJZ/PGZmjee5Zv+OEMNBzTGPOHxY9LH5rU0ebLi5Z/WCrmJ66EvIyZ48aBvq
/zi/OhryLQ7m3fx8EHFyl91vBPBn9z3fsqYAvfUGPlw2H+1tzbHx6gLYlJhs
PJd7GcaEVUx34A3sPr93I8sgEkJiNFRTsxDqjzpHeoMvQRow/jOpKES5Y79f
Z/GvqL9h5nKQXYQQxsDegp1haBMRIsfXRYioujBxauoiovrXPXSOlWOHsKPm
z6rzYGtFfmF+XwxPWWCDxd1zuJ22yWx9azGyGcMRycog6HWfLZsJKoHo+V+r
HAfPIOrV2Lr6BaXotXV1HOoMQCpHmRlaWQqiZPSHX5r9oMy5r7XqUBlE61W8
FSa+6E7htVQMlEGVU9fwqM0bSRPO/L3XFDBvPfgfO9wLFcnKFe665Sifpwqz
veoJ/5PTFwx8y6EaNuoLtnKHYukx+33V5ViTxRkfmcvBEGNK/W5OBZgGh4V9
G45j0tt2/xLnChCbehaqeU4QJlRCnkv1F6zhXQYO+DzSbNnwqQIR/Y2b22oO
g5PHeH74QCUId7VxXxcbLGvpJ4cUyjNpyyekttBYqtLtHKyEqnA8QOMKCwfa
Z+UPtt+EarBL4DRpjZi+2EGSfxPM9HZCpGQifUO9KePpTRDfPL7lZ2WFrW6L
X0caVYGwjkosqrNEjurrbI8QynKR4r0vCbGTqMCPdhPbLZnylbeGpedoWyVq
bqX8k7ZZbTRti7u+53kktno6dipox8XumPQmoZ7N0iRCqxBRv8Ro5iSJsT2W
QdmUifg0xgIuiVdPGi/K6T6bPFvsRqKLZx9eRfclhj32lGsTPOLUtGeVWQkc
EvweQf4Yfc+J2KbjSsIg/MkzZhjlgRa54TES83W4vXa0U12ya51JTOf3DzjR
jgtOdaPc2zr54TRlYqVtrNSJhHzl6sWJtA+5X17rSCKzolAvg773seQ3OpAQ
sixW5NP9miz6FOXgQNb6O3Sf/io5/ygJ3pzHm5pob5+bsY+yq8RlWyvtgPi8
N0dI2Ju+2vWU/pdkKWIo76nzt35Ju2znPVPK/wP6ZUoO
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0.02, 0},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.408796221464153*^9, 3.4088025397260857`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Rho]1", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Rho]2", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Lambda]v1", "=", "0.15"}], ",", 
      RowBox[{"\[Kappa]1", "=", "0.2"}], ",", 
      RowBox[{"\[Lambda]v2", "=", "0.15"}], ",", 
      RowBox[{"\[Kappa]2", "=", "0.2"}], ",", 
      RowBox[{"k", "=", 
       RowBox[{"-", "0.01"}]}], ",", "V1", ",", "V2", ",", "Vinfini1", ",", 
      "Vinfini2", "\[IndentingNewLine]", ",", 
      RowBox[{"T", "=", "3"}], ",", 
      RowBox[{"\[Lambda]B", "=", "1.1"}], ",", 
      RowBox[{"S0", "=", "0.05"}], ",", 
      RowBox[{"\[Alpha]", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}], ",", 
      RowBox[{"K", "=", "0.05"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Vinfini1", "=", "0.02"}], ";", 
     RowBox[{"V1", "=", "Vinfini1"}], ";", 
     RowBox[{"Vinfini2", "=", "0.02"}], ";", 
     RowBox[{"V2", "=", "Vinfini2"}], ";", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LNHestonCallIntegrand", "[", 
        RowBox[{
        "\[Rho]1", ",", "\[Lambda]v1", ",", "Vinfini1", ",", "\[Kappa]1", ",",
          "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "Vinfini2", ",", 
         "\[Kappa]2", ",", "V2", ",", "S0", ",", "K", ",", "\[Alpha]", ",", 
         "a", ",", "T", ",", 
         RowBox[{"\[Omega]", "+", 
          RowBox[{"\[ImaginaryI]", "/", "2"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.408890576694821*^9, 3.408890660915188*^9}, {
  3.408891232160531*^9, 3.4088912612079635`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Rho]1", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Rho]2", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Lambda]v1", "=", "0.15"}], ",", 
      RowBox[{"\[Kappa]1", "=", "0.2"}], ",", 
      RowBox[{"\[Lambda]v2", "=", "0.15"}], ",", 
      RowBox[{"\[Kappa]2", "=", "0.2"}], ",", 
      RowBox[{"k", "=", 
       RowBox[{"-", "0.01"}]}], ",", "V1", ",", "V2", ",", "Vinfini1", ",", 
      "Vinfini2", "\[IndentingNewLine]", ",", 
      RowBox[{"T", "=", "3"}], ",", 
      RowBox[{"\[Lambda]B", "=", "1.1"}], ",", 
      RowBox[{"S0", "=", "0.05"}], ",", 
      RowBox[{"\[Alpha]", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}], ",", 
      RowBox[{"K", "=", "0.05"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Vinfini1", "=", "0.02"}], ";", 
     RowBox[{"V1", "=", "Vinfini1"}], ";", 
     RowBox[{"Vinfini2", "=", "0.02"}], ";", 
     RowBox[{"V2", "=", "Vinfini2"}], ";", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LNHestonCallIntegrand", "[", 
        RowBox[{
        "\[Rho]1", ",", "\[Lambda]v1", ",", "Vinfini1", ",", "\[Kappa]1", ",",
          "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "Vinfini2", ",", 
         "\[Kappa]2", ",", "V2", ",", "S0", ",", "K", ",", "\[Alpha]", ",", 
         "a", ",", "T", ",", 
         RowBox[{"\[Omega]", "+", 
          RowBox[{"\[ImaginaryI]", "/", "2"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.408890576694821*^9, 3.408890660915188*^9}, {
  3.408891232160531*^9, 3.4088912612079635`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.06199999999996475`", ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0.04},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4088906401022882`*^9, 3.40889066180583*^9}, {
  3.408891233363679*^9, 3.4088912618798513`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Rho]1", "=", 
       RowBox[{"-", "0.2"}]}], ",", 
      RowBox[{"\[Rho]2", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Lambda]v1", "=", "0.35"}], ",", 
      RowBox[{"\[Kappa]1", "=", "0.7"}], ",", 
      RowBox[{"\[Lambda]v2", "=", "0.15"}], ",", 
      RowBox[{"\[Kappa]2", "=", "0.5"}], ",", 
      RowBox[{"k", "=", 
       RowBox[{"-", "0.01"}]}], ",", "V1", ",", "V2", ",", "Vinfini1", ",", 
      "Vinfini2", "\[IndentingNewLine]", ",", 
      RowBox[{"T", "=", "10"}], ",", 
      RowBox[{"\[Lambda]B", "=", "1.1"}], ",", 
      RowBox[{"S0", "=", "0.05"}], ",", 
      RowBox[{"\[Alpha]", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Vinfini1", "=", "0.02"}], ";", 
     RowBox[{"V1", "=", "Vinfini1"}], ";", 
     RowBox[{"Vinfini2", "=", "0.02"}], ";", 
     RowBox[{"V2", "=", "Vinfini2"}], ";", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ImpVolBS", "[", 
        RowBox[{"S0", ",", "k", ",", "T", ",", 
         RowBox[{"SuperHestonVanillaOption", "[", 
          RowBox[{
          "\[Rho]1", ",", "\[Lambda]v1", ",", "Vinfini1", ",", "\[Kappa]1", 
           ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "Vinfini2", 
           ",", "\[Kappa]2", ",", "V2", ",", "S0", ",", "k", ",", "\[Alpha]", 
           ",", "a", ",", "T"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0.02", ",", "0.08"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.388229977157708*^9, 3.3882299779077945`*^9}, {
   3.3882303685465407`*^9, 3.388230415411314*^9}, {3.3882304516342363`*^9, 
   3.388230587634277*^9}, {3.408795437777231*^9, 3.408795559201438*^9}, {
   3.408795992522257*^9, 3.408796011569498*^9}, {3.408796071680027*^9, 
   3.408796162634898*^9}, {3.408802116280456*^9, 3.408802134937064*^9}, {
   3.408802176047229*^9, 3.4088022087041054`*^9}, {3.408802246392329*^9, 
   3.4088022642364216`*^9}, 3.408889819133401*^9, {3.408890439035928*^9, 
   3.408890448614237*^9}, {3.4088923137594223`*^9, 3.40889233786926*^9}, {
   3.4088925794832735`*^9, 3.408892654953473*^9}, {3.4088929010988235`*^9, 
   3.4088929228336163`*^9}, 3.408892976803402*^9, {3.4088930214605093`*^9, 
   3.408893043726562*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11.20299999999998`", ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0.02, 0.12},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.408893055445537*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Bi", " ", "Superheston"}]], "Input",
 CellChangeTimes->{{3.408803065673684*^9, 3.408803071033162*^9}},
 Background->RGBColor[0.494118, 0.537255, 0.827451]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variance Process", "Subsubtitle",
 CellChangeTimes->{{3.3984932410280504`*^9, 3.3984932479029627`*^9}, {
  3.402815465561778*^9, 3.402815476108856*^9}, {3.4028157995369406`*^9, 
  3.4028158003025804`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   FractionBox[
    SubscriptBox["dS", 
     RowBox[{"1", ",", "t"}]], 
    SubscriptBox["S", 
     RowBox[{"1", ",", "t"}]]], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "2"], 
     SqrtBox[
      SubscriptBox["v", 
       RowBox[{"2", ",", "t"}]]], " ", 
     SubscriptBox["dW", 
      RowBox[{"2", ",", "t"}]]}], "+", 
    RowBox[{
     SqrtBox[
      SubscriptBox["v", 
       RowBox[{"1", ",", "t"}]]], " ", 
     SubscriptBox["dW", 
      RowBox[{"1", ",", "t"}]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox[
    SubscriptBox["dS", 
     RowBox[{"2", ",", "t"}]], 
    SubscriptBox["S", 
     RowBox[{"2", ",", "t"}]]], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Beta]", "2"], 
     SqrtBox[
      SubscriptBox["v", 
       RowBox[{"2", ",", "t"}]]], " ", 
     SubscriptBox["dW", 
      RowBox[{"2", ",", "t"}]]}], "+", 
    RowBox[{
     SqrtBox[
      SubscriptBox["v", 
       RowBox[{"3", ",", "t"}]]], " ", 
     SubscriptBox["dW", 
      RowBox[{"3", ",", "t"}]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["dv", 
    RowBox[{"1", ",", "t"}]], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Lambda]", "1"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "-", 
       SubscriptBox["v", 
        RowBox[{"1", ",", "t"}]]}], ")"}], "dt"}], "+", 
    RowBox[{
     SubscriptBox["\[Kappa]", "1"], " ", 
     SqrtBox[
      SubscriptBox["v", 
       RowBox[{"1", ",", "t"}]]], " ", "d", 
     SubscriptBox[
      OverscriptBox["W", "_"], 
      RowBox[{"1", ",", "t"}]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["dv", 
    RowBox[{"2", ",", "t"}]], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Lambda]", "2"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "-", 
       SubscriptBox["v", 
        RowBox[{"2", ",", "t"}]]}], ")"}], "dt"}], "+", 
    RowBox[{
     SubscriptBox["\[Kappa]", "2"], " ", 
     SqrtBox[
      SubscriptBox["v", 
       RowBox[{"2", ",", "t"}]]], " ", "d", 
     SubscriptBox[
      OverscriptBox["W", "_"], 
      RowBox[{"2", ",", "t"}]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["dv", 
   RowBox[{"3", ",", "t"}]], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Lambda]", "3"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Theta]", "3"], "-", 
      SubscriptBox["v", 
       RowBox[{"3", ",", "t"}]]}], ")"}], "dt"}], "+", 
   RowBox[{
    SubscriptBox["\[Kappa]", "3"], " ", 
    SqrtBox[
     SubscriptBox["v", 
      RowBox[{"3", ",", "t"}]]], " ", "d", 
    SubscriptBox[
     OverscriptBox["W", "_"], 
     RowBox[{"3", ",", "t"}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["dW", 
      RowBox[{"1", ",", "t"}]], "d", 
     SubscriptBox[
      OverscriptBox["W", "_"], 
      RowBox[{"1", ",", "t"}]]}], "=", 
    RowBox[{
     SubscriptBox["\[Rho]", "1"], " ", "dt"}]}], ";", 
   RowBox[{
    RowBox[{
     SubscriptBox["dW", 
      RowBox[{"2", ",", "t"}]], "d", 
     SubscriptBox[
      OverscriptBox["W", "_"], 
      RowBox[{"2", ",", "t"}]]}], "=", 
    RowBox[{
     SubscriptBox["\[Rho]", "2"], " ", "dt"}]}], ";", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["dW", 
      RowBox[{"3", ",", "t"}]], "d", 
     SubscriptBox[
      OverscriptBox["W", "_"], 
      RowBox[{"3", ",", "t"}]]}], "=", 
    RowBox[{
     SubscriptBox["\[Rho]", "3"], " ", 
     "dt"}]}]}]}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.4087751574404287`*^9, 3.408775170987563*^9}, {
  3.408803371773311*^9, 3.408803458462476*^9}, {3.40880362876262*^9, 
  3.408803650044279*^9}, {3.408803689795042*^9, 3.4088036938732452`*^9}, {
  3.4088046515166316`*^9, 3.408804652016641*^9}, {3.409659506838584*^9, 
  3.409659542745753*^9}, {3.4096600519306626`*^9, 3.4096601391360197`*^9}},
 FontSize->16],

Cell["On montre que ", "Text",
 CellChangeTimes->{{3.4088046157190695`*^9, 3.408804619312888*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"<", 
   FractionBox[
    SubscriptBox["dS", 
     RowBox[{"1", ",", "t"}]], 
    SubscriptBox["S", 
     RowBox[{"1", ",", "t"}]]]}], ",", 
  RowBox[{
   RowBox[{
    FractionBox[
     SubscriptBox["dS", 
      RowBox[{"1", ",", "t"}]], 
     SubscriptBox["S", 
      RowBox[{"1", ",", "t"}]]], ">"}], " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Alpha]", "1"], "2"], 
       SubscriptBox["v", 
        RowBox[{"1", ",", "t"}]]}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Beta]", "1"], "2"], 
       SubscriptBox["v", 
        RowBox[{"2", ",", "t"}]]}]}], ")"}], "dt"}]}]}]], "Text",
 CellChangeTimes->{{3.4088035094322042`*^9, 3.4088035479329433`*^9}, {
  3.409659563246278*^9, 3.409659583215539*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{"<", 
   FractionBox[
    SubscriptBox["dS", 
     RowBox[{"2", ",", "t"}]], 
    SubscriptBox["S", 
     RowBox[{"2", ",", "t"}]]]}], ",", 
  RowBox[{
   RowBox[{
    FractionBox[
     SubscriptBox["dS", 
      RowBox[{"2", ",", "t"}]], 
     SubscriptBox["S", 
      RowBox[{"2", ",", "t"}]]], ">"}], " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Beta]", "2"], "2"], 
       SubscriptBox["v", 
        RowBox[{"2", ",", "t"}]]}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Alpha]", "2"], "2"], 
       SubscriptBox["v", 
        RowBox[{"3", ",", "t"}]]}]}], ")"}], "dt"}]}]}]], "Text",
 CellChangeTimes->{{3.4088035094322042`*^9, 3.408803595277602*^9}, {
  3.4096595915907536`*^9, 3.4096596043410797`*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{"<", 
   FractionBox[
    SubscriptBox["dS", 
     RowBox[{"1", ",", "t"}]], 
    SubscriptBox["S", 
     RowBox[{"1", ",", "t"}]]]}], ",", 
  RowBox[{
   RowBox[{
    FractionBox[
     SubscriptBox["dS", 
      RowBox[{"2", ",", "t"}]], 
     SubscriptBox["S", 
      RowBox[{"2", ",", "t"}]]], ">"}], " ", "=", 
   RowBox[{
    SubscriptBox["\[Alpha]", "1"], 
    SubscriptBox["\[Alpha]", "2"], 
    SubscriptBox["v", 
     RowBox[{"2", ",", "t"}]], "dt"}]}]}]], "Text",
 CellChangeTimes->{{3.4088035094322042`*^9, 3.4088036069340763`*^9}, {
  3.409659623263439*^9, 3.4096596302479925`*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalSigma]", "=", 
   RowBox[{"(", GridBox[{
      {"v1", "0", "0"},
      {"0", "v2", "0"},
      {"0", "0", "v3"}
     }], ")"}]}], ";", 
  RowBox[{"Q", "=", 
   RowBox[{"(", GridBox[{
      {"\[Kappa]1", "0", "0"},
      {"0", "\[Kappa]2", "0"},
      {"0", "0", "\[Kappa]3"}
     }], ")"}]}], ";", 
  RowBox[{"M", "=", 
   RowBox[{"(", GridBox[{
      {"\[Lambda]1", "0", "0"},
      {"0", "\[Lambda]2", "0"},
      {"0", "0", "\[Lambda]3"}
     }], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.4088050058046837`*^9, 3.408805115025531*^9}, {
  3.408805343248663*^9, 3.408805392624611*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["x", 
    RowBox[{"1", ",", "t"}]], "=", 
   RowBox[{"Log", "[", 
    SubscriptBox["S", 
     RowBox[{"1", ",", "t"}]], "]"}]}], ";", " ", 
  RowBox[{
   SubscriptBox["x", 
    RowBox[{"2", ",", "t"}]], "=", 
   RowBox[{"Log", "[", 
    SubscriptBox["S", 
     RowBox[{"2", ",", "t"}]], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4088080896295176`*^9, 3.408808119036332*^9}}],

Cell[BoxData[
 RowBox[{"processus", ":", " "}]], "Input",
 CellChangeTimes->{{3.4088065403810225`*^9, 3.4088065440529675`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "'"}], 
  RowBox[{"etat", " ", ":", " ", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["x", 
         RowBox[{"1", ",", "t"}]]},
       {
        SubscriptBox["x", 
         RowBox[{"2", ",", "t"}]]},
       {
        SubscriptBox["v", 
         RowBox[{"1", ",", "t"}]]},
       {
        SubscriptBox["v", 
         RowBox[{"2", ",", "t"}]]},
       {
        SubscriptBox["v", 
         RowBox[{"3", ",", "t"}]]}
      }], ")"}], "  ", "a", " ", "pour", " ", "covariance", " ", 
    RowBox[{"matrice", ":", " ", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {GridBox[{
            {
             RowBox[{
              SubscriptBox["v", 
               RowBox[{"1", ",", "t"}]], "+", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Alpha]", "2"], "2"], 
               SubscriptBox["v", 
                RowBox[{"2", ",", "t"}]]}]}]},
            {
             RowBox[{
              SubscriptBox["\[Alpha]", "2"], 
              SubscriptBox["\[Beta]", "2"], 
              SubscriptBox["v", 
               RowBox[{"2", ",", "t"}]]}]},
            {
             RowBox[{"\[Kappa]1", " ", "\[Rho]1", " ", 
              SubscriptBox["v", 
               RowBox[{"1", ",", "t"}]]}]},
            {
             RowBox[{
              SubscriptBox["\[Alpha]", "2"], "\[Kappa]2", " ", "\[Rho]2", " ",
               
              SubscriptBox["v", 
               RowBox[{"2", ",", "t"}]]}]},
            {"0"}
           }], GridBox[{
            {
             RowBox[{
              SubscriptBox["\[Alpha]", "2"], 
              SubscriptBox["\[Beta]", "2"], 
              SubscriptBox["v", 
               RowBox[{"2", ",", "t"}]]}]},
            {
             RowBox[{
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Beta]", "2"], "2"], 
               SubscriptBox["v", 
                RowBox[{"2", ",", "t"}]]}], "+", 
              SubscriptBox["v", 
               RowBox[{"3", ",", "t"}]]}]},
            {"0"},
            {
             RowBox[{
              SubscriptBox["\[Beta]", "2"], "\[Kappa]2\[Rho]2", " ", 
              SubscriptBox["v", 
               RowBox[{"2", ",", "t"}]]}]},
            {
             RowBox[{"\[Kappa]3", " ", "\[Rho]3", " ", 
              SubscriptBox["v", 
               RowBox[{"3", ",", "t"}]]}]}
           }], GridBox[{
            {
             RowBox[{"\[Kappa]1", " ", "\[Rho]1", " ", 
              SubscriptBox["v", 
               RowBox[{"1", ",", "t"}]]}]},
            {"0"},
            {
             RowBox[{
              SuperscriptBox["\[Kappa]1", 
               RowBox[{"2", " "}]], 
              SubscriptBox["v", 
               RowBox[{"1", ",", "t"}]]}]},
            {"0"},
            {"0"}
           }], GridBox[{
            {
             RowBox[{
              SubscriptBox["\[Alpha]", "2"], "\[Kappa]2", " ", "\[Rho]2", " ",
               
              SubscriptBox["v", 
               RowBox[{"2", ",", "t"}]]}]},
            {
             RowBox[{
              SubscriptBox["\[Beta]", "2"], "\[Kappa]2", " ", "\[Rho]2", " ", 
              
              SubscriptBox["v", 
               RowBox[{"2", ",", "t"}]]}]},
            {"0"},
            {
             RowBox[{
              SuperscriptBox["\[Kappa]2", 
               RowBox[{"2", " "}]], 
              SubscriptBox["v", 
               RowBox[{"2", ",", "t"}]]}]},
            {"0"}
           }], GridBox[{
            {"0"},
            {
             RowBox[{"\[Kappa]3", " ", "\[Rho]3", " ", 
              SubscriptBox["v", 
               RowBox[{"3", ",", "t"}]]}]},
            {"0"},
            {"0"},
            {
             RowBox[{
              SuperscriptBox["\[Kappa]3", 
               RowBox[{"2", " "}]], 
              SubscriptBox["v", 
               RowBox[{"3", ",", "t"}]]}]}
           }]}
        }], ")"}], " ", "et", " ", "pour", " ", "drift", " ", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           FractionBox[
            RowBox[{"-", "1"}], "2"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["v", 
              RowBox[{"1", ",", "t"}]], "+", 
             SubscriptBox["v", 
              RowBox[{"2", ",", "t"}]]}], ")"}]}]},
         {
          RowBox[{
           FractionBox[
            RowBox[{"-", "1"}], "2"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["v", 
              RowBox[{"2", ",", "t"}]], "+", 
             SubscriptBox["v", 
              RowBox[{"3", ",", "t"}]]}], ")"}]}]},
         {
          RowBox[{
           SubscriptBox["\[Lambda]", "1"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Theta]", "1"], "-", 
             SubscriptBox["v", 
              RowBox[{"1", ",", "t"}]]}], ")"}]}]},
         {
          RowBox[{
           SubscriptBox["\[Lambda]", "2"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "-", 
             SubscriptBox["v", 
              RowBox[{"2", ",", "t"}]]}], ")"}]}]},
         {
          RowBox[{
           SubscriptBox["\[Lambda]", "3"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Theta]", "3"], "-", 
             SubscriptBox["v", 
              RowBox[{"3", ",", "t"}]]}], ")"}]}]}
        }], ")"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.408806943873144*^9, 3.408807183862127*^9}, 
   3.408807219800317*^9, {3.4088072683168736`*^9, 3.408807355584174*^9}, {
   3.408807386787898*^9, 3.4088074374451203`*^9}, {3.408807467726952*^9, 
   3.4088075377751718`*^9}, {3.408807839030956*^9, 3.4088078868912497`*^9}, {
   3.408808069879138*^9, 3.4088080728948207`*^9}, {3.4088081344897537`*^9, 
   3.408808185396981*^9}, {3.4096596639051046`*^9, 3.409659675686656*^9}, {
   3.409659995663597*^9, 3.4096600250862255`*^9}, {3.409660344063141*^9, 
   3.4096603661262054`*^9}, {3.4096604200650864`*^9, 
   3.4096604449875994`*^9}, {3.4096604804572573`*^9, 3.409660483941722*^9}, {
   3.40966052820848*^9, 3.4096605379899807`*^9}, {3.409660610757468*^9, 
   3.409660628445421*^9}, {3.4096618901652203`*^9, 3.409661897509158*^9}, 
   3.4097317782154293`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "'"}], "est", " ", "donc", " ", "bien", " ", "un", " ", 
  "processus", " ", "affine", " ", "et", " ", "la", " ", 
  "probabilit\[EAcute]", " ", "de", " ", "transition", " ", "est", " ", 
  "donc", " ", "de", " ", "la", " ", 
  RowBox[{"forme", ":", " "}]}]], "Input",
 CellChangeTimes->{{3.4088078891256676`*^9, 3.4088079257826214`*^9}}],

Cell[BoxData[
 RowBox[{"Exp", "[", " ", 
  RowBox[{
   RowBox[{"A1", "  ", "v1"}], " ", "+", " ", 
   RowBox[{"A2", " ", "v2"}], " ", "+", 
   RowBox[{"A3", " ", "v3"}], "+", " ", 
   RowBox[{"\[Gamma]1", " ", "x1"}], " ", "+", 
   RowBox[{"\[Gamma]2", " ", "x2"}], "  ", "+", " ", "c"}], "]"}]], "Input",
 CellChangeTimes->{{3.408807932485875*^9, 3.4088080267220592`*^9}, {
  3.408808201787921*^9, 3.408808204100465*^9}}],

Cell[BoxData[
 RowBox[{"Transform\[EAcute]e", " ", "fondamentale"}]], "Input",
 Background->RGBColor[0.494118, 0.537255, 0.827451]],

Cell[BoxData[
 StyleBox[
  TagBox[
   StyleBox[
    RowBox[{"{", 
     StyleBox[GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[PartialD]", " ", "P"}], 
            RowBox[{
             RowBox[{"\[PartialD]", "t"}], " "}]]}], "=", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{
              SubscriptBox["V", "1"], "+", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Alpha]", "2"], "2"], 
               SubscriptBox["V", "2"]}]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["x", "2"]}]]}], "+", 
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "1"], "2"], " ", 
              SubscriptBox["V", "1"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "1"], "2"]}]]}], "+", 
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "2"], "2"], " ", 
              SubscriptBox["V", "2"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "2"], "2"]}]]}], "+", 
           RowBox[{
            SubscriptBox["\[Rho]", "1"], " ", 
            SubscriptBox["\[Kappa]", "1"], "  ", 
            SubscriptBox["v", "1"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "1"]}], " ", 
              RowBox[{"\[PartialD]", "x"}]}]]}], "+", 
           RowBox[{
            SubscriptBox["\[Alpha]", "2"], 
            SubscriptBox["\[Rho]", "2"], " ", 
            SubscriptBox["\[Kappa]", "2"], "  ", 
            SubscriptBox["v", "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " ", 
              RowBox[{"\[PartialD]", "x"}]}]]}], "+", " ", 
           RowBox[{
            SubscriptBox["\[Lambda]", "1"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "1"], "-", 
              SubscriptBox["v", "1"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "1"]}], " "}]]}], "+", 
           RowBox[{
            SubscriptBox["\[Lambda]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "-", 
              SubscriptBox["v", "2"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}], "-", 
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["v", "1"], "+", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Alpha]", "2"], "2"], 
               SubscriptBox["v", "2"]}]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "P"}], 
             RowBox[{"\[PartialD]", "x", " "}]]}], "+", "\[IndentingNewLine]",
            
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Beta]", "2"], "2"], 
               SubscriptBox["V", "2"]}], "+", 
              SubscriptBox["V", "3"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["y", "2"]}]]}], "+", 
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "3"], "2"], " ", 
              SubscriptBox["V", "3"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "3"], "2"]}]]}], "+", 
           RowBox[{
            SubscriptBox["\[Rho]", "3"], " ", 
            SubscriptBox["\[Kappa]", "3"], "  ", 
            SubscriptBox["v", "3"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "3"]}], " ", 
              RowBox[{"\[PartialD]", "y"}]}]]}], "+", 
           RowBox[{
            SubscriptBox["\[Beta]", "2"], 
            SubscriptBox["\[Rho]", "2"], " ", 
            SubscriptBox["\[Kappa]", "2"], "  ", 
            SubscriptBox["v", "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " ", 
              RowBox[{"\[PartialD]", "y"}]}]]}], "+", " ", 
           RowBox[{
            SubscriptBox["\[Lambda]", "3"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "3"], "-", 
              SubscriptBox["v", "3"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "3"]}], " "}]]}], "+", 
           RowBox[{
            SubscriptBox["\[Lambda]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "-", 
              SubscriptBox["v", "2"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}], "-", 
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["v", "3"], "+", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Beta]", "2"], "2"], 
               SubscriptBox["v", "2"]}]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "P"}], 
             RowBox[{"\[PartialD]", "y", " "}]]}], "+", "\[IndentingNewLine]",
            
           RowBox[{
            SubscriptBox["\[Alpha]", "2"], 
            SubscriptBox["\[Beta]", "2"], 
            SubscriptBox["V", "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "P"}], 
             RowBox[{
              RowBox[{"\[PartialD]", "x"}], " ", 
              RowBox[{"\[PartialD]", "y"}]}]]}]}]}]},
        {
         RowBox[{
          RowBox[{"P", 
           RowBox[{"(", "0", ")"}]}], "=", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", "x"], "-", 
             SuperscriptBox["\[ExponentialE]", "y"], "-", "K"}], ")"}], 
           "+"]}]}
       }],
      ShowAutoStyles->True]}],
    ShowAutoStyles->False],
   #& ],
  FontSize->16]], "Text",
 CellChangeTimes->{{3.4087771189780893`*^9, 3.4087771989952507`*^9}, 
   3.4087776404724765`*^9, {3.408797763165628*^9, 3.4087977856348095`*^9}, {
   3.408805703349326*^9, 3.408805855195992*^9}, {3.4088082924146605`*^9, 
   3.4088083492438765`*^9}, 3.40966059930405*^9, 3.40966064794592*^9, {
   3.4096607127913303`*^9, 3.409660753229865*^9}, 3.4096619186815753`*^9, {
   3.409732236777429*^9, 3.409732237424429*^9}}],

Cell[BoxData[
 RowBox[{"soit", " ", "q", " ", "la", " ", "transform\[EAcute]", " ", "de", 
  " ", "fourier", " ", "par", " ", "rapport", " ", "a", "   ", "x", " ", "et",
   " ", "y"}]], "Input",
 CellChangeTimes->{{3.4087775893933706`*^9, 3.408777625331561*^9}, {
  3.4088058927748384`*^9, 3.4088059021031427`*^9}, {3.4141506590072966`*^9, 
  3.4141506591322985`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "[", "z", "]"}], "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "z1", "  ", "x"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "z2", "  ", "y"}]}]], 
    RowBox[{"P", "[", 
     RowBox[{"x", ",", "y"}], "]"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Text",
 CellChangeTimes->{{3.4087977888067455`*^9, 3.408797797869419*^9}, {
  3.4088059217285194`*^9, 3.408805941244519*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "z1", "  ", "x"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "z2", "  ", "y"}]}]], 
    FractionBox[
     RowBox[{"\[PartialD]", " ", "P"}], 
     RowBox[{"\[PartialD]", "x"}]], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox[
     SuperscriptBox[
      RowBox[{"[", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "z1", "  ", "x"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "z2", "  ", "y"}]}]], "P"}], "]"}], 
      "\[Infinity]"], 
     RowBox[{"-", "\[Infinity]"}]], "-", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{"\[ImaginaryI]", " ", "Z", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "z1", "  ", "x"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "z2", "  ", "y"}]}]], "P", 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "Z1"}], " ", ")"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "z1", "  ", "x"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "z2", "  ", "y"}]}]], "P", 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.408797803338274*^9, 3.408797855026767*^9}, {
  3.40880599413616*^9, 3.4088060128552685`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "z1", "  ", "x"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "z2", "  ", "y"}]}]], 
    FractionBox[
     RowBox[{"\[PartialD]", " ", "P"}], 
     RowBox[{"\[PartialD]", "y"}]], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "Z2"}], " ", ")"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "z1", "  ", "x"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "z2", "  ", "y"}]}]], "P", 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.4088060246992464`*^9, 3.408806032324393*^9}}],

Cell["\[Tau] = T - t", "Text"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox["{",
    ShowAutoStyles->False], 
   StyleBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         StyleBox[
          FractionBox[
           RowBox[{"\[PartialD]", " ", "q"}], 
           RowBox[{
            RowBox[{"\[PartialD]", "\[Tau]"}], " "}]],
          FontSize->16], 
         StyleBox["=",
          FontSize->16], 
         RowBox[{
          RowBox[{
           StyleBox[
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SubscriptBox["V", "1"], "+", 
               RowBox[{
                SuperscriptBox[
                 SubscriptBox["\[Alpha]", "2"], "2"], 
                SubscriptBox["V", "2"]}]}], "2"]}],
            FontSize->16], 
           SuperscriptBox[
            StyleBox["Z1",
             FontSize->16], "2"], "q"}], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "1"], "2"], " ", 
              SubscriptBox["V", "1"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "q"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "1"], "2"]}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "2"], "2"], " ", 
              SubscriptBox["V", "2"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "q"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "2"], "2"]}]]}],
           FontSize->16], 
          StyleBox["-",
           FontSize->16], 
          StyleBox[
           RowBox[{"\[ImaginaryI]", " ", "Z1", " ", 
            SubscriptBox["\[Rho]", "1"], " ", 
            SubscriptBox["\[Kappa]", "1"], "  ", 
            SubscriptBox["v", "1"], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "1"]}], " "}]]}],
           FontSize->16], 
          StyleBox["-",
           FontSize->16], 
          StyleBox[
           RowBox[{"\[ImaginaryI]", " ", "Z1", " ", 
            SubscriptBox["\[Alpha]", "2"], 
            SubscriptBox["\[Rho]", "2"], " ", 
            SubscriptBox["\[Kappa]", "2"], "  ", 
            SubscriptBox["v", "2"], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[" ",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Lambda]", "1"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "1"], "-", 
              SubscriptBox["v", "1"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "1"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Lambda]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "-", 
              SubscriptBox["v", "2"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          RowBox[{
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "Z1"}], "2"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["v", "1"], "+", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Alpha]", "2"], "2"], 
              SubscriptBox["v", "2"]}]}], ")"}], "q"}], "+", 
          "\[IndentingNewLine]", 
          RowBox[{
           StyleBox[
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 SubscriptBox["\[Beta]", "2"], "2"], 
                SubscriptBox["V", "2"]}], "+", 
               SubscriptBox["V", "3"]}], "2"]}],
            FontSize->16], 
           SuperscriptBox[
            StyleBox["Z2",
             FontSize->16], "2"], "q"}], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "3"], "2"], " ", 
              SubscriptBox["V", "3"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "q"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "3"], "2"]}]]}],
           FontSize->16], 
          StyleBox["-",
           FontSize->16], 
          StyleBox[
           RowBox[{"\[ImaginaryI]", " ", "Z2", " ", 
            SubscriptBox["\[Rho]", "3"], " ", 
            SubscriptBox["\[Kappa]", "3"], "  ", 
            SubscriptBox["v", "3"], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "3"]}], " "}]]}],
           FontSize->16], 
          StyleBox["-",
           FontSize->16], 
          RowBox[{
           StyleBox["\[ImaginaryI]",
            FontSize->16], 
           StyleBox[" ",
            FontSize->16], 
           StyleBox["Z2",
            FontSize->16], 
           StyleBox[" ",
            FontSize->16], 
           SubscriptBox["\[Beta]", "2"], 
           SubscriptBox["\[Rho]", "2"], 
           StyleBox[" ",
            FontSize->16], 
           StyleBox[
            SubscriptBox["\[Kappa]", "2"],
            FontSize->16], 
           StyleBox["  ",
            FontSize->16], 
           StyleBox[
            SubscriptBox["v", "2"],
            FontSize->16], 
           StyleBox[
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]],
            FontSize->16]}], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[" ",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Lambda]", "3"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "3"], "-", 
              SubscriptBox["v", "3"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "13"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Lambda]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "-", 
              SubscriptBox["v", "2"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          RowBox[{
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "Z2"}], "2"], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["v", "3"], "+", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Beta]", "2"], "2"], 
              SubscriptBox["v", "2"]}]}], ")"}], "q"}], "+", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["\[Alpha]", "2"]}], 
           SubscriptBox["\[Beta]", "2"], 
           SubscriptBox["V", "2"], "Z1", " ", "Z2", " ", "q"}]}]}], 
        "\[IndentingNewLine]"}]},
      {
       RowBox[{
        RowBox[{"q", 
         RowBox[{"(", "0", ")"}]}], "=", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "z1", "  ", "x"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "z2", "  ", "y"}]}]], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", "x"], "-", 
             SuperscriptBox["\[ExponentialE]", "y"], "-", "K"}], ")"}], "+"], 
          
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}]}]}]}]}
     }],
    ShowAutoStyles->True]}],
  FontSize->16]], "Text",
 CellChangeTimes->{{3.4087773889988985`*^9, 3.4087774203745008`*^9}, {
   3.408777841679465*^9, 3.4087778811489725`*^9}, {3.408797400111782*^9, 
   3.408797413440163*^9}, {3.4088084801213894`*^9, 3.4088085654824038`*^9}, {
   3.4088086056706753`*^9, 3.4088086653905716`*^9}, 3.4088089465678453`*^9, {
   3.4096607717928405`*^9, 3.40966079285588*^9}, {3.4096608459197383`*^9, 
   3.409660857201277*^9}, {3.4096608912333984`*^9, 3.4096609007805176`*^9}, 
   3.409661924806732*^9, {3.4097322584334292`*^9, 3.4097322588004293`*^9}}],

Cell[BoxData["soit"], "Input",
 CellChangeTimes->{{3.408777925759204*^9, 3.4087779262904644`*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox["{",
    ShowAutoStyles->False], 
   StyleBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         StyleBox[
          FractionBox[
           RowBox[{"\[PartialD]", " ", "q"}], 
           RowBox[{
            RowBox[{"\[PartialD]", "\[Tau]"}], " "}]],
          FontSize->16], 
         StyleBox["=",
          FontSize->16], 
         RowBox[{
          RowBox[{
           StyleBox[
            FractionBox[
             RowBox[{
              SubscriptBox["V", "1"], "+", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Alpha]", "2"], "2"], 
               SubscriptBox["V", "2"]}]}], "2"],
            FontSize->16], 
           RowBox[{
            StyleBox["(",
             FontSize->16], 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "Z1"}], 
             StyleBox["-",
              FontSize->16], 
             SuperscriptBox[
              StyleBox["Z1",
               FontSize->16], "2"]}], ")"}], "q"}], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "1"], "2"], " ", 
              SubscriptBox["V", "1"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "q"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "1"], "2"]}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "2"], "2"], " ", 
              SubscriptBox["V", "2"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "q"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "2"], "2"]}]]}],
           FontSize->16], 
          StyleBox["-",
           FontSize->16], 
          StyleBox[
           RowBox[{"\[ImaginaryI]", " ", "Z1", " ", 
            SubscriptBox["\[Rho]", "1"], " ", 
            SubscriptBox["\[Kappa]", "1"], "  ", 
            SubscriptBox["v", "1"], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "1"]}], " "}]]}],
           FontSize->16], 
          StyleBox["-",
           FontSize->16], 
          RowBox[{
           StyleBox["\[ImaginaryI]",
            FontSize->16], 
           StyleBox[" ",
            FontSize->16], "Z1", 
           StyleBox[" ",
            FontSize->16], 
           SubscriptBox["\[Alpha]", "2"], 
           StyleBox[" ",
            FontSize->16], 
           StyleBox[
            SubscriptBox["\[Rho]", "2"],
            FontSize->16], 
           StyleBox[" ",
            FontSize->16], 
           StyleBox[
            SubscriptBox["\[Kappa]", "2"],
            FontSize->16], 
           StyleBox["  ",
            FontSize->16], 
           StyleBox[
            SubscriptBox["v", "2"],
            FontSize->16], 
           StyleBox[
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]],
            FontSize->16]}], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[" ",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Lambda]", "1"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "1"], "-", 
              SubscriptBox["v", "1"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "1"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Lambda]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "-", 
              SubscriptBox["v", "2"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox["\[IndentingNewLine]",
           FontSize->16], 
          RowBox[{
           StyleBox[
            FractionBox[
             RowBox[{
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Beta]", "2"], "2"], 
               SubscriptBox["V", "2"]}], "+", 
              SubscriptBox["V", "3"]}], "2"],
            FontSize->16], 
           RowBox[{
            StyleBox["(",
             FontSize->16], 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "Z2"}], 
             StyleBox["-",
              FontSize->16], 
             SuperscriptBox[
              StyleBox["Z2",
               FontSize->16], "2"]}], ")"}], "q"}], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "3"], "2"], " ", 
              SubscriptBox["V", "3"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", "q"}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "3"], "2"]}]]}],
           FontSize->16], 
          StyleBox["-",
           FontSize->16], 
          StyleBox[
           RowBox[{"\[ImaginaryI]", " ", "Z2", " ", 
            SubscriptBox["\[Rho]", "3"], " ", 
            SubscriptBox["\[Kappa]", "3"], "  ", 
            SubscriptBox["v", "3"], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "3"]}], " "}]]}],
           FontSize->16], 
          StyleBox["-",
           FontSize->16], 
          StyleBox[
           RowBox[{"\[ImaginaryI]", " ", "Z2", " ", 
            SubscriptBox["\[Beta]", "2"], 
            SubscriptBox["\[Rho]", "2"], " ", 
            SubscriptBox["\[Kappa]", "2"], "  ", 
            SubscriptBox["v", "2"], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[" ",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Lambda]", "3"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "3"], "-", 
              SubscriptBox["v", "3"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "3"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Lambda]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "-", 
              SubscriptBox["v", "2"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", "q"}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox["\[IndentingNewLine]",
           FontSize->16], 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["\[Alpha]", "2"]}], 
           SubscriptBox["\[Beta]", "2"], 
           SubscriptBox["V", "2"], "Z1", " ", "Z2", " ", "q"}]}]}], 
        StyleBox["\[IndentingNewLine]",
         FontSize->16]}]},
      {
       RowBox[{
        RowBox[{"q", 
         RowBox[{"(", "0", ")"}]}], "=", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "z1", "  ", "x"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "z2", "  ", "y"}]}]], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", "x"], "-", 
             SuperscriptBox["\[ExponentialE]", "y"], "-", "K"}], ")"}], "+"], 
          
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}]}]}]}]}
     }],
    ShowAutoStyles->True]}],
  FontSize->16]], "Text",
 CellChangeTimes->{{3.4087773889988985`*^9, 3.4087774203745008`*^9}, {
   3.408777841679465*^9, 3.4087778811489725`*^9}, {3.408777954666009*^9, 
   3.4087779916354685`*^9}, {3.4087974065806565`*^9, 
   3.4087974103307285`*^9}, {3.4088087503609533`*^9, 3.40880886845697*^9}, {
   3.408808949271022*^9, 3.4088089592868395`*^9}, 3.4088089892874155`*^9, {
   3.409660961578949*^9, 3.409661007595752*^9}, 3.409661068581688*^9, 
   3.409661928322447*^9, 3.4097322705694294`*^9}],

Cell[BoxData[{
 RowBox[{"on", " ", "poose"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q", "[", 
   RowBox[{"Z1", ",", "Z2", ",", 
    SubscriptBox["V", "1"], ",", 
    SubscriptBox["V", "2"], ",", "t"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["q", "1"], "[", 
    RowBox[{"Z1", ",", "Z2", ",", 
     SubscriptBox["V", "1"], ",", 
     SubscriptBox["V", "2"], ",", "t"}], "]"}], 
   RowBox[{
    SubscriptBox["q", "0"], "[", 
    RowBox[{"Z1", ",", "Z2"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.4088096170182176`*^9, 3.408809620455784*^9}, {
  3.408809734020464*^9, 3.408809756661524*^9}}],

Cell[BoxData[
 RowBox[{"ou", " "}]], "Input",
 CellChangeTimes->{{3.40880972495779*^9, 3.408809725348422*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["q", "0"], "[", 
   RowBox[{"Z1", ",", "Z2"}], "]"}], "=", 
  RowBox[{"q", 
   RowBox[{"(", "0", ")"}]}]}]], "Input",
 CellChangeTimes->{{3.408809764646052*^9, 3.4088097712086782`*^9}}],

Cell[BoxData["alors"], "Input",
 CellChangeTimes->{{3.408809626877782*^9, 3.408809627830925*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox["{",
    ShowAutoStyles->False], 
   StyleBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         StyleBox[
          FractionBox[
           RowBox[{"\[PartialD]", " ", 
            SubscriptBox["q", "1"]}], 
           RowBox[{
            RowBox[{"\[PartialD]", "\[Tau]"}], " "}]],
          FontSize->16], 
         StyleBox["=",
          FontSize->16], 
         RowBox[{
          RowBox[{
           StyleBox[
            FractionBox[
             RowBox[{
              SubscriptBox["V", "1"], "+", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Alpha]", "2"], "2"], 
               SubscriptBox["V", "2"]}]}], "2"],
            FontSize->16], 
           RowBox[{
            StyleBox["(",
             FontSize->16], 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "Z1"}], 
             StyleBox["-",
              FontSize->16], 
             SuperscriptBox[
              StyleBox["Z1",
               FontSize->16], "2"]}], ")"}], 
           SubscriptBox["q", "1"]}], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "1"], "2"], " ", 
              SubscriptBox["V", "1"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", 
              SubscriptBox["q", "1"]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "1"], "2"]}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "2"], "2"], " ", 
              SubscriptBox["V", "2"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", 
              SubscriptBox["q", "1"]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "2"], "2"]}]]}],
           FontSize->16], 
          StyleBox["-",
           FontSize->16], 
          StyleBox[
           RowBox[{"\[ImaginaryI]", " ", "Z1", " ", 
            SubscriptBox["\[Rho]", "1"], " ", 
            SubscriptBox["\[Kappa]", "1"], "  ", 
            SubscriptBox["v", "1"], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", 
              SubscriptBox["q", "1"]}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "1"]}], " "}]]}],
           FontSize->16], 
          StyleBox["-",
           FontSize->16], 
          StyleBox[
           RowBox[{"\[ImaginaryI]", " ", "Z1", " ", 
            SubscriptBox["\[Alpha]", "2"], " ", 
            SubscriptBox["\[Rho]", "2"], " ", 
            SubscriptBox["\[Kappa]", "2"], "  ", 
            SubscriptBox["v", "2"], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", 
              SubscriptBox["q", "1"]}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[" ",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Lambda]", "1"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "1"], "-", 
              SubscriptBox["v", "1"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", 
              SubscriptBox["q", "1"]}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "1"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Lambda]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "-", 
              SubscriptBox["v", "2"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", 
              SubscriptBox["q", "1"]}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox["\[IndentingNewLine]",
           FontSize->16], 
          RowBox[{
           StyleBox[
            FractionBox[
             RowBox[{
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Beta]", "2"], "2"], 
               SubscriptBox["V", "2"]}], "+", 
              SubscriptBox["V", "3"]}], "2"],
            FontSize->16], 
           RowBox[{
            StyleBox["(",
             FontSize->16], 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "Z2"}], 
             StyleBox["-",
              FontSize->16], 
             SuperscriptBox[
              StyleBox["Z2",
               FontSize->16], "2"]}], ")"}], 
           SubscriptBox["q", "1"]}], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Kappa]", "3"], "2"], " ", 
              SubscriptBox["V", "3"]}], "2"], 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], " ", 
              SubscriptBox["q", "1"]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox[
               SubscriptBox["V", "3"], "2"]}]]}],
           FontSize->16], 
          StyleBox["-",
           FontSize->16], 
          StyleBox[
           RowBox[{"\[ImaginaryI]", " ", "Z2", " ", 
            SubscriptBox["\[Rho]", "3"], " ", 
            SubscriptBox["\[Kappa]", "3"], "  ", 
            SubscriptBox["v", "3"], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", 
              SubscriptBox["q", "1"]}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "3"]}], " "}]]}],
           FontSize->16], 
          StyleBox["-",
           FontSize->16], 
          StyleBox[
           RowBox[{"\[ImaginaryI]", " ", "Z2", " ", 
            SubscriptBox["\[Beta]", "2"], " ", 
            SubscriptBox["\[Rho]", "2"], " ", 
            SubscriptBox["\[Kappa]", "2"], "  ", 
            SubscriptBox["v", "2"], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", 
              SubscriptBox["q", "1"]}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[" ",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Lambda]", "3"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "3"], "-", 
              SubscriptBox["v", "3"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", 
              SubscriptBox["q", "1"]}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "3"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Lambda]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "-", 
              SubscriptBox["v", "2"]}], ")"}], 
            FractionBox[
             RowBox[{"\[PartialD]", " ", 
              SubscriptBox["q", "1"]}], 
             RowBox[{
              RowBox[{"\[PartialD]", 
               SubscriptBox["V", "2"]}], " "}]]}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox["\[IndentingNewLine]",
           FontSize->16], 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["\[Alpha]", "2"]}], 
           SubscriptBox["\[Beta]", "2"], 
           SubscriptBox["V", "2"], "Z1", " ", "Z2", " ", 
           SubscriptBox["q", "1"]}]}]}], 
        StyleBox["\[IndentingNewLine]",
         FontSize->16]}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["q", "1"], 
         RowBox[{"(", "0", ")"}]}], "=", "1"}]}
     }],
    ShowAutoStyles->True]}],
  FontSize->16]], "Text",
 CellChangeTimes->{{3.4087773889988985`*^9, 3.4087774203745008`*^9}, {
   3.408777841679465*^9, 3.4087778811489725`*^9}, {3.408777954666009*^9, 
   3.4087779916354685`*^9}, {3.4087974065806565`*^9, 
   3.4087974103307285`*^9}, {3.4088087503609533`*^9, 3.40880886845697*^9}, {
   3.408808949271022*^9, 3.4088089592868395`*^9}, 3.4088089892874155`*^9, {
   3.408809644846877*^9, 3.4088097065043106`*^9}, {3.409661045065461*^9, 
   3.4096610833320656`*^9}, 3.409661932181921*^9, 3.409732284777429*^9}],

Cell[BoxData[
 RowBox[{"on", " ", "suppose", " "}]], "Input",
 CellChangeTimes->{{3.4088091577594*^9, 3.408809160306324*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["q", "1"], "=", 
  RowBox[{"Exp", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"A1", "[", "\[Tau]", "]"}], "  ", "v1"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"A2", "[", "\[Tau]", "]"}], "  ", "v2"}], " ", "+", 
    RowBox[{
     RowBox[{"A3", "[", "\[Tau]", "]"}], "  ", "v3"}], "+", "  ", 
    RowBox[{"c", "[", "\[Tau]", "]"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.408809164431403*^9, 3.4088091653845463`*^9}, 
   3.4088093947795753`*^9, {3.408809459280814*^9, 3.408809476531145*^9}, 
   3.4088097888340163`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"c", "[", "\[Tau]", "]"}], " "}], 
       RowBox[{
        RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"A1", "[", "\[Tau]", "]"}], " "}], 
        RowBox[{
         RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], " ", 
       SubscriptBox["V", "1"]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"A2", "[", "\[Tau]", "]"}], " "}], 
        RowBox[{
         RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], " ", 
       SubscriptBox["V", "2"]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"A3", "[", "\[Tau]", "]"}], " "}], 
        RowBox[{
         RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], " ", 
       SubscriptBox["V", "3"]}]}], ")"}], 
    SubscriptBox["q", "1"]}],
   FontSize->16], 
  StyleBox["=",
   FontSize->16], 
  RowBox[{
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{
       SubscriptBox["V", "1"], "+", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Alpha]", "2"], "2"], 
        SubscriptBox["V", "2"]}]}], "2"],
     FontSize->16], 
    RowBox[{
     StyleBox["(",
      FontSize->16], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "Z1"}], 
      StyleBox["-",
       FontSize->16], 
      SuperscriptBox[
       StyleBox["Z1",
        FontSize->16], "2"]}], ")"}], 
    SubscriptBox["q", "1"]}], 
   StyleBox["+",
    FontSize->16], 
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Kappa]", "1"], "2"], " ", 
       SubscriptBox["V", "1"]}], "2"],
     FontSize->16], 
    SuperscriptBox[
     StyleBox["A1",
      FontSize->16], "2"], 
    SubscriptBox["q", "1"]}], 
   StyleBox["+",
    FontSize->16], 
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Kappa]", "2"], "2"], " ", 
       SubscriptBox["V", "2"]}], "2"],
     FontSize->16], 
    SuperscriptBox[
     StyleBox["A2",
      FontSize->16], "2"], 
    SubscriptBox["q", "1"]}], 
   StyleBox["-",
    FontSize->16], 
   RowBox[{
    StyleBox["\[ImaginaryI]",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox["Z1",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox[
     SubscriptBox["\[Rho]", "1"],
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox[
     SubscriptBox["\[Kappa]", "1"],
     FontSize->16], 
    StyleBox["  ",
     FontSize->16], 
    StyleBox[
     SubscriptBox["v", "1"],
     FontSize->16], 
    StyleBox["A1",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    SubscriptBox[
     StyleBox["q",
      FontSize->16], "1"]}], 
   StyleBox["-",
    FontSize->16], 
   RowBox[{
    StyleBox["\[ImaginaryI]",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox["Z1",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    SubscriptBox["\[Alpha]", "2"], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox[
     SubscriptBox["\[Rho]", "2"],
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox[
     SubscriptBox["\[Kappa]", "2"],
     FontSize->16], 
    StyleBox["  ",
     FontSize->16], 
    StyleBox[
     SubscriptBox["v", "2"],
     FontSize->16], 
    StyleBox["A2",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    SubscriptBox[
     StyleBox["q",
      FontSize->16], "1"]}], 
   StyleBox["+",
    FontSize->16], 
   StyleBox[" ",
    FontSize->16], 
   RowBox[{
    StyleBox[
     SubscriptBox["\[Lambda]", "1"],
     FontSize->16], 
    StyleBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "-", 
       SubscriptBox["v", "1"]}], ")"}],
     FontSize->16], 
    StyleBox["A1",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    SubscriptBox[
     StyleBox["q",
      FontSize->16], "1"]}], 
   StyleBox["+",
    FontSize->16], 
   RowBox[{
    StyleBox[
     SubscriptBox["\[Lambda]", "2"],
     FontSize->16], 
    StyleBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "-", 
       SubscriptBox["v", "2"]}], ")"}],
     FontSize->16], 
    StyleBox["A2",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    SubscriptBox[
     StyleBox["q",
      FontSize->16], "1"]}], 
   StyleBox["+",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Beta]", "2"], "2"], 
        SubscriptBox["V", "2"]}], "+", 
       SubscriptBox["V", "3"]}], "2"],
     FontSize->16], 
    RowBox[{
     StyleBox["(",
      FontSize->16], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "Z2"}], 
      StyleBox["-",
       FontSize->16], 
      SuperscriptBox[
       StyleBox["Z2",
        FontSize->16], "2"]}], ")"}], 
    SubscriptBox["q", "1"]}], 
   StyleBox["+",
    FontSize->16], 
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Kappa]", "3"], "2"], " ", 
       SubscriptBox["V", "3"]}], "2"],
     FontSize->16], 
    SuperscriptBox[
     StyleBox["A3",
      FontSize->16], "2"], 
    StyleBox[" ",
     FontSize->16], 
    SubscriptBox[
     StyleBox["q",
      FontSize->16], "1"]}], 
   StyleBox["-",
    FontSize->16], 
   RowBox[{
    StyleBox["\[ImaginaryI]",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox["Z2",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox[
     SubscriptBox["\[Rho]", "3"],
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox[
     SubscriptBox["\[Kappa]", "3"],
     FontSize->16], 
    StyleBox["  ",
     FontSize->16], 
    StyleBox[
     SubscriptBox["v", "3"],
     FontSize->16], 
    StyleBox["A3",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    SubscriptBox[
     StyleBox["q",
      FontSize->16], "1"]}], 
   StyleBox["-",
    FontSize->16], 
   RowBox[{
    StyleBox["\[ImaginaryI]",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox["Z2",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    SubscriptBox["\[Beta]", "2"], " ", 
    StyleBox[
     SubscriptBox["\[Rho]", "2"],
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox[
     SubscriptBox["\[Kappa]", "2"],
     FontSize->16], 
    StyleBox["  ",
     FontSize->16], 
    StyleBox[
     SubscriptBox["v", "2"],
     FontSize->16], 
    StyleBox["A2",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    SubscriptBox[
     StyleBox["q",
      FontSize->16], "1"]}], 
   StyleBox["+",
    FontSize->16], 
   StyleBox[" ",
    FontSize->16], 
   RowBox[{
    StyleBox[
     SubscriptBox["\[Lambda]", "3"],
     FontSize->16], 
    StyleBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "3"], "-", 
       SubscriptBox["v", "3"]}], ")"}],
     FontSize->16], 
    StyleBox["A3",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    SubscriptBox[
     StyleBox["q",
      FontSize->16], "1"]}], 
   StyleBox["+",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["\[Alpha]", "2"]}], 
    SubscriptBox["\[Beta]", "2"], 
    SubscriptBox["V", "2"], "Z1", " ", "Z2", " ", 
    SubscriptBox["q", "1"]}]}]}]], "Input",
 CellChangeTimes->{{3.4088098168345537`*^9, 3.4088098334129972`*^9}, {
   3.4088098782107325`*^9, 3.4088100754332685`*^9}, {3.409661252836405*^9, 
   3.4096612640241914`*^9}, {3.409661305009616*^9, 3.409661318931847*^9}, 
   3.4096619363070264`*^9, {3.409740198634429*^9, 3.409740199745429*^9}, 
   3.4097413868334293`*^9}],

Cell[BoxData[""], "Text",
 CellChangeTimes->{{3.4087780602774115`*^9, 3.4087780667619114`*^9}, 
   3.408810085495962*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"on", " ", "separe", " ", 
   RowBox[{"l", "'"}], "equation", " ", "en", " ", "terme", " ", "constant"}],
   ",", " ", 
  RowBox[{"term", " ", "en", " ", 
   SubscriptBox["V", "1"]}], " ", ",", " ", 
  RowBox[{"terme", " ", "en", " ", 
   SubscriptBox["V", "2"], " ", "et", " ", "terme", " ", "en", " ", 
   RowBox[{
    SubscriptBox["V", "3"], ":"}]}]}]], "Input",
 CellChangeTimes->{{3.4088090372883368`*^9, 3.408809074585928*^9}, {
  3.408811225502225*^9, 3.4088112376743336`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"c", "[", "\[Tau]", "]"}], " "}], 
    RowBox[{
     RowBox[{"\[PartialD]", "\[Tau]"}], " "}]],
   FontSize->16], 
  StyleBox["=",
   FontSize->16], 
  RowBox[{
   StyleBox[
    RowBox[{
     SubscriptBox["\[Lambda]", "1"], 
     RowBox[{"(", 
      SubscriptBox["\[Theta]", "1"], ")"}], "A1"}],
    FontSize->16], 
   StyleBox["+",
    FontSize->16], 
   StyleBox[
    RowBox[{
     SubscriptBox["\[Lambda]", "2"], 
     RowBox[{"(", 
      SubscriptBox["\[Theta]", "2"], ")"}], "A2"}],
    FontSize->16], 
   StyleBox["+",
    FontSize->16], 
   RowBox[{
    StyleBox[
     SubscriptBox["\[Lambda]", "3"],
     FontSize->16], 
    StyleBox[
     RowBox[{"(", 
      SubscriptBox["\[Theta]", "3"], ")"}],
     FontSize->16], 
    StyleBox["A3",
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    SubscriptBox[
     StyleBox["q",
      FontSize->16], "1"]}]}]}]], "Input",
 CellChangeTimes->{
  3.408810118777851*^9, {3.4088101542629075`*^9, 3.4088101957637043`*^9}, 
   3.4097414136944294`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[PartialD]", 
    RowBox[{"A1", "[", "\[Tau]", "]"}], " "}], 
   RowBox[{
    RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     StyleBox["(",
      FontSize->16], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "Z1"}], 
      StyleBox["-",
       FontSize->16], 
      SuperscriptBox[
       StyleBox["Z1",
        FontSize->16], "2"]}], ")"}], "2"], "+", 
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Kappa]", "1"], "2"], " "}], "2"],
     FontSize->16], 
    SuperscriptBox[
     StyleBox["A1",
      FontSize->16], "2"]}], 
   StyleBox["-",
    FontSize->16], 
   StyleBox[
    RowBox[{"\[ImaginaryI]", " ", "Z1", " ", 
     SubscriptBox["\[Rho]", "1"], " ", 
     SubscriptBox["\[Kappa]", "1"], "  ", "A1"}],
    FontSize->16], 
   StyleBox["-",
    FontSize->16], 
   StyleBox[" ",
    FontSize->16], 
   StyleBox[
    RowBox[{
     SubscriptBox["\[Lambda]", "1"], "A1", " "}],
    FontSize->16]}]}]], "Input",
 CellChangeTimes->{{3.4088102051545095`*^9, 3.408810332063196*^9}, 
   3.4088106479755116`*^9, 3.408810732211504*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[PartialD]", 
    RowBox[{"A2", "[", "\[Tau]", "]"}], " "}], 
   RowBox[{
    RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Beta]", "2"], "2"], 
    FractionBox[
     RowBox[{
      StyleBox["(",
       FontSize->16], 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "Z2"}], 
       StyleBox["-",
        FontSize->16], 
       SuperscriptBox[
        StyleBox["Z2",
         FontSize->16], "2"]}], ")"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Alpha]", "2"], "2"], 
    FractionBox[
     RowBox[{
      StyleBox["(",
       FontSize->16], 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "Z1"}], 
       StyleBox["-",
        FontSize->16], 
       SuperscriptBox[
        StyleBox["Z1",
         FontSize->16], "2"]}], ")"}], "2"]}], "+", 
   RowBox[{
    StyleBox[
     FractionBox[
      StyleBox[
       SuperscriptBox[
        SubscriptBox["\[Kappa]", "2"], "2"],
       FontSize->16], "2"],
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    SuperscriptBox[
     StyleBox["A2",
      FontSize->16], "2"]}], 
   StyleBox[" ",
    FontSize->16], 
   StyleBox["-",
    FontSize->16], 
   StyleBox[
    RowBox[{"\[ImaginaryI]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Alpha]", "2"], "Z1"}], "+", "  ", 
       RowBox[{
        SubscriptBox["\[Beta]", "2"], "Z2"}]}], ")"}], " ", 
     SubscriptBox["\[Rho]", "2"], " ", 
     SubscriptBox["\[Kappa]", "2"], "  ", "A2"}],
    FontSize->16], 
   StyleBox["-",
    FontSize->16], 
   StyleBox[" ",
    FontSize->16], 
   StyleBox[
    RowBox[{
     SubscriptBox["\[Lambda]", "2"], "A2"}],
    FontSize->16], "-", 
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], 
    SubscriptBox["\[Beta]", "2"], "Z1", " ", "Z2"}]}]}]], "Input",
 CellChangeTimes->{{3.408810352626091*^9, 3.408810411689725*^9}, {
   3.4088104459403825`*^9, 3.4088104516592426`*^9}, {3.40881049372255*^9, 
   3.408810546832945*^9}, {3.4088105791460648`*^9, 3.408810585239932*^9}, {
   3.4088106521005907`*^9, 3.4088106813199015`*^9}, 3.408810723055078*^9, {
   3.408810791431391*^9, 3.408810792181405*^9}, 3.4088111010623355`*^9, 
   3.408811179329463*^9, 3.4088112995973973`*^9, {3.4088123723211184`*^9, 
   3.4088123804462748`*^9}, {3.409661411949853*^9, 3.4096614241064143`*^9}, {
   3.409661546953309*^9, 3.4096615545941296`*^9}, 3.409661946807295*^9, {
   3.409740256711429*^9, 3.409740257848429*^9}, 3.409741392679429*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[PartialD]", 
    RowBox[{"A3", "[", "\[Tau]", "]"}], " "}], 
   RowBox[{
    RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     StyleBox["(",
      FontSize->16], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "Z2"}], 
      StyleBox["-",
       FontSize->16], 
      SuperscriptBox[
       StyleBox["Z2",
        FontSize->16], "2"]}], ")"}], "2"], "+", 
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Kappa]", "3"], "2"], " "}], "2"],
     FontSize->16], 
    SuperscriptBox[
     StyleBox["A3",
      FontSize->16], "2"]}], 
   StyleBox["-",
    FontSize->16], 
   StyleBox[
    RowBox[{"\[ImaginaryI]", " ", "Z2", " ", 
     SubscriptBox["\[Rho]", "3"], " ", 
     SubscriptBox["\[Kappa]", "3"], "  ", "A3"}],
    FontSize->16], 
   StyleBox["-",
    FontSize->16], 
   StyleBox[" ",
    FontSize->16], 
   StyleBox[
    RowBox[{
     SubscriptBox["\[Lambda]", "3"], "A3", " "}],
    FontSize->16]}]}]], "Input",
 CellChangeTimes->{{3.4088102051545095`*^9, 3.408810332063196*^9}, 
   3.4088106479755116`*^9, {3.408810732211504*^9, 3.408810744242985*^9}, {
   3.408810804181636*^9, 3.408810862229625*^9}, {3.4088109128712225`*^9, 
   3.408810938027955*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"avec", " ", "comme", " ", "conditions", " ", "aux", " ", 
   RowBox[{"limites", " ", ":", " ", 
    RowBox[{"A1", "[", "0", "]"}]}]}], "=", 
  RowBox[{
   RowBox[{"A2", "[", "0", "]"}], "=", 
   RowBox[{
    RowBox[{"A3", "[", "0", "]"}], "=", 
    RowBox[{
     RowBox[{"c", "[", "0", "]"}], "=", "0"}]}]}]}]], "Input",
 CellChangeTimes->{{3.4088114187871857`*^9, 3.4088114662099714`*^9}}],

Cell[BoxData[
 RowBox[{"Ce", " ", "qui", " ", 
  RowBox[{"s", "'"}], "ese", " ", "reecrit", " ", 
  RowBox[{"en", " ", ":"}]}]], "Input",
 CellChangeTimes->{{3.4088115058201065`*^9, 3.408811513992139*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[PartialD]", 
    RowBox[{"A1", "[", "\[Tau]", "]"}], " "}], 
   RowBox[{
    RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], "=", 
  RowBox[{
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Kappa]", "1"], "2"], " "}], "2"],
     FontSize->16], 
    SuperscriptBox[
     StyleBox["A1",
      FontSize->16], "2"]}], 
   StyleBox["-",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], "+", 
       RowBox[{"\[ImaginaryI]", " ", "Z1", " ", 
        SubscriptBox["\[Rho]", "1"], " ", 
        SubscriptBox["\[Kappa]", "1"]}]}], " ", ")"}], " ", "A1"}],
    FontSize->16], 
   StyleBox["+",
    FontSize->16], 
   FractionBox[
    RowBox[{
     StyleBox["(",
      FontSize->16], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "Z1"}], 
      StyleBox["-",
       FontSize->16], 
      SuperscriptBox[
       StyleBox["Z1",
        FontSize->16], "2"]}], ")"}], "2"]}]}]], "Input",
 CellChangeTimes->{{3.4088102051545095`*^9, 3.408810332063196*^9}, 
   3.4088106479755116`*^9, 3.408810732211504*^9, {3.408811533226883*^9, 
   3.408811547492782*^9}, {3.408811593696794*^9, 3.408811601196938*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[PartialD]", 
    RowBox[{"A2", "[", "\[Tau]", "]"}], " "}], 
   RowBox[{
    RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], "=", 
  RowBox[{
   RowBox[{
    StyleBox[
     FractionBox[
      StyleBox[
       SuperscriptBox[
        SubscriptBox["\[Kappa]", "2"], "2"],
       FontSize->16], "2"],
     FontSize->16], 
    StyleBox[" ",
     FontSize->16], 
    SuperscriptBox[
     StyleBox["A2",
      FontSize->16], "2"], 
    StyleBox[" ",
     FontSize->16], 
    RowBox[{
     StyleBox["-",
      FontSize->16], 
     RowBox[{
      StyleBox["(",
       FontSize->16], 
      RowBox[{
       RowBox[{
        StyleBox["2",
         FontSize->16], 
        SubscriptBox["\[Lambda]", "2"]}], "+", 
       StyleBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Alpha]", "2"], "Z1"}], "+", 
           RowBox[{
            SubscriptBox["\[Beta]", "2"], " ", "Z2"}]}], ")"}], " ", 
         SubscriptBox["\[Rho]", "2"], " ", 
         SubscriptBox["\[Kappa]", "2"]}],
        FontSize->16]}], 
      StyleBox[" ",
       FontSize->16], 
      StyleBox[")",
       FontSize->16]}]}], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox["A2",
     FontSize->16]}], 
   StyleBox["+",
    FontSize->16], 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Beta]", "2"], "2"], 
    FractionBox[
     RowBox[{
      StyleBox["(",
       FontSize->16], 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "Z2"}], 
       StyleBox["-",
        FontSize->16], 
       SuperscriptBox[
        StyleBox["Z2",
         FontSize->16], "2"]}], ")"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Alpha]", "2"], "2"], 
    FractionBox[
     RowBox[{
      StyleBox["(",
       FontSize->16], 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "Z1"}], 
       StyleBox["-",
        FontSize->16], 
       SuperscriptBox[
        StyleBox["Z1",
         FontSize->16], "2"]}], ")"}], "2"]}], "-", 
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], 
    SubscriptBox["\[Beta]", "2"], "Z1", " ", "Z2"}]}]}]], "Input",
 CellChangeTimes->{{3.408810352626091*^9, 3.408810411689725*^9}, {
   3.4088104459403825`*^9, 3.4088104516592426`*^9}, {3.40881049372255*^9, 
   3.408810546832945*^9}, {3.4088105791460648`*^9, 3.408810585239932*^9}, {
   3.4088106521005907`*^9, 3.4088106813199015`*^9}, 3.408810723055078*^9, {
   3.408810791431391*^9, 3.408810792181405*^9}, 3.4088111010623355`*^9, 
   3.408811179329463*^9, 3.4088112995973973`*^9, {3.4088116186503983`*^9, 
   3.408811647838458*^9}, {3.4088124096187096`*^9, 3.4088124174313593`*^9}, {
   3.4096616874412804`*^9, 3.4096617135669494`*^9}, 3.4096619529012012`*^9, {
   3.409740268983429*^9, 3.409740269863429*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[PartialD]", 
    RowBox[{"A3", "[", "\[Tau]", "]"}], " "}], 
   RowBox[{
    RowBox[{"\[PartialD]", "\[Tau]"}], " "}]], "=", 
  RowBox[{
   RowBox[{
    StyleBox[
     FractionBox[
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Kappa]", "3"], "2"], " "}], "2"],
     FontSize->16], 
    SuperscriptBox[
     StyleBox["A3",
      FontSize->16], "2"]}], 
   StyleBox["-",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Lambda]", "3"], "+", 
       RowBox[{"\[ImaginaryI]", " ", "Z2", " ", 
        SubscriptBox["\[Rho]", "3"], " ", 
        SubscriptBox["\[Kappa]", "3"]}]}], ")"}], "  ", "A3"}],
    FontSize->16], 
   StyleBox["+",
    FontSize->16], 
   FractionBox[
    RowBox[{
     StyleBox["(",
      FontSize->16], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "Z2"}], 
      StyleBox["-",
       FontSize->16], 
      SuperscriptBox[
       StyleBox["Z2",
        FontSize->16], "2"]}], ")"}], "2"]}]}]], "Input",
 CellChangeTimes->{{3.4088102051545095`*^9, 3.408810332063196*^9}, 
   3.4088106479755116`*^9, {3.408810732211504*^9, 3.408810744242985*^9}, {
   3.408810804181636*^9, 3.408810862229625*^9}, {3.4088109128712225`*^9, 
   3.408810938027955*^9}, {3.4088115554929357`*^9, 3.4088115882748146`*^9}}],

Cell[BoxData[
 RowBox[{"qui", " ", "sont", " ", "3", " ", "riccati", " ", "independantes", "  ",
   "qui", " ", "se", " ", "resolve", " ", 
  RowBox[{"en", " ", ":", " "}]}]], "Input",
 CellChangeTimes->{{3.4088116793234377`*^9, 3.408811699261321*^9}}],

Cell[BoxData[
 RowBox[{"les", " ", "1", "iere", " ", "et", " ", "3", "iemes", " ", 
  RowBox[{"s", "'"}], "integrent", " ", "immediatement", " ", 
  RowBox[{"en", " ", ":", " "}]}]], "Input",
 CellChangeTimes->{{3.408811802107045*^9, 3.4088118264356375`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"A1", "[", "\[Tau]", "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          StyleBox["Z1",
           FontSize->16], "2"], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          StyleBox["Z1",
           FontSize->16]}]}], ")"}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]], "\[Psi]p1"}], "+", 
       "\[Psi]m1", " "}]], " ", "avec", " ", "\[Zeta]1"}], 
    StyleBox["=",
     Background->RGBColor[1, 1, 0]], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", " ", 
       RowBox[{"\[Lambda]1", "+", 
        RowBox[{
        "\[ImaginaryI]", " ", "\[Rho]1", " ", "Z1", " ", "\[Kappa]1"}]}], 
       ")"}], "2"], "+", " ", 
     RowBox[{
      SuperscriptBox["\[Kappa]1", "2"], "   ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         StyleBox["Z1",
          FontSize->16], "2"], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         StyleBox["Z1",
          FontSize->16]}]}], ")"}]}]}]}]}], " ", ";", " ", 
  RowBox[{"\[Psi]p1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Lambda]1", "+", 
        RowBox[{
        "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}], 
       ")"}]}], "+", 
     RowBox[{"\[Zeta]1", "    ", "et", " ", "\[Psi]m1"}]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]1", "+", 
       RowBox[{
       "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}], 
      ")"}], "+", "\[Zeta]1"}]}]}]}]], "Text",
 CellChangeTimes->{{3.4087909728008804`*^9, 3.408790975379055*^9}, 
   3.4087934518953533`*^9, {3.4088118460766397`*^9, 3.408811944937913*^9}, {
   3.408811985579318*^9, 3.4088120301895494`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"A3", "[", "\[Tau]", "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          StyleBox["Z2",
           FontSize->16], "2"], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          StyleBox["Z2",
           FontSize->16]}]}], ")"}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]], "\[Psi]p3"}], "+", 
       "\[Psi]m3", " "}]], " ", "avec", " ", "\[Zeta]3"}], 
    StyleBox["=",
     Background->RGBColor[1, 1, 0]], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", " ", 
       RowBox[{"\[Lambda]3", "+", 
        RowBox[{
        "\[ImaginaryI]", " ", "\[Rho]3", " ", "Z2", " ", "\[Kappa]3"}]}], 
       ")"}], "2"], "+", " ", 
     RowBox[{
      SuperscriptBox["\[Kappa]3", "2"], "   ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         StyleBox["Z2",
          FontSize->16], "2"], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         StyleBox["Z2",
          FontSize->16]}]}], ")"}]}]}]}]}], " ", ";", " ", 
  RowBox[{"\[Psi]p3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Lambda]3", "+", 
        RowBox[{
        "\[Rho]3", " ", "\[Kappa]3", " ", "\[ImaginaryI]", " ", "Z2"}]}], 
       ")"}]}], "+", 
     RowBox[{"\[Zeta]3", "    ", "et", " ", "\[Psi]m3"}]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]3", "+", 
       RowBox[{
       "\[Rho]3", " ", "\[Kappa]3", " ", "\[ImaginaryI]", " ", "Z3"}]}], 
      ")"}], "+", "\[Zeta]3"}]}]}]}]], "Text",
 CellChangeTimes->{{3.4087909728008804`*^9, 3.408790975379055*^9}, 
   3.4087934518953533`*^9, {3.4088118460766397`*^9, 3.408811944937913*^9}, {
   3.408811985579318*^9, 3.408812200145938*^9}}],

Cell[BoxData[
 RowBox[{"la", " ", "deuxieme", " ", "necessite", " ", "un", " ", "peu", " ", 
  
  RowBox[{"d", "'"}], 
  RowBox[{"attention", ":", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.4088122148805957`*^9, 3.408812231568416*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"{", 
    StyleBox[GridBox[{
       {
        RowBox[{"a", "=", 
         FractionBox[
          SuperscriptBox[
           SubscriptBox["\[Kappa]", "2"], "2"], "2"], " "}]},
       {GridBox[{
          {
           RowBox[{"b", "=", 
            RowBox[{"-", " ", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"2", "\[Lambda]2"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "\[Rho]2", "  ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[Alpha]", "2"], "Z1"}], "+", 
                  RowBox[{
                   SubscriptBox["\[Beta]", "2"], " ", "Z2"}]}], ")"}], " ", 
                SubscriptBox["\[Kappa]", "2"]}]}], ")"}]}]}]},
          {
           RowBox[{"c", "=", 
            RowBox[{
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Beta]", "2"], "2"], 
              FractionBox[
               RowBox[{
                StyleBox["(",
                 FontSize->16], 
                RowBox[{
                 RowBox[{"\[ImaginaryI]", " ", "Z2"}], 
                 StyleBox["-",
                  FontSize->16], 
                 SuperscriptBox[
                  StyleBox["Z2",
                   FontSize->16], "2"]}], ")"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Alpha]", "2"], "2"], 
              FractionBox[
               RowBox[{
                StyleBox["(",
                 FontSize->16], 
                RowBox[{
                 RowBox[{"\[ImaginaryI]", " ", "Z1"}], 
                 StyleBox["-",
                  FontSize->16], 
                 SuperscriptBox[
                  StyleBox["Z1",
                   FontSize->16], "2"]}], ")"}], "2"]}], "-", 
             RowBox[{
              SubscriptBox["\[Alpha]", "2"], 
              SubscriptBox["\[Beta]", "2"], "Z1", " ", "Z2"}]}]}]}
         }]}
      }],
     ShowAutoStyles->True]}],
   ShowAutoStyles->False],
  #& ]], "Input",
 CellChangeTimes->{{3.408812304976075*^9, 3.4088123283202734`*^9}, {
   3.4088124588696547`*^9, 3.40881247996381*^9}, {3.409661755427396*^9, 
   3.409661800741056*^9}, 3.4096619622139397`*^9, {3.409740282839429*^9, 
   3.409740283471429*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Beta]", "2"], "2"], 
    FractionBox[
     RowBox[{
      StyleBox["(",
       FontSize->16], 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "Z2"}], 
       StyleBox["-",
        FontSize->16], 
       SuperscriptBox[
        StyleBox["Z2",
         FontSize->16], "2"]}], ")"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Alpha]", "2"], "2"], 
    FractionBox[
     RowBox[{
      StyleBox["(",
       FontSize->16], 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "Z1"}], 
       StyleBox["-",
        FontSize->16], 
       SuperscriptBox[
        StyleBox["Z1",
         FontSize->16], "2"]}], ")"}], "2"]}], "-", 
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], 
    SubscriptBox["\[Beta]", "2"], "Z1", " ", "Z2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4088126100838704`*^9, 3.4088126156950407`*^9}, {
  3.4096619663077946`*^9, 3.4096619845895123`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "Z1"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
     SubsuperscriptBox["\[Alpha]", "2", "2"]}], "-", 
    RowBox[{"2", " ", "Z1", " ", "Z2", " ", 
     SubscriptBox["\[Alpha]", "2"], " ", 
     SubscriptBox["\[Beta]", "2"]}], "-", 
    RowBox[{"Z2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
     SubsuperscriptBox["\[Beta]", "2", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.4088126171330004`*^9, 3.4096619904490376`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", 
      RowBox[{"(", 
       RowBox[{"Z1", "+", "Z2"}], ")"}]}], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Z1", "+", "Z2"}], ")"}], "2"]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.4088126893904905`*^9, 3.4088127310600705`*^9}}],

Cell[BoxData[
 RowBox[{"\[Zeta]2", "=", 
  SqrtBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", "  ", 
      RowBox[{
       RowBox[{"2", "\[Lambda]2"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Rho]2", "  ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Alpha]", "2"], "Z1"}], "+", 
          RowBox[{
           SubscriptBox["\[Beta]", "2"], " ", "Z2"}]}], ")"}], " ", 
        SubscriptBox["\[Kappa]", "2"]}]}], ")"}], "2"], "+", " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       SubscriptBox["\[Kappa]", "2"], "2"], "2"], "    ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Beta]", "2"], "2"], 
        RowBox[{
         StyleBox["(",
          FontSize->16], 
         RowBox[{
          SuperscriptBox[
           StyleBox["Z2",
            FontSize->16], "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Alpha]", "2"], "2"], 
        RowBox[{
         StyleBox["(",
          FontSize->16], 
         RowBox[{
          SuperscriptBox[
           StyleBox["Z1",
            FontSize->16], "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}], "+", 
       RowBox[{"2", 
        SubscriptBox["\[Alpha]", "2"], 
        SubscriptBox["\[Beta]", "2"], "Z1", " ", "Z2"}]}], 
      ")"}]}]}]]}]], "Input",
 CellChangeTimes->{{3.4088122723191986`*^9, 3.408812285694455*^9}, {
   3.4088125391993227`*^9, 3.408812569856161*^9}, {3.40881264140639*^9, 
   3.4088126427036805`*^9}, {3.4088127658993406`*^9, 
   3.4088127736830807`*^9}, {3.4088128382349806`*^9, 
   3.4088128442994204`*^9}, {3.408813035736612*^9, 3.4088130362366724`*^9}, {
   3.4096625817923*^9, 3.409662600324025*^9}, {3.4096840355896077`*^9, 
   3.4096840587246075`*^9}, {3.4096840925646076`*^9, 3.4096841006286077`*^9}, 
   3.409684370996608*^9, {3.409740304461429*^9, 3.4097403051034293`*^9}, 
   3.409740876704429*^9},
 FontSize->16],

Cell[BoxData[
 RowBox[{" ", 
  StyleBox[
   TagBox[
    StyleBox[
     RowBox[{"{", 
      StyleBox[GridBox[{
         {
          RowBox[{
           SubscriptBox["x", "1"], "=", " ", 
           FractionBox[
            RowBox[{
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"2", "\[Lambda]2"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "\[Rho]2", "  ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[Alpha]", "2"], "Z1"}], "+", 
                  RowBox[{
                   SubscriptBox["\[Beta]", "2"], " ", "Z2"}]}], ")"}], " ", 
                "\[Kappa]"}]}], ")"}], "-", "\[Zeta]"}], 
            RowBox[{"2", 
             SuperscriptBox["\[Kappa]2", "2"]}]]}]},
         {
          RowBox[{
           SubscriptBox["x", "2"], "=", " ", 
           FractionBox[
            RowBox[{
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"2", "\[Lambda]2"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "\[Rho]2", "  ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[Alpha]", "2"], "Z1"}], "+", 
                  RowBox[{
                   SubscriptBox["\[Beta]", "2"], " ", "Z2"}]}], ")"}], " ", 
                "\[Kappa]"}]}], ")"}], "+", "\[Zeta]"}], 
            RowBox[{"2", 
             SuperscriptBox["\[Kappa]2", "2"]}]]}]}
        }],
       ShowAutoStyles->True]}],
     ShowAutoStyles->False],
    #& ],
   FontSize->18]}]], "Text",
 CellChangeTimes->{{3.4088128907814875`*^9, 3.408812896266529*^9}, {
  3.4088129986696053`*^9, 3.408813012436904*^9}, {3.4096626460126944`*^9, 
  3.4096626496065364`*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"x1", "-", "x2"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"-", "\[Zeta]2"}], 
      SuperscriptBox["\[Kappa]2", "2"]], "  ", "et", " ", "de", " ", "meme", "   ",
      "x1", " ", "x2"}], "=", 
    RowBox[{
     RowBox[{"c", "/", "a"}], "=", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Beta]", "2"], "2"], 
         RowBox[{
          StyleBox["(",
           FontSize->16], 
          RowBox[{
           SuperscriptBox[
            StyleBox["Z2",
             FontSize->16], "2"], "-", 
           RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Alpha]", "2"], "2"], 
         RowBox[{
          StyleBox["(",
           FontSize->16], 
          RowBox[{
           SuperscriptBox[
            StyleBox["Z1",
             FontSize->16], "2"], "-", 
           RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}], "+", 
        RowBox[{"2", 
         SubscriptBox["\[Alpha]", "2"], 
         SubscriptBox["\[Beta]", "2"], "Z1", " ", "Z2"}]}], ")"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Kappa]", "2"], "2"], " "}]]}]}]}]}]], "Input",
 CellChangeTimes->{{3.4088130438626*^9, 3.4088130673654575`*^9}, {
   3.408813773624845*^9, 3.4088138227980385`*^9}, {3.409662697748394*^9, 
   3.4096626997015686`*^9}, {3.4096841144836073`*^9, 
   3.4096841268446074`*^9}, {3.4097404200884295`*^9, 3.409740428967429*^9}, 
   3.4097404615114293`*^9, 3.4097408853594294`*^9},
 FontSize->16],

Cell[BoxData[
 RowBox[{"   ", 
  RowBox[{
   RowBox[{"et", "      ", "df", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"(", " ", 
        RowBox[{"f", "-", "x1"}], ")"}]], "-", 
      FractionBox["1", 
       RowBox[{"(", 
        RowBox[{"f", "-", "x2"}], ")"}]]}], ")"}]}], "=", 
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{"x1", "-", "x2"}], ")"}], "d\[Tau]"}]}]}]], "Text",
 CellChangeTimes->{{3.4087926786305065`*^9, 3.40879268114618*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"A2", "[", "\[Tau]", "]"}], "-", 
     SubscriptBox["x", "1"]}], 
    RowBox[{
     RowBox[{"A2", "[", "\[Tau]", "]"}], "-", 
     SubscriptBox["x", "2"]}]], "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Zeta]2"}], " ", "\[Tau]"}], "+", 
    RowBox[{"C", "   ", "donc", " ", 
     RowBox[{"A2", "[", "\[Tau]", "]"}]}], "-", 
    SubscriptBox["x", "1"]}], "=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Zeta]2"}], " ", "\[Tau]"}], "+", "C"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A2", "[", "\[Tau]", "]"}], "-", 
      SubscriptBox["x", "2"]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.408813079960739*^9, 3.4088130923059897`*^9}, {
  3.4096632612628193`*^9, 3.409663295451195*^9}}],

Cell[BoxData[
 RowBox[{"donc", " "}]], "Input",
 CellChangeTimes->{{3.4088129662594147`*^9, 3.408812967431432*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A2", "[", "\[Tau]", "]"}], "=", 
  FractionBox[
   RowBox[{
    SubscriptBox["x", "1"], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}], "+", "C"}]], 
     SubscriptBox["x", "2"]}]}], 
   RowBox[{"1", "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}], "+", "C"}]]}]]}]], "Input",\

 CellChangeTimes->{{3.4088131215751734`*^9, 3.4088131319201813`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"et", "  ", "pour", " ", "que", " ", 
    RowBox[{"A2", "[", "0", "]"}]}], "=", 
   RowBox[{
    RowBox[{"0", " ", "on", " ", "fixe", " ", "C", " ", 
     RowBox[{"par", ":", 
      SuperscriptBox["\[ExponentialE]", "C"]}]}], "=", 
    FractionBox[
     SubscriptBox["x", "1"], 
     SubscriptBox["x", "2"]]}]}], " ", ",", " ", "ainsi"}]], "Input",
 CellChangeTimes->{{3.4088131626582937`*^9, 3.408813164158476*^9}, {
  3.4096636818048353`*^9, 3.409663707664872*^9}, {3.4096637383844085`*^9, 
  3.409663770588358*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A2", "[", "\[Tau]", "]"}], "=", 
  FractionBox[
   RowBox[{
    SubscriptBox["x", "1"], 
    SubscriptBox["x", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}], ")"}]}], 
   RowBox[{
    SubscriptBox["x", "2"], "-", 
    RowBox[{
     SubscriptBox["x", "1"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}]}]]}]], "Input",
 CellChangeTimes->{{3.4088131215751734`*^9, 3.4088131319201813`*^9}, {
  3.40881317533171*^9, 3.408813181301185*^9}}],

Cell[BoxData[
 RowBox[{"on", " ", "cree"}]], "Input",
 CellChangeTimes->{{3.408813252617901*^9, 3.4088132538992248`*^9}}],

Cell[TextData[{
 "\[Psi]p = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", 
    SubscriptBox["x", "1"]}], " ", 
   SuperscriptBox["\[Kappa]2", "2"]}]]],
 "   et   \[Psi]m =  ",
 Cell[BoxData[
  SubscriptBox["x", "2"]]],
 " ",
 Cell[BoxData[
  SuperscriptBox["\[Kappa]2", "2"]]]
}], "Text",
 CellChangeTimes->{{3.4087927435067525`*^9, 3.408792778069916*^9}, {
  3.408792952182634*^9, 3.408792956448341*^9}, {3.40881328940127*^9, 
  3.4088133148714867`*^9}, {3.409740798839429*^9, 3.409740800863429*^9}}],

Cell[TextData[{
 "donc ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "=", 
    FractionBox[
     RowBox[{"-", "\[Psi]p"}], 
     SuperscriptBox["\[Kappa]2", "2"]]}], TraditionalForm]]],
 "  et ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "2"], "=", 
    FractionBox["\[Psi]m", 
     SuperscriptBox["\[Kappa]2", "2"]]}], TraditionalForm]]],
 "   ainsi que \[Psi]p +\[Psi]m =2 \[Zeta]2"
}], "Text",
 CellChangeTimes->{{3.4087927181156397`*^9, 3.4087927393504224`*^9}, {
   3.408792950901359*^9, 3.4087930569502707`*^9}, {3.4087939674521265`*^9, 
   3.408793997046445*^9}, {3.4088133329819045`*^9, 3.4088133452169847`*^9}, 
   3.408813413783434*^9, 3.409740516344429*^9, {3.4097407521924295`*^9, 
   3.409740755440429*^9}}],

Cell[BoxData["donc"], "Input",
 CellChangeTimes->{{3.4088135376954203`*^9, 3.408813539164218*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A2", "[", "\[Tau]", "]"}], "=", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Beta]", "2"], "2"], 
         RowBox[{
          StyleBox["(",
           FontSize->16], 
          RowBox[{
           SuperscriptBox[
            StyleBox["Z2",
             FontSize->16], "2"], "-", 
           RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Alpha]", "2"], "2"], 
         RowBox[{
          StyleBox["(",
           FontSize->16], 
          RowBox[{
           SuperscriptBox[
            StyleBox["Z1",
             FontSize->16], "2"], "-", 
           RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}], "+", 
        RowBox[{"2", 
         SubscriptBox["\[Alpha]", "2"], 
         SubscriptBox["\[Beta]", "2"], "Z1", " ", "Z2"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}], ")"}]}], 
     RowBox[{"\[Psi]m2", "+", 
      RowBox[{"\[Psi]p2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Zeta]"}], " ", "2", " ", "\[Tau]"}]]}]}]]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"\[Zeta]2", "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Alpha]", "2"], "Z1"}], "+", 
        RowBox[{
         SubscriptBox["\[Beta]", "2"], " ", "Z2"}]}], ")"}], "2"], "+", " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Kappa]", "2"], "2"], "    ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Beta]", "2"], "2"], 
         RowBox[{
          StyleBox["(",
           FontSize->16], 
          RowBox[{
           SuperscriptBox[
            StyleBox["Z2",
             FontSize->16], "2"], "-", 
           RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Alpha]", "2"], "2"], 
         RowBox[{
          StyleBox["(",
           FontSize->16], 
          RowBox[{
           SuperscriptBox[
            StyleBox["Z1",
             FontSize->16], "2"], "-", 
           RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}], "+", 
        RowBox[{"2", 
         SubscriptBox["\[Alpha]", "2"], 
         SubscriptBox["\[Beta]", "2"], "Z1", " ", "Z2"}]}], ")"}]}]}]}], " ", 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"\[Psi]p2", "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", " ", 
       RowBox[{"\[Lambda]2", "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Rho]2", "  ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Alpha]", "2"], "Z1"}], "+", 
           RowBox[{
            SubscriptBox["\[Beta]", "2"], " ", "Z2"}]}], ")"}], " ", 
         "\[Kappa]2"}]}], ")"}]}], "+", "\[Zeta]2"}]}], " ", ";", "     ", 
   RowBox[{"\[Psi]m2", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]2", "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Rho]2", "  ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Alpha]", "2"], "Z1"}], "+", 
          RowBox[{
           SubscriptBox["\[Beta]", "2"], " ", "Z2"}]}], ")"}], " ", 
        "\[Kappa]2"}]}], ")"}], "+", "\[Zeta]2"}]}], ";"}]}]}], "Input",
 CellChangeTimes->{{3.4088135610711684`*^9, 3.4088135841031556`*^9}, {
   3.408813855689506*^9, 3.4088138872371883`*^9}, {3.4088139442542734`*^9, 
   3.408814169853243*^9}, 3.4096638410745373`*^9, {3.409663890294547*^9, 
   3.409663894888415*^9}, {3.4096639295143013`*^9, 3.409663972515402*^9}, {
   3.4096841681816072`*^9, 3.409684185350608*^9}, {3.409741213457429*^9, 
   3.4097412308574295`*^9}, {3.4097413041924295`*^9, 3.409741311368429*^9}}],

Cell[BoxData[
 RowBox[{"ainsi", " ", "on", " ", "peut", " ", "calculer", " ", "en", " ", 
  RowBox[{"integrant", ":", " ", 
   RowBox[{":", " "}]}]}]], "Input",
 CellChangeTimes->{{3.408814181712845*^9, 3.408814188853607*^9}, {
  3.408814232885703*^9, 3.408814239495205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]1", " ", "\[Theta]1", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           StyleBox["Z1",
            FontSize->16], "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           StyleBox["Z1",
            FontSize->16]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]], "\[Psi]p1"}], "+", 
        "\[Psi]m1", " "}]]}], "+", 
     RowBox[{"\[Lambda]2", " ", "\[Theta]2", " ", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Beta]", "2"], "2"], 
           RowBox[{
            StyleBox["(",
             FontSize->16], 
            RowBox[{
             SuperscriptBox[
              StyleBox["Z2",
               FontSize->16], "2"], "-", 
             RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Alpha]", "2"], "2"], 
           RowBox[{
            StyleBox["(",
             FontSize->16], 
            RowBox[{
             SuperscriptBox[
              StyleBox["Z1",
               FontSize->16], "2"], "-", 
             RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}], "+", 
          RowBox[{"2", 
           SubscriptBox["\[Alpha]", "2"], 
           SubscriptBox["\[Beta]", "2"], "Z1", " ", "Z2"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}], ")"}]}], 
       RowBox[{"\[Psi]m2", "+", 
        RowBox[{"\[Psi]p2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]2"}], " ", "\[Tau]"}]]}]}]]}], "+", 
     RowBox[{"\[Lambda]3", " ", "\[Theta]3", " ", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           StyleBox["Z2",
            FontSize->16], "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           StyleBox["Z2",
            FontSize->16]}]}], ")"}]}], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]], "\[Psi]p3"}], "+", 
        "\[Psi]m3", " "}]]}]}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]", ",", "0", ",", "t"}], "}"}]}], "]"}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.4087935374438705`*^9, {3.4087935833978777`*^9, 3.4087935857260475`*^9}, {
   3.408814303215178*^9, 3.4088143121841*^9}, {3.408814343497202*^9, 
   3.408814419139279*^9}, {3.4088146000958776`*^9, 3.408814601033396*^9}, 
   3.408814686175656*^9, 3.4088544596416836`*^9, {3.4096640313762836`*^9, 
   3.4096640339701004`*^9}, 3.4096842199816074`*^9, 3.409741436096429*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Z1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", "\[Theta]1", 
    " ", "\[Lambda]1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"t", " ", "\[Zeta]1", " ", "\[Psi]m1"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Psi]m1", "+", "\[Psi]p1"}], ")"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"\[Psi]m1", "+", "\[Psi]p1"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Psi]m1", "+", "\[Psi]p1"}], ")"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"t", " ", "\[Zeta]1"}]], " ", "\[Psi]m1"}], "+", 
         "\[Psi]p1"}], "]"}]}]}], ")"}]}], 
   RowBox[{"\[Zeta]1", " ", "\[Psi]m1", " ", "\[Psi]p1"}]], "+", 
  FractionBox[
   RowBox[{"Z2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", "\[Theta]3", 
    " ", "\[Lambda]3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"t", " ", "\[Zeta]3", " ", "\[Psi]m3"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Psi]m3", "+", "\[Psi]p3"}], ")"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"\[Psi]m3", "+", "\[Psi]p3"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Psi]m3", "+", "\[Psi]p3"}], ")"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"t", " ", "\[Zeta]3"}]], " ", "\[Psi]m3"}], "+", 
         "\[Psi]p3"}], "]"}]}]}], ")"}]}], 
   RowBox[{"\[Zeta]3", " ", "\[Psi]m3", " ", "\[Psi]p3"}]], "+", 
  FractionBox[
   RowBox[{"\[Theta]2", " ", "\[Lambda]2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "t"}], " ", "\[Zeta]2", " ", "\[Psi]m2"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Psi]m2", "+", "\[Psi]p2"}], ")"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"\[Psi]m2", "+", "\[Psi]p2"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Psi]m2", "+", "\[Psi]p2"}], ")"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"t", " ", "\[Zeta]2"}]], " ", "\[Psi]m2"}], "+", 
         "\[Psi]p2"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Z1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
       SubsuperscriptBox["\[Alpha]", "2", "2"]}], "+", 
      RowBox[{"2", " ", "Z1", " ", "Z2", " ", 
       SubscriptBox["\[Alpha]", "2"], " ", 
       SubscriptBox["\[Beta]", "2"]}], "+", 
      RowBox[{"Z2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
       SubsuperscriptBox["\[Beta]", "2", "2"]}]}], ")"}]}], 
   RowBox[{"\[Zeta]2", " ", "\[Psi]m2", " ", "\[Psi]p2"}]]}]], "Output",
 CellChangeTimes->{3.4097416393854294`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiSuperHestonFondamentalTransform", "[", 
   RowBox[{
   "\[Rho]1_", ",", "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", 
    ",", "V1_", ",", "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",",
     "\[Kappa]2_", ",", "V2_", ",", "\[Rho]3_", ",", "\[Lambda]v3_", ",", 
    "\[Theta]v3_", ",", "\[Kappa]3_", ",", "V3_", ",", "Z1_", ",", "Z2_", ",",
     "\[Alpha]2_", ",", "\[Beta]2_", ",", "\[Tau]_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Zeta]1", ",", "\[Psi]p1", " ", ",", "\[Psi]m1", ",", "A1", ",", 
      "arg\[Zeta]1", ",", "\[Zeta]2", ",", "\[Psi]p2", " ", ",", "\[Psi]m2", 
      ",", "A2", ",", "arg\[Zeta]2", ",", "\[Zeta]3", ",", "\[Psi]p3", " ", 
      ",", "\[Psi]m3", ",", "A3", ",", "arg\[Zeta]3", ",", "c"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"arg\[Zeta]1", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]v1", "+", 
          RowBox[{
          "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}], 
         ")"}], "2"], "+", 
       RowBox[{
        SuperscriptBox["\[Kappa]1", "2"], 
        RowBox[{"(", " ", 
         RowBox[{
          SuperscriptBox["Z1", "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Zeta]1", "=", 
      SqrtBox["arg\[Zeta]1"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p1", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v1", "+", 
          RowBox[{
          "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}], 
         ")"}]}], "+", "\[Zeta]1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m1", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v1", "+", 
         RowBox[{
         "\[Rho]1", " ", "\[Kappa]1", "  ", "\[ImaginaryI]", " ", "Z1"}]}], 
        ")"}], "+", "\[Zeta]1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A1", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            SuperscriptBox["Z1", "2"], "-", 
            RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m1", "+", 
        RowBox[{"\[Psi]p1", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"arg\[Zeta]2", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]v2", "+", 
          RowBox[{"\[Rho]2", " ", "\[Kappa]2", " ", "\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
             RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}], "2"], "+", 
       RowBox[{
        SuperscriptBox["\[Kappa]2", "2"], 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"Z1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
           SuperscriptBox["\[Alpha]2", "2"]}], "+", 
          RowBox[{
          "2", " ", "Z1", " ", "Z2", " ", "\[Alpha]2", " ", "\[Beta]2"}], "+",
           
          RowBox[{"Z2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
           SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Zeta]2", "=", 
      SqrtBox["arg\[Zeta]2"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p2", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v2", "+", 
          RowBox[{"\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
             RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}]}], "+", 
       "\[Zeta]2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m2", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v2", "+", 
         RowBox[{"\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
            RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}], "+", 
       "\[Zeta]2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A2", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"Z1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
             SuperscriptBox["\[Alpha]2", "2"]}], "+", 
            RowBox[{
            "2", " ", "Z1", " ", "Z2", " ", "\[Alpha]2", " ", "\[Beta]2"}], 
            "+", 
            RowBox[{"Z2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
             SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m2", "+", 
        RowBox[{"\[Psi]p2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"arg\[Zeta]3", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]v3", "+", 
          RowBox[{
          "\[Rho]3", " ", "\[Kappa]3", " ", "\[ImaginaryI]", " ", "Z2"}]}], 
         ")"}], "2"], "+", 
       RowBox[{
        SuperscriptBox["\[Kappa]3", "2"], 
        RowBox[{"(", " ", 
         RowBox[{
          SuperscriptBox["Z2", "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Zeta]3", "=", 
      SqrtBox["arg\[Zeta]3"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p3", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v3", "+", 
          RowBox[{
          "\[Rho]3", " ", "\[Kappa]3", "  ", "\[ImaginaryI]", " ", "Z2"}]}], 
         ")"}]}], "+", "\[Zeta]3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m3", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v3", "+", 
         RowBox[{
         "\[Rho]3", " ", "\[Kappa]3", "  ", "\[ImaginaryI]", " ", "Z2"}]}], 
        ")"}], "+", "\[Zeta]3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A3", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            SuperscriptBox["Z2", "2"], "-", 
            RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m3", "+", 
        RowBox[{"\[Psi]p3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[Theta]v1", " ", "\[Lambda]v1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Tau]", " ", "\[Psi]p1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               FractionBox[
                RowBox[{"\[Psi]m1", "+", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Zeta]1"}], " ", "\[Tau]"}]], " ", 
                  "\[Psi]p1"}]}], 
                RowBox[{"2", "\[Zeta]1"}]], "]"}]}]}], ")"}]}]}], 
         RowBox[{" ", 
          SuperscriptBox["\[Kappa]1", "2"], "   "}]]}], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Theta]v2", " ", "\[Lambda]v2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Tau]", " ", "\[Psi]p2"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"\[Psi]m2", "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Zeta]2"}], " ", "\[Tau]"}]], " ", 
                 "\[Psi]p2"}]}], 
               RowBox[{"2", "\[Zeta]2"}]], "]"}]}]}], ")"}]}]}], 
        RowBox[{" ", 
         SuperscriptBox["\[Kappa]2", "2"], "   "}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Theta]v3", " ", "\[Lambda]v3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Tau]", " ", "\[Psi]p3"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"\[Psi]m3", "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Zeta]3"}], " ", "\[Tau]"}]], " ", 
                 "\[Psi]p3"}]}], 
               RowBox[{"2", "\[Zeta]3"}]], "]"}]}]}], ")"}]}]}], 
        RowBox[{" ", 
         SuperscriptBox["\[Kappa]3", "2"], "   "}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"c", "+", 
          RowBox[{"A1", " ", "V1"}], "+", 
          RowBox[{"A2", " ", "V2"}], "+", 
          RowBox[{"A3", " ", "V3"}]}], "]"}], "<", 
        RowBox[{"-", "100"}]}], ",", "0", ",", "\[IndentingNewLine]", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"c", "+", 
         RowBox[{"A1", " ", "V1"}], "+", 
         RowBox[{"A2", " ", "V2"}], "+", 
         RowBox[{"A3", " ", "V3"}]}]]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3882235308457947`*^9, 3.3882235316738873`*^9}, {
   3.388224119779866*^9, 3.388224182105996*^9}, {3.388224223745289*^9, 
   3.388224253056851*^9}, {3.3882242955398664`*^9, 3.388224333491777*^9}, 
   3.3882243854901133`*^9, {3.3882246913684683`*^9, 3.3882248385410004`*^9}, {
   3.3882250453754497`*^9, 3.3882251865828285`*^9}, {3.4087946368399787`*^9, 
   3.4087947276854725`*^9}, {3.4088001495864463`*^9, 
   3.4088001626335716`*^9}, {3.4088002219784613`*^9, 
   3.4088002731513186`*^9}, {3.4088004085445433`*^9, 3.408800431341856*^9}, {
   3.4088005745008545`*^9, 3.4088006171579237`*^9}, {3.408856694856474*^9, 
   3.4088570681605167`*^9}, {3.4088571467557755`*^9, 
   3.4088572516327887`*^9}, {3.4096646670198555`*^9, 3.409664673300101*^9}, {
   3.4096648391173153`*^9, 3.4096648828759384`*^9}, {3.4096842845026073`*^9, 
   3.4096842943266077`*^9}, {3.4096845170066075`*^9, 
   3.4096845371586075`*^9}, {3.4096845672836075`*^9, 3.4096845728756075`*^9}, 
   3.4096846104706078`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiSuperHestonFondamentalTransformCC", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Rho]1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]v1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]v1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"V1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]v2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]v2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"V2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]v3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]v3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"V3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Z1", ",", "_Complex"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Z2", ",", "_Complex"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]2", ",", "_Real"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Zeta]1", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"\[Psi]p1", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], " ", ",", 
         RowBox[{"\[Psi]m1", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"A1", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"arg\[Zeta]1", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Zeta]2", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"\[Psi]p2", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], " ", ",", 
         RowBox[{"\[Psi]m2", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"A2", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"arg\[Zeta]2", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Zeta]3", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"\[Psi]p3", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], " ", ",", 
         RowBox[{"\[Psi]m3", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"A3", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"arg\[Zeta]3", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"c", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"arg\[Zeta]1", "=", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Lambda]v1", "+", 
             RowBox[{
             "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}],
             ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[Kappa]1", "2"], 
           RowBox[{"(", " ", 
            RowBox[{
             SuperscriptBox["Z1", "2"], "-", 
             RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Zeta]1", "=", 
         SqrtBox["arg\[Zeta]1"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]p1", " ", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]v1", "+", 
             RowBox[{
             "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}],
             ")"}]}], "+", "\[Zeta]1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]m1", " ", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Lambda]v1", "+", 
            RowBox[{
            "\[Rho]1", " ", "\[Kappa]1", "  ", "\[ImaginaryI]", " ", "Z1"}]}],
            ")"}], "+", "\[Zeta]1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"A1", "=", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", " ", 
              RowBox[{
               SuperscriptBox["Z1", "2"], "-", 
               RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
          RowBox[{"\[Psi]m1", "+", 
           RowBox[{"\[Psi]p1", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"arg\[Zeta]2", "=", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Lambda]v2", "+", 
             RowBox[{"\[Rho]2", " ", "\[Kappa]2", " ", "\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
                RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}], "2"], 
          "+", 
          RowBox[{
           SuperscriptBox["\[Kappa]2", "2"], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"Z1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
              SuperscriptBox["\[Alpha]2", "2"]}], "+", 
             RowBox[{
             "2", " ", "Z1", " ", "Z2", " ", "\[Alpha]2", " ", "\[Beta]2"}], 
             "+", 
             RowBox[{"Z2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
              SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Zeta]2", "=", 
         SqrtBox["arg\[Zeta]2"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]p2", " ", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]v2", "+", 
             RowBox[{
             "\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
                RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}]}], "+", 
          "\[Zeta]2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]m2", " ", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Lambda]v2", "+", 
            RowBox[{"\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
               RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}], "+", 
          "\[Zeta]2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"A2", "=", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"Z1", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
                SuperscriptBox["\[Alpha]2", "2"]}], "+", 
               RowBox[{
               "2", " ", "Z1", " ", "Z2", " ", "\[Alpha]2", " ", "\[Beta]2"}],
                "+", 
               RowBox[{"Z2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
                SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
          RowBox[{"\[Psi]m2", "+", 
           RowBox[{"\[Psi]p2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"arg\[Zeta]3", "=", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Lambda]v3", "+", 
             RowBox[{
             "\[Rho]3", " ", "\[Kappa]3", " ", "\[ImaginaryI]", " ", "Z2"}]}],
             ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[Kappa]3", "2"], 
           RowBox[{"(", " ", 
            RowBox[{
             SuperscriptBox["Z2", "2"], "-", 
             RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Zeta]3", "=", 
         SqrtBox["arg\[Zeta]3"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]p3", " ", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]v3", "+", 
             RowBox[{
             "\[Rho]3", " ", "\[Kappa]3", "  ", "\[ImaginaryI]", " ", 
              "Z2"}]}], ")"}]}], "+", "\[Zeta]3"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Psi]m3", " ", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Lambda]v3", "+", 
            RowBox[{
            "\[Rho]3", " ", "\[Kappa]3", "  ", "\[ImaginaryI]", " ", "Z2"}]}],
            ")"}], "+", "\[Zeta]3"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"A3", "=", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", " ", 
              RowBox[{
               SuperscriptBox["Z2", "2"], "-", 
               RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
          RowBox[{"\[Psi]m3", "+", 
           RowBox[{"\[Psi]p3", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{" ", 
             RowBox[{"\[Theta]v1", " ", "\[Lambda]v1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Tau]", " ", "\[Psi]p1"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Log", "[", 
                  FractionBox[
                   RowBox[{"\[Psi]m1", "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[Zeta]1"}], " ", "\[Tau]"}]], " ", 
                    "\[Psi]p1"}]}], 
                   RowBox[{"2", "\[Zeta]1"}]], "]"}]}]}], ")"}]}]}], 
            RowBox[{" ", 
             SuperscriptBox["\[Kappa]1", "2"], "   "}]]}], "-", 
          FractionBox[
           RowBox[{" ", 
            RowBox[{"\[Theta]v2", " ", "\[Lambda]v2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Tau]", " ", "\[Psi]p2"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"\[Psi]m2", "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[Zeta]2"}], " ", "\[Tau]"}]], " ", 
                    "\[Psi]p2"}]}], 
                  RowBox[{"2", "\[Zeta]2"}]], "]"}]}]}], ")"}]}]}], 
           RowBox[{" ", 
            SuperscriptBox["\[Kappa]2", "2"], "   "}]], "-", 
          FractionBox[
           RowBox[{" ", 
            RowBox[{"\[Theta]v3", " ", "\[Lambda]v3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Tau]", " ", "\[Psi]p3"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"\[Psi]m3", "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[Zeta]3"}], " ", "\[Tau]"}]], " ", 
                    "\[Psi]p3"}]}], 
                  RowBox[{"2", "\[Zeta]3"}]], "]"}]}]}], ")"}]}]}], 
           RowBox[{" ", 
            SuperscriptBox["\[Kappa]3", "2"], "   "}]]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"c", "+", 
             RowBox[{"A1", " ", "V1"}], "+", 
             RowBox[{"A2", " ", "V2"}], "+", 
             RowBox[{"A3", " ", "V3"}]}], "]"}], "<", 
           RowBox[{"-", "100"}]}], ",", "0", ",", "\[IndentingNewLine]", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"c", "+", 
            RowBox[{"A1", " ", "V1"}], "+", 
            RowBox[{"A2", " ", "V2"}], "+", 
            RowBox[{"A3", " ", "V3"}]}]]}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3882235308457947`*^9, 3.3882235316738873`*^9}, {
   3.388224119779866*^9, 3.388224182105996*^9}, {3.388224223745289*^9, 
   3.388224253056851*^9}, {3.3882242955398664`*^9, 3.388224333491777*^9}, 
   3.3882243854901133`*^9, {3.3882246913684683`*^9, 3.3882248385410004`*^9}, {
   3.3882250453754497`*^9, 3.3882251865828285`*^9}, {3.4087946368399787`*^9, 
   3.4087947276854725`*^9}, {3.4088001495864463`*^9, 
   3.4088001626335716`*^9}, {3.4088002219784613`*^9, 
   3.4088002731513186`*^9}, {3.4088004085445433`*^9, 3.408800431341856*^9}, {
   3.4088005745008545`*^9, 3.4088006171579237`*^9}, {3.408856694856474*^9, 
   3.4088570681605167`*^9}, {3.4088571467557755`*^9, 
   3.4088572516327887`*^9}, {3.4088632361539392`*^9, 
   3.4088635159561863`*^9}, {3.4088635626602087`*^9, 3.408863610989261*^9}, {
   3.409741916405429*^9, 3.409741958310429*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiSuperHestonFondamentalTransformReverseCC", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Rho]3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]v3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]v3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"V3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]v2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]v2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"V2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]v1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]v1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"V1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Z1", ",", "_Complex"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Z2", ",", "_Complex"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]2", ",", "_Real"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Zeta]1", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"\[Psi]p1", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], " ", ",", 
         RowBox[{"\[Psi]m1", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"A1", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"arg\[Zeta]1", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Zeta]2", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"\[Psi]p2", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], " ", ",", 
         RowBox[{"\[Psi]m2", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"A2", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"arg\[Zeta]2", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Zeta]3", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"\[Psi]p3", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], " ", ",", 
         RowBox[{"\[Psi]m3", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"A3", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"arg\[Zeta]3", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{"c", "=", 
          RowBox[{"0.0", "+", 
           RowBox[{"0.0", " ", "\[ImaginaryI]"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"arg\[Zeta]1", "=", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Lambda]v1", "+", 
             RowBox[{
             "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}],
             ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[Kappa]1", "2"], 
           RowBox[{"(", " ", 
            RowBox[{
             SuperscriptBox["Z1", "2"], "-", 
             RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Zeta]1", "=", 
         SqrtBox["arg\[Zeta]1"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]p1", " ", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]v1", "+", 
             RowBox[{
             "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}],
             ")"}]}], "+", "\[Zeta]1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]m1", " ", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Lambda]v1", "+", 
            RowBox[{
            "\[Rho]1", " ", "\[Kappa]1", "  ", "\[ImaginaryI]", " ", "Z1"}]}],
            ")"}], "+", "\[Zeta]1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"A1", "=", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", " ", 
              RowBox[{
               SuperscriptBox["Z1", "2"], "-", 
               RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
          RowBox[{"\[Psi]m1", "+", 
           RowBox[{"\[Psi]p1", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"arg\[Zeta]2", "=", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Lambda]v2", "+", 
             RowBox[{"\[Rho]2", " ", "\[Kappa]2", " ", "\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
                RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}], "2"], 
          "+", 
          RowBox[{
           SuperscriptBox["\[Kappa]2", "2"], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"Z1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
              SuperscriptBox["\[Alpha]2", "2"]}], "+", 
             RowBox[{
             "2", " ", "Z1", " ", "Z2", " ", "\[Alpha]2", " ", "\[Beta]2"}], 
             "+", 
             RowBox[{"Z2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
              SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Zeta]2", "=", 
         SqrtBox["arg\[Zeta]2"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]p2", " ", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]v2", "+", 
             RowBox[{
             "\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
                RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}]}], "+", 
          "\[Zeta]2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]m2", " ", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Lambda]v2", "+", 
            RowBox[{"\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
               RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}], "+", 
          "\[Zeta]2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"A2", "=", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"Z1", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
                SuperscriptBox["\[Alpha]2", "2"]}], "+", 
               RowBox[{
               "2", " ", "Z1", " ", "Z2", " ", "\[Alpha]2", " ", "\[Beta]2"}],
                "+", 
               RowBox[{"Z2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
                SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
          RowBox[{"\[Psi]m2", "+", 
           RowBox[{"\[Psi]p2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"arg\[Zeta]3", "=", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Lambda]v3", "+", 
             RowBox[{
             "\[Rho]3", " ", "\[Kappa]3", " ", "\[ImaginaryI]", " ", "Z2"}]}],
             ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[Kappa]3", "2"], 
           RowBox[{"(", " ", 
            RowBox[{
             SuperscriptBox["Z2", "2"], "-", 
             RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Zeta]3", "=", 
         SqrtBox["arg\[Zeta]3"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]p3", " ", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]v3", "+", 
             RowBox[{
             "\[Rho]3", " ", "\[Kappa]3", "  ", "\[ImaginaryI]", " ", 
              "Z2"}]}], ")"}]}], "+", "\[Zeta]3"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Psi]m3", " ", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Lambda]v3", "+", 
            RowBox[{
            "\[Rho]3", " ", "\[Kappa]3", "  ", "\[ImaginaryI]", " ", "Z2"}]}],
            ")"}], "+", "\[Zeta]3"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"A3", "=", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", " ", 
              RowBox[{
               SuperscriptBox["Z2", "2"], "-", 
               RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
          RowBox[{"\[Psi]m3", "+", 
           RowBox[{"\[Psi]p3", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{" ", 
             RowBox[{"\[Theta]v1", " ", "\[Lambda]v1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Tau]", " ", "\[Psi]p1"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Log", "[", 
                  FractionBox[
                   RowBox[{"\[Psi]m1", "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[Zeta]1"}], " ", "\[Tau]"}]], " ", 
                    "\[Psi]p1"}]}], 
                   RowBox[{"2", "\[Zeta]1"}]], "]"}]}]}], ")"}]}]}], 
            RowBox[{" ", 
             SuperscriptBox["\[Kappa]1", "2"], "   "}]]}], "-", 
          FractionBox[
           RowBox[{" ", 
            RowBox[{"\[Theta]v2", " ", "\[Lambda]v2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Tau]", " ", "\[Psi]p2"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"\[Psi]m2", "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[Zeta]2"}], " ", "\[Tau]"}]], " ", 
                    "\[Psi]p2"}]}], 
                  RowBox[{"2", "\[Zeta]2"}]], "]"}]}]}], ")"}]}]}], 
           RowBox[{" ", 
            SuperscriptBox["\[Kappa]2", "2"], "   "}]], "-", 
          FractionBox[
           RowBox[{" ", 
            RowBox[{"\[Theta]v3", " ", "\[Lambda]v3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Tau]", " ", "\[Psi]p3"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"\[Psi]m3", "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[Zeta]3"}], " ", "\[Tau]"}]], " ", 
                    "\[Psi]p3"}]}], 
                  RowBox[{"2", "\[Zeta]3"}]], "]"}]}]}], ")"}]}]}], 
           RowBox[{" ", 
            SuperscriptBox["\[Kappa]3", "2"], "   "}]]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"c", "+", 
             RowBox[{"A1", " ", "V1"}], "+", 
             RowBox[{"A2", " ", "V2"}], "+", 
             RowBox[{"A3", " ", "V3"}]}], "]"}], "<", 
           RowBox[{"-", "100"}]}], ",", "0", ",", "\[IndentingNewLine]", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"c", "+", 
            RowBox[{"A1", " ", "V1"}], "+", 
            RowBox[{"A2", " ", "V2"}], "+", 
            RowBox[{"A3", " ", "V3"}]}]]}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3882235308457947`*^9, 3.3882235316738873`*^9}, {
   3.388224119779866*^9, 3.388224182105996*^9}, {3.388224223745289*^9, 
   3.388224253056851*^9}, {3.3882242955398664`*^9, 3.388224333491777*^9}, 
   3.3882243854901133`*^9, {3.3882246913684683`*^9, 3.3882248385410004`*^9}, {
   3.3882250453754497`*^9, 3.3882251865828285`*^9}, {3.4087946368399787`*^9, 
   3.4087947276854725`*^9}, {3.4088001495864463`*^9, 
   3.4088001626335716`*^9}, {3.4088002219784613`*^9, 
   3.4088002731513186`*^9}, {3.4088004085445433`*^9, 3.408800431341856*^9}, {
   3.4088005745008545`*^9, 3.4088006171579237`*^9}, {3.408856694856474*^9, 
   3.4088570681605167`*^9}, {3.4088571467557755`*^9, 
   3.4088572516327887`*^9}, {3.4088632361539392`*^9, 
   3.4088635159561863`*^9}, {3.4088635626602087`*^9, 3.408863610989261*^9}, {
   3.4088636448649116`*^9, 3.408863684615675*^9}, {3.409741976908429*^9, 
   3.4097420176034293`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiSuperHestonFondamentalTransformReverse", "[", 
   RowBox[{
   "\[Rho]3_", ",", "\[Lambda]v3_", ",", "\[Theta]v3_", ",", "\[Kappa]3_", 
    ",", "V3_", ",", "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",",
     "\[Kappa]2_", ",", "V2_", ",", "\[Rho]1_", ",", "\[Lambda]v1_", ",", 
    "\[Theta]v1_", ",", "\[Kappa]1_", ",", "V1_", ",", "Z1_", ",", "Z2_", ",",
     "\[Beta]2_", ",", "\[Alpha]2_", ",", "\[Tau]_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Zeta]1", ",", "\[Psi]p1", " ", ",", "\[Psi]m1", ",", "A1", ",", 
      "arg\[Zeta]1", ",", "\[Zeta]2", ",", "\[Psi]p2", " ", ",", "\[Psi]m2", 
      ",", "A2", ",", "arg\[Zeta]2", ",", "\[Zeta]3", ",", "\[Psi]p3", " ", 
      ",", "\[Psi]m3", ",", "A3", ",", "arg\[Zeta]3", ",", "c"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"arg\[Zeta]1", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]v1", "+", 
          RowBox[{
          "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}], 
         ")"}], "2"], "+", 
       RowBox[{
        SuperscriptBox["\[Kappa]1", "2"], 
        RowBox[{"(", " ", 
         RowBox[{
          SuperscriptBox["Z1", "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Zeta]1", "=", 
      SqrtBox["arg\[Zeta]1"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p1", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v1", "+", 
          RowBox[{
          "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}], 
         ")"}]}], "+", "\[Zeta]1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m1", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v1", "+", 
         RowBox[{
         "\[Rho]1", " ", "\[Kappa]1", "  ", "\[ImaginaryI]", " ", "Z1"}]}], 
        ")"}], "+", "\[Zeta]1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A1", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            SuperscriptBox["Z1", "2"], "-", 
            RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m1", "+", 
        RowBox[{"\[Psi]p1", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"arg\[Zeta]2", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]v2", "+", 
          RowBox[{"\[Rho]2", " ", "\[Kappa]2", " ", "\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
             RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}], "2"], "+", 
       RowBox[{
        SuperscriptBox["\[Kappa]2", "2"], 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"Z1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
           SuperscriptBox["\[Alpha]2", "2"]}], "+", 
          RowBox[{
          "2", " ", "Z1", " ", "Z2", " ", "\[Alpha]2", " ", "\[Beta]2"}], "+",
           
          RowBox[{"Z2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
           SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Zeta]2", "=", 
      SqrtBox["arg\[Zeta]2"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p2", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v2", "+", 
          RowBox[{"\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
             RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}]}], "+", 
       "\[Zeta]2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m2", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v2", "+", 
         RowBox[{"\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
            RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}], "+", 
       "\[Zeta]2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A2", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"Z1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
             SuperscriptBox["\[Alpha]2", "2"]}], "+", 
            RowBox[{
            "2", " ", "Z1", " ", "Z2", " ", "\[Alpha]2", " ", "\[Beta]2"}], 
            "+", 
            RowBox[{"Z2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
             SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m2", "+", 
        RowBox[{"\[Psi]p2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"arg\[Zeta]3", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]v3", "+", 
          RowBox[{
          "\[Rho]3", " ", "\[Kappa]3", " ", "\[ImaginaryI]", " ", "Z2"}]}], 
         ")"}], "2"], "+", 
       RowBox[{
        SuperscriptBox["\[Kappa]3", "2"], 
        RowBox[{"(", " ", 
         RowBox[{
          SuperscriptBox["Z2", "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Zeta]3", "=", 
      SqrtBox["arg\[Zeta]3"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p3", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v3", "+", 
          RowBox[{
          "\[Rho]3", " ", "\[Kappa]3", "  ", "\[ImaginaryI]", " ", "Z2"}]}], 
         ")"}]}], "+", "\[Zeta]3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m3", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v3", "+", 
         RowBox[{
         "\[Rho]3", " ", "\[Kappa]3", "  ", "\[ImaginaryI]", " ", "Z2"}]}], 
        ")"}], "+", "\[Zeta]3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A3", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            SuperscriptBox["Z2", "2"], "-", 
            RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m3", "+", 
        RowBox[{"\[Psi]p3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[Theta]v1", " ", "\[Lambda]v1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Tau]", " ", "\[Psi]p1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               FractionBox[
                RowBox[{"\[Psi]m1", "+", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Zeta]1"}], " ", "\[Tau]"}]], " ", 
                  "\[Psi]p1"}]}], 
                RowBox[{"2", "\[Zeta]1"}]], "]"}]}]}], ")"}]}]}], 
         RowBox[{" ", 
          SuperscriptBox["\[Kappa]1", "2"], "   "}]]}], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Theta]v2", " ", "\[Lambda]v2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Tau]", " ", "\[Psi]p2"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"\[Psi]m2", "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Zeta]2"}], " ", "\[Tau]"}]], " ", 
                 "\[Psi]p2"}]}], 
               RowBox[{"2", "\[Zeta]2"}]], "]"}]}]}], ")"}]}]}], 
        RowBox[{" ", 
         SuperscriptBox["\[Kappa]2", "2"], "   "}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Theta]v3", " ", "\[Lambda]v3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Tau]", " ", "\[Psi]p3"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"\[Psi]m3", "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Zeta]3"}], " ", "\[Tau]"}]], " ", 
                 "\[Psi]p3"}]}], 
               RowBox[{"2", "\[Zeta]3"}]], "]"}]}]}], ")"}]}]}], 
        RowBox[{" ", 
         SuperscriptBox["\[Kappa]3", "2"], "   "}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"c", "+", 
          RowBox[{"A1", " ", "V1"}], "+", 
          RowBox[{"A2", " ", "V2"}], "+", 
          RowBox[{"A3", " ", "V3"}]}], "]"}], "<", 
        RowBox[{"-", "100"}]}], ",", "0", ",", "\[IndentingNewLine]", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"c", "+", 
         RowBox[{"A1", " ", "V1"}], "+", 
         RowBox[{"A2", " ", "V2"}], "+", 
         RowBox[{"A3", " ", "V3"}]}]]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3882235308457947`*^9, 3.3882235316738873`*^9}, {
   3.388224119779866*^9, 3.388224182105996*^9}, {3.388224223745289*^9, 
   3.388224253056851*^9}, {3.3882242955398664`*^9, 3.388224333491777*^9}, 
   3.3882243854901133`*^9, {3.3882246913684683`*^9, 3.3882248385410004`*^9}, {
   3.3882250453754497`*^9, 3.3882251865828285`*^9}, {3.4087946368399787`*^9, 
   3.4087947276854725`*^9}, {3.4088001495864463`*^9, 
   3.4088001626335716`*^9}, {3.4088002219784613`*^9, 
   3.4088002731513186`*^9}, {3.4088004085445433`*^9, 3.408800431341856*^9}, {
   3.4088005745008545`*^9, 3.4088006171579237`*^9}, {3.408856694856474*^9, 
   3.4088570681605167`*^9}, {3.4088571467557755`*^9, 
   3.4088572516327887`*^9}, {3.408858918664795*^9, 3.4088589513216724`*^9}, {
   3.409742047787429*^9, 3.4097420735694294`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
     "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
     "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
     "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "Z1", ",", "Z2", ",", 
     "\[Tau]"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]1", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v1", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v1", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]1", "=", "0.2"}], ";", 
    RowBox[{"V1", "=", "0.01"}], ";", 
    RowBox[{"\[Rho]2", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v2", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v2", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]2", "=", "0.2"}], ";", 
    RowBox[{"V2", "=", "0.01"}], ";", 
    RowBox[{"\[Rho]3", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v3", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v3", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]3", "=", "0.2"}], ";", 
    RowBox[{"V3", "=", "0.01"}], ";", 
    RowBox[{"\[Tau]", "=", "5"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Z1", "=", "0.1"}], ";", 
    RowBox[{"Z2", "=", "0.1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"BiSuperHestonFondamentalTransform", "[", 
     RowBox[{
     "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
      "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
      "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
      "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "Z1", ",", "Z2", ",", 
      "\[Tau]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4088573008524837`*^9, 3.408857524653656*^9}, {
  3.408857593264348*^9, 3.408857593936236*^9}, {3.4088576304056864`*^9, 
  3.4088577180479937`*^9}, {3.4088579406460176`*^9, 3.4088579635995836`*^9}, {
  3.4088579984596276`*^9, 3.4088580288039603`*^9}}],

Cell[BoxData[
 RowBox[{"0.9958202788357894`", "\[InvisibleSpace]", "+", 
  RowBox[{"0.02161544689217244`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.408858030975877*^9, 3.4088652997560596`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
     "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
     "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
     "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "Z1", ",", "Z2", ",", 
     "\[Tau]"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]1", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v1", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v1", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]1", "=", "0.2"}], ";", 
    RowBox[{"V1", "=", "0.01"}], ";", 
    RowBox[{"\[Rho]2", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v2", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v2", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]2", "=", "0.2"}], ";", 
    RowBox[{"V2", "=", "0.01"}], ";", 
    RowBox[{"\[Rho]3", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v3", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v3", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]3", "=", "0.2"}], ";", 
    RowBox[{"V3", "=", "0.01"}], ";", 
    RowBox[{"\[Tau]", "=", "10"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{"BiSuperHestonFondamentalTransform", "[", 
        RowBox[{
        "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
         ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
         ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",",
          "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "Z1", ",", "Z2", 
         ",", "\[Tau]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Z1", ",", 
        RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Z2", ",", 
        RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4088573008524837`*^9, 3.408857524653656*^9}, {
  3.408857593264348*^9, 3.408857593936236*^9}, {3.4088576304056864`*^9, 
  3.4088577180479937`*^9}, {3.4088579406460176`*^9, 3.4088579635995836`*^9}, {
  3.4088580380385127`*^9, 3.4088580947583513`*^9}, {3.4088581676191254`*^9, 
  3.408858175041143*^9}, {3.408858209635557*^9, 3.4088582112605886`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
3vqdymurrF1o9wv+2opNtYKNC+2+wG9edGzDHx0XmP7wFeevzlOxyTzTGR6f
2HNJg+52X2x96oOdPSu1++txzmP8purrC/zV5lXTGf7G5BrbZ9zxvukM712x
39jrz/7MdIbPnjBswoKnvjGd4ZdWbF20TPdvTWf4qaml9sQWLjSd4Y9q/o7O
tn4Xe6R2su9K0xn+v3s6Lf7i8VWmM7zN5A3dx927ynSGfzi56oJ7S6w0nW3d
rU2rBrEfl5jO8LwFi81oO/J70xl+edEGQ28sN9t0Zl4y+eTY9uXKvWY6w/O1
uLbOmE+Hms7wjypc2qv6lHGmM/z4nb/93qDSNNMZ/vWDjWdUeD5hOts65P6m
a5uct9h0hrdpGRRpcnyV6Qx/QPUodIZX/3e+1vXlTaYzvMyJ0l2KbNlkOsML
de18pOCmjaYz/Js7OxZv3mat6Qx/eOfRkl0WLjed4XMvvbXv3l0ZneE5d7bd
dOHOmaYz4/LSUa3+N+WWoaazrftUr1a7RqnPTWf4e5V7vPvwkWmmM/zQXVt+
uuPpeaYz/JX7Ui/8nHep6WzrU3OPXlh1zxrTGV5i1YAbx2/YbDrD56i+is7w
y55NbJ65K2k6w2tn/3nPuJwdpjO8Qc3WJRJzt5rO8MoFT3U+WX296Qwffirv
xOv+yOhs+jRu3uSh4/NNZ/gN97027Mv7M/GZ/OW5lue8uK3EZ6YzfFLPD/v+
XHqa6Qwv1G3A7gE3zzOd7fhib96+8fWlprOttyxOFbtsxlrTGV5rz3Ut+q7/
xXSGd/ukwrxUv52mJ/z2fMvL9Tux1/SE9507rOzZp3aZnrZuOemB7k12bTM9
4cNfurz86+vWmZ7wvefE1oRNl5me8HF39lnd88ZMHIavnnq8wcRaU01P5jUF
35t99SVPTzE94fmOlZo3MPat6Qm/aXu+WWOb/2h6wuf/cPtZ68qsMT3hNx9s
8G7X5ltMT/iR3vVa5bsuoxu8fIcCsT+e3Ge6wY/qeHSDN3LOH7f1pkVqD7rB
G6v96AYvqutFN3hZ6YNuzPtWSE90s/UK6Y9utu6j+4Vu8CG6v+gG/1L9gefX
jtc6FLrBezv9MGU8UL9FN/g5Tj+P2/rRLD0X6AYvpecI3WzdSs8dusG76DlF
N+YRNfRcoxt8oOIAusHfV9xAN/hFijPoBi/WfdR3zXtsNd3MN+HFPXh5xUl0
gx9VXEU3eF8nDsdtPeiE4ja6wUcqzqMb/GONC+hm8yyNI+hm6yYad9DN1mE0
TqEb/CGNa+hm6+oaB9ENXtIZN1PGK2mcJe7B62tcRmd4M28ch7fXuI/O8Gzl
CegMn+3kFXFbD4rflc5D0Bk+SXkLOsPLKM9BZ/gC5UXoTH2UPAqd4eco70Jn
+OPK09AZPlp5HTrD2zt5YMp4G+WN6Aw/O086z0RneCsvL4XnnZbOY9EZXl15
LzqbP8jJk+O2HtRfeTU6w99XHo7O8EeVt6MzfJHyfHSm3pxX8wJ0hq/WPAKd
4Q0170Bn+Juap6Az/AVnXpMy3kPzIHSG79K8CZ3hL3vzLHhlzcvQGX6T5nHo
bOsYzrwvnlkP6pqeJ6Iz/GnNK9EZXvSC9DwUnc0HqnkrOlO/r6l5LjrDC2i+
jM7wvJp3o7Pxven5OzrDjzt1gJTxU6onoDO8peoS6Awf6dUx4FVVJ0Fn+F+q
t6AzvIpTt4nbelCeKun6DzrD/1cvXUdCZ3gZ1aPQGV5cdS10pm45SHUGr94V
Uq/w6lrhatU9vPpVSP3Eq1OFf6sO49Wjwleceo7VncI6Xr0I/syZ60thPadO
ZfWisK7qXV5dKKRu5tV/wn2qv3l1nnCE6nhePSdMqB6InnyWWFB3QtVqmTrh
BduL9mu3uUSi6uLFlw/c9YjVA++4uthNm2uWTAx+vfyoZ2uFpif1+A07LquW
96EXM3F4YbEvs/8omZj3cem9TZv3MT03qF699r78dxX4cKDpmbd58fKDxmYl
+s7+5mifVcNNzxqqL3Xx9PxD7f+pZP/63f+0+kNwvto/b3CvnCdq2zw6uF3t
zx7R9NX6mflg2EXtL7Zv7cGjhzPjHe3vETx9elDlTF6xXu2fdeuuT4q8+I3F
2yOtzr2zcuN/56PN/pmfb1GmrsXnnK/7V6o/6P5MvWVYucqbs4smWp1OrLnn
2i6mZ4Fq5d/Lblcs0XZvlZ6Plu5velZ/usg/jUoWT6z77uO+PzUdYXq2+KrI
tOx2xRM5xf6v5uxhY03P9/4u0rby4uKJs0dfVKnA5V+YnpHqch95ceCw2v9F
j09bfXvFfNPzbrX/t+M1+64eON/0nKT2/3X9yKw37pxveuZX+w8/dVbNXk9m
8jTaX6fLmPrPXh2Znv9T+2/QOjtxgPY3njegXd06mflp/rFZ+xsNOicxu9pn
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
Hc+6cz/n+FSwVnnpu+d+tm7d/l2mD59uHpiMGhVO588Xz2my6vLP93rtyfil
OT7917VzyzjryEnzM07s2zSq9+x+7z7GYn+79zHIr/t4jfe7Q5WnDXevK1I+
H4xQPg//Qnlsf+968RfTHo5n/RSfgPu764Mp3vVqXhY0cuZlyWiX8sZPdB/h
+Fef1/2iX+1Xf6mvfkL/4TOueqzX38LjXj+krjsy+fyFJx8xbv7Mj8Vd9df+
5zlCh7vkoyAO9NE8MTjR+8HJNq9MBaU0775mWd/B9+fdapz+mUoeWjY2f2Z+
EUjvFfL9enl1tEqceKj5bMB8Ft5e+Xbotsd0Pub+ru7XiaCA6g/wmPLSm932
27p2Pc+H01S/fyj8vnbXgltMt2bKe2su7vPw1IszHN/vuMcfL9S7vc1P7fzT
/ze9VSyv+TEi8tWWHzzeb1Blm6dFK5X3HrniviNNH99uflDuM75f7rf5JnTf
8QXCU1q3wscGf13rhva+BtZptW6LTwi+UOvmxB14e/kQ6GfwIvJ10M/gS+Tr
QBd4dfkWWD+G/6N1edY74VdrHZn1OfhZWvdkPQleR+t06Ml4foPWodATvljr
JugJnyufKnrCb8VXKT1tfqb1cfS09Vj5E9ATjs8KPeHnyD+DnvCx8sOgJ3yA
/B7oab4G+RnQE55f6+/oCV+l9WL0hBfU+ibxCP6A1uPsfSDKj/LU+//95FnG
P9G6lb0nRLy21mftPSHifbU+bu8JER8lf4K9J0QcH6C9J0Qc3xo6w/Ff2XtC
xHfKX2R+F/Eh8s/Ye0LEH5E/xHwA4vgZ7D0h4qy/23tCxN314izjrG+6++zi
iT/kw0dn+CatG7r77+KJY/JRu/vv4onX8Sc4++/iib/kU3X338UT+Crd/Xfx
xBfyO6EzHD+bu/8unsCv5e6/iyfwI7n77+KJ6fLbuPvv4olP5Q9x99/FE33l
Z3D338UTZ2v9HZ3h9bRe7MaNnOhcZx08y3gdrdu6cSMnwpfuxo2caK78IW7c
yInw/bpxI8d8qm7cyDFfpRs3cqJb5N9z40ZOhP/NjRs5Ef4uN27kRPiX3LiR
E70gv40bN/7l8oe4cSMn+svxM2QZZ/3d7c+paL+z7yPLeAOtm7v9ORXh83f7
cyrCl+7251Q0Sf4otz+nzPfr9udUVFN+P7c/pyL8lm5/Tpkf1e3PqYh8w+3P
qQg/mNufUxH+Jbc/p6JX5Ldx+3Mqcv0hWcZ7yc/g6pyMLnJ8IFnG2V/j6pyM
2Dfh6pyM8Pm7OiejZ+RPc3VORiXlD3R1Tprv19U5GTHvcHVORuSxrs7J6Cr5
rl2dk9GN8te5Oicj/GCuzskoKf+Sq3MyaunsA8oyjj/Efb9NLMb76zz9g2bu
eez4tt57XaxepfO778mJxdi34t2vgH0r7vtzYjH2X3j3McjR/gv3vTqxGO/R
8u5vcJ30dN+3E4vhh/fue4Af3n0PTyzW74zv4YnFmL+47+H5V0/vvTGcH7+u
+36eWGye2uP1E/Opuu/ticXwW3r9J3hR/dl9n08shm/Q61fBOfINuu/5icXw
v3n9Laii58t9/08shn/D64fBte7za8e7fiTrnwHPtRdvg0Nu3DCOD8qLt0EH
xR8v3gbs0/HibcC+Ei9+Bn+eOX6av9qLn+Yf9uJnMEPx3IufQQ3Ffy9+Brdp
vPDiZ3DSHXeM49fy8oHggDuuGT+lcc3LB4I2Gh+9fCB4RuOplw8EhTX+evlA
UMTxY9u4HzQ+87gf5FOe4I375rv2xv0An7A37gcLlLd4436QUJ7jjfvBVW6+
ZByfm5fHhn/vcfIx4+RjXh4bsp/Oy2PDUez/cvPYcKryRi+PDdlf4+Wx4TDl
pW6/jYeLzpzHhtnKe708NsTH7uWx4VnyXXt5bDhAebiXx4Zx+Vq9PDbMW8XJ
/40PU/7vzcvCf7Y48wvjzC+8eVnI/kRvXhayn86bl4XMg7x5Wch+JW9eFu7T
PAud4Y3PPC8LS2oe583LQvYFePOy8HPNE715mfmuvXmZ+YS9eVn4gDufNf6x
5rNenSGMu/Nl4000X/bqDCH7Pb06Q5gPn7xbZwjZT+fVGUL2f3l1hnC86gZu
3CgSFjlznSH8RnUJr84Qfqg6hldnCEuq7uHVGczH7tUZwkLyXXt1hrCoW58x
Pk/1Ga8+Fl6nOo9XBwvZJ+vVwWw/glcHC6k7eXWwkH1zXh0sZP8XesJLnrkO
FrJ/x6uDhRtUZ/PqYGGkupxXBwvXqY7n1cHCxar7eXUw81ejJ3yU6of4Wamb
TdW6GP5LqxNqXRK/oNX9tC6Mvw3eRevy+LHgv8jnsEY+Hjte/hB8IfDe8ofg
h4DPlC+C9X6r+2ndn/VpOL5H1lPNL6B1VdbP4KW17oPflHrXIflO8UfC39S6
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
wVeOzvtJp8rLvffDxBMLvPfmwWk/7YTP0P1y67TxRAP1Z7f/5ESpcgOeaP/a
Cq//5ES9ql3y43d713n9Jye6TT4B977nRPQf977nRO7zxfWmogvmzzvw+mvb
vHamos16Tv06s78/mjjm74+G/3rl/dPWnJXZPwjvX37utPNOZPZHw+8/f+Oa
qf3WefcxGeQ89OXcTj22efcxGbzd9qNj+1P/2S8TdHH3E1m9pZyul+cO3lM6
0z/hq9Uf3PueDFqrn7v3PRnwvHu6BcRJV59U8Ju3Pxreq2yHc8t2X+7pkwqe
m1HoySZ513v6pIKru25fXr+ur08qGK9xze3PqSDlvTcSfsjph+iQCnheXB1S
wRjFAVeHVLBC8dDrV0EZjSNuHP7vfmd4723Dew3ut9aLwznB/R1mrVxSdJP/
XAS3ee+9hD+qOOC9pyJorPjmPUfBcsV57zkKtjjj43/ryV78CV9T+734E7bT
ffTiT/iA+r8Xf8KFZ44/YRknblv8CYdr/PLiT1hH474Xz8PeTn+zeB4O1HPq
xfPwNu99oZbPazz14nO41MlD/lt/9sbNMKm44Y2bYQHvfaSWDyv/8fKQsJiT
h2TqV0u8OMZzWV3n4Xj4drWHfgxPuu/fsPF0kK6X4+DjnHwjac+BGw9TxokD
9D+/fuXG4XjiSievK2J8iPqDG2fiidLqP7QHThx242c84cUf472dfv7f+pWr
c060Qc8R7YTz3HnxIWrs5CEWH6KmzvietOfPHS8y9SueR1e3VFRaccmLz9Eq
xTEvPkdu/mPxObpTcdKLzza+e/E22t+i6578927z4230vHT24m30mtMfMnUt
7z0wVneac8ZxJxkxTnnjckT+5o3LEXmRNy5bfuKNy5ZXeONvxHjtjb/R3979
gj+ofuiNv9F7el688Tci30AH4kGRM77PORYrcMb3Ocdit5zxfc6x2PdnfJ9z
LHbrGd/nHIulzvg+51is7Bnf5xyLHTnj+5z98/M+51jMHxfgDc/4PudYrPAZ
3+cci5X23udMuzYpD3TjQyoo7+aNNl6TZ3rPddDemdfYcxr0cPuPcfIQL76F
Nyl/9uJb6M2PjDdTfu7Ft5D+7MW30Ht+jZM/eHE+dOcdFufDZZqneO+1C5nX
0K/gj3nthLvPo40L4adO3mXjQtjQjZM2/pIneONdyHzQvV9FQuaP3nw5XKrr
cuNwkZD5jjdfDl84430vEj6u+OONp+EyxVtvXhwudebdNi8Oh7rjWsZnqHHW
q5OEy3W9Xp0k3KX7yHXB3f5mdZLwF2c+ZXWScIv3vMC/UxzmeuGlnHHH6iHh
RjfPtHpXDY3vXj0kXOvmG8ZLenkRcZL9ON68IPLjFdyfZ/H//PcJ8Peu3nsh
+Pu57vE2T+H89E/aX9tZX7b4EPnzHfSrJu72n3/n195+cP7+e1aTq96/c1vw
/wAkK2BY
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Fc/Dfsu18NXwNRXr4XllXJfulP78qeJ8K99BGkG1xqRwjpDePiac01UHTQ1r
ANVuL4Z11y3wCfBxFdd3qgXPU7/icXaOVy2pmvJO+l+q2oOSL/pHso+0upyD
fyX7DqolTw5rAHkSR4W1hGqil8Ja8dbkum2J4mHV/qG8o9sUN8O6QnH1hMIx
eAH9L8H14e3gk+ELNc5lrG1axufjC/tjN8PHwWdpPOFT4Ys1zlX7hNfBj8Gn
wBfpXWhc4Qv0vuDp8By9d7gz99EUXsp93RX22ebRd2fYZ7sCviM8PpfDC8Ke
7aXwzWHPVnXNg2H/7Wr4mrDHq9rkobCfdg18S9j/kQ/0ctjvku91Y9jvVd10
bfj+9RzrZ/tcqvHvDvs20vX3h33Rq+h/AH4AvjLZD9Ccf4/nuon+myqu46aE
taJqsUvhSyuuoS4Je4Oqraphn0e18N+FPT3V5jJn5PmoZl8n7Leoll877G+o
vv6rsNek2nxNYT9ZdfQfhb1c1dF1wv6M/AHVQqqJVI9H2A9RPV6EPR/5AH8W
9qJV168b9nzkVzQLe+8rlU/Cnvx3yjNhH36FniPsXX+jew97NV8rboW1rurc
kWGNPbOMKw2qjpuNw/72t7R1w76NfIxGYZ9nOW2DsB8lD6Q5x7bw98pj4b2D
VcqHZaxTrmkf3hf4kXY9jo4VeykblvlIebB22LOSl1KzzI/Kv2uFvSl5O+eF
15HW0++FvX15HapLVZssp69HWOv+Gq5vlSN+LKzdpW3kKfcO6wflBXlCij8P
V637pf9Xac6FvV/V4K+H68G74XPDMUSewOyw/yyP6Ex4dsWeQI3stS2vacfs
ekP5YnvOOYBzflO8D+9f/BLOVRp77QdoX+Dbiv2WseEaSv5Au/BezA+0tcKe
njyuXcL6WXmqT3g/YjVt/7De/j28J/IF3IW2ezivKQd1Cu/L/ES7ZXi/5me9
E47dFLvC+xqqKaTT9+LzeHgN7fbZdZ200wg+T6P/D9pvk/c/xCk71qxPX+Ns
77s9HNnxqyF8W9ijbgnPD/uTzeHHwp55O/jRMla0hV8J72sobhTZvvN69H+e
vC+le/46eX9Iz3572PdupTFI3t/SmH+VvC+lsfo0eR9L4/BZ8l6XxmFZ8h6Y
5tLy5D0tvTv58NIm0kStsn0K6Tf5C8qnn/D5+rC/2oz+LbNre+X6LbLrf2kJ
7XMonteBO2XX0tIS15WxTjGwZbYnIm3ZNtujkSZsne2bSNc1z/ZipC2bZfsv
0pxtsn0T6cbNsj0aacKm2f6LNO2z4T0FvZdnwhpP+frj5D0wrdmPkj1fzb33
kr1mxYfvk32zf+BVyV6WjO2Vyd7a34pz2TpVunR1sr+6Fu19fPccp7eBf0n2
FWvQ3hveH2kN/zvZQ8vSAsl+Y9Aele15Sascnb2/Ja3yc7IXl6QNsvfDpAHe
Sfa4Fbt+TfZOa+o9Z/sm0mb3hLWK8stvyXsJtWj/Sd5jWId2cbLnrnj7QbLH
rXi7NNkHV9y7geN+fqcFfbeGvXTlu0XJvrxi8rvJvrxi8pJkf1/x88Nkf1+x
/Zvk/UWtNW0oaN9lXeWp7H2XBvDfyXsna9P+nrx3Upt2TfL+jebVzHCuV/+K
ZI9UHtR3yd7pX/CR2Xtj0oEds30x6eT2pfcnLXpheE9qY3hu2LfXur4YvhFu
As8J7/toXZ8djqUbwBeE95s20jsqrGd+lSYK53rFc+05fl7x3qjqWcXgM5T/
w5phE8XSZE2o2kH1ZrPyd+aF97yaJtfFqn/ll1wV3iPbDL4yvEe2KTwLvqTi
uCGPRflhVvYehOLkO4VrDWm/jwv7Hqo75PEoDioeysORNtX9yB+RdyufRz5F
5+w6RPXIu+U5S2gvCu9DNU7We/JvVMtpL1V1ufZCFVMUW/5XQymWnJZdX6nO
Un30bGGPS16XPBP5JPJu5Pkod7xWONbrWeQDnxHWh5ozp4c1oebSkeG9M62X
08KaU/P81LBW1LxaK1uP6r1Pp39Wxet3Wni/T+toQnjPUGu/ZrbW1LseF/Y0
FB9qZetRPXud7D1CvdPNs/1o1U0dsn1q1UF1s/eH9E5PKfO+9PZG2fuaygu1
s7Wv5l7O1seab/WyvTy96/rZ/p3mwJjwnqbi0rHhvUvFHPk48nPk38iH0R6o
agB5Ow3LftVi8nPkvxwd3gNVXFJdJt1xOtc5JLx3qTU1ObynqXi1Xva+rHLc
htn7cIp7jbL325TXNsjek1Pca5i9p6uctU72fq3yyIyw5ldcapC9r6k4s272
nrHy5rHZ/z9ANUjfbL9Vvsdx2fvuqt0Oz/a1VX8dlu1TS5+PyfbTpfknZfva
qhNPyp5z8vH6ZXuv8geOz97jV913aLYvrxrh4Ow9ddUIE8O1ktZKu2xPR96L
PD3NGc2dCdn+u2qH6dn/V0D147Ts/0+gGnPTbM9F3suUbI9eteTkbC9ete34
bH9fdcHEbL9e9e/Y7L0B1TXjsvcDVC+0yPZrtD9yQvb/pZDG+w/vUDfV
         "]], Polygon3DBox[CompressedData["
1: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
         "]], Polygon3DBox[CompressedData["
1:eJwt13e8FNUVAOD39r0FRBEERJQmojSpIhaKEEogUqWpVEWlFwURqRZ6U+lF
eleqAhaqCpYkijGiaBTRxBpsFAsKmO9k9o/zm3u+e2Znd+bOvXfL9hzcblAq
KyvrbyItOuRmZV2enZV1Ch4R9eV3O74nntMemJOVNUj00r6ODVTbynnXsMGs
OXuI9WBNo5Y1Y2NZd9aEDWBN2WjWlf2JDWR/ZmNYN9aY9WbXs0GsNbuW3S3u
Eg/pu1Pfd4695PeIh7V7su8d7xWttSc49x7nttDfnzVho1gX1oj1ZfXZ/Wyo
+ELeTzRkw+Wd1NVT14fdwAazNqw2G8LaskmsN2vFbhdDtW/nB8UONb+yxtr9
1bXQ11B+P2/PprL+rC2bEt+bPcXWi7Py+0QbNlHeS11LdcNYBzaNDWDt4pqs
HZvC+rFbWK64UPt1/obYrqakGKe9Rd08fXPVpFlv1tYAGBrfLe6vGKP/GP9W
7FQzS8yIz3LuZn1L1ZzPYgAtzE7q47wh4j4xPvO5p3KTz4zPnqDdh/3kWEyM
0l7n3BnOnaH/YjaSrWXT2XRWlI1ga9g0No3NZNPZ6+w1UdB3L8EeZZvlc9XN
UfdA3C8xUV9ffT87XhTfR3u5ugnqJugvyIawpWwcG8ceFMPFpBgT+n5xzJdp
t3e9EfpGigbsgHOOOPeovoby88QA7flslL4x6gqxoWwZG8/Gs8msP1vFJrPR
bBp7kD3DFrDJLH+8e2wBG83GstnsMfZXtoUtY4XZMLaCTWQTWRH2AFvJJrFJ
7DE2nu1ja9l89jibwF5i69g8VppNjrHDFrMnWSk2iW1jT7JF7HI2NeYItpQt
YZexR9gmNofNZmXYlHgv2BK2mN0bc4cYF++yvpOOeTLj5JZ08vziOfaJOUE8
ou8ufT845s0813bp5FnFM5vOxrAXXON5kUdfWfYE2y1f5bor1V3BZrI9bDVb
xcrFOGd72Rq2ml3JFrADbCPbwKay4Wwrm8+m5CRzTMw1rfiX4sV4X8TYaKtb
pu9xNc+wV9iH8W6w/uwJNlH+crz7bAH7TdzCRrLOrI38UnUPs41sNpvFDosc
VovlZ1nyBeqeZO+z98TF7kEFtoK9Jd+ubJu6f4oz8quE7qzf9JfXWO74JtvG
nlVTia1nh9hutotVZOvYu2wX28kqs63sY7afvcLmsbnsH/E82Dq2he1hv7JP
2FvsafYcO84+iHmLvSN+l5fL/v/Pyjod84W6bTHPx29jB3Q8xXawH9lh9hpb
z7bHOGHvs1fZBvZi3Hd2UpR0Xz6IuZLVlp+vLlt+p7qqrGOsAaKSujVsM/tG
/ra6fepax7ql3Zsd19cm7rtYGs+X7dO3Rd0itoR9wPayzexWVpDVZNeIMq7x
YczH7Hr5BepS8rXqno21jh1i+9khcS6+V4xvdkb/v1gexxtZgRgG8vfEH/Kr
RV52NsZE3EjHqiyf5rlUssYvjvc57pX2Da75rrqz8grZyd7g91SyXtaL+lhX
RU0dm9numB/lR9S96bxNbFfMt+xj9nfWKeZP1iB+K8vDurPyrBurz65kXViZ
VHLf4/4flncTZdlt8uvVlVLXNfYq7FZ2HSvJOrJUKrmfcV9flt8uLmGt5dXU
XayuJ6vOerGm7OrMM6+WSn5X/L6j8h6iAusuv0ldudiDsJqsD2vGqrLOrHg8
f1adFY19CquRSsZGjJEq7LZYf1jzuK+sQGYcFGLNok68lZvMYaNTyT4g9gO3
uc91cpP5IuaN/eLZ2FvlJt8/fsdX8bkxbsW+eM9j7Y59k3yj2BnrrrqPYr/n
ulvZXnY6fis7mJk3FqWSNTXW1rtddwV7KpXMIzGfDEwn79EL7PPYM4nh6WRN
npZK5tyYe7uxX3xmI9ZPfrNrNJAXz03WiFgrTsTcHc8nN1kPYl34gbXITfZD
g1PJmIyx2dHnLWSL2WH5HvWbcpL9aOxLH9V3j74TjneIito91DVQd5X+JWwV
+4S9yrazb0RJ1iTmQHaZ/L+xxrGmrDwrEfNr5rNbp5O1Ktasr0UJ1ljdleou
lX8V6x5rFHMWKy6f79x57J24L2x9zDeZta5NOtkrxZ7pi9j/sHrqSqkrLP9M
XMiqsUvYBfIvRTF2EyvNisg/ib0Yq8iKsvPkn4oCrAorxs6XHxUXsMqxJrD8
8qt8l4XsVbaJbWRz2Rz2NnuOrWGj4z1kc9gDrGu8R/HeiDHxrug7FnsXcav2
Y+oGq+uo/w7RQ4yNZxPj0vG0/GbtIeraq2sun8Nns4NsB1sbayqrzQawlqxW
TjKmY2w/yl6K+xN7HNFRe3qMUX3tY57L7BVauM995f3EcNaJzVA3SEkHNop1
ZbPZMNaFjWCd2czszJ6ejWRd2Cx2P+vMFrOVqWT/F/vAHTHn5iT/RW5OJ3uW
2Lt8LoqyOrHuqLtI/l3sL1hLVoWVlX8k8rK62cn+Pfbxx0UV1oHVZpUz82Tp
VDJnxNxRzrV+5Fez9vJr1VWSL1e3ln3G3mAvsGVsDfs03nP2PFvKVrOj7LV4
PzPzaTarzmrEuHSNVTGfsK9irlK3R91qtol9zQ6yvTnJvPF0KpkfYp64zLkr
2YbYH8nfVLc7xgArJv8uxqDYJj+Xk/y/+0s6+W8X//F+iP1FzBdqazm3YqxP
Ocl4ap5O/hfG/8MjIn/sY9QVUZdP/q0oF+Mg1kJ2ufyYuCKeEavMysj/I4rE
+sdKsELyf4vC7Lr4Dayg/Pt4b1grVpVdEfuUWM/YZNaXdZefirHKurJ6rKb8
J1GH9WSN2Q3yn0Vddhdrwm6Un8lJ3qlm6eTdiXfopKjFuqirq66G/IS4hnVm
dVh1+f8ABMvq/w==
         "]], 
        Polygon3DBox[{{874, 873, 1207, 727, 728, 1208}, {1074, 713, 371, 372, 
         714, 1075}}]}]}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{268, 1, 264, 231, 760, 16, 774, 31, 789, 46, 804, 61, 819, 
       76, 834, 91, 849, 106, 865, 866, 121, 892, 136, 905, 151, 919, 166, 
       934, 181, 949, 196, 1089, 250, 270, 211, 266, 258, 492, 212, 493, 213, 
       494, 214, 495, 215, 496, 216, 497, 217, 498, 218, 499, 500, 219, 501, 
       220, 502, 221, 503, 222, 504, 223, 505, 224, 738, 252, 271, 225, 267, 
       259, 976, 210, 962, 195, 947, 180, 932, 165, 917, 150, 903, 135, 890, 
       889, 120, 862, 105, 847, 90, 832, 75, 817, 60, 802, 45, 787, 30, 1073, 
       233, 269, 15, 265, 254, 317, 14, 315, 13, 313, 12, 311, 11, 309, 10, 
       307, 9, 304, 303, 8, 301, 7, 299, 6, 297, 5, 295, 4, 293, 3, 291, 2, 
       739, 253, 268}]}, {
      Line3DBox[{760, 1072, 506, 759, 1211, 977, 761, 1212, 978, 762, 1213, 
       979, 763, 1214, 980, 764, 1215, 981, 765, 1216, 982, 766, 1217, 1109, 
       1309, 767, 1218, 983, 768, 1219, 984, 769, 1220, 985, 770, 1221, 986, 
       771, 1222, 987, 772, 1204, 1223, 988, 1073}], 
      Line3DBox[{774, 1110, 1310, 773, 521, 775, 1224, 989, 776, 1225, 990, 
       777, 1226, 991, 778, 1227, 992, 779, 1228, 993, 780, 1229, 1111, 1311, 
       781, 1112, 1312, 782, 1230, 994, 783, 1231, 995, 784, 1232, 996, 785, 
       1233, 997, 786, 1234, 998, 787}], 
      Line3DBox[{789, 1113, 1313, 788, 1114, 1314, 790, 537, 791, 1235, 999, 
       792, 1236, 1000, 793, 1237, 1001, 794, 1238, 1002, 795, 1239, 1115, 
       1315, 796, 1116, 1316, 797, 1117, 1317, 798, 1240, 1003, 799, 1241, 
       1004, 800, 1242, 1005, 801, 1243, 1006, 802}], 
      Line3DBox[{804, 1118, 1318, 803, 1119, 1319, 805, 1120, 1320, 806, 553, 
       807, 1244, 1007, 808, 1245, 1008, 809, 1246, 1009, 810, 1247, 1121, 
       1321, 811, 1122, 1322, 812, 1123, 1323, 813, 1124, 1324, 814, 1248, 
       1010, 815, 1249, 1011, 816, 1250, 1012, 817}], 
      Line3DBox[{819, 1125, 1325, 818, 1126, 1326, 820, 1127, 1327, 821, 1128,
        1328, 822, 569, 823, 1251, 1013, 824, 1252, 1014, 825, 1253, 1129, 
       1329, 826, 1095, 1096, 1413, 827, 1102, 1103, 1415, 828, 1130, 1330, 
       829, 577, 830, 1254, 1015, 831, 1255, 1016, 832}], 
      Line3DBox[{834, 1131, 1331, 833, 1132, 1332, 835, 1133, 1333, 836, 1134,
        1334, 837, 1135, 1335, 838, 585, 839, 1256, 1017, 840, 1406, 1074, 
       1075, 1407, 841, 1067, 1097, 1068, 746, 842, 1105, 1094, 1104, 1336, 
       1209, 843, 1136, 1337, 844, 1137, 1338, 845, 1138, 1339, 846, 1257, 
       1018, 847}], 
      Line3DBox[{849, 1139, 1340, 848, 1140, 1341, 850, 1141, 1342, 851, 1142,
        1343, 852, 1143, 1344, 853, 1144, 1345, 854, 719, 1078, 855, 1405, 
       1069, 1076, 1070, 1409, 856, 1077, 1091, 1346, 1205, 857, 1145, 1347, 
       858, 1146, 1348, 859, 1147, 1349, 860, 1148, 1350, 861, 1258, 1019, 
       862}], Line3DBox[{866, 1259, 1020, 864, 1260, 1021, 868, 1261, 1022, 
       870, 1262, 1023, 872, 1263, 1024, 874, 1208, 1264, 1083, 1025, 1082, 
       1202, 1265, 1093, 1026, 1084, 1410, 1080, 612, 878, 1266, 1027, 880, 
       1267, 1028, 882, 1268, 1029, 884, 1269, 1030, 886, 1270, 1031, 888, 
       1271, 1032, 890}], 
      Line3DBox[{889, 1363, 1159, 887, 1362, 1158, 885, 1361, 1157, 883, 1360,
        1156, 881, 1359, 1155, 879, 1358, 1154, 877, 1206, 1357, 1092, 724, 
       876, 1071, 1079, 1408, 1201, 875, 1081, 1356, 1207, 873, 1355, 1153, 
       871, 1354, 1152, 869, 1353, 1151, 867, 1352, 1150, 863, 1351, 1149, 
       865}], Line3DBox[{892, 1160, 1364, 891, 1272, 1033, 893, 1273, 1034, 
       894, 1274, 1035, 895, 1210, 1275, 1036, 1098, 1203, 1276, 1100, 1101, 
       1037, 1086, 1411, 1085, 1108, 1038, 896, 1277, 1161, 1365, 897, 625, 
       898, 1278, 1039, 899, 1279, 1040, 900, 1280, 1041, 901, 1281, 1042, 
       902, 1282, 1043, 903}], 
      Line3DBox[{905, 1162, 1366, 904, 1163, 1367, 906, 1283, 1044, 907, 1284,
        1045, 908, 1285, 1046, 909, 1414, 1099, 1047, 1107, 1416, 1106, 1048, 
       910, 1286, 1164, 1368, 911, 1165, 1369, 912, 639, 913, 1287, 1049, 914,
        1288, 1050, 915, 1289, 1051, 916, 1290, 1052, 917}], 
      Line3DBox[{919, 1166, 1370, 918, 1167, 1371, 920, 1168, 1372, 921, 1291,
        1053, 922, 1292, 1054, 923, 1293, 1055, 924, 1294, 1056, 925, 1295, 
       1169, 1373, 926, 1170, 1374, 927, 1171, 1375, 928, 655, 929, 1296, 
       1057, 930, 1297, 1058, 931, 1298, 1059, 932}], 
      Line3DBox[{934, 1172, 1376, 933, 1173, 1377, 935, 1174, 1378, 936, 1175,
        1379, 937, 663, 938, 1299, 1060, 939, 1300, 1061, 940, 1301, 1176, 
       1380, 941, 1177, 1381, 942, 1178, 1382, 943, 1179, 1383, 944, 671, 945,
        1302, 1062, 946, 1303, 1063, 947}], 
      Line3DBox[{949, 1180, 1384, 948, 1181, 1385, 950, 1182, 1386, 951, 1183,
        1387, 952, 1184, 1388, 953, 1304, 1064, 954, 1305, 1065, 955, 1306, 
       1185, 1389, 956, 1186, 1390, 957, 1187, 1391, 958, 1188, 1392, 959, 
       1189, 1393, 960, 687, 961, 1307, 1066, 962}], 
      Line3DBox[{976, 1090, 736, 975, 1404, 1200, 974, 1403, 1199, 973, 1402, 
       1198, 972, 1401, 1197, 971, 1400, 1196, 970, 1399, 1195, 1308, 969, 
       695, 968, 1398, 1194, 967, 1397, 1193, 966, 1396, 1192, 965, 1395, 
       1191, 964, 1394, 1190, 963, 1412, 1088, 1087, 1089}]}, {
      Line3DBox[{291, 507, 1211, 292, 521, 320, 1314, 536, 335, 1319, 551, 
       350, 1326, 566, 365, 1332, 581, 380, 1341, 595, 394, 1352, 608, 1260, 
       407, 620, 1272, 420, 1367, 632, 433, 1371, 645, 448, 1377, 660, 463, 
       1385, 675, 478, 1394, 690, 493}], 
      Line3DBox[{293, 508, 1212, 294, 522, 1224, 321, 537, 336, 1320, 552, 
       351, 1327, 567, 366, 1333, 582, 381, 1342, 596, 395, 1353, 609, 1261, 
       408, 621, 1273, 421, 633, 1283, 434, 1372, 646, 449, 1378, 661, 464, 
       1386, 676, 479, 1395, 691, 494}], 
      Line3DBox[{295, 509, 1213, 296, 523, 1225, 322, 538, 1235, 337, 553, 
       352, 1328, 568, 367, 1334, 583, 382, 1343, 597, 396, 1354, 610, 1262, 
       409, 622, 1274, 422, 634, 1284, 435, 647, 1291, 450, 1379, 662, 465, 
       1387, 677, 480, 1396, 692, 495}], 
      Line3DBox[{297, 510, 1214, 298, 524, 1226, 323, 539, 1236, 338, 554, 
       1244, 353, 569, 368, 1335, 584, 383, 1344, 598, 397, 1355, 611, 1263, 
       410, 747, 748, 1275, 423, 635, 1285, 436, 648, 1292, 451, 663, 466, 
       1388, 678, 481, 1397, 693, 496}], 
      Line3DBox[{299, 511, 1215, 300, 525, 1227, 324, 540, 1237, 339, 555, 
       1245, 354, 570, 1251, 369, 585, 384, 1345, 599, 398, 1356, 727, 728, 
       1264, 730, 708, 749, 709, 1276, 752, 750, 1414, 751, 437, 649, 1293, 
       452, 664, 1299, 467, 679, 1304, 482, 1398, 694, 497}], 
      Line3DBox[{301, 512, 1216, 302, 526, 1228, 325, 541, 1238, 340, 556, 
       1246, 355, 571, 1252, 370, 586, 1256, 385, 719, 720, 722, 1408, 706, 
       729, 707, 1265, 741, 732, 734, 1411, 733, 756, 757, 758, 755, 1416, 
       754, 438, 650, 1294, 453, 665, 1300, 468, 680, 1305, 483, 695, 498}], 
      Line3DBox[{303, 513, 1217, 305, 527, 1229, 326, 542, 1239, 341, 557, 
       1247, 356, 572, 1253, 371, 713, 1406, 715, 717, 703, 1405, 721, 705, 
       740, 724, 731, 1410, 726, 411, 623, 1277, 424, 636, 1286, 439, 651, 
       1295, 454, 666, 1301, 469, 681, 1306, 484, 696, 1308, 499}], 
      Line3DBox[{307, 515, 1218, 308, 1312, 529, 328, 1316, 544, 343, 1322, 
       559, 358, 743, 1413, 574, 373, 745, 746, 744, 588, 387, 1346, 718, 601,
        400, 1358, 613, 1266, 413, 625, 426, 1369, 638, 441, 1374, 653, 456, 
       1381, 668, 471, 1390, 683, 486, 1400, 698, 501}], 
      Line3DBox[{309, 516, 1219, 310, 530, 1230, 329, 1317, 545, 344, 1323, 
       560, 359, 753, 1415, 575, 374, 1336, 742, 589, 388, 1347, 602, 401, 
       1359, 614, 1267, 414, 626, 1278, 427, 639, 442, 1375, 654, 457, 1382, 
       669, 472, 1391, 684, 487, 1401, 699, 502}], 
      Line3DBox[{311, 517, 1220, 312, 531, 1231, 330, 546, 1240, 345, 1324, 
       561, 360, 1330, 576, 375, 1337, 590, 389, 1348, 603, 402, 1360, 615, 
       1268, 415, 627, 1279, 428, 640, 1287, 443, 655, 458, 1383, 670, 473, 
       1392, 685, 488, 1402, 700, 503}], 
      Line3DBox[{313, 518, 1221, 314, 532, 1232, 331, 547, 1241, 346, 562, 
       1248, 361, 577, 376, 1338, 591, 390, 1349, 604, 403, 1361, 616, 1269, 
       416, 628, 1280, 429, 641, 1288, 444, 656, 1296, 459, 671, 474, 1393, 
       686, 489, 1403, 701, 504}], 
      Line3DBox[{315, 519, 1222, 316, 533, 1233, 332, 548, 1242, 347, 563, 
       1249, 362, 578, 1254, 377, 1339, 592, 391, 1350, 605, 404, 1362, 617, 
       1270, 417, 629, 1281, 430, 642, 1289, 445, 657, 1297, 460, 672, 1302, 
       475, 687, 490, 1404, 702, 505}], 
      Line3DBox[{317, 711, 712, 1223, 318, 534, 1234, 333, 549, 1243, 348, 
       564, 1250, 363, 579, 1255, 378, 593, 1257, 392, 606, 1258, 405, 1363, 
       618, 1271, 418, 630, 1282, 431, 643, 1290, 446, 658, 1298, 461, 673, 
       1303, 476, 688, 1307, 491, 736, 737, 738}], 
      Line3DBox[{492, 689, 1412, 735, 477, 674, 1384, 462, 659, 1376, 447, 
       644, 1370, 432, 631, 1366, 419, 619, 1364, 406, 1259, 607, 1351, 393, 
       594, 1340, 379, 580, 1331, 364, 565, 1325, 349, 550, 1318, 334, 535, 
       1313, 319, 520, 1310, 290, 506, 710, 739}], 
      Line3DBox[{500, 697, 1399, 485, 682, 1389, 470, 667, 1380, 455, 652, 
       1373, 440, 637, 1368, 425, 624, 1365, 412, 612, 725, 1357, 399, 600, 
       723, 1409, 704, 386, 587, 716, 1407, 714, 372, 573, 1329, 357, 558, 
       1321, 342, 543, 1315, 327, 528, 1311, 306, 514, 1309, 304}]}, {}, {}}},
   
   VertexNormals->CompressedData["
1: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
wuv8OH4OmjwmuuqzXWlzWGdtL7uc6Ktv7GPcjXXD+cdDiI44eMtuEp+/Dgy8
xjpX9U9BGVj3+ubOaxLPV99nn8S6zBePXopineaXIC8S/9vs4w9iHaHL9/Fh
rCsUlRIi+UI93Y7o3jYpvsrCOjhVuWaSd1r5JIhO69fvaBqs2zr/blGvtY/H
2Qf36f1ZZ2iE+/bC2o6RvGYkWUb6+h7szn2I+/zmU51JXjO31OfD/WCtI5kq
uD9M9N4g6QuLPfLxGO5fykiX2I77mcT2cZJ8eihGUBj32/Dl68Xi/huzwimS
fwszn1igfA1H+HavQfkaPHoURfI13/5EJ6zXl/FI7cX6/YHeRpL3+7o/c2A9
+oZ7FhgnAMGNqkSXTtVbU/XXVN01VR9M1QtTdcKOtZvisZ71ZLKWH9a3OohJ
EdzinSMQjPWX1oMSM1iPuVfjKcE5Z5walbFekG/cygbrB59WKRG8pHmtjujb
Tn8oL8Z6N+aqRZ3bEbcnIriP0XaULQL3NY45mBA8FlkdvBL3PdIVVC/DfZAK
zrOk/9GApjAT99EpLN9L+uroYgUJrpM+ziCP+75KO1m24z4wFwlJggO1uN4/
x31KrNXp0rhvKcFzNcGN7I0833FfzZRy4TDus/nA2kBwJp2X9KTlXCTwEg/u
wf0iz69akD6Rd/IzA7j/gW2vKOmHcC77QHCsXsDZtVjfbzxYT/T+JTwbb2Hc
e5vxHdGvr5BcRvTsXqLLCU7esuonO9ZbP9aI2I3118l/Qwiu1rm2jwPrg7PM
34ZjvbC4ziGCw5cn2UZhPeuq+ifdWN9a9DeN4Pba4K3WWH+59/zu3ViPOb6k
w9z8wnoU6wWdSgbuYv3gxTOLusEmoYRu3P/pQlE9gvtBgxObCL8YXdDrw/2i
I3db3HH/KPfzLYRfUPsSqX2K1P7E48c2RuM+uvoA6wDcV1ct9o3wGvZbkPR9
tZ8yxDwIbEwsJTzoToPnPdyntNzUn/QtLbCVE950vpJdD/fbqLDdJP03s82p
hGetq/yVgvtJenROkP6S125/CC/byKDVhvsl6KN4PHD/xDZpU9I3wc8SKIz7
Aa677pDG/QEMV1wI72uyVTmB9esX2Fl5sJ59zREHwhNjlx3SwXprFfbWGay/
bh5e1F0DH/6VWB+cynRNHuuFjY8s6oS/qvkMYD1r4qv1fljfqpy/yGc7Pt+3
xvrL9ru+F7EeU69ukc9qzVtb4b7ZT0IfOXAfrWD6Yv8sd1kz6bP99cjBGffd
Kgks9tuy6Z2cxX2earXnPXHfp/RUHeHdIxPycbgv8ddFbczTQSwLhfB0/sNB
uD8BxCxfqY776hy/mhJePxruS/q+vvhuLcZ9YArrg8g5gLS9cTruXzpcSHcU
9zPtzhwi5wYMtbdX4f6cNV8dnXC/jr7T5uf4nEHhQZM57j+5LwzrcD9Kw+/z
5FxiYxvFGfdXWOwxzcL9FoXr/ck5hmb01gHcDyAaN2yL+wNkzZQX+wLuvpjH
+vWwFzqKWM/+TWRRx/5xNn851lurmNMpYv31nsJF3fXV1mWqWB8ceqFFA+uF
i1gXdcIvd1hSdi4cAsH3NB2wvtVlSde6bLumM+43rpUVIf3HdPGLemzZFIom
7o+lZ+G5jftlxzhqyLkQtZ+T2t9J7eukO/wxDvcfHj7AtwH3Iz6xvkrOnWhN
Juxxv9yOC/23cP9cLP8K0jeXTkkTwn1fef7Kc7gPjEayk5xr8R30VcB9TRP0
AaTP6WXcWtLftLyFrwb37TQOS5M+nutaYovnZo6b9uC+FL6ablbcpxItWUDO
2TaObp/FfRT82wEf7qu4ObPYT+Gjf+wb1v1vv79nBe4D+ES7qP+30uzlxzr1
8nZpKaxbl/60eO5H1VVTddZUfbVq+nAcPkcWWDpXLl06T+7/nW+E9aw/Vv4I
wvrWBYnFupj+hj8CFH0bmFXSvzDFZgdjBztJXfKEoudXgyov+CVNaNtEpS/0
antJ6sI0hc7vBJ4Hw6IDBvbX7kbAJEV2X1yXT9vcstdNKxpGCjhuTIpIhOPP
NI9inQM/97FCHudQWCd5S2OBOQtac4MdWB9iLX55bbWmPxQ/nB3r3J0L20MZ
n2F9yA4j1UiNbDd4YFo8bE1ILpRt8PbDuogTrIqHNidrQgOPyg0dHDnQJll3
Ftf9GzbxdKelOAM/uXGu378z4J+PVyJwnfqypRjvlGYEKI1sMvd9FgO5b5sr
47oqjaXdJ1z/q/5jM4LrgTncsaTuk98w8mdkzBO2hbMVvizxgnKtkt9w3Vbp
blhyXG4IPDO74luvcRgM76qIw3Xz1fNJmjTr4uCs912GHb0J8M0NsW9Yt8CZ
2cTabpMCd6Z+Z7U7mw1tij9K8SDc9X14MmujdQJ8n7fcM12oEDJuuVCJ9TOD
Tf6cJcWWcMzxG7u20ksIp/s4sN6jL1SC6dgzF3B3rj7X82oBdBeXS8N6BuGC
s8nnfZ8CsbZ2oept6XDrNa1zuP5u4+twaepaMrCtre6uTwqBVr7ZM7hePLsi
XeDaowRQYSwicE/XHgqZPi/C9U3Tj7stGWjj4LquQZcNBXFwjK1oEOsEij8z
FNJiPaK0xNjZdVkwasstd+VPiN8FcugfisyFW0pN/0YaFUKK7Ztfuij/ynRd
vGKukw31Rpibv46UwtsX/h76Gk8Bble6m159SAKj5gP1GoIFcK0njzfWXaiw
MLmovcoCD2iPqQSYJ0Enjb4DXWjfMcSdEg0wzAJ6W7t80oYD4H6NySJc1y7e
VNSTmJoGlM1Cm3i9RMGMCmsLrsO+Pvi3rY89H+6YLbvvzvT/KjvzaKreqI+X
fmUuSYPmaNb0I6kMW9FAmktFESkZU4kyZcgYhciYDAmFjA2mB1dCxkwVqRAa
3EshpfTuczp3vWvd9f7+eP89a3Xcc87z7P397v15dg9Jbo1R1E3U22FDLjPY
a/JIQPJccRb61z4bE2WPqxxY/OZx0/joHBI7v1ci+EApWfi9IV/1IAduhJyv
47vwGPQ+CM01eBtLzAe+faP4hN9FpYfkjR+iLjMbV+hgTFTfbnOk+ulSc95u
iBFNA8tJQ1su99nDt6goQvV/RUuE2bIbWWTSyt2T9LNKiFZstcIneQ70rRo5
4mnIIvkKIZKHN1cStX0logMN6IuXFWz4ppUDaWODdJ7OvgwD3bIaVF8+efQH
pys+Hb7K6OtUBXmBxvR3x6k+skdt21Sp5RWkdqOuvUxMLdlgp7vyqBz6l8NO
OeYPMmD/dXnXjWHX4eNC3/E0J/8f3JoZw61t5eHW1nSYi5QIF5Dh/IRxUtGh
RPheI/+fElw/r6vYTVNLiW5B6RbDcbdJmW10wT7Uq12HvWzzL1WTd2p9D5/Z
xBC/5X/q3CZxoGzdtXkfp9UTOxvZn8fPB5DxQwMhLd5s0Em6S/XbiOrwtVMU
F2l1fyLdd+Nyflzuj8v7/d4m4ah/sAYUo2fcnWZaAT3fc9qf7mHDoImRdfLE
Msgx+rDV900xnLZ97tgtjj5I0n5atXoR6NZ9uDVu/BNwNE6c4eHHgYptxmMt
Vz4Cz+WjfJ+qUuGOwC5L6xoOBN7iS5qYmgwR12znPdKOAQWOpTPFLVyYMG1s
2vJosHBufcQxCgDp5z2+VJ+9huHWZHi4tfbLOTtWF5YQlbH2p74ZuJG7b4pM
1VDnKL0wkzrBriCvlxxtb5P2g7NbNnSVbsP1kzBURHG0Mi2BNFfbqP+H7meZ
M/NtKnnm29jyJRpSvGOa1BSqXwpBM9Vp7lFe6GGmz9diuL1CNfDQkyJ4nybZ
8RXX84PpGjEaRTmgkxLyyjDxEbgKVhh0PODAUbEJfgMZ6aC469rn5PMpUHJf
TaAK9Ya1h1O6aEQ8+Dyzmu7UFA06re2BFKehE8w3tH5MKOj41d903BUAW6tY
myiuYBrDoa3n4dAGa4PrY4KKSKq+YmVidzosSN39leKmRCUcFm7oe0IKFI9o
l09jwcXw2NjCSxww2dRbR3GuSeJ/uVffDV/o/uD41X3bX/Rmw5LGMVuNV9Th
d/U4vjOLDV/eSD1SaMmEk2kTmwLGZYJG0dUp0RgnhY6c4VP3SoJfV9uaY84k
wPYr7h/kMW6EDwrMvL0iChzcFH+YeITD6m2ZuynOZNZGI9aApD8sSN9z0q3f
B/iytq2juIgFDA9myMOD+fzbsj9SNpnIXPkcv/lqMbyflbaM7xYH9Fa83LLf
ZhaZ129nNZJZDnMzBL2lj3DA64qSEevfe/Bdd+OfycYVEMB6MvhGnQMv9o/r
arSOAZ+EK7r8zdGQuNjfiuKI5Nw/HmiOvAEWWeO7ZbQCQW+OixnFvQQ2OMdV
uruBWbd8XNk1F0gdEqQ5De1r+kNnd3tBze0Tm1u/siA4SX0axUmGxO3N2ZgW
AzOr2S09VSzw3xykYhyKcS+o9vlDTU8wMtxh6xriAR9uT6X5GcczYHD8jjUs
HVm5YKzheVgouZbmPdwZLmgpDxdkY6uz8+OzUNi7sumCmkoeKFumSVJca+0D
cS+KCzlb9qaU4kTmdKnQfIhJkuAWis84lgM0rzHB/Q3NaYxj+sUdPP3iCwz/
8Z7LgzAciD3Df3xheBAuB8LlSLhcCbeOpEzGT6A4j8+Siq8o7mM1w3ustrp0
mTpvdlxCxIY6fyZy6Bt97sxwcy7NH+Sm+lB8MSlvv01zCGUXdLOvt8WRm/4N
+x+/ayBDgfZZBzawgcsfcHkELofA5Qm4fAGXK+ByGFwug8tjcDkMLpfB5TGy
GX6Cy1NwOQouR7KGp57GnZvAnaPAnZ8QskaG4hVIZHT912/Hw2DsDxGaW+DO
C+DOD+DODUhels3B5wX/teuP4PPCu8FTmdTzZoc70PMXQnLe36DmMcyWVqD5
ipaZWymOirjP+TaV4miaQv/qqOsMF7GEh4sYMZpCnfcjemYV9JwhO4O/75/L
Q3D5CC4XweUtuPwFl7vg8hxcvoPLdXA5FS63wuVVrjDzvs7xzPsKeyLRT3EJ
nws0aE7Bs6uKjj82sYn7FF+EgqTCocyQFbWk8pGrS8g3NnC5BC6nwOUTnuVk
fKbmfTTKK9PzP0xv7qPr/0ek6pXwPkRG+Ah1H1Bt8aDvw+UquJwFl68IYOJ/
KU/8n6Ht3ThkkAcfLY3Wyh0sIQ61ofQ5izCGZ9jMwzNoZSi6hIdVw585e0Sf
BieR/tMvv33h54DLf8w9G13XNiskIA3YPhZwz70OpCOTi6Sy2VDqaTDeXD0M
SsNZRmKhdaC6oqe0tIiN+XCZ/pB8Ftj9k1BjptoIdcHnt0yWYEMDc46vg+cc
34Xn7mHU+cOJu9LfUucRJ9b+jQ8TCy4swnhCEp99c8V4QqTCvel4osycU5Pl
OadW1SfniPGKzOpQV8R4RSoD5Oh4Neu3YSvGN8JOsPbE+Ea0lkrQ8a0tZm8v
xkPiUJ7ShfGQpHCE6XjIcVdMwPhJbFe808D4SbTf/JpKxc8+5nzWG57zWRI3
fj7BOExS+u2SMQ6T9nIBOg5vV689gXGbaF+f3I9xm3QYOdJxe/yE2l6M86Qg
xP8kxnmyLsyDjvNFewaUMC+Q9c6TJ4gbV5Dvm5zovMAKmXpU1WYWbPkz2xbz
CPmUnuFF5ZEL+nIXMO+A6wybO5h3SOrEaDrvfGHOMRnwnGOKebmrBvMa2bd3
+l7MayRD/W9eS6w4uxLzIPnV5T6MeZBEvkyl86Dn2h4RzJtEJomvHvMmOZvt
TOfNMu2dBZhnydWNXlSeJeNzL9J59t+0/b8OaGWQ4/aHXVqcawl/sON89UY2
qL+1bca8D6oHOOmY98mjzNN03u9NcpHYMCaUnBUduYP6gdxdnkfrh1vRG3NQ
b5DYH68FUG+Q7rhOWm/Em4wGoj4hebP3daM+IXf2baT1Sftk7WTUM8Tlnus7
1DPkp6g/rWd07doo/UMmX+8NQP1D9k6dReufxU0tc1B3gWC2jT7qLvIl/zKt
u3YOpW1GnQb/fNGfM2DgBmPfSZpROq2O57yMK3NeJnz5bDHUgUTBsj0UdSCZ
bfKB1oGLLJtLUTeS5zver0LdSJye7qB147bpYwVQZ5JL0jJfP1alkuBpO2id
meUePhN1KVn9sJTSpWRy2hVal17jO+SCOpZoi5/QRx1L5FYpO1A6lpi+tkDd
S/wyZqeh7iXCUjIdlO59Y7Z6CepqqM92pXQ1bE1l3aR0dbDGIwvU4fBCbHEr
6nCQ07nygtLhPmc3d6Nuh+CPopqo22G54ACt21WGNQdZwgUgnjD/64LoUFgQ
uEaA0vkCTH+qlqc/ZcP0udp4+lzc85A7ePpT3PN7vH0ofqbflMjTb+Jygdzz
HNxzHI5Mf0eJ6e+EMP0dLk/P5eu5XL0v06+J4+nXdDF9mUc8fRlrpv/yg+f/
X5j8Z1IF+imyUjjsAPopYuFsSvsptVNpwui/YKphhSv6L1h0u30F5b9OCH0b
Qb9GprhZnES/RvokntJ+rbDh2nb0d0Rq9NN69HdE1pqP9ndC1g3b0A/Cz4FT
U9APQsv9xomUH9Sp4/uI/hFc9TiT0T+Co1En7R91f11UR79JWlbXy6DfJPlJ
3rTfbB5V1kN/SuTHTl6D/hSWB8jT/jRZobMe/SxJbP0tg34WQld30n624vvc
5+h/wV7phAj6X5BjHSug/K/0hoHvvWvyYOc/54TRL8PNBgkVyi+37LBuQn8N
wh4ZtuivYXCnK+2vQx4lf0I/Tt6xX7xf4rOR+IsJ0X5c2uesCvp3QpSe3UL/
DneNP9L+XbGxxQn9PvnCPmqGfh+01f76fZNT2s/yWxPIpyzTOiO5RzB//UK6
PjCzTUrX+nQ6DJW5Pu/uLYQDR+asoeoJ29mqB1ZHZsKw3+uByDOPIeGq9BBV
fxg73FHCdyQFlt91+LhlUhqc6DpG1ytkSJvJBL44KI3ZYz3lURyEhVbQ9Y3X
73Opegg5V3U72sbEETbVZdH1kCXJKppD+xPJ5pOpvZUJIVD97QFdP0notA7T
8Isl4UViKs/mJMNI9d96y+UjXcUKqW5kwLk3w3vfI/BLOkLXZ272plL1HNAd
GhE21smF5b8E51D1HG0jjeBpl+IhtTnYPnntY5CMdafrP24/NQWa7JIgZVeG
kMOWdLj44TddL/LpUTUbMykORCPsfs59Gw8zV6vS9aXy3OjYuMwQ+F19sf6t
VRicVamg61FfIf97b583DLgdT8wt8IGHQ9vp+tVuzd0SQycjyItLW1z8UqNh
mf85ug5WZTntyf0kF5IoKy/561cK3Jl0lK6bvW8IdJRMPAknE3KFm2dnwMEM
e7rO5tPzIc0o3QPk+WZcFw7JhBXVcXRdzi1LT/zZSX/Im2ZywwX9WUbsarqO
V5B0a2CZSyj8HrP78KhYGgzX7qDrfttfBwp5nIqCYReRX3cj7oKSzmW6Tuih
Z1ch+/AmXNsdb77fIgJEmmfRdcUf//C/MS/1gbKFKoP9T/1AI7uArkMaSahK
cszsYOV3w7ahqQ6Qk/KKrluuO+S7n+L+N5m8PU+dAyg+/bfOWcroZy63zuXV
vzO+woPxGVxevZDhyQN4eHJZhg/X4eHDC1tTVvXsbIBe4+DOpdHBcHXd7LPv
tP83vnF4+tqvmX76fJ5+umb05SV4H3JzE18S3odYG+qco+4T7GgpNXegGtw+
p5ie3xhONnW4AcW7BmTOW4jXSV618k28DvIP9Onr61msUAc3A+L8xOZM5CRD
InlIc/YQvodp6WtlY1oukFqnrXaai2zJq51dCYV4/V7U111bZN3Jg2KhMFfU
U0vH3RUWwOuxu+trcpICyJdrEiz70CDi0mCcPQ91jl2KVcOfU2HEa7b247sR
0aRZqefBcmo+RlDaOIsxUYT/8kKbqOBEItzXn8b/jQNrGI5Uj4cj/Sl24WXi
dX+Sp97P4pBM0nPKK9cV18+i4krPn4XeRNz57kex7Exy48NOUyFcb2p75hn3
K1wiIlbLbMRKM0j54uK95Rift9+SPp0zYAQlm5K9rxamkXcHVJab4j6d5Cui
PWzrB+JX7c28fiSRBa0b54XjelNgvqMGz3es6pfuGmnyJK1BY8JMrngRH6fN
t1twvUnZWP0+5hJEsnYIyno2BJPxfGvKnFDPVEqpHBRvvk1kp71kr2mKIUIP
b+uJfeeA8XL7UG2hu6RKfNHe14r3iWtVnXElPi+fYX6k350kcsp00etB80xy
WypknjjqnGCGCw3k4UIN+FTun5nuRKy15Pzmx+cSjelE9S3qinY+TvFCfWv4
Jund+Dz6MfnVq5va9YoDEUX6s3ekhILULftP5pcyiLP9a8tNqMNnKjsknHaL
h+5v8r9y3OLJwTbtXnfc75xRm5eXfyRBXv8hwUkX/cjeOZ0LqfcjGLcnYVJh
DLGb+FSAdTCW+FqNGtcN4n5fb3O0UeYeCUxVjqxVTiaDuYPeVXj/QY3Q/Yk3
04ngyykbHKOyiMJq3+ahOowDY/6VmCCbRQ5PldU875JHlCWLTx7L5EANw2fG
8vCZF+dtG+xyuQPi8PP2JLsn5Gfc1bIn+B68F8rv2jXpAepfoaAXYg9IemRN
cMV7DtT3SFdoXcoA1+70vXEpoeR+rFwi9bznbV4o+RamgTmccksfMCIb11cu
pdbDOcPwRREjmcQze0W1JyuLJNcdv8BG3yG3b+Cm44YcUmgwXLNnbT6RTY6w
kr7NgcPXex4+rcwn3yUTSqKSWMRjn5KO8SkOzGW4R1se7rHdIm9t7qUnsGpz
Y5m+6x1y+5Wodw7+fruOw9tqoh9Dvqz0tEn61uTEhC9x1Pe6DG+VppRmQIvY
WddBhUtgVrViB7We78t0b3/iVUxibP2n9N1jkZAnfYMHUcfu6NTOF+wsITW6
peuV2OVkX2iuXt8HNqxj+MDFDB8ozvCB6un5Pkvjc8F06ekpdtOd4OeOuoXU
+mndFBY3NTsTtO83jR8t9IYR8fN61P4KMX5tOTH9OdGSHbDSk6olTfa+DSWr
0Ecr7Fk/QDJBf7FU1/3r/iDQPTON2qf/3/PRI4EytkE388jTOtX03S0hZHnt
yQh31Nt7Ln0+e0uthNx5YZf2oPcWcVKLV18UzAGxsufhFZuek1dFdtLlpjHE
oCkmfROgTxGMS1NeXUcsQqv4j26KIlJX9D2sa9gwp0eXlSXQQOaXOoqe67Ql
e4RLTBYZsaGKifN3eM4TKXaqW5tI1cIxo5xcvvTnsHzQnZ963nFfIo0fsMvB
UOGylWRnCTiLrr33Ed/zqlWjDd1JLJB7NHFPZ2U+sBXGCxnhesj+MbulwCUP
Zg1sKJOUzYLbiwqkj+I6d7q+5ICYRSYUmf7IjryTBA3v3r+YjPt9Trf+mcTg
ROCXZ4+cGxMFyU5tCVScrOQ5H63M1Jnb8qXt6vpZhDM5PdqJ7U78rXXO26Jv
dbkgLhVrX04GiJn5R4eL4Hx2o+IbXQ70BDlZi06pJk9fKqVHF8XDjcf2OydN
4UAKk9fiefJaFMPtnODhdqZaZMxxv8+CdT78SgrexXDXQNVqB65Dpz6RM0ry
+XC1z89u3cYc0HtJ7szB/TKi3VjwNSoL6o62Tv59Mx1uHfL9PIBxYOzYG5HS
Svfh+nDoQU+hu9A3N56fioezKjhDGRHRIPXuOnuicRj8nu17l8oj3PPOq3jq
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
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.4088579743966656`*^9, {3.4088580460542917`*^9, 3.4088580968833923`*^9}, 
   3.408858177806821*^9, 3.408858213119999*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy0vQd4XNl154mpAju31JYs2bKCNZbGs157gmc834bZ2eDZWe/Ozqy/neSo
0G6p1TmxcyKbOWfkRGQiEgAzAIIACIAAc8455xy7W3z7O+ee+96rQoHdlmf5
facKVfXCvef8//9z7n33Pf77p9987ucvP/3m8888/f0/eePp1557/pnR3/8/
Xn2Dr5J/Lyvr7z2H/fD7WfJ3kJXlX/Tf8/JiH+zva/KWlG3edF/c1Df9JrB/
Wa//XX66Lm+J2BmuZ9h2tPvpRrjt6OFN1b8fC9v717Fvn8xwyL+I/T5KXrLl
5+yRt/w8w08POPCnYVv53X2l22Q9Hv5gTbwTtjlph3v22WfDzR/LcIq/cjve
Gtbs+I7Ref4q5thktPmo+DH1H7tn6R7PuT2uhod4OEMr9IdEhh9+7va+FJ7v
8bSN3HlG3PFCeNqnrKHSr/g/8eqz7o+z4Vm+9sUbnw6P/I2Yx6IODW/SM27H
E+FZfiPDjskMO/6N2/FYeMbf+tvteDg842+Gh0hkOEQmxD7tDnEgPESm83w9
PCw+W7InCJbuDVIilCnmP3VH3hfu+63wHGy/ZHcQHmmZ2D53xC842u7wGM5H
j+tGrbuCoE0OmOGgy/dHB34kw4F/4g68M9X5rpmPuyP7o8uR98SObEdfccA5
4dEMR/+xO/q28JgxJzwWtOwIghbO3Lozdpbdw86SCFbslwOvdCfSQ2bqip1s
S2pXfNwW04jF2wN30h16UlDCaS0aelI7sXRthdh+2YbzcqZVBx989h+5s29M
jZA7+zeC5m0uDNoCrHWHdRtbssu6vTvWgr1hC4KVYvR9lZi1Qo6ayeEmlOsz
hXNU0LQ1CJqxxdYaWkL/aAvcCFuyS1uSkKZw8LAh+9QV+0U2fEPav1xj1mWK
fnbQSKCaxFyjEtKqrCfUOwrqHeadnWGbgmXmIW2Ua5i2KSFNSkh7jPIdh52Y
PRL6wcLTF7Ygk4R9IwrZQ0HDpiBo3BxkbudTLopY2w7X3rCdu2Lt3BO2M1i5
z0Vy1f4gau2ooONQELa480hg5w5UruJJJ0qCvRlim5DWJqS59Ega2+wam+Va
+3DYWvVqrMW0lm1or4Tat3avhnqfZFRrbdB+wIW7Q8ya3Bk1OVP0/9I1d00m
QnwrqNsQBPWQRbzsPd202Xm6eUsE05ZtwbDGa8N3uk4sM3dr460D4upVilea
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
/47g8pd3In0wjchKRNXDv8hcPZg83LT3TBLh1weeMYk4aRIh2/uxxMHbVjGY
TOy66eRhO7bNHgKy+VooD/p5kI6JPvRfjGnE+VSN0LIhphGr7HledsXAFP6h
aKbwSBDXhkS6ODS6Zyr9bcXhmw8oHpKROGS6d8/NH/gncHqB8OKQFf3HEuGz
P9JXBJtlXPSfaWWw4j3SCFv0/51QJ8JpxWWp04qyX/qQQnRCNSI2rHjXphXf
Mp14w4YUqhE5oUa45cU/CJ6Bmn8DRZ+OycFPoPCPY3Lw12/z/pY73NP8/Qzf
/Rz7BTLxHPY89gL2IvYS37+MvYK9+o7b502O8w4FxPsc+yPOMZZzjUcaJnHu
KcjCNGz6RP/QgOwgD8kqQLqKKBRKZls58AdBFa2voRe1KF4dvWowGWhCBpqL
TAKwJfR+OZ5oRzlXo6LdeGstnluHJ9ejvptQ4q14e4eVCgeJ1lEk4CSRP4sE
XEQCroDG60cc/e94+oN4kYC759PoD2M+gzmfw6DPLenelyn6+zKNcP+OR4un
fnj1INtPKqROIn7X8d84LyWC8P/Gp9HI4bLx/8K9tKuGxn/ZTuYSwvLgdjRi
2H3TacAO4/5WbPO16Cqg8H7dCNzvPp9hyICtOuUmEFakLfI/pjOFqWXBYVcW
ZKJ/w/6R5xR+Z2T6/4a+Zr6P15M/Mez/107hvX/Q36jwUqK3tP+XIppKCBcS
OtJ/Z9idPuFcgk0tyk5z0guDjuGkT7mOsNjtlzJkcPMIT5qrXvCjAAjzLMT5
OVX3zyYFT+nPTwQ/g7e/gLPPYc9jL2AvYi9hL2OvvG0yAVffei/QO0uzHglm
QMmZZOrZk0yxyNQLsFyydP40uwT/T4JSTl5GwVFOlq5EWKqNoougaH1+Gj2L
HD3byNLLEalVCFYn4rWGfq1F1Abo7xCCtxE/bMUvuxDJfTb8OsaQ7RSBOrcT
4O8lCTLQvEFSuXPCJvMA5D2AeQ+A3gOs96R6vxRRU7KzVO+/BPT3b/mq8L4+
MfO+JUt5v29zfo6ff5TCT1/Ka5I2MkqC1pU/aRN+l339fm94/S6/H/cTfXdc
ctZJvltWuxtBY+TUfTbYKGSIPmUiaUoBn0ZSTc6nwnsPlrt7bj1BgzY/na+T
fFA0EfIThDXhbM3ORtGGfbq33mirTPzhyNz8zQek5uzwv6RIZr7vzh7Emf5/
PIXrfGJLer+nexQOhXfohCV7OMXnb77za/163Cg+0+L9lHp9RTB8as+v6G20
We0fuPQbL9NB+ZvFbgD/ujFBSvSXYMqLMEZpGyvRn4VYP4Ngz0C6v7F1OT8l
T/6EfPljycfkzx+RR/+aHPtXcPav4PVfjg6Cv3iD99fd9j/m75+OtqfcZz0Z
vP3u/eC99+8HH35wPxjz0f1g3Jj7wcSx94Mp4+4H0zjHdGwmRJ/FOedM9PWS
MPuPggLaVETbSmijsHwhba6g7VXCcvpRC8vrYHmD9W0x/WzxDMeW4YOVJOFO
kvAaFKuXJNyPmg3hxk24dTuu3kMIDtjM6wkCe4bS7MIu0hsAuw7obtlU06eg
+FMQ/Sno/jTObhjw2ZU0dt8MGS789uxOplH768OpDZXvGa3jM3d+Lj/lgr3k
3Xth3W2zc98NTvD52N0o78br7t2xmlvYsMXqbqm512NDsbpbqN3vx+YjUNvq
7nDhpL9Cv+y4S7xyLOM228DsiNh4Q2fqnPErzJYLM8btesfvTEX4348xXU/8
Ww8svX3iTcYfo7XVz+VFT9aNMTud2Mk4sbNGuqs2Tur4ANzpPLTmRCl31K60
TPevoit1voYWEvs6GhC/ZUR+I0bkl43IL8yJkXi6I7Hl3+AZiPU0BPupLa/5
McXvj4TE7xuJSbh/KSR+05H4zyHxn73K36+57X/E559gf8NvP3vjfvDz0feD
X2DPYc9jL2AvYi9hsv1rb94PRr99P3j7HUj/3v3gI0g/9sP7wfiPjfSfQHoK
/Rnjg5Dk8yD9Atqai/Dk0/ZC+lBMX0rpUxmkL6d/lfSzGtLX0OdFpPd6W6zc
TPXdgk9aixzhl+KnlfisAx924c8e0voAhF9PSt+Cy3eir3sJ0UFbcXWSmJ/d
TprcDbdA3I1DlspJVUL4zzzhwf+ncbJbpf3L6xHZA7HbfjYolen/NGMS13r+
0yBjAo9X2LKdMP2sJW5fYR+/GyVwX2HHE7gy3Rgu3NCRdYzpg8b2gTjTY7Nw
YQL3y3Sz40W2kDwhLDd6tMV5Dhu1yLZCu9nNwfFbk1TbUF1TVqYa+/sj53Fj
fNotuLELdPFba+3BV+4/adRM7sbUnutZiUxMz47flROt0XtiONEzzbLZw/Ah
ucvIfxyt1l+SefpdNvcTbOHgWbI3IH67zBF/tBHfT7/LPjLB5on/i3jRHcve
T0O0n9qaGsneSvr3ItL/hZB+tJEewv+XV3h/xW3/V7z/CCH4Cfb0a/eDZ7Cf
v34/eBZ7DnseewF7EXvpdUf+1yH/m2/dD96B/O8L+d838n9033N9Jk2aZYXF
XLRpPk3Ngft5NL0A7hfB/RLhPmOJhXC/gi5WzXXcr4X7ddb9JjRwMdxvxS1t
cH9pCZBEJ9txXxcaupZEP4irN+L6bfB+FxHaD+8PI9nHbex0HtxchvfX7Bna
d8hZn8Z4/xks+AxGfHYpA+ddkk8I6aUGvR1W7+nUj02vPRES/o6R/maG1B6r
2h3pvhPNqMUyuy/a45ldOL/Dxv4y2S6cT+e7Fux2hTFTZu/y//fx19IH1SmJ
fckxV7DLYVqPatEetBwJMpHeOJ+l2VzSe72l97q9I0+0mQp8K8NP382Q7U0H
3AW52CJdl3qzfoW7dbLjd+tE998+/CARsEW7/1qze8rKvGXDF+qkX5WXU31Q
Mzz1iwq8CbxHA/PXbardT6HJPlLDPzczSv2hAkwwBSD1/2RMoKlftlcFIPX/
5dtOAf48rgCw/T+/jL3E55dMCfj8I+wnr9wPnsaeefV+8DPsWRThF9hz2PPY
C685FXgVNfj/WHvvKLmqK+27VytgjOf12DP2ePyO7RnPjMfzzjdjso1JJmeq
c1IH5ZxzzhmRQUKAQAgQkhBJQmRMxoAAZamVWp1Txa6u7qqutL9nn7PPvbeq
q4W81vxxOlTfqq669/ye/ex9wp0KOzADSjB7ZlLC/O9pObz/StiANbAB6/Ce
WAruFyl4CO/1Ebzn9ZCCxyAFj+NzPClS8DQ+2zP4jM+KFGyFFdgGKdghUvCy
Qwp24xy9ifP1Ls7hh1DVz6CyX+J8f4trcBCu6xiu00lct1pc0kbZMcVzCNwd
k0waPbdHZCAmMhAHIHGWAAn98UCKBABiteVrl9VNu01imeSluTx35xdmkN5y
ASqhiJId/aW2ZqK/vye1vsbHt/VkiP6R1Pqaiv5dSgms0fpv8Wa/kbo6M5OS
upvILzvoWErQbi3MMaX1FCVoECWop5T0nVVAKYIYfZmm87Ju1gRLK4fXYpDN
SoA/bpOrwDxn2lPzV31rwi/Pogli/rNk/U7aEJypupmS4dOO/L5XyS01A+hP
j4lEbHCOyPVzjsjJZ76014Z5/LQ+l/CkScQikYj5MnnXSITTJKg0P00ixotE
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
JNkeWnWK32boH7/4X+l5mdYSq56X9X/VoYsy+GNn1qiKJtt15xwnd2dILyKy
Px60Ef54A1HRo0T5kjnmGHFda27WeqvdcWc6B2C543I9XdLFQj2I77obHfcO
vgOibHzDm978sVb5Ad0buVQoPZdLhumjrCk991tHGdH03iO6916uey//Lf/K
k1R6LffcWhqf04ie20qLBnvUkt5HpnbS5gXdtHN1hN5+OEqfbYrTgW0JOr1b
d6PQF3rtvVbSOEwAjACMK7XBCLh5QkITlPSMKOlBKKmu5ASgovV1f6EDJz8x
ozG7zritnjlAd5OXG6g/vdxohXn8SK80qMa1O47nr6hU7lW7nMG9mrc+f4X7
KXonLoP0T6WQO9nP7lQjoC+e1v2Tn7jjpMmq0Gv++xy75oC/umuqcSE7suvP
9U+9pgPMdA7sOHojv5qzpG3VMDhb22hna/kPSW+8Dz1tneqN5FolZe2lEki+
Z8+oMR1yDDrkCFPS7rAOu1kWCfFScd5w6VKp1v3umD5lyMj47j8XSaXC6ob7
UkQUj4l/+Hcd3C89Iv7U7ool156iobfU0jhXoxroX4huuBrd8KHJIXpqXje9
uDJCbz4YpU+ejNG+FxJ0apfuhmG5lQedTsCLRiGeCOitCOjteryGF/4o8VTB
XHfBYMs31Nygg/hXJ7/IMqL3So3HErzttQnaUZvUH3NHnTXhfmeqMCL4cnh+
qZ67a73dXdErX7YKDFaH7Gd3yDPqBlk13JVYNU2P5LbjpJXmobtc+Nd1SZmf
bJAYaHW2TCu3K9XXX6mjUyan7Pru3mhV1HTgpsFIndh4OrWRj8t9kGxtvMfR
G5eo4C6bi56HlEm64UjphiVsNDmgt1uz7tRuXrwAlCcFXyK50e+OGpN54ZGs
/3F0RGMwv0nRRN1BpaSW1hlVR7zmFA25WXfE6dwRqzy0alSAHpwUok1zu2n7
ih7a80CUPubZ+tDDGtkENSw751INu8qIGjikdkRxj1utBWUtjLqrKQJH2d2q
4XA3fqU74YnPrT1xTsfQEvR8TdJ0gq3K5L2AXrMNXWo7t3qTjbxYjzC+kzve
zjqjYy/xTy+Z2zU5upuK1Nzn+qf0uR2nUvYHMJ3j4gwdJlN6Lx3vH/rsX/+l
+9eePvpXWsU2pX/ZxpCGQPEqN9mJTZHMa8+D4uU+gL7kVLyVjvqUSc3NZNzJ
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
1JQ4FnqmbJd3af0UqYg2tDo2zV7eX3t577p9VmFnrfIrmOJOluJAgU5pwsBQ
LO0U62+s/aFm3emeK+P9hrnWC6Lmod5RMOBIADICfA8D30PB9xCHbxhxKPgO
WcayfdFVB9+oQmCeOqYmUHG/kJt6PYeV7sV1CqBwJ6li6p57iu78mTXYn/nu
5PWlV/1mil/kS6+cgs8uop5vlFPPt5jefh9ep2EhtRQ/6g5lTK2nFaB33ZJm
2rGylQ5+9YDObsVY7SDohc+ux8CtCT777tW71FJ9h1quXUf7fZlab/O9rl48
QCXl3HhrZ11G3vbq29Hmzrbpmn2m3Hd+hdNWg1IV1CmR+nOV74HtfQTWftkx
ydLWcCb5X31JVkYNouNAdOx6JlkZ9Thl1OYghFEw7JGmDzccRA8F0REgerAi
Gt56oCFaXQ+Ct+4Donsbcnur3zD2j5fy715mYklNoQc4o/xkM6k008vg59hj
ndxvlHhs3Gcd5qhDunbTR9TTdSquCxh/vZh6or0PfPsCBZo3EwwOqqXYyDqa
NbmelqY30jdLm2n3Fy1UuKGNSnaim14IxuGe6+GeG6vuUdOlemq+UoMhVTXY
5j0kNZcLqbJyr2LaDqc0yxW+w6lOluLOhuKVHjphASuN6QY9HqvS012a1ecM
CiM/9+Tygv78WwpUfjWLfaqyMz1EzjAwz32ArpU5Lrd7iRfGPpNuhegDGtvi
8NIxCngVMHcDzN0rKPCdC9TrP3lAFNa3lqKH11HqxHpaOKuRvlzcTLsA87Et
rVS29wFdOw6Y4TPrz9+n+guNgPo2NVdfpxYY1b1a7qr9eP4AnS7dibxV/9ff
9ngcNbAjVn8Fsb+CuJPFNFQASTooy2D6L74tHtyjtg81Yb/RYx8TjX1YR/gN
28gYLxuJBPgjYCfDlI0gDIGdDIadhMNOwpSdwCn2RyMYjF5NX2UnCH3hHPvC
dvohvh/sKAgyQflk+wTuPA+hrHC/ITe6l+55Dx5q4Pj/w15MHdXX+759igK7
g6l/B1Pvginz/qz+H9fSGPXi6NgGmp/WSGsXNtP2tWBqayudK2ijG6fAVPkD
ulPRTPUX66jxyk1qhjG0GGOovnREu75lZbb94mFKZ1/t91Az6BGpMW8bf1G4
FKI/f/fXSVKObJ0hCc5sjDlHaRRarZEgagSIGr6WSYpYzUSFg6hBK1lugCEq
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
tw==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Spreadoption Vanille ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", 
       SuperscriptBox[
        SubscriptBox["S", "1"], "a"]}], "-", 
      RowBox[{"\[Beta]", " ", 
       SuperscriptBox[
        SubscriptBox["S", "2"], "b"]}], "-", "K"}], ")"}], "+"], 
   TraditionalForm]]]
}], "Subtitle",
 CellChangeTimes->{{3.4026388686724606`*^9, 3.4026388811727004`*^9}, {
  3.404630792762659*^9, 3.404630809558997*^9}, {3.4048121803219595`*^9, 
  3.4048121923849225`*^9}, {3.405938214182216*^9, 3.4059382196823215`*^9}}],

Cell["Porteur du risque de smile de correlation", "Text",
 CellChangeTimes->{{3.408862344074312*^9, 3.4088623889345484`*^9}}],

Cell[CellGroupData[{

Cell["Integrands", "Subsubtitle",
 CellChangeTimes->{{3.404631476967207*^9, 3.4046314788891187`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SmileSymetrizedBiSuperHestonVanillaIntegrand", "[", 
   RowBox[{
   "Y_", ",", "\[Alpha]1_", ",", "\[Beta]1_", ",", "a_", ",", "b_", ",", 
    "KList_", ",", "\[Tau]_", ",", "\[IndentingNewLine]", "\[Rho]1_", ",", 
    "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", ",", "V1_", ",", 
    "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",", "\[Kappa]2_", 
    ",", "V2_", ",", "\[Rho]3_", ",", "\[Lambda]v3_", ",", "\[Theta]v3_", ",",
     "\[Kappa]3_", ",", "V3_", ",", "\[Alpha]m2_", ",", "\[Beta]m2_", ",", 
    "\[IndentingNewLine]", "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    "\[Omega]1_", ",", "\[Omega]2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "=", 
       RowBox[{"Y", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"x2", "=", 
       RowBox[{"Y", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"k1", "=", 
       RowBox[{"(", 
        RowBox[{"\[Omega]1", "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
      RowBox[{"Sk1", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Omega]1"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
      RowBox[{"k2", "=", " ", 
       RowBox[{"(", 
        RowBox[{"\[Omega]2", "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
      RowBox[{"Sk2", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Omega]2"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
      RowBox[{"Sk1A", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Omega]1"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
      RowBox[{"k1A", "=", 
       RowBox[{"(", 
        RowBox[{"\[Omega]1", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
      RowBox[{"k2A", "=", 
       RowBox[{"(", 
        RowBox[{"\[Omega]2", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
      "\[Alpha]", ",", "\[Alpha]A", ",", "Sym\[Alpha]", ",", "Sym\[Alpha]A", 
      ",", "\[Alpha]2", ",", "\[Alpha]A2", ",", "Sym\[Alpha]2", ",", 
      "Sym\[Alpha]A2", ",", "propagatorDroit", ",", "SympropagatorDroit", ",",
       "propagatorGauche", ",", "SympropagatorGauche", ",", 
      "propagatorDroit2", ",", "SympropagatorDroit2", ",", 
      "propagatorGauche2", ",", "SympropagatorGauche2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Re", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"KList", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[GreaterEqual]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Alpha]", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
        RowBox[{"\[Alpha]A", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
        RowBox[{"Sym\[Alpha]", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
        RowBox[{"Sym\[Alpha]A", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1A"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"propagatorDroit", "=", 
         RowBox[{"BiSuperHestonFondamentalTransform", "[", 
          RowBox[{
          "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
           ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
           ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
           ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]m2", 
           ",", "\[Beta]m2", ",", "k1", ",", "k2", ",", "\[Tau]"}], "]"}]}], 
        ";", 
        RowBox[{"SympropagatorDroit", "=", 
         RowBox[{"BiSuperHestonFondamentalTransform", "[", 
          RowBox[{
          "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
           ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
           ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
           ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]m2", 
           ",", "\[Beta]m2", ",", "Sk1", ",", "k2", ",", "\[Tau]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"propagatorGauche", "=", 
         RowBox[{"BiSuperHestonFondamentalTransform", "[", 
          RowBox[{
          "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
           ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
           ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
           ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]m2", 
           ",", "\[Beta]m2", ",", "k1", ",", "k2A", ",", "\[Tau]"}], "]"}]}], 
        ";", 
        RowBox[{"SympropagatorGauche", "=", 
         RowBox[{"BiSuperHestonFondamentalTransform", "[", 
          RowBox[{
          "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
           ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
           ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
           ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]m2", 
           ",", "\[Beta]m2", ",", "Sk1A", ",", "k2A", ",", "\[Tau]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"KList", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
            RowBox[{
             RowBox[{"\[Alpha]", " ", "propagatorDroit", " ", 
              RowBox[{"VanillaPayOffFourierDroite", "[", 
               RowBox[{"k1", ",", "k2", ",", 
                RowBox[{"KList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "\[Alpha]1", ",", 
                "\[Beta]1", ",", "a", ",", "b"}], "]"}]}], "+", 
             "\[IndentingNewLine]", 
             RowBox[{"Sym\[Alpha]", " ", "SympropagatorDroit", " ", 
              RowBox[{"VanillaPayOffFourierDroite", "[", 
               RowBox[{"Sk1", ",", "k2", ",", 
                RowBox[{"KList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "\[Alpha]1", ",", 
                "\[Beta]1", ",", "a", ",", "b"}], "]"}]}], "+", 
             "\[IndentingNewLine]", 
             RowBox[{"\[Alpha]A", " ", "propagatorGauche", " ", 
              RowBox[{"VanillaPayOffFourierGauche", "[", 
               RowBox[{"k1", ",", "k2A", ",", 
                RowBox[{"KList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "\[Alpha]1", ",", 
                "\[Beta]1", ",", "a", ",", "b"}], "]"}]}], "+", 
             "\[IndentingNewLine]", 
             RowBox[{"Sym\[Alpha]A", " ", "SympropagatorGauche", " ", 
              RowBox[{"VanillaPayOffFourierGauche", "[", 
               RowBox[{"Sk1A", ",", "k2A", ",", 
                RowBox[{"KList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "\[Alpha]1", ",", 
                "\[Beta]1", ",", "a", ",", "b"}], "]"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[Alpha]", " ", "propagatorDroit", " ", 
              RowBox[{"VanillaPayOffFourierDroite", "[", 
               RowBox[{
               "k1", ",", "k2", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", 
                ",", "b"}], "]"}]}], "+", "\[IndentingNewLine]", 
             RowBox[{"Sym\[Alpha]", " ", "SympropagatorDroit", " ", 
              RowBox[{"VanillaPayOffFourierDroite", "[", 
               RowBox[{
               "Sk1", ",", "k2", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", 
                ",", "b"}], "]"}]}], "+", "\[IndentingNewLine]", 
             RowBox[{"\[Alpha]A", " ", "propagatorGauche", " ", 
              RowBox[{"VanillaPayOffFourierGauche", "[", 
               RowBox[{
               "k1", ",", "k2A", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", 
                ",", "b"}], "]"}]}], "+", "\[IndentingNewLine]", 
             RowBox[{"Sym\[Alpha]A", " ", "SympropagatorGauche", " ", 
              RowBox[{"VanillaPayOffFourierGauche", "[", 
               RowBox[{
               "Sk1", ",", "k2A", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a",
                 ",", "b"}], "]"}]}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Alpha]2", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "k1"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2"}]}]]}], ";", 
        RowBox[{"\[Alpha]A2", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "k1"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2A"}]}]]}], ";", 
        RowBox[{"Sym\[Alpha]2", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "Sk1"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2"}]}]]}], ";", 
        RowBox[{"Sym\[Alpha]A2", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "Sk1A"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2A"}]}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"propagatorDroit2", "=", 
         RowBox[{"BiSuperHestonFondamentalTransformReverse", "[", 
          RowBox[{
          "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
           ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
           ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
           ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]m2", 
           ",", "\[Beta]m2", ",", "k1", ",", "k2", ",", "\[Tau]"}], "]"}]}], 
        ";", 
        RowBox[{"SympropagatorDroit2", "=", 
         RowBox[{"BiSuperHestonFondamentalTransformReverse", "[", 
          RowBox[{
          "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
           ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
           ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
           ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]m2", 
           ",", "\[Beta]m2", ",", "Sk1", ",", "k2", ",", "\[Tau]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"propagatorGauche2", "=", 
         RowBox[{"BiSuperHestonFondamentalTransformReverse", "[", 
          RowBox[{
          "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
           ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
           ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
           ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]m2", 
           ",", "\[Beta]m2", ",", "k1", ",", "k2A", ",", "\[Tau]"}], "]"}]}], 
        ";", 
        RowBox[{"SympropagatorGauche2", "=", 
         RowBox[{"BiSuperHestonFondamentalTransformReverse", "[", 
          RowBox[{
          "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
           ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
           ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
           ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]m2", 
           ",", "\[Beta]m2", ",", "Sk1A", ",", "k2A", ",", "\[Tau]"}], 
          "]"}]}], ";", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]2", " ", 
              RowBox[{"(", 
               RowBox[{"propagatorDroit2", " ", 
                RowBox[{"(", 
                 RowBox[{"VanillaPayOffFourierDroite", "[", 
                  RowBox[{"k1", ",", "k2", ",", 
                   RowBox[{"-", 
                    RowBox[{"KList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[Alpha]1", ",", 
                   "\[Beta]1", ",", "a", ",", "b"}], "]"}], ")"}]}], ")"}]}], 
             "+", 
             RowBox[{"Sym\[Alpha]2", " ", 
              RowBox[{"(", 
               RowBox[{"SympropagatorDroit2", 
                RowBox[{"(", 
                 RowBox[{"VanillaPayOffFourierDroite", "[", 
                  RowBox[{"Sk1", ",", "k2", ",", 
                   RowBox[{"-", 
                    RowBox[{"KList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[Alpha]1", ",", 
                   "\[Beta]1", ",", "a", ",", "b"}], "]"}], ")"}]}], 
               ")"}]}]}], ")"}], " ", "+", "\[IndentingNewLine]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]A2", " ", "propagatorGauche2", 
              RowBox[{"(", " ", 
               RowBox[{"VanillaPayOffFourierGauche", "[", 
                RowBox[{"k1", ",", "k2A", ",", 
                 RowBox[{"-", 
                  RowBox[{"KList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[Alpha]1", ",", 
                 "\[Beta]1", ",", "a", ",", "b"}], "]"}], ")"}]}], "+", 
             RowBox[{"Sym\[Alpha]A2", " ", "SympropagatorGauche2", 
              RowBox[{"(", 
               RowBox[{"VanillaPayOffFourierGauche", "[", 
                RowBox[{"Sk1A", ",", "k2A", ",", 
                 RowBox[{"-", 
                  RowBox[{"KList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[Alpha]1", ",", 
                 "\[Beta]1", ",", "a", ",", "b"}], "]"}], ")"}]}]}], ")"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402140085770051*^9, 3.4021400863013115`*^9}, {
   3.4021401238489075`*^9, 3.4021402363666925`*^9}, {3.402140267929798*^9, 
   3.402140316290102*^9}, {3.4021403621347322`*^9, 3.4021403798069468`*^9}, {
   3.402140442948784*^9, 3.4021404698243*^9}, {3.40214052530974*^9, 
   3.4021405261847568`*^9}, {3.402140572076263*^9, 3.4021405730294065`*^9}, {
   3.40214283290092*^9, 3.402142834900958*^9}, 3.402142878995555*^9, {
   3.4021429531532288`*^9, 3.40214297455989*^9}, {3.4021430512488623`*^9, 
   3.4021430865307894`*^9}, {3.402143143625636*^9, 3.4021431463288126`*^9}, {
   3.402143222267771*^9, 3.402143365629898*^9}, {3.4021439797510643`*^9, 
   3.4021440141579747`*^9}, {3.4021444783543873`*^9, 
   3.4021445164332433`*^9}, {3.4021445469025784`*^9, 3.402144574918741*^9}, {
   3.4021446846239724`*^9, 3.4021446895459423`*^9}, {3.4021447226559525`*^9, 
   3.402144729593586*^9}, {3.402144860127342*^9, 3.402144926378614*^9}, {
   3.4021449572542067`*^9, 3.402145180727247*^9}, {3.402149153412896*^9, 
   3.4021491595067635`*^9}, {3.4021496964233217`*^9, 3.402149821410097*^9}, {
   3.40214987416111*^9, 3.402149884755063*^9}, {3.4021499394279876`*^9, 
   3.4021499498344374`*^9}, {3.402150065133526*^9, 3.402150121790864*^9}, {
   3.4021501655260787`*^9, 3.4021502014486437`*^9}, {3.402150388827241*^9, 
   3.4021504643911915`*^9}, {3.4021505016731577`*^9, 3.402150539877016*^9}, {
   3.402150576221464*^9, 3.4021506145190744`*^9}, 3.402150646160307*^9, {
   3.4021507013801165`*^9, 3.402150701614496*^9}, {3.402150792022482*^9, 
   3.4021508226011944`*^9}, {3.4022048852154446`*^9, 
   3.4022049314194565`*^9}, {3.402223441649846*^9, 3.4022234739004655`*^9}, {
   3.4022235664178667`*^9, 3.4022235977934694`*^9}, {3.402225770632062*^9, 
   3.4022257810853877`*^9}, {3.4022260066522183`*^9, 
   3.4022260340902452`*^9}, {3.402227989127781*^9, 3.4022280025967894`*^9}, 
   3.4022280710668545`*^9, {3.4022281624279833`*^9, 3.4022281629904943`*^9}, {
   3.4023193135668306`*^9, 3.4023194603141108`*^9}, {3.402319603150462*^9, 
   3.40231966787294*^9}, {3.4023197252970443`*^9, 3.4023197324378977`*^9}, {
   3.4023205583495092`*^9, 3.4023206749454975`*^9}, {3.4023207399779963`*^9, 
   3.4023207413373976`*^9}, {3.4023208249015017`*^9, 
   3.4023209920765867`*^9}, {3.4023211800958214`*^9, 3.40232123755005*^9}, {
   3.4023216909806304`*^9, 3.4023216975588818`*^9}, {3.402321742184738*^9, 
   3.4023217427316236`*^9}, {3.4023247260232773`*^9, 
   3.4023248331659594`*^9}, {3.4023253919266872`*^9, 
   3.4023255075695324`*^9}, {3.40237831846457*^9, 3.4023783246678143`*^9}, {
   3.4041932487247953`*^9, 3.4041932623344316`*^9}, {3.40419333647648*^9, 
   3.4041933710083933`*^9}, {3.4041937125305753`*^9, 3.404193749953169*^9}, {
   3.4043002135695343`*^9, 3.4043002231947346`*^9}, {3.4044649846669784`*^9, 
   3.4044650123383217`*^9}, {3.4044650477751417`*^9, 
   3.4044651238049316`*^9}, {3.404465582921117*^9, 3.4044656190610476`*^9}, {
   3.4044656599352627`*^9, 3.4044656716225386`*^9}, {3.4044670806423597`*^9, 
   3.404467083939172*^9}, {3.4044685611608086`*^9, 3.4044685642701235`*^9}, {
   3.4044686800022764`*^9, 3.4044687901564116`*^9}, {3.4044707796025887`*^9, 
   3.4044707807275667`*^9}, 3.404652171754368*^9, {3.4046522684124737`*^9, 
   3.404652301397482*^9}, 3.4048112137223434`*^9, {3.4048113224921446`*^9, 
   3.4048113889321957`*^9}, 3.404826533466849*^9, {3.404826732521367*^9, 
   3.404826749568897*^9}, {3.4088588418039446`*^9, 3.4088588587261443`*^9}, {
   3.4088589845254345`*^9, 3.4088589856348314`*^9}, {3.4088590731990128`*^9, 
   3.4088591389971504`*^9}, {3.4088591873262033`*^9, 
   3.4088592731559763`*^9}, {3.4088593470167694`*^9, 
   3.4088594615658436`*^9}, {3.4097421215054293`*^9, 3.409742208598429*^9}, {
   3.409742288519429*^9, 3.4097423120174294`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SmileSymetrizedBiSuperHestonVanillaIntegrandCC", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Y", ",", "_Real", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"KList", ",", "_Real", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "_Real"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[Rho]1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]v1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]v1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"V1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]v2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]v2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"V2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]v3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]v3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"V3", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]m2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]m2", ",", "_Real"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]1", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]1", ",", "_Complex"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]2", ",", "_Complex"}], "}"}]}], "}"}], ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x1", "=", 
          RowBox[{"Y", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"x2", "=", 
          RowBox[{"Y", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"k1", "=", 
          RowBox[{"(", 
           RowBox[{"\[Omega]1", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
         RowBox[{"Sk1", "=", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Omega]1"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
         RowBox[{"k2", "=", " ", 
          RowBox[{"(", 
           RowBox[{"\[Omega]2", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
         RowBox[{"Sk2", "=", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Omega]2"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
         RowBox[{"Sk1A", "=", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Omega]1"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
         RowBox[{"k1A", "=", 
          RowBox[{"(", 
           RowBox[{"\[Omega]1", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
         RowBox[{"k2A", "=", 
          RowBox[{"(", 
           RowBox[{"\[Omega]2", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
         "\[Alpha]", ",", "\[Alpha]A", ",", "Sym\[Alpha]", ",", 
         "Sym\[Alpha]A", ",", "\[Alpha]2", ",", "\[Alpha]A2", ",", 
         "Sym\[Alpha]2", ",", "Sym\[Alpha]A2", ",", "propagatorDroit", ",", 
         "SympropagatorDroit", ",", "propagatorGauche", ",", 
         "SympropagatorGauche", ",", "propagatorDroit2", ",", 
         "SympropagatorDroit2", ",", "propagatorGauche2", ",", 
         "SympropagatorGauche2"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Re", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"KList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[GreaterEqual]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Alpha]", "=", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
              RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
           RowBox[{"\[Alpha]A", "=", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
              RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
           RowBox[{"Sym\[Alpha]", "=", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1"}], "-", 
              RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
           RowBox[{"Sym\[Alpha]A", "=", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1A"}], "-", 
              
              RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"propagatorDroit", "=", 
            RowBox[{"BiSuperHestonFondamentalTransformCC", "[", 
             RowBox[{
             "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
              "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",",
               "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",",
               "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", 
              ",", "\[Alpha]m2", ",", "\[Beta]m2", ",", "k1", ",", "k2", ",", 
              "\[Tau]"}], "]"}]}], ";", 
           RowBox[{"SympropagatorDroit", "=", 
            RowBox[{"BiSuperHestonFondamentalTransformCC", "[", 
             RowBox[{
             "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
              "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",",
               "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",",
               "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", 
              ",", "\[Alpha]m2", ",", "\[Beta]m2", ",", "Sk1", ",", "k2", ",",
               "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"propagatorGauche", "=", 
            RowBox[{"BiSuperHestonFondamentalTransformCC", "[", 
             RowBox[{
             "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
              "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",",
               "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",",
               "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", 
              ",", "\[Alpha]m2", ",", "\[Beta]m2", ",", "k1", ",", "k2A", ",",
               "\[Tau]"}], "]"}]}], ";", 
           RowBox[{"SympropagatorGauche", "=", 
            RowBox[{"BiSuperHestonFondamentalTransformCC", "[", 
             RowBox[{
             "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
              "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",",
               "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",",
               "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", 
              ",", "\[Alpha]m2", ",", "\[Beta]m2", ",", "Sk1A", ",", "k2A", 
              ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"KList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", "propagatorDroit", " ", 
                 RowBox[{"VanillaPayOffFourierDroiteCC", "[", 
                  RowBox[{"k1", ",", "k2", ",", 
                   RowBox[{"KList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Alpha]1", ",", 
                   "\[Beta]1", ",", "a", ",", "b"}], "]"}]}], "+", 
                "\[IndentingNewLine]", 
                RowBox[{"Sym\[Alpha]", " ", "SympropagatorDroit", " ", 
                 RowBox[{"VanillaPayOffFourierDroiteCC", "[", 
                  RowBox[{"Sk1", ",", "k2", ",", 
                   RowBox[{"KList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Alpha]1", ",", 
                   "\[Beta]1", ",", "a", ",", "b"}], "]"}]}], "+", 
                "\[IndentingNewLine]", 
                RowBox[{"\[Alpha]A", " ", "propagatorGauche", " ", 
                 RowBox[{"VanillaPayOffFourierGaucheCC", "[", 
                  RowBox[{"k1", ",", "k2A", ",", 
                   RowBox[{"KList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Alpha]1", ",", 
                   "\[Beta]1", ",", "a", ",", "b"}], "]"}]}], "+", 
                "\[IndentingNewLine]", 
                RowBox[{"Sym\[Alpha]A", " ", "SympropagatorGauche", " ", 
                 RowBox[{"VanillaPayOffFourierGaucheCC", "[", 
                  RowBox[{"Sk1A", ",", "k2A", ",", 
                   RowBox[{"KList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Alpha]1", ",", 
                   "\[Beta]1", ",", "a", ",", "b"}], "]"}]}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", "propagatorDroit", " ", 
                 RowBox[{"VanillaPayOffFourierDroiteCC0", "[", 
                  RowBox[{
                  "k1", ",", "k2", ",", "\[Alpha]1", ",", "\[Beta]1", ",", 
                   "a", ",", "b"}], "]"}]}], "+", "\[IndentingNewLine]", 
                RowBox[{"Sym\[Alpha]", " ", "SympropagatorDroit", " ", 
                 RowBox[{"VanillaPayOffFourierDroiteCC0", "[", 
                  RowBox[{
                  "Sk1", ",", "k2", ",", "\[Alpha]1", ",", "\[Beta]1", ",", 
                   "a", ",", "b"}], "]"}]}], "+", "\[IndentingNewLine]", 
                RowBox[{"\[Alpha]A", " ", "propagatorGauche", " ", 
                 RowBox[{"VanillaPayOffFourierGaucheCC0", "[", 
                  RowBox[{
                  "k1", ",", "k2A", ",", "\[Alpha]1", ",", "\[Beta]1", ",", 
                   "a", ",", "b"}], "]"}]}], "+", "\[IndentingNewLine]", 
                RowBox[{"Sym\[Alpha]A", " ", "SympropagatorGauche", " ", 
                 RowBox[{"VanillaPayOffFourierGaucheCC0", "[", 
                  RowBox[{
                  "Sk1", ",", "k2A", ",", "\[Alpha]1", ",", "\[Beta]1", ",", 
                   "a", ",", "b"}], "]"}]}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}], ",",
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Alpha]2", "=", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "k1"}], "-", 
              RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2"}]}]]}], ";", 
           RowBox[{"\[Alpha]A2", "=", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "k1"}], "-", 
              RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2A"}]}]]}], ";", 
           RowBox[{"Sym\[Alpha]2", "=", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "Sk1"}], "-", 
              RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2"}]}]]}], ";", 
           RowBox[{"Sym\[Alpha]A2", "=", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "Sk1A"}], "-", 
              
              RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2A"}]}]]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"propagatorDroit2", "=", 
            RowBox[{"BiSuperHestonFondamentalTransformReverseCC", "[", 
             RowBox[{
             "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
              "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",",
               "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",",
               "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", 
              ",", "\[Alpha]m2", ",", "\[Beta]m2", ",", "k1", ",", "k2", ",", 
              "\[Tau]"}], "]"}]}], ";", 
           RowBox[{"SympropagatorDroit2", "=", 
            RowBox[{"BiSuperHestonFondamentalTransformReverseCC", "[", 
             RowBox[{
             "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
              "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",",
               "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",",
               "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", 
              ",", "\[Alpha]m2", ",", "\[Beta]m2", ",", "Sk1", ",", "k2", ",",
               "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"propagatorGauche2", "=", 
            RowBox[{"BiSuperHestonFondamentalTransformReverseCC", "[", 
             RowBox[{
             "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
              "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",",
               "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",",
               "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", 
              ",", "\[Alpha]m2", ",", "\[Beta]m2", ",", "k1", ",", "k2A", ",",
               "\[Tau]"}], "]"}]}], ";", 
           RowBox[{"SympropagatorGauche2", "=", 
            RowBox[{"BiSuperHestonFondamentalTransformReverseCC", "[", 
             RowBox[{
             "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
              "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",",
               "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",",
               "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", 
              ",", "\[Alpha]m2", ",", "\[Beta]m2", ",", "Sk1A", ",", "k2A", 
              ",", "\[Tau]"}], "]"}]}], ";", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]2", " ", 
                 RowBox[{"(", 
                  RowBox[{"propagatorDroit2", " ", 
                   RowBox[{"(", 
                    RowBox[{"VanillaPayOffFourierDroiteCC", "[", 
                    RowBox[{"k1", ",", "k2", ",", 
                    RowBox[{"-", 
                    RowBox[{"KList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[Alpha]1", ",", 
                    "\[Beta]1", ",", "a", ",", "b"}], "]"}], ")"}]}], ")"}]}],
                 "+", 
                RowBox[{"Sym\[Alpha]2", " ", 
                 RowBox[{"(", 
                  RowBox[{"SympropagatorDroit2", 
                   RowBox[{"(", 
                    RowBox[{"VanillaPayOffFourierDroiteCC", "[", 
                    RowBox[{"Sk1", ",", "k2", ",", 
                    RowBox[{"-", 
                    RowBox[{"KList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[Alpha]1", ",", 
                    "\[Beta]1", ",", "a", ",", "b"}], "]"}], ")"}]}], 
                  ")"}]}]}], ")"}], " ", "+", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]A2", " ", "propagatorGauche2", 
                 RowBox[{"(", " ", 
                  RowBox[{"VanillaPayOffFourierGaucheCC", "[", 
                   RowBox[{"k1", ",", "k2A", ",", 
                    RowBox[{"-", 
                    RowBox[{"KList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[Alpha]1", ",", 
                    "\[Beta]1", ",", "a", ",", "b"}], "]"}], ")"}]}], "+", 
                RowBox[{"Sym\[Alpha]A2", " ", "SympropagatorGauche2", 
                 RowBox[{"(", 
                  RowBox[{"VanillaPayOffFourierGaucheCC", "[", 
                   RowBox[{"Sk1A", ",", "k2A", ",", 
                    RowBox[{"-", 
                    RowBox[{"KList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[Alpha]1", ",", 
                    "\[Beta]1", ",", "a", ",", "b"}], "]"}], ")"}]}]}], 
               ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402140085770051*^9, 3.4021400863013115`*^9}, {
   3.4021401238489075`*^9, 3.4021402363666925`*^9}, {3.402140267929798*^9, 
   3.402140316290102*^9}, {3.4021403621347322`*^9, 3.4021403798069468`*^9}, {
   3.402140442948784*^9, 3.4021404698243*^9}, {3.40214052530974*^9, 
   3.4021405261847568`*^9}, {3.402140572076263*^9, 3.4021405730294065`*^9}, {
   3.40214283290092*^9, 3.402142834900958*^9}, 3.402142878995555*^9, {
   3.4021429531532288`*^9, 3.40214297455989*^9}, {3.4021430512488623`*^9, 
   3.4021430865307894`*^9}, {3.402143143625636*^9, 3.4021431463288126`*^9}, {
   3.402143222267771*^9, 3.402143365629898*^9}, {3.4021439797510643`*^9, 
   3.4021440141579747`*^9}, {3.4021444783543873`*^9, 
   3.4021445164332433`*^9}, {3.4021445469025784`*^9, 3.402144574918741*^9}, {
   3.4021446846239724`*^9, 3.4021446895459423`*^9}, {3.4021447226559525`*^9, 
   3.402144729593586*^9}, {3.402144860127342*^9, 3.402144926378614*^9}, {
   3.4021449572542067`*^9, 3.402145180727247*^9}, {3.402149153412896*^9, 
   3.4021491595067635`*^9}, {3.4021496964233217`*^9, 3.402149821410097*^9}, {
   3.40214987416111*^9, 3.402149884755063*^9}, {3.4021499394279876`*^9, 
   3.4021499498344374`*^9}, {3.402150065133526*^9, 3.402150121790864*^9}, {
   3.4021501655260787`*^9, 3.4021502014486437`*^9}, {3.402150388827241*^9, 
   3.4021504643911915`*^9}, {3.4021505016731577`*^9, 3.402150539877016*^9}, {
   3.402150576221464*^9, 3.4021506145190744`*^9}, 3.402150646160307*^9, {
   3.4021507013801165`*^9, 3.402150701614496*^9}, {3.402150792022482*^9, 
   3.4021508226011944`*^9}, {3.4022048852154446`*^9, 
   3.4022049314194565`*^9}, {3.402223441649846*^9, 3.4022234739004655`*^9}, {
   3.4022235664178667`*^9, 3.4022235977934694`*^9}, {3.402225770632062*^9, 
   3.4022257810853877`*^9}, {3.4022260066522183`*^9, 
   3.4022260340902452`*^9}, {3.402227989127781*^9, 3.4022280025967894`*^9}, 
   3.4022280710668545`*^9, {3.4022281624279833`*^9, 3.4022281629904943`*^9}, {
   3.4023193135668306`*^9, 3.4023194603141108`*^9}, {3.402319603150462*^9, 
   3.40231966787294*^9}, {3.4023197252970443`*^9, 3.4023197324378977`*^9}, {
   3.4023205583495092`*^9, 3.4023206749454975`*^9}, {3.4023207399779963`*^9, 
   3.4023207413373976`*^9}, {3.4023208249015017`*^9, 
   3.4023209920765867`*^9}, {3.4023211800958214`*^9, 3.40232123755005*^9}, {
   3.4023216909806304`*^9, 3.4023216975588818`*^9}, {3.402321742184738*^9, 
   3.4023217427316236`*^9}, {3.4023247260232773`*^9, 
   3.4023248331659594`*^9}, {3.4023253919266872`*^9, 
   3.4023255075695324`*^9}, {3.40237831846457*^9, 3.4023783246678143`*^9}, {
   3.4041932487247953`*^9, 3.4041932623344316`*^9}, {3.40419333647648*^9, 
   3.4041933710083933`*^9}, {3.4041937125305753`*^9, 3.404193749953169*^9}, {
   3.4043002135695343`*^9, 3.4043002231947346`*^9}, {3.4044649846669784`*^9, 
   3.4044650123383217`*^9}, {3.4044650477751417`*^9, 
   3.4044651238049316`*^9}, {3.404465582921117*^9, 3.4044656190610476`*^9}, {
   3.4044656599352627`*^9, 3.4044656716225386`*^9}, {3.4044670806423597`*^9, 
   3.404467083939172*^9}, {3.4044685611608086`*^9, 3.4044685642701235`*^9}, {
   3.4044686800022764`*^9, 3.4044687901564116`*^9}, {3.4044707796025887`*^9, 
   3.4044707807275667`*^9}, 3.404652171754368*^9, {3.4046522684124737`*^9, 
   3.404652301397482*^9}, 3.4048112137223434`*^9, {3.4048113224921446`*^9, 
   3.4048113889321957`*^9}, 3.404826533466849*^9, {3.404826732521367*^9, 
   3.404826749568897*^9}, {3.4088588418039446`*^9, 3.4088588587261443`*^9}, {
   3.4088589845254345`*^9, 3.4088589856348314`*^9}, {3.4088590731990128`*^9, 
   3.4088591389971504`*^9}, {3.4088591873262033`*^9, 
   3.4088592731559763`*^9}, {3.4088593470167694`*^9, 
   3.4088594615658436`*^9}, {3.4088637363354177`*^9, 3.408863829259077*^9}, {
   3.408863962136628*^9, 3.4088642789239607`*^9}, 3.4088724764250994`*^9, {
   3.4088726028650265`*^9, 3.4088726083026314`*^9}, {3.409742328344429*^9, 
   3.4097423520034294`*^9}, {3.409742389731429*^9, 3.4097423967014294`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
     "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
     "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
     "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "Z1", ",", "Z2", ",", 
     "\[Tau]", ",", 
     RowBox[{"Y", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "0.05", "]"}], ",", 
        RowBox[{"Log", "[", "0.05", "]"}]}], "}"}]}], ",", 
     RowBox[{"\[Alpha]1", "=", "1"}], ",", 
     RowBox[{"\[Beta]1", "=", "1"}], ",", 
     RowBox[{"a", "=", "1"}], ",", 
     RowBox[{"b", "=", "1"}], ",", 
     RowBox[{"KList", "=", 
      RowBox[{"{", "0.0", "}"}]}], ",", "\[Lambda]1", ",", "\[Lambda]2"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]1", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v1", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v1", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]1", "=", "0.2"}], ";", 
    RowBox[{"V1", "=", "0.01"}], ";", 
    RowBox[{"\[Rho]2", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v2", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v2", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]2", "=", "0.2"}], ";", 
    RowBox[{"V2", "=", "0.01"}], ";", 
    RowBox[{"\[Rho]3", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v3", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v3", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]3", "=", "0.2"}], ";", 
    RowBox[{"V3", "=", "0.01"}], ";", 
    RowBox[{"\[Tau]", "=", "10"}], ";", 
    RowBox[{"Z1", "=", "0.1"}], ";", 
    RowBox[{"Z2", "=", "0.1"}], ";", 
    RowBox[{"\[Lambda]1", "=", "1.1"}], ";", 
    RowBox[{"\[Lambda]2", "=", "1.01"}], ";", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Timing", "[", 
       RowBox[{"SmileSymetrizedBiSuperHestonVanillaIntegrand", "[", 
        RowBox[{
        "Y", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
         "KList", ",", "\[Tau]", ",", "\[Rho]1", ",", "\[Lambda]v1", ",", 
         "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", 
         "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", 
         "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", 
         ",", "V3", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "Z1", ",", 
         "Z2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Timing", "[", 
       RowBox[{"SmileSymetrizedBiSuperHestonVanillaIntegrandCC", "[", 
        RowBox[{
        "Y", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
         "KList", ",", "\[Tau]", ",", "\[Rho]1", ",", "\[Lambda]v1", ",", 
         "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", 
         "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", 
         "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", 
         ",", "V3", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "Z1", ",", 
         "Z2"}], "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4088573008524837`*^9, 3.408857524653656*^9}, {
   3.408857593264348*^9, 3.408857593936236*^9}, {3.4088576304056864`*^9, 
   3.4088577180479937`*^9}, {3.4088579406460176`*^9, 
   3.4088579635995836`*^9}, {3.4088580380385127`*^9, 
   3.4088580947583513`*^9}, {3.4088581676191254`*^9, 3.408858175041143*^9}, {
   3.408858209635557*^9, 3.4088582112605886`*^9}, {3.4088595422080173`*^9, 
   3.4088596282721696`*^9}, {3.408859659069636*^9, 3.408859700211051*^9}, {
   3.408859742008728*^9, 3.4088597739312162`*^9}, {3.4088598296510363`*^9, 
   3.4088598803707595`*^9}, {3.408859910386961*^9, 3.4088599120119925`*^9}, {
   3.408864291377324*^9, 3.4088643625818167`*^9}, 3.4088653290534973`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.016000000000000222`", ",", 
     RowBox[{"{", "8.7842382948609`", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.0773313624822265`*^-16", ",", 
     RowBox[{"{", "8.784238294860897`", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.408859775603123*^9, {3.408859884464588*^9, 3.4088599132151403`*^9}, {
   3.408864312862112*^9, 3.408864364534979*^9}, {3.4088653083030987`*^9, 
   3.408865331584796*^9}, 3.408872620677869*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
     "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
     "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
     "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "Z1", ",", "Z2", ",", 
     "\[Tau]", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", 
     RowBox[{"Y", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "0.05", "]"}], ",", 
        RowBox[{"Log", "[", "0.05", "]"}]}], "}"}]}], ",", 
     RowBox[{"\[Alpha]1", "=", "1"}], ",", 
     RowBox[{"\[Beta]1", "=", "1"}], ",", 
     RowBox[{"a", "=", "1"}], ",", 
     RowBox[{"b", "=", "1"}], ",", 
     RowBox[{"KList", "=", 
      RowBox[{"{", "0.05", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]1", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v1", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v1", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]1", "=", "0.2"}], ";", 
    RowBox[{"V1", "=", "0.01"}], ";", 
    RowBox[{"\[Rho]2", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v2", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v2", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]2", "=", "0.2"}], ";", 
    RowBox[{"V2", "=", "0.01"}], ";", 
    RowBox[{"\[Rho]3", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v3", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v3", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]3", "=", "0.2"}], ";", 
    RowBox[{"V3", "=", "0.01"}], ";", 
    RowBox[{"\[Tau]", "=", "5"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Lambda]1", "=", "1.1"}], ";", 
    RowBox[{"\[Lambda]2", "=", "1.01"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"SmileSymetrizedBiSuperHestonVanillaIntegrand", "[", 
        RowBox[{
        "Y", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
         "KList", ",", "\[Tau]", ",", "\[Rho]1", ",", "\[Lambda]v1", ",", 
         "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", 
         "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", 
         "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", 
         ",", "V3", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "Z1", ",", 
         "Z2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Z1", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Z2", ",", 
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4088573008524837`*^9, 3.408857524653656*^9}, {
   3.408857593264348*^9, 3.408857593936236*^9}, {3.4088576304056864`*^9, 
   3.4088577180479937`*^9}, {3.4088579406460176`*^9, 
   3.4088579635995836`*^9}, {3.4088580380385127`*^9, 
   3.4088580947583513`*^9}, {3.4088581676191254`*^9, 3.408858175041143*^9}, {
   3.408858209635557*^9, 3.4088582112605886`*^9}, {3.4088595422080173`*^9, 
   3.4088596282721696`*^9}, {3.408859659069636*^9, 3.408859700211051*^9}, {
   3.4088599417781887`*^9, 3.4088600022637253`*^9}, {3.408860063921159*^9, 
   3.4088600715775557`*^9}, 3.4088601425476685`*^9, {3.408860193001762*^9, 
   3.40886019573619*^9}, {3.40886023093999*^9, 3.408860239627657*^9}, {
   3.4088602794721727`*^9, 3.408860281800342*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
vgHvmrbg7vZb9infgC+IapDc51fEBfOEcfCT5wE/+bvgJ9MJfvK6wE/mA/jJ
fAM/737/mq0RPT2t/WS98hN4rSKZHxp27ZDyE/gPjbqv3tjojJ5T4E+1rlWj
1pBLAn4Cf7/RxDQ9Z17W8wt8Yo0VfQr0Ur4pfuyDKqNvHcoaAd94PPjG84Nv
TA/4xvSDb7xe8I35A759GNjJez8tnVTx0Sg9v8Drxb/5VvyVlco34DU/HD71
k+ePKt+AZxp1dGvC4gTlG/BZfRtk/uSxq8o34DM/iJ23sMZF5RvwxsfPtCla
PH0Ecsg4+MnzgJ/8XfCT6QQ/eV3gJ/MB/GS+gZ/wC146P86sP3dI+Qn8Sokb
DSZ3Oq/6EPjRxZuaDut2Xc818Cf6J03vvDtZzy/wR/O83LlBtgQ9v8C/7Fy3
2IcfFjLgD48HH3h+8IHpAR+YfvCB10t8EA8fxMMH8fBBPHwQ4oPGAR4+iIcP
4uGDePggHj4I8yGQE/GcL/GcL/GcL/GcL/GcL/GcL/GcL/GcL/GcL/GcL/Gc
L/GcL/GcL+HzFegx8eh58eh58eh58eh58eh5IT0PvSoePS8ePS8ePS8ePS8e
PS8ePS+s5wO7KR5/Qzz+hnj8DfH4G+LxN8Tjb4jH3xCPvyEef0M8/oZ4/A3x
+Bvi8TeE/Y3ArzMev9d4/F7j8XuNx+81Hr/XkN8LP9N4/F7j8XuNx+81Hr/X
ePxe4/F7Dfu9QRxhPPGU8cRTxhNPGU88ZTzxlPHEU8YTTxlPPGU88ZTxxFPG
E0+l4EMQhxpPfG088bXxxNfGE18bT3xtPPG18cTXxhNfG098bTi+Rty9a1PF
abe+6655G+ArJ8QPXHlinOYtgX9cPk9su94/aX4S+LLjY96t88jfqt/QDzP7
+Iql/SITNc+D8WmiWy3qmGut8hnjV0atbNa6Vchn4Jk/7hZTadtWtReYZ0qr
579ZO3qb+kPAl3e7s6V21y06HnH0I7t6Nkw3cK3uF/qjPl+0/ehzf43RPBLm
Wd994KnnOs1R/Ynxaxe989gP3bdofgnjK9/Jkf1s2UQdD/rb/1K1bvYeJ3Tf
eR7sO9MDvcHrxXjM/1i/6+Um3dik4zFP9YYfbriv13zNX2Ge2fXqt38mrfJT
mD/Ia/F+QQ5T35eTwvIA+eT9xXlkOUQejOUN8gk6y7//17LvRkxVOQQ+sc6b
1Sfle0nlDXiaTbnWD6irfqriS97LfWnJhnW678DPZm+S71a2P8gPyRQ5emp2
/cPnp+n+Ao88OealvTPh10YJz0P2QvMk8F+ZHtef4e/GCa8L/Gc+uP5Mpsi9
Rbc9XX5wlObVmZ+un/PvuuL2b4p5bZnqT+Btt8QU6Xtsru4L1lV0xNVpj21f
qPsCfOyX04ufq7+F4pF0kf2Jv7VuchP14jgdv6d3haY/9t9HcUq6yJ15ny6Z
2mEXxSnpIqvbZaklo49qPIZ5vqhbbtoHTWLVvmN8zsLprqzuhTpWlI7PN2H5
uhvfrdI6CPAJeR9+bNii9MaN+9JFzkeyLGxT6IbuI3/XjYPSRWq9nZwvTyXg
MTq+3ZOtig+udUT9hNTpjBPmjxtPhXyAPDD/3Tgr5CfkgffRjb/C/cK+Iy+0
qH/HxvkGL1d7ATzroBGZsmZbp/l/4DWTR156Jekb3XfgB4aOu91s1jrdR+BH
ZjQtNqr/Id0v4D02l2u6v8pi68ZfSbZdjyoz+vaaQvFXkn1kwoqKeZdCP0cJ
z0PxheaRsL9Mjxuv8XfjhNeFfWE+uPFakm14X7ZViYm7tV7AfHbjuCS78fNV
62VqtOpP5r8b3yXZoy/Fztt0cpPafay32T0fZ640dBfVK6/ZpGcXJBRIt0D3
EfiAlz5cnube4+Ke60R7tvb+NmV/PKh6GONnnnunR+FvL4h7rv8dX7XT3urV
L4h7rhPtirX1pw9od131NuZ5MU26W0/ND+NHjG/yXLrSc96+TXXMa7bxhMw1
X6p7f8Q9v4m2jmlR/1zT3Lq/PL9bx7xm37t/7Bd9n7ss7jkNv+vWN8P1uuc0
XJdb9wz56Z7TkD9uPTTcL/echvx366ThPrp9FPG244uHHrr3lZ8pjxRno365
mLbksN3Uj/Gvvm8/v0qHh7aqngfed/ecpnmv7iJ5iLMH5t5bLz7bfv07xn/b
79DgEV+fpn6MePvmjuOXOue8rPsOfP07UZlK3ntV7TXwQfNXpl9bdaraa3zn
3c/WVz40fI3Kg+YP53c9MH3VfSQPcfb3Z47lG1cwjfYV8PyU79K8H+SH6XT1
f0gP5IT54PZ1hPx0+zrC/XL3PeSz2+8R7pebNwv31+33iLYFCw2f0G3xCep3
iraV5+Y90LBftO478O2D0md9859Ete/g97jLeRcvfjNR+Yvx6x7b07/3qSS1
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
nLo+zIcg/3//igeffKCm3lcVHo86F/CJj3295tE31R5pnejK4ryZW7fTd+Q0
znru8lXz6caV6m8hnkrM239p9pY3tF4DP7/U1tEzupVOIr8u0Y6ZPePTByrd
1P2Cn18t/Z/RNb7Re7LqP1cYNDgu3bQDWkfA+BmLmnSeMfAq+5nWzWduEp7f
7bc5adN3LTNgbppo5T++s+B2jvJ1s2SOEJ2Cedy+tRh5fd7mmMtzi+h3gYN+
okeIHp0f9Ljylig/7Jm3Iuu2JK0nwk8Dn11/PklyfrJhc7N6G4TkRyAPJCfC
cgJ/BvsOOjEe8oP6H+zmwHrfffvoY6GdQn0H8knnyHjOkcG5oPNiPOfF8HmB
viX9oPYR+oHOu+HzznlR12/Makhv6HjWb9DP0LegH/XN433tnIJnw/lR34T+
hP4HTnpY7QL0MOhHHflUo3tW3ai7U+UEertKVfl66L391G+EXfig8NwOBS+u
URz6OascGTuriVV/G/ODfuQlMP+Lr24uuGrTapUT4Juzf7/0TMNVOh7fLdpt
95d/F96pOL7buMPqbz/9awfzR+0L7DvmL9lw0swGq0+ofvDhmCftY3teyDdh
j/qHTD/0LejcW676Z4+/qvsVvmNfu23uat/v4H1nOyu8L3fl+6iOb5SzRbpf
smxWHHzYliXv9OXF1mqeCuOnjPls9u6pVnGMbza1+eGDSfPUX+V9h7+E8fHL
TpQZ9dpm5QPzH/IAu/bOwuKLVqfdr34d7FrnLOmiuxxSvWrZrmF/Mc/Zrj0+
LJJ4XHGMnzy3b5U6g05qHAH7/srfJx4/2uS6+mOMY18wf/ryh2u+tuio2k3M
X7F85u+2jTmmfjLbd/Af83yTLl3JCV/FKo71zl72aqWKNQ9oHhvje+y+VfCH
9tGKY/x9Wf4uuKf1Okt61ZJe1fHQq24+J8lCz8MPh13u9UZ0hWE34xSHXT5c
uPGlji+H9TKMb7qrbN/B4y8qjvHZYzZebvvjBT3vnMfDfmGeBV06tS1654a4
+5ho42KaXH8o7209p/ArjiRtaDs+fY4I9pFxd18SLewg+I/vvvX5+nwNy11R
HHR+dqHEqIE/X9ZzgfE1+tnO62+fURzjN3QatK5v9rA+i/Fvf3Q0T1y+/Ypj
fM5tvQtVnbdZyG5atpvsb4APmGfqRx9GfR1TAPkurfO+93v96BvFr1jCBTj2
C+Pz/L0xw/SMaSKEC3DsI/s57n5F2Y7LNxZsHpORcQFO/o+F/+PuV5TN8cs/
m6bNyUT7GCXAsV8Yv+n5EmcLXUjHuADHfmH88RG7tn50+6YlXIBjvzC+e96e
lz4fep5xAe76JyGd0IfMB/h5wFf1yJFtZKVMETp3gnNH51RwTuncCc4dnVPB
OXX1aqLAr6bzKDiP5D8L/GfK22s+k86d8LnDeJwvOo+C80jnS3C+6DwKziOd
L8H5ovMoOI/kz6v/7NYFksQT1wjFNco3xDXQS8Djz/cr8ljBgioPzGeygwZ2
kOymgd0k+2g89tHAPpKdMmyn8F3YI7JfBvaL7JGBPSL7ZWC/KH5U/x98w3jE
ufDTgMP+gp/AMzevVOOjMekN+MnrJf/TwP8kf9XAX6V+Lc2HkD9p4M+Q/2ng
f1L+wSBvQPkExcmvM+zX4bvw38jfM/D3yH8z8N/I3zPw98ifN/DrwH+Mh78K
/gP//ma9/N9uuqT2CPPAT8a+MH8oz6NxCvmZSg/dU9D3Lug+gr6PQfcO9J0N
9LcDTz8otuziQms0TgRef+GBm4/OW6X3OHg83W/S+/50j0nfDcB3gT+RbkyD
ftv3aN4D+Iwf/xxx8WnwJ1Z4POI1+DMP93xmS66SiXT/Ls5mXfTsoT/fPUD3
buLsnYojz85/Vt8NU/xw3619yi7epnxg3L3PEs7j3lsJvws6YTfKlX+l7EuV
btD9oDjx0CkeOgX04HzBz8V9T6q3an2Q6BcP/cL0w36Bz7SPgn0BPeh37Xmi
+d4+Ow9rHQT2omTj7bnGTp6meoDHI2+M8fvfPpHj9OJES3IiHjlReuj9Cr1P
R+9U0L08fUdF70O5fAjvVbn3T9OZqrbqU99snyF0vgzOC/jD92uoX0jrDnQe
jec86vz0ro7eM6L3c/S+EuwR6Hn8rbSvlrFD6P3A8D4U+MP3TcAfvrfi+vNZ
zVeH1y79+755yjeMH59jT/bDXX9XfQJ9mKdqj5/LLJmi5xr40eJX/uw3co7y
GfiDVTLcWHFY7Yvl+xTUL6f5f/CT5wE/+bvgJ9NJ9EeAo+6DvMHPuYfH7587
Vf1YzZMs+yw+LmkurzeC76IehPHT3/mhf434RWrHgZeZ/kyDt44uZ/5EsK7A
bur4lfeuaNN76Uq1+8CXbxh+NnOW1XwvKcL3kvhdMup71P5Dqr9EPPxXOpHf
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
hMgrQh4Q/+b6pP3SpA7T9bwAP5Wc8+CFQwOQf0jxHiz4CTz3kN5JH2acquO5
3oTxqdenrHjmEf4u+MN0gj+YH/lq8MGzXuE6GsZz3Q18Q1z888Or/8yeb77q
Q9S5VrXLUktGa/5fx/8Z9G1CbjH+y+jTl2uWPqn8wfgHTNVmuS7HKJ999TWM
X/bk+MciR/crHzB+46JdHc80CONxpt/t/wnrelgv+u7eKrkn++Scqn8Uz1ug
wh9lj4zS88vvi4J+4JlmprnxQba/dTzX7zA+9XqfFc88wt913wUK6QR/MD/q
OOCPZ73CdUm3nnLN7jixelJsj2hx5SHRLl9bf/qAdtfFPRfX7NGgH8CVh0Tb
acCBxPfuu037nrIu6ZlH8WZZih++M/iyuPKQaA/M3f9b1QoXxZXzkH63LhZv
Z3/UuNXSqeG55ncX3f2Kt+e3LSvaNk2cjuc6prsurnta8cyT4r1H0M90uvIc
1lvdOmBYn3XrbtF2eeKqF65kPq7nFH3KMbvSJD04K0lx9DN0vXI565XsGSLY
d9RPKx+pV+HEhowRlw/RtnnQj0HzCOah7wq+6/It2tZf+czWGkszGXffU9Cp
fSDfrEi8Gd8UfZKoP4bfhZyA/kv7Pj3/wBtajxDmD/FNgNN6pZ1kOP/akWss
D+KRB2F5wDxYL+SB56f1CtZL9Iu7vyon4pETYTlBX6V7LvS8C593fueNzrvw
ecd4V/71XIjnXOj8dN6FzzvTT3pMXD2m+koKFGu+VDqeY70tHr2dog7O85D+
EdY/uE/qsTvi2h21v4btL79bRfbXsP3FeNe+qN0Rj90Rj90Rtjv4Lttlz3p1
PNtlxH2uH6L+hoE/QP6YYX+M403y0wz7aZjf9U/UD9Hvkr+hdJL/aTz+p3H9
T40vDMcX6GOE/0/xgnH9cPVjjetPajxiEI9Q/GLg/5Pfa1x/Vf1YxaGXPHRK
6t9V/9awfws+sP/v4aeORx8d9RsY7jdAfOqJB40nHjRuPKhxnOmS8Zlim/us
5z496ovQfjzD/XiYx43jtgnPz/G1J84ynjhL10txk6G4SbhuS/17hvv3ECe6
/Sd7NQ79ZX+3XEPG7hRaV4T55rHj6m+0adj34Wk/ZIG/IT5/A/LA3+VzgXWB
P27eYK/G122OZOh1rNI2Hh/h8Yi/MnT9qO/88WtU/j24xkEH4p+clW57WKeD
f76+Yp1/Ftw4oOfLg1v2h13/J97uHXF1ZbtJV/S7sI+Eq53CPK49TRK3j1Hp
FA+dKXDoSV4v9sXDN8Upz8P7pfuI/cL5Ql17ZqbWhcuenaHygP6fnkH/D+Uh
I5TPlExBnff08nX5Fw47oXoedczWl7sNrL95VfjdAL/07QO9Is2j9Fyjz2dH
0OdD+XNLeXjt8/n4vfsnDVt1K8yDBXWu0bHvDi9adgXp5zN2a5fiG5uknarr
nRH08zxG/Tyoyzw2Z2+Ry5+G/ti0AK96z/tPtT+SrPO0CPpwRlIfDvL2Z556
4JlRo6O5PitU39R+mzV1St1bNF8sndObUinoq6G6s6G6tuwJ8t4FPz2Z/eqV
0G9HHrh1k6m1dlb+i/sTDNX3ta9m1d7Vte45EObNML5r4sxljSaG+kTvKQd9
NZQfM5THk1eD/G3B3gO/GlQrWuUE9vfhXt13vT1gpcoJ+mHqB/0wlK8znK+D
3h4Q/3KX7gWs2im8x4W+GsbrO7jV/Krbn2M1z+mhk+eX1OffZrnvjvGeDm5t
6v171vrONfpV0I/E+KoAh93E/Bcf+jH73qyL1a/jfkLg+G6TyhXHPbp1tuox
1g9YF+47o/+K8fkObiGHEbePy2pfjUcOeX7h+bFezA85x7qAo68MOL6Lc4T1
BucugnOHdXEfI+M7HPzf9abaD2mtT3+iPwR9cYxvDXDSD0on+ID+zK5bfu4X
88YmtXfctwmc9Tz1DVr0DZI+tNCH4Bvrc9dvv2nRT8h4JRcXz3jh8Vgv6IS+
xbo89AvTD3q4LxQ42xc338v9pdayncJ+oT9k0Ku5a0xulqT0cP+q+qtkB6m/
1KK/lOydde3dtqB/IMaivxR4YO/sSAeHPx9r3T5VG/Bnj2W76ZlfeH6sy0O/
/A/6xUM/22vh/luaX/0B6h8W4r/2aYD/kHP0UWAfSX7EIz/ikR/xyI+4fo72
M/N4SX289jkzPcL0kBwyH8THB/RLeM67eM57Cv+H56HzK57zq/4Y9aUL6Tft
o4B+g1+E8dCTpP+NR/+LR//LDsK5z5nxrQ6u9kI89kJce6H99jxeUh+v/jnT
L0w/2QvmpzA/yU8wHj/BePyEFH4mz0P3IAz5LdrnAL8F+4vx8H/IHzMeP830
JJz7wBlf5eDq1xmPX2dcv07vcfB4SX28xndMv/jo5/5zxskPVz8Z/jbwXkE9
+oXjA3s0a7RT8cD/j7j+v96vifD9mtTHW/WTv+4+8a3ZncP7Moy7ejht5HZk
4tBuMcesa2dDnOJ9694XQ1yfYDv+0iTjD+tu6fy4Fwycz+821x9T3EMP45bj
JowP+GzAZ3wXeSrwk/phItR/ovcCcnf4+yMzI8TR317i0r4CYwekjJvqUbzD
vxdM+c8I5V3FIyeSet4s7K+gvh3hvhTG0zu41XW59zis3js4323QhAO5FnOf
WIT6rLTffvqCDYsX/h3i6NNecqjKS4On7FT9yb/36tazuE8g7M+nPjQd79ZB
QjzKrY+onEMOqX/SUv+h3rdqeOnYp+VXaj+n9ld3HzD2w90tw3p06nVt7Xu0
1IcpCanWzWPlfIAvC3Dq47XUT6v3sLb/VDq5Zb9kxgU41UMt1WEF990bvvvl
7WG/Z2ZcgIPO1PufY+V28v/335/L3Lqw4tWAu/necH7qVxfq69Z7XuA/7Zdg
v0A/9/dSfKF+Ke2j8D5yXzHtlyyjfUygOind7zB0D0L7SHFe6HwZnC86L4bP
S9Eg70r3RHR8VOrnJUU9Ee/J4D4j4zi/dF/J0H0ivV8G/Un61kDfkl0zHrtm
yK5J6nn+sA+T+zMxPn3qetK4+lN//93gninjex08Vvu+0g+KLbu40BqND2FP
n0g3pkG/7Xt0PPo07lQceXb+s/uobhvef3frqnG2/tPLhpV75oClecQzj943
B5+534DmF54f+X+Xfqt1864/9tozaWGi+tU+fH8Qj1TesTxqfbuzui6+b079
SELvJGhdG31ibj9DeK+c9sW4+6J9aFrnpf46vQ9OfXTG00en980xP9/jxni+
Dw464bfg3jTm4fogvcthPO9yGHqXA/NHPPfB9X0PvX8R+LfJrQqkuVBtkfKz
SDC+mEOn/v5O5PmTs3INnBXen/X0qYonzyyp55n1XnnE5U+sMD16/8JDP85p
0sD/vzxonMJ5Y8t5Y9pHfdeF7udyHtVyHpXqDhG37hDSmT2QW7feF75nAnxI
MM+hvt92vlExjB/hF3U5U2nW/OlhfYf7MKFXU58nVpge0NkK75AE+sGtM4bv
k1BcwPlby/lbOtf6TgvVj6xbP4q1LYPvPkv0PB2MP70/c/qBzY/q+UL91NVX
4FuiPTP+9Wmj2oT3/oL74Na9Dw77dd1Cv5E+1PnB59TpiRWmH+u6GOj/s4Ge
d+OdBIv77MALB3gpFxfPeOHxOEfIu/aYPWnB4G+Wq9wiP3n2XMtZ7aqfUnk4
F9CZt5JLJ+r4Jx6skvPtxDQR8If7/cAHngf0/I/vCn83eH9A8P6AxnEB/o+L
i2e88HiiR0AP+IM8IfhG+yhnyV4jb3m+3u8Pf9ptrZAciiuHscLz0H6l+G4g
V8Lngt9pwXfx/hXekWC8tYuLZ7zweKpHCJ/fVqCH6BwW5NnuN6Ue65u8RPUV
465fF85DdR/NZ7Kf4NG3+q4LxbPsJ4vHTxauL1PdzXjqblq/Zjpd+6X6WXGq
bxpPfZPzhMJ5QrL7phj5J6m/56D14hR1bY9fLexXkx03bMc9eQ+bet5D/faI
x5/nvI2NCuq/jU6vrzLvrbmqtz15P/VzBp/c0eGTZmF92ZNfEs4v0X20CN0X
s1ynxnrRX3TbuacW1tPbu/V08dSXJfX6cviOBL8vwX4U1oXxBX46/Eq7/JN1
XfA3Pm+27dtp+3ZR/JIin6PjG9E9RE+ex/I7PIxT3knxvn/vf3NynPbDq180
c3/CH5+fDPtMeDznqRrR/URPfkyYD8A5b0b3Wy3dD7Vcv3bPabIt4uQBwvr7
erf+Lh5/RlL3Z/Qeq6V7tcJ+INYFet77u8oT8/qH/gP8oibN7hTfO/Ws0u/J
j+n4p+heM+fNyE5Zj/2ysEdUr7SUF9Lxu7/888cHGt7kvLelvLe+v/SRO7/w
PO45CtcFvnnykMJ803vllJ+ke/SW7qFb9uvceD/eZqB79Kjjwz+hfkK7p+2Q
7WOXh3zG74yUdeu5um9UNxdf3Tz1efTevaV3AIT9ZDfPEG/rH3pnxAs5jykf
4H/mmfnbiRMjbygf7nqrczifqeMr0PsJwfhqfC+G378i/9O6/mes8Pyg35Pv
Faafxgvnh/kdBvLnhf1q5ItAjyv/sfL9rm9/ifTRd7H091yGpN4vIZ5+iRR9
hjyP26ca3hty61NMj76/Qe9aaHwhHF9gvcRP7ZuF/JD+4Tywjs9A76twfpji
OPHEcYK4jPSSuPpE4zjhuK8Ize/qpTDuoP5hwbmmOqBQHVBSpydWmA+krzif
L8xn0ofCdRnkG9mOAH+K3rsI4m5x4+6w7+JJpx9D433xxPvC9pHf2aC4XuMv
0udC+lz7q2E3yf/hfL6OL0LvXXCen/wf4/ozmi/SdzUhP6n3Y4Q41Xkl9flj
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
HW7kdtjfNTb+B65oXFPHgYF/jLv+C47WTdg=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxEnQe41MTXxvfe3U12k90k2BFQEbGLHbtS7ApixS6iYO+9K3bFgh2xUBQr
VlDBChbErigqVkRBUbFjRb/3d9/5nv/z3L1zMplMJm3mlPec03ngMbsc3Voq
lU4oSqWyyj9rpdLVLaXSHyq3VN3CqFT6Jy+VlmuWSg9o/6sql9Fvuva/rP2L
af+i+vVSJ7nKTL8eoi+vl0oXqJ/v1C5V+0t07JmNUqnQ/s21fyvte0httlX5
pNpcIfpC0d+LPldtztFvpNrtUy2V7lZ5sfbtLfoL0ReJPlP7bxF9nuhJGvjn
os8VPSEtlW6mvfo7t1Iq3SV6rH5Pq80slUPU5qVYY9LvTvVxjdpdorqfdN6G
xvmUyhd1XU3RV2vMY1RW1e4HnXt9HX+8+llX5RY6ZjnVn6/tHbT9sq6tndr3
UvsVVN9Fvx1VX1O5go7dQPSaSal0iMrDdc5uql9Dv36MSWPeSuX+qj9O/a0t
enP1v7TadxO9q+o7qm0H/bbVdkfVb6xyL9U3VHeijtlI24norjrXhqK/0PXN
0m+htk9W/7fqXjyk4/7U9nL6rao2f6vsrN/qooerryt1zgW6/gNV95jqblbd
UPV5uX6PaPtonWcllRur3Q5q86nok0Ufpv2H6neFtu9Tm8tVnqj6Q1R3qegT
RB+l+lVEbyR6SY1nmOiz1f8R3Cf1dZW2H9d4+4i+WvTO2reh2o7TeF7XvT1V
5Xt6Lq+I7qb7vJ3Kr9XmSbVpr3JV9T+RvkW/qn1rqs3eehbb6t29QH1uo/J3
7ftAbVZR+abanKY+H1efO2jfxWqzvcprdO4z1OZFHX+ExrOT6k/X9nEa57Xa
d6bo7XUfbxJ9gfq5VPUP8L6rflld1zO6z1O0fxf97lP9tWrzrPo5X+3u1fZj
2r5R5fkqD1Dfs0VfoWOf1fgfEj1U9LFqe4x+1/H+q7xL+84TvR/PX8ecL3oF
XdsHGv80jX+A6g/Q70LV36sxPKgxPKnzT9D1bKz2a6l8Qb891OZ5lV117Ic6
9hUd20vtLtJxp2o826jt1vodpTGM1TnP4ZmLfkTHbKT6NVUurWPv0r15VuUT
2t5KfT6u8jGVD6vtj9r3nsYwXvTi6vM9jeUe0fNUf6z6OEa/O7X9qupfU/9f
qn55netN0T+JflH112r/Xxrf3/rNVt1AlXX19Y3owaKXU/s31P4HbR+ve1vR
MQ/qmNl6phdr/5O6rl90nmX1W17tDuA+6JhOmeYf9fM9z1btctHfiT5c9Olq
W+cbUT8fqHxdx32rfUuKvl919+l3qNpE2h4uOlV5m8o5atNJfd8i+ivRa+nc
HbTvbJ3rB/U/TfXLq1xb9+QH1X+k+72syqmq/1ftD9D4v9D276JnaPznaCwT
1ccSFb/Pv5X8ji/gPPp9oDbnqs0ktflVbX7Rr6L912lsP4p+lXHofI+pXELl
azrf66p/ReVn2n5a1zWSb13n7a76lHdG22PVvqZyfV3L26LL+p2oNoupzROi
b1L/P3NfRI8QvS7PTHRnjeNabe+qe3yV2m+oNg31+aD6WkX7R2msG4ruwBhF
n6x2fXVsV92fE0VnOjZXWdH7NFz7n1Z/h2u7rPpY5Ta6b6noeRr/XF37JWoz
Q23W1q+rznWB+vlO9Zvo3uymsof6eVv0baLH6ryPayy3MH+q/h0d+5mOy0RP
Fv2S6DE6x2Uaz77q507R6zIfqrxL13KIfiuoTU+1V1HaRn2uqvd8Ff368m1r
bGM0hkc1tsE6pkXHVlX+p/PN0fWuw/OnP7X5V9uF2rVj7VN9oj73Vp9Hqs93
1WYztalqX1X1u6j+YNW/o/rdNbZW1X8meqDoRflO1E9dZU/1E6v9SF3Lsxpg
X213Un0flT+qfSfmem0fqHF2EL1Axx2sPjqobh2NZ6iub02dt4X5S3Q30SXm
d5VNlaurzbc67mv92vOtqlxSv8VF36h70F7086KXUL8vqhyj8w5W/x1Fr6tj
u2lMz6ndF7onI9X2T/U7Q/X3q11d5YWs+9p/Ee+Yjvmv7HnwUdGLazwXVLzu
bKZ7sbTq39dx/6p8Rr9xqr9V25+X/HwranOe2t+tsTyt671f+69T/XPMvRXP
0SPqfjeeU5tb1f4t0YdpjHdH5gWmqc1UtW/od5e2O6nNHSpfU3/7xF4TP+N8
qn9T5fu5xz6x1e8Z6+R4lR+z9qj9BNGfil5U9JAwhus1hg9Vt4z6vCzy+vGw
6ssax6lqM17v4UCNb6rq7lDb53Xsf62+z4nu10E6doCO3VP3YIrqBvKuwwvp
95K2H4YHq/g7/0jju1rbM1nfEu+fp2M/Vt13VT+zD0V/ELn/63VdLzPHqP1t
9bZXoY0PHK7610RvoXftKp33Q+24puS58EnROry0mNqMEDFV/T8QeS59Svte
0PYLKkerv49Uv2XF25urfS76MI3rEe27Q310E71U4f7/1Lk+r3hdWFL7ng9z
/mLh2+Y58jz31f15tdXvwX2Reb5XtN2ia3hX5U5q+1PTx40WPafVff6qup+b
nlPvVX1H3ffpfDui/1Ofm6v+X/V/Eetq5LX8e/X9tsou2lfKTC9QHytrbG+J
XlrVHWPTv6n+h1aPYUvWuNj99xS9gdq/w3stenLZ66AeR6lD7Gv8Rcd2Ef2e
6G1Uv7l2fsT7K3rxzPTfanOoxroHa47q1lD791U/SNuJrn0G/CHXpfv5seh/
1H5V9fOB6LN4rtoeqvJptdklNv/8qrafCLz0UNUvIfqzVr8TO8Tm954V/Vur
++8nunPmce6s9neq/UzRd6q+h871iehRom8tewy3iV4qc/1Cnf/EyP1frmMP
ztz/+aLf03vwjOaHjrr//aFVf6TKFdTPc6JXVD8f6VmMa/FaPk3HLKtyW5V3
171WZypPYQyBN5hV99reTuXHfIui55fcJ+/Dz6Lv0b6bVd+qcnbd/MwiKn/T
733RK0Orz18DX7GXjo1VrgzPoLpFq56XF6v6WazKOBLPpb107Keq36/s9XHz
st+Nhtr0EP2RyqZ+HzO/Vr0ur1Q2H/WLxpbWzY8cpu/xeO0/LvBR7+qaz1bd
E3rO++q536L6fVTupd9w0Xuq3F2/tdXX0pnfvXd1XFW/Idq/Stnr+++6J9NV
Rsh+ot9TGXPfKn6ff9W5z1b7s6rmLY6umq/4WvUHVc2zwav9UzNPd7DKuzTm
m1T/H/xb4nVsU9a+uvnBQ1V/ZNV81Fxtr5iatypp/7DIcxfzWLluPmuQ2l8f
mSd7VvWp+izzHWn/Iiq76djD1e4l5jbWO20/r3IKz0z0rrrWhcht+m2sY5aF
r1Gfu6n+b3gZ/Z5R2x21/bPo8aIfhfcQ3U9j+17lejruftVtybcB/6cxtFd5
rfp5X9/IjNj8Sou2t9JYtk79rCeHeeAP7V+Jbzb1t9Nb+77WM2zW26aU0m/a
f7F+P/Au6Pe56M/0exqZTcfcq7oG62DF312u7bu17y7eddEPaN+SKq/hXsVe
i2vMw6JvDevER6JnxuYJftbvp8AnzFd5qMazjOg5or8Ka/0XVfMta/I+iP68
aj5kFOdijkKOS80jbCd6x7rX/3s0hoWivxC9lsq5KhfVb0dd51bMM/AIqr8i
9noG//Og+n4AnkP7XoE3rJp3eqhqnmox/d4U/UbVfMtrKouq+ZY9WWeDnHWS
6Lm8J5xDfb+kcqGa9VP9eNWfqu33my43VHmkjntU9afAP2vcj6rtRD3bnVn3
VX+a6h9WPxewrqr9vvCParOayg+blhE3Vfmg2gxRm5mi/xD9pH5XtnpeHQr/
0DQvMbliefsx1V8Gn6D6v0Uvqd8I1hX4IP0ubvU8fAPzdov5kScq1nucIfrW
Vus9mMMfV/05LV4Tp4i+SvQ+Ncuyq6pcUffpZtVv3eL79HTFuo+9qr7G7+GB
W623YX3tX/W9+k71u6vPSRXraCZlHuMX8NqaW65n/RW9h9o8WbF+Zlcd+4jo
eWp7ic71bMU8W6liXg4e72zRY5jzkeHL5oOQo5/KfF2zm+bdHhR9mep/RmZF
9tRzeSr1sV+pzWC1HwV/ypqbWYaGV2nVsZNarc+CJ7pD5Wj9pujYdto+Qv28
ULb8NkL1KxWeyzZErtXxi+pco/RtvqC2w1rMD6HfQc+zvsYyOTVfsrv6eUVt
rm9pu7y2fbSZp/sxsOpxXKN9p4r+DllPYzxUx3Rk3uf70PZ+3AOd/+2mdSrd
Vb7b9Ps4W/1VK5Z7b9R2l9TlQtUfrXPUgkx6Smaea56OO0T938C3orZTg0yN
fq+39i2icqSu69vYNLJwoTYrqsEYrkFjWiLMtw/q2TWCrHuM2h8R5mtk9ttb
zJutnPrexjruJdUvq98o1ph621ReelVj2aFp/ugunbev6I6st6LfD/oBVZV2
1L8OKu9W/eFVy9i3at+2TY/nDtXfomvsCe+vuuuQQSrmD95F18fcqHZvV7w2
plxv7rWyl8pjNI67ebe141SNcbVW6yH76jovVdslWFubln3HqaMNtL2U6n+M
fQ9GhnVq09zXvp3aHlz1fYaX+L3p+e0HHbtM2WNn3dqrafn+/oZ5vMvQEek6
TqiZ/5yucfXVs39N9T+pfnB4dlvruP3V/sOK9RRLib5E9HNqc13gfdqF632r
Yv3IqZmf4fY69sWy3zHe7X+bfme2UXmUxvxmxc9onu7BUyr3VP3xNT+XX3We
AaxDavOHtt9gjULGUbupyO7hPXk0sp6CNamXju3D561yNcYS5mp4Y+45/APy
wXDtW0/bHXQPb4S/13jntpqv+y7w/J9VzI/Bqz/KXKL6r1V3qX5/cf9r1u/9
rTHOqfie/ImuJoz5WfW5b9N1W+k8S1X8vNAvfaM+J4neQ/s/rfieo7N6ReP8
Svse0b4Pme9UjtWxZ2a+vp3U/oCmz3+8ns+VyNc69kX6VTkUOVr0mmWPGd3O
uWpzTtX3bXDTdf3U56tqs0bZ5zpLY+6MzCL6WfTRan+5tgc0zX99qHdmutq8
o9981S+r8oqK+bT1yn52vK/HMN+pvFDj7a76p1usF/onM6/3nvppzV33gOjN
9A18p+t9Gn1Yq+UR2u3XdN/vq81A0TXWCt3vY9GBiP5G9Uc1zXfAt7yrc81H
jtT2RWq3HjIB+odW8zzwt6Xc5RcNy0Qz+Tb1+0NjS1R+qvoDWf/U9D90k6ll
rQ8Ty01XVTyOvbW9kc73i/ofpfv0V8V6hKE678Y6tqvqf2HdUF071gvRs1o8
buaZGRXz0L+ybqhuEf3eUX89kcFEX1GzHukLneewpvnxLzW2Gdr/E2u0ts/X
2IZqe1W1ORR9l57ZevBJKnurzW5qs0qQs7YRfababgNfJHoptVmtal1/Vx2/
ncoDNeYx6ufssnX7m+rXm7UCPYPqd6hYt9+nYp1/L+0bofrtKtbzL5PYnrIv
PLD6X6lqW8xmGv/z6mOYxr+n6u4I6/oeokeHNXczHXuy6ON17CaiTxR9nOim
+jmtbDvOcJXHqzxY7W8Jctwg3m90ubzHtNF4elZsR/hD9VtUbF+4T/X7iR4s
+l7R+4geJHpt7q/KI3SuLXWuG9TPUdq+TuURyHroxiu2lbAubhbk34Gid1D7
7fU7VtuH6re/6m7Qda6uunWqtqcsL7pzsL+8ovN+Hdmmgg1kM7U/Vu1bgi4C
+8rZoner2t60J3KByp1U7lG3HeYR+NjE9p/+6KHRJaqP23VvV0ps/xmIvKjf
3mo/DbuC6NtUf6nK8WXbpM7Wvq0S2xjO4Z6rn/Hq52L181DZ9oVzVb8VOilt
H4h8gP1B9Yczd6v+aI35ftWPV7tDVfeuzrW7xt9T7U6FH9a3dhhrodps1DQf
e5H6X5u5FVuK+rhCbYfq94KO/zboNPj2Pmv4++3L+qvzr6D6DdTmSNErttoe
s7WOP5I1W/2vrz5nqc/PVbdL3badB5B71PeZPF94KrWZqbpXC+sHzub5qv6c
ivVp8MA31W0D+VXthtVt6/sBO2TdvOR85Nu67XhXqeycWi94I/rdoK+A7+2b
2CZ4ieon6nc7fKPKG+rmK39RP8/ofTi5YhnhaOxaZdtZpiIzo0NTOU2/Q9Rm
rK6xn/p8WfvvVB+7VK2vgA9fJLY+D770FB13cmSb0MWR9Xjoi06PbA+6lLlR
x34jerLoROM/SPsPU5+D6BeeVGPrpjZr6NeHe6IxjFL7D1gfsf/o1x0ZTPtv
V31ftblAdZuorp/o29Xu6sQMwRjRu6r+ft370aJ35vsTvVPNNs0lVa4VuQ3f
119Nf0eLqO2W6v/eip/d3MzPqpOe3Tq57UIrwv/qvOe2evtFbR+jclWVryNz
qv/2Kqc0bTtaGX4zyERsb4rdQuf+W/3VOZ/qR6rNOWqznugd1GYW6zf8hdoc
rLFsz3ep7Y113B3a3l/b66NX16+/6h/W8bvCQ2bWT+6k/fto+8Gm722q+naR
+UbafZb5O11S7/nEpvv+NPP93qvF9+gs9bOO2m/P89K+rUWPUtsvVX+Gfmtq
e0bT92mq+tm18HhWzW1f2Jl7o/qL1HazVm9vAS+t7YO1vZLoQTpfH9HjE4/h
Zd23O4IOjfv+u+jFg/yIDm2gysGqn515Du6gc45gnghz8itNz9MvoRes2V6/
fM38/0sV62e+V/uRYQxfqZ9D4Ds05gM1hgIda93yzvP6faH2e6jcT233ULuL
tX+3cC0Xit4lvHtr61p2Ubs9tb0uc6novZk7sB1jWxG9sui1qrabYDPhuV2J
bKDv6DftG6D6f+gHe2fF+sO70Q+r3Xfq46ayn/sDan+c6k9gThR9oNpvp7Yj
9E3dw5qFvatpm/NaKudktkWvw71R24cqlql3E30C8r7oxYJszjHTm55r79Vx
bzV9/uHozptefxZT/W4120CXU3mtjt1Lxw7geaXW1TZV7o9dWP0fq/pharOH
2hwgencdczc8kspfVJ/rd5z2Xa9yH/gBtXmh6fI0Pd8FmfWZ9+mZbhe7X+y8
j4oeHOzr6ybu4xg9u02rXktv1jnuzEw/3/TcdmSrz3u/jt1G2wA//o68XnD8
TRr3MXzX2KgT71+guj9S3//1VTdNfd1f8jv2kPr5NzyzTur3dtVvnPhaWMeH
s5ZEflYc00f0zWVv8w7Cb3DMbep/J3QZKm9X/UmqHxfeXd5h1q3uDX87r6Fz
yrz+v6yxzEUGiD2n3J4bdzFC5YXqq5PoC1LPd3zTfF/zI7/TfM/LJi4PUJ/X
JZ43flb70U2/m8/qnD+m/t47w+9VvC5zj+5Sm2vVZorarJH4Ox6WmF/iPb1V
+w5Rv7egI1L9L6nnrJrKW3LjRvbKPJ/Dp5yvdmuH7+MC0T9EXg/gLe5s2t4y
uWEejO8dXfpmkecE6EPrPuc16n/HitfuU7Q9KzIP2YXnmrrsp7ZDCq81q2Gb
U5udKrYPtcMWruM6aczbVqwXPEnbn6pNx6p1g6doHINVt0zuNR9cB3rXm2Lr
xrtyL2LrCZfgvVT7/ZGv1X6Ifjeo3zd07S9rPFujL9K5vq+apv/ZVeNMjoAX
j8z7dg38B3wIvPHssnWVndlW/4eorqf63L5i3fzJ3MOyv73Dtb2MrmsksqPO
9XuYe1mDF0ReY5h/7s9dPt70dw2PepOO2aDq+ZJ39QnkQNH3qe2imXnQZ9Bt
FOZXnxb9cG4+90nRZ6de4/ZD/1k1X3yk+rks8di/5X3TvRoVm//fveI5k2NY
o+Gdr0Nfg56nbNlhzcj98/6Nz93mqaZ5BGSK89DdVbym0uc9TffxvO5Tn9w2
2B1FL6c+b696G7vBOy2WoY5rWg5CB7J9wNIgD46uWu7CFoIcio1gC/Q2uekd
1GZhZvvCieqjn7a7lyxDrVOx3LdlyXIr2IHVRG+h639LdBdsncgvFW+vqu1e
yGp1y5fgdnrzLdVdLlBZq1ruZPtT9fO3jp2l+zoztXz9LbJt03r0k1Wem5nn
PQj+PbX8/05iPQq2JHQp/bRvmZLn22lBJ4AdCN0LNqNdtH96ap3CcYn1P9Sj
R2sPb1m1vWlS0E1hK9ms5vuwUPtXbliX8qTGtph+XXnH68aEoDfAttUdvSJ8
V92yNDw5WKVuQWfAMXsl1ptM0v5F9VuBeRK+N7J+BrvRchXrVSaInhFZLltM
25tq/8uqW1/HPBO5HXiUgyqWbVmvkWdZzy9Tmywz/VDgp/q3Gs+3RWEM2yg9
/3ty8wkTsKtGlt/gL+9rmid8Qdc9rmlZDb5oncTrXcea8Rf7hPXiKO3bl3uQ
mb9FnrtQ2z9FliXhZZeIzF9crvoiM/2I+h6L3Va/9VkXw7rM93tdoDuAbUMX
G9bjb1VeEmj4w91brQe8KPP7eXTT2BZ0Mzy/1RrW1ZyksfcrbFM4mPelYnwR
uqDpZdva3kD2R88fdDrf1L1/WZWnJd7/iZ7z+ZkxNUeon3XKplfVubZEvlPZ
VNtd1cfosnmVy1Pfg4O0f+fcz20Q91XnGFa1HqMlMw7o8KZ1U9CrqK+/6t5/
MnoV1W9R9rX1qNjOc5TaXB3b3sN7cqGu8Xrte139vaLfNaLbobdTfUN9rMkz
Qs+GvCL6fPScyOOizxb9HTxeZkxLV9EN1mXR//Duqf7MpvWElwVZ9f9tMufq
96PoEZltK8gaD6BXzqyrGZj7W0b/1lf0WaKXFr1d7me3Ivxn7nu7Arxmblkb
G87XmW0zyCPI3Nwr9GC7qc1QdFyit1Xd5aIz0Vtmvn7uw7lq8yZykJ7HtoV1
g4sz5+R+fjw77K28N7w/2GH3b1rmA1v4aGHb0sbIB03POdixmVOYQ7BLv6h2
e6r/N1Q+mJlHfT23Xhe8xGkq5zeN/ThT9ZeirxO9hepfQy+sNu1Vf0dhfdzn
4FxUf5PqO/ONgu3Q8x0EJkTH/qfzbpRZP/wl66bosYV1Yd/r2AmF56/+hdeO
y3Ts/vAMhfWwe6h8JjNW5xPVv6bt07Gx89waxioiR1/QMMYTvcGFDWM80WO8
A/5S/exZmE+FXwVPeE7DmEfk8Teb1m2AXURPDRYOvTX6YvTEzIPgNsBXdMiM
ewCfUM+NS8BOulxmzMeKQa+MTvmnQPcXvXroc/em1yX0xOiIfwv0pQ3rZ3hn
sHkdj9xR2OaC/eUz1c1q2k73SGY7HzLFxLJte9j40FV8k1kuQJeAXQ37Gvo5
cGvY6+Y0rbtrw0Jr/7eZ7ZLo7dA7gTP6MbPdC/vXxMw2L2yC3XPbwp6Dt1Z5
ZcM6LXRb2OzAR72rNlvzbSA/a/xXNawPpP/LGtaFoBO5umGdIWObn9m2GBfm
G+AXwDeeVrVNC1wF9w28IjjcgZllsVd1nm+DbIjsvVFhfPjVql856CnPLFmu
REa+WPQ+6HxUdtD8clvTc/xTOueCqvWd8KKbYGOPrBfdSHQ98r4NC+PLr1H/
X6vPk/XbotU6WOT1c9Ddq0179f0x2HW9d0NUt6K2Yx0XRcZp90O+LJvGToR+
FZ74lqbXwycbtqWiHz1D279XPRZ4zhubHv9EtRne9DVNEn08Om7Ri+pcW6n/
z8u2zQ9Hb1wxJuqCxPzyV5rjj1b7/dR+EfhlXeN1wZZ/hfrcR/Xr6B5vXrEd
Hn7yErAf2p6u+g9iY/zQc76kvvrCU2KzSKyj/iG1fhf71yI1y/LokRg3YK7/
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
/+lwj1co2U+S500swV6p4/KtrradQ/yEHmozpurYCPXwnHhe54OpbFrf819m
XxJ8VPBfwf/+qqrHeVrscUPj0009cQLPju2ri36Jvom/0KtkO9EdVdvUqOfc
xGQ4UMcs1WJcDXkTxlYdf5g4CXdWbVciZt6o0M8pTcdGIEbCubHfYfiHgbHj
FuKjgT0PGiwdujT0a9gU0buTMwM9PD6g0PiBkufizKrjGxNrmzpiLGDv4Jvn
e6ftqeFYvhdiKJ1QN7aWmNToCImTemq4/5SnBRq9Gf1zT9dJ7TO0SsNjPDeM
GX6ScaIDBBdKfGDij+BfQhuuaZmAp11V9eul1ufhj3RC7ONXDv3Qx/OZ+RHe
2+W1PT+x3mhuYt6G/m/Bhqj35EWV1xTmk+CXkMuIYQANX3h16niBEe9Rapm7
VeWMqnnKg7X9W2r+rZ461h3tsc3Dz1EP7/Zlav7nx8CP4+cPLw1/Tp6OM2p+
p3m3+a65P+Qf4Tli4/0xtP8oNX16zfILORp4b6+vuk/0jPi10yf36tmar2lo
ajmImE7PqO6i1PFkFq+ZpyIe3Xs1YxWhR7O+1BxbaXTgMeEhialEbD9o4tsT
G57YT8ilPWPnneHYQcRHZQ0nRm7NmKVH626/RdU825+paWLiIZ8RW+f8ksdF
LJ0hJWNhiNN1pei/Ms8BxMMklxNt4NXJ38Sx6CyIx8M1XlAyb9gjnGuxpp/D
g/rmziwcd2RM4XwsYLjBbzPnw48yXyzf8Lf3WeK4K9xn5g3Whm/C2sd8z7zP
fI2c9HVYC6dXjUnGxoTMRXvWCGQyZDPinJ5U8zrFevVy5HPxjX+D/VHH/hHk
hUbVeVhej0wz9+JjS8zyfRpuH4veGwxjbBps6NfJ/+KvzA3v/074QzQ85zD3
IPMh+zEOYgpCIwOulPp7/gC9Qs3r1H3q5zfVLag4nxOxXNcsOf8N+HfuIbFK
iSdDG+KXMh/TD/MAseqRFZn/WQugiVtK7oCvKpZtiQULTQxb8uzMrji2y2+Z
nw/xeLmHcwKvwFo7N9xz4tnw7FivkVWZZ17IjK+fE+75rPANkeuBeLlfVpyH
gHi+xPUlB8H0hn0QiSu8KUxii7+1txqeq9bUO/N3q7GP4B7XDhjQIU1j2JFb
V+P70/19R8/sx9w2RDCR4CGJy4FND1+So3JjdM9q2l+Z5wa2Fxw12B1wO9gA
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
4bVv13P/AXGXadI=
         "]], Polygon3DBox[CompressedData["
1:eJw1nWPYLEmzRav7Vbv6jK0ztm3bts/Ytm2bZ2zbtm3b5nfXmt33Rz2dWYnK
LmRG7NgROfHG26+8XbUoivuGiqKf33frRTFhX1E8yrF6oyiubRbFdoNFsQuF
55Efs1UUN1DnDRqN1S2K90lPTN0bK0UxKumxO0XxAmVXkX6F8rX4nZv87vR9
a41y8r+RnoY2n5O+kvpb0XYv25C+gTY3c/4d+yf/EPnRaDc7+UHrcrxC2zZt
PmEsP1N3HvJvkJ+a9MnUXZn+hwaK4lPGuxbH05RPwbm5KfusnmvfQ/1xSS9E
+Z2Ubcx/vJz/+i3nZqT8Nsr/4J5cz/XP5fwKlN9fMmb62J70DhzXc/4q2q9P
+y7X+4b0mhxP0P4G2n9EX6uQf4A8xcU39Pcs53bnv/zMuY0oG0n+Qvr6g/zG
5A9sF8VPtG2RPp1rH1xP2Xu0uZX0AY6BzsYk/wz34hDO/Un5LRxL0+Yajs25
1ujU+ZH0ntQpeXZzMu6P6e9bxtAgPx7136TtURx/k/6I/u6o53qnk76IMT3J
/9uV9g9Svip9fUT7tyg/k/EN0ccWnFvOZ0XdCWizPOlxuM5GlNVpsxLpSznG
ZCwfc2xOfw+RX5XyWWhzHPnd6GM4+YWp/yftT/SZkT+O/HSkR+EYm77fpP5n
1D+E//8dfU3IuWlIb0N//dTfif81Be/DQYx3UvJ70O4zxvs7fc7B/ZiKc3tx
boV62l5Af0/Q37+0m4SyiTnmp6/DqPMo5edT/jjlY1F/atsznk9J71hL+iDG
MCvlN5CfmPRfHDuRv5wxrc79WY8+riB9Ds9zQdId+jue/F30fwT5zchfSf2z
KZ+ffJf8iZS/xfjXoP3FjOdt0qNwzR+4/vC+vE8f1pO+iTqjkf6YY3LyXer/
wH+5gPznRb7h90j/yjGfz5r60/i9Md7xGev3HNtw/WW5xjRcfy/aLEN6ZC3v
ztscm1E+I/dwf/qdlnv7KeltfCZc63H6XIP0KrSZh/Zr+x5QPj//4T3Kx6S/
+Uj/Qp1x6GsSjj9JT89xguOhzY202ZpjA8Z2Eudmomx7rj8a7XfhmlNxzSua
uVdHUX9v6t5Bfj/y+1BnJPV34txK5C+k/XzkH6PN1vS3D/Vf4d4ezbmHSZ9F
nUdpezVj3JI2m3Bua9LTUH4sbdcnP4Lza3AsQPvhjPcfylbqZO45kP+zIukz
OLcV176aNouQnpzjoL7UcZ5aifzr1D2M693H9ebz+dDfGtRpeu/aud60pN/l
+nfRZi/yr9P+eureRZsDaLsa1/+Sst+o/yJlS1Lne/7bgoyhQb5J2Zu0v4Xf
yajb8J7QdjHKt6buWPT/FuXj87s7+SlpM4y6h3ON/RnPHtS/hfr3cm5G2k/p
PSY/Gu03pvwt6o9Ousq5aSmfjWOIdI3+Vqe/fsrnr2d+qHA/RuM/jyB9mHPI
YNaTeRnvJoxhOec/2r1G+mXeiQOpfxn5oWG8f/ze2pcxObaFOaYjvT7nOpQt
Rn568hv6jpOfivHex7X25Rq3M54+zi1D2bvUqVI2A/WXpHxRzv1F+iTOLUX6
VcZ7Lfmjaym7mv+zNO3/5tzi3n+OdenrIvJn0PdpHA9T3m5kLF3aL0rZv/U8
C5/J//iPk1J+APlZyY/q3Ef5MpWcm4yyRiPPfpDyBShboZO6BzDG5Ul/RZv9
B/PMffanUOe1IvfwHvIXUr4O7V+jzXWU7UKbf8hfSH5z0kfWcy8+IH+baxfH
KJX8p39cf/z+ye9AfhzG8ghtjuX+V1wfeD630f8UpEehj3253sM8o3Gpdxhj
OJ13bzfqD1D/dPr4l/xI6qxL3VHp73n6rpM/kbq/ce4X0ku5/pHflfxN5G9u
5l27jT7uo+zvRr6tWbh3Jdcu6b9JX0/R18tcu8bvpVzrFNo8RNvxnXPI78f/
m4D0lIxhO/L7k9+P8U9Oflv/r33ybl1EmzVouzD5V+n/Kc5d4ftBemBY1mzX
7pUo/4xzk3C9/xVZ87/z3lF+B/kNqHMp6XUY74uUPV3J+uR8faTPjrZXMp6H
y1zP6/bT/3u1tN2Q4zLOrUmdQnmKti+S7qN8CU61uP5X9H1OLbLD0xzrNnM/
Zyc9H/dnrFrmqrUqOdfwW+T6O1bSt/9niXpkgTO53iM+G/KLVvLNT+D6zP2d
gfJVOf821x+bYz3KR3BuHNJ3cg8Pd64mX3O94Vif8i18n0nfSB9nUT4L1x/w
/aTNca4R1Hm0k+v7rTxE/QvrkQmUDTj1n3yh/LcIdXdlPOO5tnK9TcnvRP0n
+C9TUd6sZI36zWdB32eQP055i+utRpu7qXs8+Qd8Nq28m645Q1z/Vr9Z8nMx
vmYz6/0CfVnTXdvHZbyb0d/b1B+P9ETKj6Svod6r5J+oRdZQnlWu3aSTuf16
v0Gu9aTfH31dSV9zkF/B8VB+HPWnpOwm5xfKz6Z8Vsov5j+dQNsVOH9Vr/+1
uf4UjP9Ixjc6+YMpn5j8Yc3Muc69a9PHSfRdp81UQ5EpR+Pdul95g/KpOY6h
7nDqLMG196d8EtJXU/6D3zLHdpSXfhO0X805kLIK/Q2Qf4z89fy386izIn1d
R36NWvq075lofx/507nm0t5vyk8jfTjlk1C+JuM7nusdT35W8mM4P1L/NPIL
kZ6B4ynyTa43LdfbkPb7l1lfz/H5KN9Qt+GaS/kGnBuL8ls5NqfvU6lX5X2+
g/wSyuKU38+9vIX8IoN5Z8ckP6jMRNnsnDuB9KWcm5z0EaQL2p/J7+Lk5+X/
PMd4Nud6S5E/y7WC8jb3Z/hQvkG/xQW57o7832Wpc3YzMpGy0ZKM6QjKvib/
MWXbF5FfdmM8D1M+vvNhK+vLmKTv4NzKysuUP0T6Z85Nyv3en/HdSX4Vyv5i
LB/z+wr91bnmD/S3kPO98+9A8o/UU/Yq+Y2pO1cj38q5XH9O13L6f5SyX+l/
cvrfh/wr5GvU+ZZr/dpI2nMbNdOHfW1K+yUY609l7v3V1PuK8SxI+VmUz8w7
vU8t+tTClF/EucUoW4bjRtLTcT/2ps29tF+e8V9NnQP5/3eTX0Z9iGuOyXg2
I38e9Y+irz/of3GfEfkHKK/U8rwXpf625C+h/gl+Q5TfzLEcdX+h/CvKF6L8
HMpXJf816bsZ1+/0twJ1bqNu3fmb8dxTz9x8unOm3xL5kQPRCX8h/S3nvqS/
2aqR526jv8XIX8H4H+J+nU/5qoPRyZTnHqR8NfJ7kL+8kzXRtXEV/v8xlJ9N
+XDyy3PNy9v5XsYdzJo/sh0ZTFnsV/8T/63KmAd53x7nejfQ35PUX4/yg+n/
LtL/o/7QUHSug9Q1uMbizs3Wcb6jj1FJj8axv3M+/XWo/zz93a7sxTNokL+h
P/KQdaw7Jde/veZCw/swFB13Cfr+mfKfKf+Uc4tQ1kd/9aGs2TfRX51z4yl7
+77z+z/O/U3fJ9Dfqvy/5SmfVfmWvkfS9hiO3Uj/xbmNKN+A40HuxSGuaa2s
v66Fh/KfNqavbSh/lvKZlKEo35788+QXYFz71vKf/e/qUI+S30n5l/Q59PcS
9X91jqd8hDIJ/+cb7tmjlE/G9b8m3ec9pWxTxv5tKzqnuueCnDuI+o9Tvg7t
D2Q8d5KuUqfl8yG/olgB5zYZzBo7Hdc+xG9A2cP/4L2l/szU35nrLV0LZiB2
cBh1Fqb9MO7HHJSfzfUOo6+pOLdyNWvWlKQ3Vv8cjM4wBfmH1BfJ30D5c1yv
TfuZaD+C/ESUnUT/81C+EX1sQdt7alk7nJOdm6+nzoKkTyVdUb6hzxmp28e5
3Xx3Ge909LeZrwJtr+UaZxTRzV/qRr4epi7EuSVrWUNcSybguIr8Y/S/9mBk
rqlo20+bNv09J57D83yU8rV68/X+XGt9MSDyY/of6evxer69fr8x8s9Qf0vS
xyrP0v5Z8lurG5N/pIwOrS79Bcf1XH8Z2v9D+gOuuaDPiuvPMBSMYzzXpzLl
O6vLd6Ozqrs+xnGx8h9jvpa6q5O+jvIHyG/DtS7j3DiuHZy/nfSNPI/FG5Ff
xVL2ZEy30tdPXP8R/vvznFubsk9rqSsmdm1P/1ic9k8rg5O/tZX13XX+O643
u/IT9Zej/BzKn3XN7MsceDr5Cen/OfVBji9Ij1eLvGWdmXvysu+ac5hz2fqd
6GY3Ufc9+h+D32f6ggF8Ug8+pvzzB+kPutEfplKf49x69HVcu6fr1yKPHiGm
5PpF+fKUb037t507/UY70WfvJf8vx6akT6b+kZWcW9l3rRHdXcxH7Ge5Rvo6
hjFOUQte4bcpJiY2po6lrrWSOlEj8r5YwvPUv7IefXhJ+v9SnVxsjnM3V4Lh
ieXtyf3dgv7G7Om3S3ei2+7JuaVId2j/6WDWwKVI70j7zWl/Hu3noc2Pru+D
kelOIX8ddRYifSbv1CzOlc1gNz9R56dm8KIlKJ+Dc2uS/opz7w9G5jtK2VNs
UryK9jPR/kvK3xtMm8Mp/065hrYvcO4jyranjx8Zy+kcs1A24HOg7G3GuIjr
bxk87Qt1bb7nszg3PX0dTf8z0v8OnbxPc9D2w977dRX//XvObdAInnkl6cO9
J1zrLzGXamQYZZnvOL4eDAZ3HGXzNoKdbOocx7XmbuRebUx+fPK7KFcNpg/1
x2/If0L+Y8azEOPZn2vsxdivpc1ilB9VZu5xDjqZd20PyneqZEzOj4s2UvcA
yid1LlPHJ/0Nbb5vRv5+l/wttHu/28NXGMJ3lP/gtTleG8wzO6QRfUF88mm/
adq8oLwyGAxpe8rva+dbX5V619DfCMZ3HXPD54xpUFmF888qK3Ks34wOpi52
K8fZlG1Vj650Kn08Y155YiCYltiW37Tf9o5c7xzyv5H/g/wm9P8C9f90XnIu
rgafEq8bm77u5Nxr4g/O20N5hrZ/nfxdlI0rBkb+d/J/DkaGnrURuU35zTGv
R9kGHC8M5B2rU/a585+6IPkxfL5c76WBYDaWX86YPhEb59iimcP0WByX1SJz
O5ev5lohXkP5WOTvoM9Xe/iPsr3X9Nqne/8HIvOuSf7BevDr+8mv1sw99d7e
znEudVcn/4B4Ev9vf/r6w3ugrky+Y9r5nPwW9DFxO/aIhrIT555vZjy3DwZj
/J779gf1f1CfF7Pm3dmxEez9Ns69RN1LxBMGo7O5votRiFWI/6lP+437rR9b
BN96hfpPiN1y7plm5Hbl90krGb8yvrL+t+Qd2Btc86L+6MYncb9e5Nz1lN1C
+xebwdfPd24j/6z3guOawWDWI/xW2xn70Zw/kfajOz8U+Y+vcG5n/t99A7mn
03VyT72345J/wPmI42HS91D/Tcq2LiNLf8m5Gum9lAFJ30f5W5RvzrlrKB+t
EvxHeV0s7D0xa9JvqPMwtrup/0Yz35zfnjKQ8orfqN/qfson6ia0uVf9k/Yd
0n9y/Ki8TP2LO7GnTEndB5zjvPeUfzsYGbdB+Tu+M+Qn45p70t8+jGmBajCM
JvfmY8a/7EBkhGtcL8lfSH8LDOR9GeoGW3rKaUrdmT5Xdq53Tif9Yju2pZ19
rpSf5RpH2f/o7y//ixgC+YfEQNqZM507b+qLvOwc5Vw1zPWL9MW0WVN5jXdv
F+oeJ75C++FiVO2sh8pXW1aDZ4tRiVXtTt2nxHs7Geu56jSdYNRi1btS/mQ3
9qFuXzBmsWb1VvXXa7jetmItjejLysDKwt/Tx53kX6TPL+jrCuo8S38P0Uel
njnRuVEb1L9ip1zjAm0w1N+csT1Oes1KdP4xaz37jGtRNevDMtS/h2sfQz93
c73jud5MXG8l2k9N+p525scZqPsYdUdtBOcU75zPcs6dqVwgpsb17u0GNxY/
nrsT/Vt8zjXRtVFMSH13B+UC6j4n3kT6Es592s76dD597VLNev4A5aVyBee2
bWUNcy1r0d8qteCzYvdLVYPHPlgLfreaNhj6PYc2t5Detz/y7FXtyOubqlfQ
96mUX0l+t/7ob2eSv578ac5z9HUu+VvFY/qjj73djn1HO8/T3dgstF2IcS/j
/MO9vI/8Vdzjdj0ykrLSaMo3pE/pRJ5QrjiD9gfR/9GU76OcR/4MyuemfFp1
LK51Nvn5+mNjOKAdG4a2jDP6sl64hruWX0qdlWvRIdQlzu4LnvACfd7Lcz3E
77OM/nmMsqjyBHUvagdv2lA5WCxW+wD370HObUv6FG00vr/9wZe0NyhfatMS
f/yM9pe6NnN8TvqYTuQZ5ZrT6O8o8tNqf9Nmo22kGSxpJPdpE/F78XLKV6fP
6Umfz/VuF+uu5n1/nj62Vu/Svkf5Ac1gU+fTfj3az8y5dWj7N/3P0unheaRX
qEb++0S8rz86wkTtyOcbUb5ONfK3+PzB2uPUF5WdyB9Syfvoe6k9eF/yp6nP
NGP/OJP01dXg999Qfmgl3+j99DdDJ3i+srj23cf5fbI/tvevGfNsPIMVmdum
pt3x9PWlGCyFY9PXuf5X/n+7mnfgdMouUMbUrsM13m+nzhfkD6qk7VMcJ1P3
J+qdSdkPlB3hesG58enznHru5R1iTKR/FQ91baF8EnVt8ic4fsrPE6vi+oPk
X3LOIL0x5R8x9kep/xjXGPSdEQvhmNL1hvIvKH+e8meVxxjP4aQnVCeg/TuU
76D8yLlhyjLOwb6fYi2M9w3qDFH+Csey4vucu1qZRjxX2yXtH6GvvSlfl/TV
rfALPqS/Xyi/uxubzfzqgJR9wLkr+oMVn9zN+rI7bW/i3OhiQdT5kPwwjq9J
vyUGUI1ueA71t1IHJT+nmCV9fdyOLeZS5yXKt6N8VLEOv69O9PXlXLsHgveq
b8xDfoxq5NdXXaN5X+/i2X9IXzdSPn8lOoy6zHP0cTrX+s21gP67nNujCKYu
n+Jzyq+h/GYx8XbsOYtTdpZrHG3G9jsrgukrv76iTUHsivJS2YY+D+DcjOqE
jP0O7b3kZyjyfLUPinWdT/0+6n/Uzto1bS3z3++M+37yn1XDrxAPX1DZrRr9
6GbGtwdtL+b/fEfb5zj3cv9/sFTxI223JNGsZs47mbp/0f5U2veR34y6P3Hu
DdKaURai/XndPPNHyW9B+kraf6VsTh8/toNJik3uVc/8W3cNpL9R6WNb+ttX
fKeIDXU/+QPUL6uxOTbaeYY/0/+xlTzb+8kvQh8d8Z1O+A9yJ9Zj7AXpv3vj
9RvehHSjdz3/44habCTHkf6oEdvJaZ28O9NQ5+B25izt6drVncvkuPSLF9TC
ffGd/ZS6/6vnXV5Dm6/6vDgF6SvE1PqDHx3SCidAbsAMfcHD5GTIzVicOoc2
osOqyw6KcfI8j2wE61anVbc9uBGsTB1LXcs1VXyo21trt2wGmzmJ/78kfV1H
eYVrTU2dE5Q//J4Zy7jkl62HEyQ3aDrqfFkPp0Zuzeeu39T9lTYzU/8r8oVz
Mcd2XP9GsofS9/Tt6I/qkTd284x91pf7TMQ7av/B/sU11CnJ/9COvKNOqD36
ZcY9EeX3OoeQnobx78r4d2QcrXpsVtquXlcm1f7UzlgeqgTP7Fd+Jz0WY9qB
9mtw7q5KuEu3dsMhkks0O9f7gfTxlM9Vic2vqi2e8Y1C9lrOdevBOMQ6xFhr
/L/v+D2Xsgmo/zZl54mZUn485xakr+2bwZJPp96KlF9bC1Y3BXVWFptQRib/
cTX2WWWsv2g7Tz2y10nOZ5TdXs96sk8jWP6j6lD0fXYr3B85QDtrH1LHoHxR
9clOeAZ+K39XYz+4qJVreY+919q3N/LvVsNvqNWy1v5GfrFaZLxN6HtYI7Kf
MucQZQvWI4tu0Ypt2zXR9f0M2qxFf7/Tx9zUOYNrLEx6oC/2Pu1/puWUaZ8+
tZ35sk+Ogeuh8gr5ob6M3/l0J/qbhfqr099qygTKe32xn91Mf1WxMzE96p+o
jFnJO91H/l4xIdIXcP/nYbzX1MJlm5Q+VqKvs9qZiwf7Yj/Vzqq9de++6EcH
NKLrPsv9/rCnH/9ajUyzXyP8AvEs13T5DmImYieOqb8T+6x9z8u5Mym7p5X/
Jl/kd/I702ac/mAGYgdy4OTCLa383wj/ZxH6f70S+6p4qLLziErknfMb4fZp
I/y3GY6ZXLNdBmOP2LSVZzuZz4D6M/H/byA/Nv1vqGzp91+NDnQs4z1Cm1g1
WNCz3K/9OsEyZmIMy7aiA71ZCyajbjSG94T0ieofzdhUta2OLt5ai73Y+Xxn
zj3Zjk7wUi3n1BXU18ei7t6uMY3wf26ibF/qv9qOTCu/Tp6dsq78LudCMTqx
OscoJnVrkbGPr3xNfw+L19F29k50i//x/+foxB79n25FH+fT54a0+bcSGfZI
uTm1yMZ/OefWsk66Xu6tDbMWPtLy/eGYyDWRQyKX5BuOBcT6OJ6sRmbeoBad
8I1a/pO6ovLa+0XmiEvr4VDJpRrJmOZvBP9wrpIzNkpP5329lvlUXXhebapF
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
7M+Yf6H98DLY595FvsdJm721Qf2hZ3PQ9jAJ49lXfIU2o1fjoyTfdtd29Anv
+R+uV/R/vPox5T+3wruRfzP/QOz78hRc25eh/3Eov60TeU+5TyxRPElu3As9
fEv/lp9JXl4JP+Fn9STyv3LsVIt8UnGto493KL+8EX8JOTcn9/Cur4tgol/S
du9uuHtylfSnEG/6hvwp1P9qKHw9df8Gx3utPIMTaft1I8/mFfEU5XfXrE7u
yVfem0bu1bWU95P/iTZ/diIv9lWiAyr/6n/1Ldc7rRJ79l6c+6QSG2y1HRld
WV2ZV/uXOtjhtcjg6gd3dGI70+bwSTs+dvrz6Nej79163fB35PHI39qtHa7M
d853nWDycrL2qQSr12dQ++kz9fgSqkOoS5xTDb9J+Vys4NkieNeKXO9f0o85
/5aRp/4kfyR1Xm3kG5YLdWAj37b2/Xf7IyMoK9zYiW1Qm8oH1F2BOv8U0XlX
7EbnUvd6QgyT9Mu12K71b9TPcU/afFSJDlQo33fDJdWPRP64fG+xqqUrPRtc
PVicnGG5w/V2sGv9Zq5wLuU9uJuyd3n2i7XiMyK+JgdwWCv+QyPo703qHEXb
wXZsh/opXU77y8gvXw3n/NwyPkliTVNT/07G/piYodgI/S3eio30gVr4MdpO
9dcT79uc8qXq4T8NGwgHRS6KNgx90GarxLYhX17b7LKVzJ8baOOj/TX09zf5
J7Uhkn6We/w06cXakQ2UEeYqY39ybvactoMFGsFC9BnRpu6c5Xfg9+BctgjH
yaQ3of0ctH+3DB9DXsbmjfCRxO7kMMplvIT6y1bD+T2Lus80Yrt4sWfPeqrx
nxmgeKY3PuUe5R/fkRdINzvxhVydPq5rh8+t7VWfBG3ctve/XSC+Vo+9zL6V
j7RdrNUNF0K/Dv1N5u0EK3iX4wj6u0KMw+ervFbGr0H/BjnuLQb6TSv+QPoF
Xeq9aMW2Nb3/jfzn2j8qaTMxfe9OfqJqfATH6/FXxQKUebSJa3MT7zmkFluc
GIB8a3nXYgNbNuJv+nkRX8Q9GN8Hleic8uXvrwd70Yd3OuUYbSL94abKd9Nf
VV/Gi/1eSF/aCl9K30b9V99vxV9EvxH5x/Jzxx8Mp1ZurTZOfU5nrMT2+Zhz
fDWY0zTtyJCb6atRj2z5ac/+q0yrbDtnPVwWMVr5NS8rw1Vjk5iD9B5cfxL1
iYHwc7VRfliLjqft8mP6u6o/mNY75NclfxTXPpP/cH07mJTYlJxZ+bSPcOiA
LZf5Lfq5qx7biJxOuZ2rd6MfqSdd0I1ftWvJN+qctfB/tK1s5PpJeh2ud2Rf
OChyfY/qycxniUl1ghn7PetzqH5xQhnfVG2G56urOSf3x2YtH+b0VnRhbZSv
+H/rsWNrz5Z70s/9v4D0CpX4j8iJ116oL8sXXHtJ2r/ZnzVLe+/hHLf0R4bS
XjlHLTwu+Vw/09+PnXxL23F/F1DeqWWdc73TFvhjLX5kcn6+7UTff5q+byf/
HfmRYspFvsHle+vXvEU44VW5+q1w5XetZL32HfFdGYPrjUr5KGUvXY0t94V6
7L/bV+Lv9m0jfgf6H3TLvF/ar9+uxb9EZUvutzYI+fetMtj5sF7931vBKpUx
lDXU53QO1ydP37waY56C/zvofeE6/yjTDWTNdu1eohmfisVotk5P3vN99b1V
3vIZ+iz1VficvlagzmzKsv3B5yrNyH9ybJ3Pd+uG73ZxD6/6h2PHZmSoFzrh
U2gLWq0Sfx//o5wkvyn/+03t8IWerMd/Tx84feH06R9O2d+cW0veVyX2TvEe
+Qx+L1eRXriMLLSzmFAZnXEyzo8YiC65Yi28e/n3Z8rtF8NpRiZ8tRP/+ruq
8RmT3zTI9W9oho/hevxRLZwtv2G/5caw+DgcTfuHOpF/fiX9C8ffneBlExTB
MH4l/24rWIeYx++d4J3eS30iCuUF+py+SB/KT+owEzWjb6jbyDdambEdQZ0x
SI9RhmupzKnsaTyFsVrhP75H+6W0r/Xnm3+yFT6M/MB1K/Gver8T/sopzfD9
6xyDrdg/V2IsP2nPGojNWduzMpWylbqH/C3tyXIhfOfED/RnkQszjZyZMjqv
uq8yr7Kv89ealM9M+cVl9B3XaufcM8i3fQbkZ9KeUYbzvmcz9mW58Gu3Yn8S
m/+iEX3/k0ZkdmV3+cJiKdrldm3mGfusD5ZvR/nRZXwH9Pk/WF8Dzi2nPUpO
LHmNvyc0ck5fsJM4qpSd1x/999Qy/sv6MR/IcQz5IconHYg+4felbiKHUS7j
tJ34zsm5lHspfvyUuryYiNzsTvhncqluacQnSZxSvFJfpdvor07/c4lPUVaW
8QWT87pLGZ+rT5uxN+uL5T3yXjkmx/ZqPdjlW0Xsa77vezXT57GUv8b1F6K/
JvnjyN/eSnoerjd6N++EGK38Dt8V/cO0R2mX2rAZzpjcsccZz976wrTD/TiY
/OLqV93wgH1HxyS/WJky8d91qXs91/tTLFF8vDdf7NDMuUPLzI/y3OW7b6Jt
oBl+rD7l+uN1m+HfOD/on7sGdRYo8s7Kx16zFTxXDEb+qj5zcnDlD+8ov5T8
8vKwKuFbrkX9hag/OBD8SH7HG2Kf3m/KDvSdHggnetdWdF51332L+I74f39W
V1V+6wQf17dOHz99/fYo40siR0Wuyl5l7p0cILlAF7Ri31fGVNa8gfzflM+u
vUD9z/mkEp89ffeUuZW9HaP8kxe53ryVtNFfyPlSvxWvuSf5lygfh2v9j/wR
5J8lP341/+kg8je2UiZH/8gyeMbW5Lfn+lPT11Jc79Mi5+btfS/6SurPeX4n
9g/nCjlWC/teluECynmU+/hlO764NeWNTuRr+arit9ob73G9Vp/VPqWtVTyy
iEytbP1aGexDjEGu5fftcKEPEY+j7XP18GO1v8qv1f7iWqdMuiTpN+UXi/3I
XyY9oL7Of7uxGjzntXZsvdpHtb85/seL2Hy1/crP9V15jPyn5C+2vbKR/Afn
HvInDyXGyNZimtoVqV+txB/yxXqwbW1S8jNn5p4eRP0vKN+S9rOQP3goOvO2
ZfiMlj2ij4TPt4zv7R3UWZq6c7ZjK7xN/kw3/nDq+7s3Eq/k+TLcptvVn8hf
rn2wiE/D+5RN140ueT/56Ulf4fxF+U3kP3B+6YSvaOyIH7vBjMSOZumPvvxV
GV+lp7R/kx7Rij+qfqnKG/KTXKuf49y3lM/B+SN4d75UZqLPHaj/BmVjD8R/
1znMucxzlj3o/SziY/O736I6WDUc+P/slWWwKWUa+eKbaXMYDIf1rE74kE/0
h9Min+oH6qxSxEfmxzL81z+UxVwTyswxzjViXPKR/27lv4lBiUXJDxNfEWc5
ohv+2UtiJ0X4WTu2ElvGmDr6K99F/qgiPqj6oqqTqJtsVsQ3ZwbKD6Wvb9TZ
tbWRf3cwPjuWL9cO31Gu2Sfd8EeOLcJ5l/uuv4z8iEeK4KEPiUEX8WHQl0F7
su/yJ7Xgi3NwHDWU/+x8/Zr4Z38wJZ/H3coyRXx6fnX+VV8Qq9D+xP+fkvKd
h8LBl2+lTCRW8X1PVjImhzY7dTR1NX3i1SE75D+j7Vz8x6MHIv9o+3F917dN
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
2n3xz5afrl1P+94E7XBO5Z7KGa504gOkL1Af49uwm5iZxs48VEyxE580fdPk
/G3WjY+gvoJew2tps9d236F84578PnYj8f2M9aZNUNugNlh9LzblHlw5kBiJ
f7Wy/ntvPGeZnHzlGznby5X5/tXljiW/PPmDauF06w+zcTt5eZfyL9cXP1Re
oOxc8uuW4Q/IrbhlIHiIfO0ZtacPxH9vaWWwSjCFZcT7xAMqkVGVVfX3s67y
8Ybt2OePJ/84+c3JL1FGdziUc0uWkaflPcp/XKpMzCnjOurTrm/7UBlfeGNY
bUV6mzJjk7Mvd198X26ENkxtmRspz4g9cvzWij+A3+LFypuUfdqKbny597+M
PebLRjgJ8lG24NwNA/HB0RdnoEysCX3u9b3Xx1VfV+uIH21XJtaEpBq59+L3
xtYzRsWIHt5pHArrbE9+hzJYqD4X+l6Ij67UzBwgv0dOvdx6faqNtzRjJ76z
xnQxtos+bepi9/clfuS6rXB15ewar0z+wovMFy9xrNQNR3gpylfoS7yxSTj3
cSU2ZeMrWce6YgTPtsJvd+3vikG1gn/aVo6DXAf5FHKj1u1LfBk5XnK9NuqL
f4X4u9+SmJTY1Bv0X69FB9GfUk6f3D45f/qX659hW33U9FXz/9q3nAd9i+pl
uIVjVMLfqbQTe0aOilwVfX70/ZGzZzxO/Zvf78ua4drRLBNLeqxK3ofTxFP7
4qOnr578LLkoyhjyhbb1m65kTvmgp6+O3gjnQu6FfHd1RTFh+R4/kH9hKHO0
9krjF/ypLlUJf0YOtlxsn4l8EvVN4+b4H6bshK+l7GUMul9666HPVh8Bfbvk
wMmF26Av/s9yYI2rowyoLCinUG7hln3xbzSGnLFzvAf6d2tz1vYs51zuue+/
a6MxMbekfLlW/PfkBMgNkE+wSF/0323b4fvZtzZzbefGyDBWhvEkN3Vt6ya+
ozKqsqr2YDkf2oC1BRuD8Xrx5L7wp8ULPqglRqOxYuRXWyb+ov1df2//6yjk
j+3hWUfUEl/a2I8r0d+cRcYo30GOn/3LGZI7JOf6SvKdvsS/HaMT2eQ/Dmsn
GMS3tXCwxSZ+bYWb6pzh3CEf17VBnx5j9xpP1760lz6qfNtOfCdjnnY74Q/o
66wP54hu4m8qu+nT82c7+NoetcSHMra6Mq+y7wJ8H9eJVXXieyEn4gPx9TKy
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
yivOZWKo+p7/H/aHTO0=
         "]], Polygon3DBox[CompressedData["
1:eJwl1XuQzlUcx/Efu3jY1TIsqdxC7caMcdmVFZOp/OFaxl3uubPrsljk2qYt
97CVhmVCxWhiUmnUIBqERCOZHS0SkuxEIaTX6fnjO8/5vs/n+/mec36/83vq
D83pnl02iqJcUU5cfCCKtiZG0c5KUfRTLIoaVY6iKclRVFw+ii4lRVEqPrFK
FI0QxeY3YgPMHUqJovHY7YpRNIMmnUcBr7viL+M7FaJoDv1JXgN47i5jDpuL
ncIm0l1PiKLBao9jj9DM5ZfF/wnzebTDsDKirtosfSrQpqk7gc20ifW0P6pt
IF+JzzN/DjtqfVetbzS/m+ZXq/2Ufg3fedhkmk7YQ9gJdU1FstrZoqW1vymf
QtdDvpt2Cb/f9DiPbzH/OX6Cbx3spJjFZyq/U1jDoNN7n5ozas/SvszrCr4C
24uNxaZhf9P9jl3DFmNr+PcWdY0H8bvsfHLkk2mbYMvpWtPv4LUIn4X9jH2D
XeBVVty3vnNhL9byg/2OoD3g/Orzm459h/Xh18m4qkiz9rK8Lqk9yKeEX1n1
2TR9RVeaGqLAu5LE65p4j+5buq9EPk2S+u56DNfjoEiWb+fXnq6Q5rD64XSD
1e6ly+U/DzttLb3xtsb3PO+71n5fbU/R1rr683qYtoc8l65VOBdR6lwO8BoQ
np18DN1Avg9iz2E1sWexKjw6yIvxGRXjzy08v1+withGfSuIfvZWSZ4gOhsn
Yu+IRHkvfZ+Kxd/n/99rtUdCj+DN81f7e5Wmsf3WxfLk08V8bCU2O9wXuiL1
Wdh+ey7UoxbPPeIBPZrTtXEZ64UzEY9jR8I95PeovEQ0k2eJC7H4XQ139pJ1
jBbHnUd/rMDcRf5r+S3Ud5i+G/Rtp28K3SH5EryF57KB5irt4lj8fQnvTQK2
GktVU85vPdrZauernUbTTv62dfamqy1uYtXomtIn05W3viJ+mfqUeh5z5aV0
x/Urh68L540Noy007sPva35TaFLFdX5V+KXzq0jzOhapzaWrZW4SVgcbAW+V
3xJ15R3xnWrm6buN9gTWTSzh3Uaep9cRvmOw7VincKexwepysT1YL2wVNhTL
DL35tebXNzxPmiHYUvNd5J/Qj8UysAV0GXQv4BOxy/q8QddefswZTLDfTniB
mlbYVHOD1H3mTDdZfwJ9ZR6JWEuRb9yCX1fanLD/lPi9CPfjNbXn6deJTON/
xAo9ntHjFl2ps/pT3Qq+6/l3xT80n8RvNO1A/tPFKvOF4Y57v/bR3FNbJtw/
tWvwGTSjwp3BGus1BcvDOogd4Vywc/xGyjcZP2nczu9ec52xknDO1vI9v2y1
M62lxPyCWPw7FL5HI/lXD997NTXMzQzfQHVH8efVrg1rEa/QTBBV+VyUnzY3
kT4Fy1CbGv5Lwh1Ue8V4UfgP0+O4HpN5vUjXM/QV4+x3D7aHtgefovB9xjPC
t4SuVyx+38K9O4zdobtBd4NuF56MNRFnjN/FOpv7kmaW2uryeyLRmiL5GLHL
Otpib4X3i67Y+vLD98Zejrmzo5zLx/hKmlbmNqt9Wt0X4bkZZ2KHeYzFZor3
1SViVcwV+q2hdqB2W/AboqZ8Hc++3pfl8mWiSL5A7WU9uvCqbW9HsQbivry5
qOasSvmtEB+YX4b9YZ2j1E0Vw/gcVb/ZfkutLSP8z6uJ0aSE/0x5I71vG38U
/u+sqaF8o2ipZqna/bQv8RonjvAfEtbsDCapTcey7ekx/RvRzgnvhdoG4UzV
jTeXhvUP/8mx+HcyfC+b0exQ00U+LZy9XguxfnTdsJqio/1ssOZ0/F89t4l8
60uT59Alys+G/yi1V7D/APljNWc=
         "]]}]}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{1708, 1, 1378, 402, 3143, 16, 1242, 3144, 31, 1252, 3145, 46,
        3444, 468, 1064, 61, 985, 3451, 487, 76, 3462, 509, 1084, 91, 3469, 
       530, 106, 553, 3195, 121, 1000, 575, 3196, 136, 599, 3748, 1122, 151, 
       1007, 618, 3197, 166, 3891, 1350, 181, 3892, 1359, 196, 3560, 679, 
       1807, 211, 1707, 714, 2094, 212, 1211, 2095, 213, 1212, 2096, 214, 
       2753, 1213, 1881, 215, 2452, 684, 216, 2660, 1022, 685, 1809, 217, 
       2453, 687, 1812, 218, 1674, 689, 2097, 219, 1023, 691, 1157, 2098, 220,
        692, 2099, 221, 1216, 2100, 222, 2755, 1217, 223, 2756, 1218, 224, 
       2461, 697, 1814, 225, 1677, 696, 3231, 210, 1209, 3217, 195, 1205, 
       3207, 180, 3544, 638, 1135, 165, 1006, 3518, 616, 150, 3501, 596, 1120,
        135, 3481, 572, 120, 550, 3194, 105, 994, 527, 3180, 90, 506, 3737, 
       1083, 75, 983, 484, 3157, 60, 3834, 1267, 45, 3829, 1250, 30, 3408, 
       428, 1716, 15, 1685, 703, 2037, 14, 1238, 2035, 13, 1235, 2034, 12, 
       2765, 1232, 11, 2311, 420, 10, 2646, 966, 417, 1712, 9, 2309, 416, 
       1037, 8, 1386, 413, 2031, 7, 964, 411, 1034, 2030, 6, 699, 2029, 5, 
       1225, 2028, 4, 2758, 1222, 3, 2757, 1219, 2, 2462, 698, 1708}]}, {
      Line3DBox[{3143, 3393, 3827, 2101, 3394, 3272, 3396, 4276, 3232, 3395, 
       3895, 4135, 3896, 3398, 2662, 4062, 3233, 3397, 3897, 4136, 3898, 4231,
        3399, 3582, 3702, 3234, 3569, 3687, 3701, 4323, 4213, 3562, 3703, 
       4063, 3235, 4137, 4223, 4341, 3899, 3825, 4174, 3236, 3400, 2149, 3401,
        3900, 3237, 4138, 3901, 3902, 3828, 2103, 3826, 3903, 3904, 3402, 
       3704, 3705, 4324, 3238, 4172, 4057, 4059, 4058, 3563, 4215, 4304, 3706,
        3239, 3403, 3905, 3907, 3906, 3405, 4325, 3707, 4064, 3240, 3404, 
       3908, 4139, 2858, 3407, 3708, 4065, 3241, 3406, 4190, 4232, 3242, 3570,
        2318, 3830, 3243, 3408}], 
      Line3DBox[{3144, 3273, 3775, 1815, 4361, 3409, 1243, 3776, 1816, 3410, 
       1244, 3777, 4342, 1398, 1817, 1245, 4233, 3778, 1819, 3571, 1385, 4234,
        3831, 1400, 1401}], 
      Line3DBox[{3145, 3274, 3835, 4182, 4256, 3418, 3275, 3420, 3909, 4140, 
       3910, 3419, 3911, 3912, 3276, 3423, 2674, 3913, 3709, 3422, 3914, 3915,
        4191, 4236, 3425, 3583, 3584, 3574, 3609, 4309, 3277, 3919, 3711, 
       3918, 3712, 3427, 4224, 4363, 4128, 3278, 4177, 4175, 4176, 3428, 4279,
        3279, 3430, 3920, 3921, 3429, 3922, 3412, 3839, 4183, 4277, 3833, 
       3923, 4129, 3280, 4143, 3713, 4257, 4216, 3432, 4141, 4142, 4066, 3281,
        3926, 4202, 4344, 3924, 3585, 3434, 3610, 3925, 3282, 3436, 4327, 
       3714, 3927, 3715, 3435, 3928, 3929, 2173, 3439, 3717, 3930, 3718, 3438,
        3931, 3932, 3283, 3442, 3245, 3441, 4280, 3284, 3842, 3246, 3834}], 
      Line3DBox[{3157, 4130, 3310, 3843, 3309, 4262, 3156, 3308, 3443, 3307, 
       4261, 3155, 3719, 3306, 3440, 3305, 4345, 3941, 3933, 3154, 3716, 4145,
        2185, 3437, 3304, 3617, 3153, 3616, 4310, 3303, 3689, 3302, 3938, 
       3615, 3720, 4205, 4321, 3690, 3301, 3433, 3300, 3152, 4283, 3299, 3840,
        3298, 3841, 3151, 3614, 3297, 3431, 3296, 4260, 3150, 3295, 3832, 
       3294, 3936, 4259, 4220, 4067, 3613, 3935, 3293, 3688, 3292, 4258, 3612,
        3149, 3611, 3291, 3426, 2178, 3934, 3917, 3148, 3710, 4144, 4326, 
       3290, 3424, 3289, 3916, 3147, 4282, 3288, 3421, 3287, 3146, 4281, 3286,
        3836, 3285, 3837, 3444}], 
      Line3DBox[{3180, 3338, 3337, 4265, 3179, 3735, 4079, 3736, 3460, 3963, 
       4151, 3962, 3178, 3733, 4078, 3734, 3459, 4348, 3961, 4150, 3960, 3177,
        3731, 4077, 3732, 4248, 3458, 3633, 3691, 3632, 3176, 3630, 3730, 
       3631, 4247, 3457, 3629, 3955, 3628, 3175, 2800, 4104, 3857, 3786, 3336,
        3174, 4287, 3335, 4080, 4082, 4081, 3173, 3738, 3739, 3456, 3334, 
       4264, 3172, 3333, 3852, 3856, 2798, 3171, 3626, 3727, 3627, 3455, 4347,
        3953, 4149, 3952, 3170, 3725, 4070, 3726, 3454, 4346, 3951, 4148, 
       3950, 3169, 3723, 4069, 3724, 4246, 3453, 3949, 4147, 3948, 3168, 3721,
        4068, 3722, 3452, 3945, 4146, 3944, 3167, 4285, 3332, 3331, 3462}], 
      Line3DBox[{106, 2061, 107, 1936, 532, 1750, 108, 1937, 534, 3045, 1751, 
       109, 1938, 2376, 536, 1090, 110, 1688, 2466, 708, 1755, 111, 2805, 
       1306, 112, 3053, 1765, 113, 1766, 2062, 114, 1177, 1843, 2063, 115, 
       1694, 710, 3050, 1759, 116, 995, 545, 3051, 1760, 117, 1943, 2384, 547,
        1761, 118, 1944, 549, 1762, 119, 2064, 120}], 
      Line3DBox[{3194, 3655, 3656, 3468, 3654, 3653, 4315, 3193, 3651, 3652, 
       3467, 3650, 4288, 3649, 3192, 3872, 4109, 3873, 3792, 4334, 3871, 3870,
        3191, 3868, 4108, 3869, 4250, 3791, 3867, 3866, 3190, 4084, 4360, 
       4230, 3790, 3970, 3969, 3189, 4209, 4314, 3648, 3466, 3966, 3965, 3188,
        2912, 3964, 3566, 3693, 3692, 3187, 3646, 3647, 3465, 3645, 2579, 
       3186, 3643, 3644, 3464, 3642, 4286, 4208, 3185, 3967, 4107, 3968, 3789,
        4229, 4331, 4083, 3184, 3864, 4106, 3865, 3788, 4333, 3863, 3862, 
       3183, 3860, 4105, 3861, 4249, 3787, 3859, 3858, 3182, 3640, 4313, 3641,
        3463, 3639, 3638, 3181, 4289, 3636, 3637, 3461, 3635, 3634, 3469}], 
      Line3DBox[{3195, 3657, 3658, 3471, 3586, 4184, 4306, 3470, 3659, 3660, 
       3473, 3587, 4290, 3247, 3472, 3874, 3875, 3793, 4349, 3973, 4111, 3248,
        4110, 3876, 3877, 4237, 3794, 3974, 4113, 3249, 4112, 3975, 4350, 
       4225, 3795, 3976, 4114, 3250, 3977, 4210, 4316, 3661, 3474, 3797, 3251,
        3796, 2933, 3978, 3475, 3588, 3252, 3694, 3662, 3663, 3477, 3589, 
       2124, 3476, 3664, 3665, 3478, 3590, 4291, 3253, 3979, 3971, 3972, 3883,
        4226, 4335, 3254, 3980, 3878, 3879, 3798, 4351, 3981, 4116, 3255, 
       4115, 3880, 3881, 4238, 3799, 3982, 4118, 3256, 4117, 3666, 4317, 3667,
        3480, 3591, 3257, 3479, 4292, 3668, 3669, 3482, 3592, 3258, 3481}], 
      Line3DBox[{3196, 3339, 4185, 4266, 3483, 3985, 4152, 3986, 3485, 3740, 
       4085, 3259, 3484, 3983, 4153, 3984, 3487, 4328, 3741, 4086, 3260, 3486,
        3987, 4154, 3988, 4239, 3488, 3593, 3742, 3261, 3576, 3670, 3695, 
       3671, 4240, 3489, 3594, 4087, 3262, 4155, 2945, 3989, 3882, 4179, 3263,
        3490, 4293, 3340, 4091, 4156, 3264, 4157, 3990, 3991, 3492, 4186, 
       4267, 3491, 3341, 3800, 3992, 4119, 2128, 3993, 3672, 3996, 3673, 3494,
        4352, 3743, 3744, 3265, 3493, 3994, 3999, 3995, 3496, 4329, 3745, 
       4088, 3266, 3495, 3997, 4158, 3998, 4241, 3498, 3746, 4089, 3267, 3497,
        4000, 4159, 4001, 3500, 3747, 4090, 3268, 3499, 4294, 3342, 3269, 
       3501}], Line3DBox[{3197, 4134, 3353, 3889, 4187, 4269, 3519, 3354, 
       3521, 4188, 4270, 3520, 4025, 3355, 3524, 4217, 4354, 4022, 3749, 3523,
        4023, 4024, 2256, 3526, 3604, 3605, 3579, 3678, 4319, 3356, 3697, 
       3606, 4028, 3607, 3528, 4212, 4322, 3696, 3357, 3530, 3270, 3529, 4296,
        3358, 3811, 4123, 4124, 3580, 3679, 3359, 3532, 4189, 4271, 3531, 
       3360, 3813, 4031, 4032, 4272, 4227, 3534, 4163, 4164, 4092, 3361, 3698,
        4204, 4273, 3608, 3581, 3680, 3362, 3536, 2713, 4034, 3752, 3535, 
       4035, 4036, 4356, 3363, 3539, 3754, 3755, 3538, 4297, 3364, 3542, 3271,
        3541, 4298, 3365, 3815, 4125, 4126, 3544}], 
      Line3DBox[{3207, 3387, 3816, 3386, 4275, 3206, 3385, 3543, 3384, 4168, 
       4047, 3205, 3756, 4167, 3383, 3540, 2275, 4046, 4037, 3204, 3753, 4166,
        4199, 4251, 3537, 3382, 3684, 3203, 3683, 4320, 3381, 4033, 3380, 
       4045, 3759, 4096, 4221, 4336, 3379, 3814, 3378, 3202, 4301, 3377, 3533,
        3376, 3758, 4095, 4094, 3549, 3812, 3548, 4300, 3201, 4030, 3375, 
       4162, 3374, 4274, 4218, 4093, 3751, 4044, 3373, 4029, 3372, 4357, 4043,
        3682, 3757, 3681, 4165, 3371, 3527, 4355, 4198, 4042, 4027, 3200, 
       3750, 4041, 2267, 3525, 3370, 4040, 4026, 3199, 4038, 4039, 3369, 3522,
        3368, 3198, 4299, 3367, 3890, 3366, 3891}], 
      Line3DBox[{3217, 3389, 3821, 1369, 4339, 3216, 1368, 3820, 1367, 3215, 
       1366, 3819, 4338, 1365, 3214, 1364, 4253, 3818, 1363, 3213, 1661, 3073,
        1802, 1703, 1804}], 
      Line3DBox[{3231, 3561, 3824, 2459, 3230, 3392, 3558, 4303, 4201, 3229, 
       3768, 4101, 3769, 3557, 3004, 4171, 4055, 3228, 3766, 4100, 3767, 4255,
        3556, 3686, 3700, 3685, 3227, 3699, 3765, 4330, 4214, 3568, 3774, 
       4061, 3773, 3226, 4222, 4340, 4127, 3894, 3823, 3391, 3225, 2291, 3555,
        3772, 3771, 3224, 4102, 4103, 3822, 2290, 3223, 4053, 4054, 3554, 
       3770, 4052, 4359, 4219, 3222, 3763, 4099, 3764, 3567, 4228, 4305, 4060,
        4056, 3221, 3761, 4098, 3762, 3553, 4358, 4051, 4170, 4050, 3220, 
       3760, 4097, 2720, 3552, 4049, 4169, 4048, 3219, 4200, 4254, 3390, 3218,
        2447, 3893, 3559, 3560}], 
      Line3DBox[{3451, 3618, 3311, 3575, 3312, 3619, 4284, 3158, 3844, 3313, 
       3781, 3314, 3942, 3845, 3159, 3846, 3943, 3315, 3782, 4244, 4192, 3946,
        3847, 3160, 3848, 3947, 4193, 4332, 3783, 3316, 3849, 3161, 3850, 
       2193, 3838, 3317, 4071, 4072, 4206, 4263, 4131, 3318, 3937, 3319, 3851,
        3162, 2793, 3320, 3445, 3321, 3728, 4073, 3729, 3446, 3565, 3447, 
       2887, 3163, 3939, 4178, 3322, 3940, 3323, 4180, 4364, 4207, 4075, 4074,
        4181, 3324, 3784, 2196, 3853, 4076, 3854, 3954, 3325, 3785, 4245, 
       4194, 3956, 3855, 3164, 3620, 3957, 4195, 4311, 3448, 3326, 3958, 3621,
        3165, 3622, 3959, 3327, 3449, 3328, 3623, 3166, 4312, 3624, 3329, 
       3450, 3330, 3625, 3737}], 
      Line3DBox[{3518, 3603, 3602, 3578, 3352, 3677, 4295, 3517, 4122, 4121, 
       3810, 3351, 4021, 3888, 3516, 4020, 4161, 4019, 3809, 4243, 4197, 4018,
        3887, 3515, 4017, 4160, 4016, 4353, 3808, 3350, 3886, 3577, 4120, 
       3095, 3807, 3349, 4014, 3514, 4203, 4268, 3601, 4015, 3348, 3885, 3805,
        2741, 3806, 3513, 3347, 4013, 3511, 4012, 4173, 4011, 3512, 3510, 
       2963, 3802, 3804, 3803, 4010, 3346, 4318, 4211, 3509, 4009, 4008, 4133,
        2247, 4132, 1959, 3508, 1958, 4007, 4006, 3801, 4242, 4196, 4005, 
       3884, 3506, 3600, 4004, 3599, 4308, 3507, 3345, 4003, 3676, 3504, 3598,
        4002, 3597, 3505, 3344, 3675, 3502, 4307, 3596, 3595, 3503, 3343, 
       3674, 3748}], 
      Line3DBox[{3829, 3244, 3417, 811, 4278, 3415, 746, 3416, 810, 3413, 745,
        3414, 4235, 809, 1821, 1409, 4343, 3780, 1249, 3573, 1820, 4362, 3779,
        1405, 1907}], 
      Line3DBox[{3892, 3388, 3545, 942, 4302, 3208, 943, 3546, 944, 3209, 945,
        3547, 4252, 946, 3210, 1361, 4337, 3817, 1362, 3211, 1652, 3071, 1799,
        1654, 1800}], 
      Line3DBox[{2491, 744, 2107, 974, 807, 972, 2649, 743, 3564, 804, 3572, 
       742, 3411, 803, 2648, 969, 741, 970, 801, 2529, 801}], 
      Line3DBox[{2631, 947, 1014, 948, 1145, 2721, 950, 3550, 951, 3212, 952, 
       3551, 953, 2722, 1146, 955, 1016, 956, 2640, 956}], 
      Line3DBox[{947, 2632}]}, {
      Line3DBox[{2028, 2760, 2147, 2300, 2148, 4231, 2851, 2301, 2852, 2157, 
       2862, 2158, 4233, 2768, 2729, 2775, 2165, 2871, 2166, 4236, 2870, 2333,
        2872, 2178, 2884, 2179, 2782, 2730, 2788, 4332, 2191, 2893, 2192, 
       2892, 2355, 2894, 4346, 2203, 2908, 2204, 2797, 2731, 2804, 4333, 2215,
        2920, 2216, 2919, 2376, 2921, 2224, 2930, 2225, 4237, 2809, 2734, 
       2816, 2232, 2943, 2233, 4239, 2942, 2397, 2944, 2244, 2959, 2245, 4242,
        2821, 2738, 2828, 2255, 2969, 2256, 2968, 2413, 2970, 4355, 2268, 
       2981, 2269, 2833, 2746, 2840, 4337, 2279, 2992, 2280, 2991, 2433, 2993,
        4358, 2288, 2450, 2289, 2845, 2753}], 
      Line3DBox[{2029, 2643, 2302, 2471, 2303, 3008, 2644, 4323, 2463, 2645, 
       3009, 2305, 2473, 2306, 4234, 2855, 2776, 2777, 3033, 2167, 2475, 4309,
        2168, 2875, 2537, 2335, 2547, 2650, 2180, 4258, 2476, 2181, 3106, 
       2783, 2789, 2193, 2478, 2194, 2898, 2560, 2357, 2897, 4347, 2899, 2205,
        2910, 2206, 2909, 2732, 4331, 3046, 2374, 2465, 2375, 3013, 3012, 
       2466, 2699, 3014, 2378, 3136, 2379, 2931, 4350, 2735, 2817, 2234, 2480,
        2235, 2654, 4240, 2591, 2399, 2602, 2947, 2246, 3107, 2247, 3108, 
       2960, 2822, 2829, 3063, 2257, 2483, 4319, 2258, 2656, 2611, 2415, 2624,
        2971, 2270, 4357, 2983, 2271, 3109, 2982, 2834, 2994, 3071, 2434, 
       2486, 2435, 3018, 2658, 2468, 4305, 3006, 3019, 2437, 3132, 2438, 3005,
        2452}], 
      Line3DBox[{2030, 2522, 2664, 2523, 2304, 2854, 3110, 2853, 4341, 2761, 
       2769, 3026, 2770, 2321, 2529, 2863, 2528, 2323, 2538, 3034, 2539, 2334,
        4363, 2874, 3114, 2873, 2778, 2784, 3038, 2785, 4259, 2344, 2549, 
       2885, 2548, 2346, 2561, 3040, 2562, 4263, 2356, 2896, 3119, 2895, 2791,
        2798, 3043, 2799, 2364, 2569, 2911, 2568, 2366, 4286, 2577, 3047, 
       2578, 2377, 2923, 3122, 2922, 2805, 2810, 3052, 2811, 2387, 2586, 2932,
        2585, 4316, 2388, 2592, 3056, 2593, 2398, 2946, 3125, 2945, 2818, 
       2823, 3059, 2824, 2406, 4318, 2604, 2961, 2603, 2407, 2612, 3064, 2613,
        2414, 4322, 2615, 2655, 2614, 2972, 2716, 3068, 2717, 4274, 2424, 
       2626, 2984, 2625, 2425, 2631, 3072, 2632, 2436, 2634, 2995, 2633, 2998,
        4359, 2727, 3076, 2728, 2451, 2642, 3007, 2641, 2660}], 
      Line3DBox[{2031, 2524, 2525, 2307, 2149, 2308, 2672, 3027, 2673, 2322, 
       2531, 2648, 2530, 2324, 2540, 2541, 2336, 4279, 2169, 2337, 2182, 4260,
        2345, 2551, 2550, 2347, 2792, 2793, 2790, 2195, 2358, 2207, 4264, 
       2365, 2571, 2570, 2367, 2579, 2580, 2380, 2217, 3053, 3137, 3138, 2736,
        2934, 2933, 2389, 2594, 2595, 2400, 4293, 2236, 3060, 3139, 3140, 
       2739, 2963, 2962, 2408, 2616, 2617, 2416, 4296, 2259, 2744, 2426, 4300,
        2747, 2986, 2985, 2427, 2635, 2721, 2636, 2439, 2997, 3130, 2996, 
       2751, 2290, 2754, 2847, 2846, 2453}], 
      Line3DBox[{8, 1711, 414, 1903, 4138, 23, 719, 3572, 38, 1726, 455, 3429,
        1913, 53, 3151, 724, 68, 1738, 4073, 495, 1928, 83, 3173, 1748, 517, 
       991, 98, 3187, 1093, 540, 1942, 113, 1769, 561, 997, 3694, 128, 1111, 
       584, 1954, 4157, 143, 1782, 608, 3511, 1960, 158, 732, 3580, 173, 1795,
        4095, 649, 1971, 188, 3212, 736, 203, 3224, 1811, 686, 1984, 218}], 
      Line3DBox[{2034, 2767, 2151, 2314, 2152, 2858, 2316, 2859, 2160, 2868, 
       2161, 4235, 2534, 2328, 2544, 2172, 2880, 2173, 2879, 2339, 2881, 2186,
        4345, 2890, 2187, 2555, 2351, 2565, 4311, 2198, 2904, 2199, 2903, 
       2361, 2905, 4348, 2211, 2917, 2212, 2802, 2733, 2808, 4334, 2219, 2926,
        2220, 2925, 2384, 2927, 2228, 2940, 2229, 4238, 2814, 2737, 2820, 
       2239, 2956, 2240, 4241, 2955, 2403, 2957, 2251, 2966, 2252, 4243, 2827,
        2742, 2832, 2262, 2978, 4356, 2263, 2977, 2420, 2979, 2275, 2989, 
       2276, 2837, 2748, 2842, 4338, 2282, 3003, 2283, 3002, 2444, 3004, 2293,
        2457, 2294, 2850, 2755}], 
      Line3DBox[{2035, 1239, 2315, 2153, 4232, 2036, 2162, 2327, 810, 2330, 
       820, 1437, 3932, 1436, 2341, 2188, 4261, 2350, 837, 2353, 847, 3959, 
       1478, 1477, 1930, 4151, 1480, 1502, 861, 2371, 4288, 873, 1525, 1524, 
       1944, 1527, 1548, 884, 4317, 2394, 900, 1582, 1581, 4159, 1957, 1584, 
       1603, 4021, 1338, 2743, 1348, 2419, 4297, 2264, 2422, 1645, 4168, 1975,
        1357, 2749, 1367, 2443, 2284, 2446, 4303, 2295, 2458, 1377, 2756}], 
      Line3DBox[{2037, 2317, 2472, 2318, 2771, 2163, 2329, 2536, 4278, 2535, 
       2331, 2545, 2546, 2340, 4280, 2174, 2786, 2189, 4262, 2352, 2557, 2556,
        2652, 2566, 4312, 2567, 2362, 2200, 2055, 2213, 4265, 2370, 2574, 
       2573, 2372, 2583, 4315, 2584, 2385, 2221, 2064, 2230, 2393, 2588, 4292,
        2587, 2395, 2600, 2601, 2404, 4294, 2241, 2073, 2253, 2410, 2607, 
       4295, 2606, 2482, 2622, 2623, 2421, 4298, 2265, 2745, 2277, 4275, 2430,
        2839, 2838, 2750, 2843, 4339, 2844, 2445, 2285, 2752, 2459, 2470, 
       2460, 2461}], 
      Line3DBox[{2094, 2143, 2488, 2447, 2090, 2139, 2431, 2629, 4302, 2628, 
       2084, 2136, 2511, 2423, 4299, 2266, 2080, 2132, 4269, 2411, 2609, 2608,
        2074, 2129, 4307, 2505, 2405, 2242, 2070, 2126, 4266, 2396, 2590, 
       2589, 2065, 2123, 4306, 2502, 2386, 2222, 2061, 2120, 2373, 2576, 4289,
        2575, 2056, 2117, 2499, 2363, 4285, 2201, 2052, 2114, 2354, 2559, 
       4284, 2558, 2047, 2111, 2494, 2342, 4281, 2175, 2043, 2108, 4256, 2332,
        2773, 2772, 2038, 2105, 4361, 3078, 2319, 2154, 2026, 2101, 2297, 
       2296, 2462}], 
      Line3DBox[{2095, 1878, 2448, 2286, 4254, 2091, 2140, 2432, 944, 2085, 
       786, 1626, 4039, 1625, 2081, 2133, 4270, 2412, 916, 2075, 778, 4002, 
       1585, 1106, 1771, 4085, 1105, 1549, 889, 2066, 4290, 769, 1528, 1087, 
       1750, 1086, 1503, 866, 4313, 2057, 760, 1481, 1068, 4068, 1733, 1067, 
       1453, 3942, 1281, 2048, 1823, 2343, 4282, 2176, 2044, 1411, 4140, 1909,
        1255, 2039, 1816, 2320, 2155, 2027, 4276, 2102, 2298, 1221, 2757}], 
      Line3DBox[{2096, 3103, 3102, 2449, 2287, 2720, 3070, 2719, 2718, 2990, 
       2278, 4252, 2630, 2086, 2513, 2512, 2980, 2267, 2711, 3062, 2710, 2709,
        4354, 2967, 2254, 2610, 2076, 2507, 4308, 2506, 2958, 2243, 2702, 
       3055, 2701, 4328, 2700, 2941, 2231, 2815, 3093, 2929, 4349, 2928, 3123,
        2223, 2692, 3045, 2691, 2690, 2918, 2214, 4249, 2803, 3088, 2907, 
       2906, 3120, 2202, 4246, 2685, 3039, 2684, 2683, 2891, 2190, 4244, 2787,
        3083, 2883, 2882, 3116, 4326, 2177, 2676, 3032, 2675, 2674, 2869, 
       2164, 2774, 3079, 2861, 4342, 2860, 3111, 2156, 2663, 3023, 2662, 2661,
        2299, 2146, 2759, 2758}], 
      Line3DBox[{2097, 2144, 2518, 2454, 2291, 2092, 2141, 3131, 2999, 2440, 
       2638, 2722, 2637, 2087, 2137, 2514, 2428, 4301, 2272, 2082, 2134, 4271,
        2417, 2619, 2618, 2077, 2130, 2741, 2740, 2248, 2071, 2127, 4267, 
       2401, 2597, 2596, 2067, 2124, 2503, 2390, 2226, 2062, 2121, 2806, 2913,
        2912, 2058, 2118, 2500, 2368, 4287, 2208, 2053, 2115, 2794, 2887, 
       2886, 2049, 2112, 2495, 2348, 4283, 2183, 2045, 2109, 4277, 2779, 2865,
        2864, 2040, 2106, 2649, 2490, 2325, 3029, 3030, 3028, 2032, 2103, 
       2762, 2764, 2763, 2309}], 
      Line3DBox[{2098, 2145, 3133, 2519, 2455, 2849, 3077, 2848, 4340, 2093, 
       2142, 3101, 3020, 3135, 2469, 2640, 3074, 2639, 2088, 2138, 3128, 2515,
        2429, 4336, 2836, 3069, 2835, 2083, 2135, 2974, 2973, 4272, 2418, 
       2621, 3066, 2620, 2078, 2131, 3126, 2508, 4268, 2409, 2826, 3061, 2825,
        2072, 2128, 2949, 2948, 2402, 2599, 3057, 2598, 2068, 4291, 2125, 
       2935, 2504, 2391, 2813, 3054, 2812, 2063, 2122, 3092, 3015, 3142, 2467,
        2582, 3048, 2581, 4314, 2059, 2119, 2914, 2501, 2369, 2801, 3044, 
       2800, 2054, 2116, 3087, 2900, 3141, 2359, 4364, 2564, 3041, 2563, 2050,
        2113, 3117, 2496, 2349, 4321, 2553, 2682, 2552, 2046, 2110, 3115, 
       2677, 4257, 2338, 2543, 3036, 2542, 2041, 2107, 3112, 2491, 2326, 2533,
        3031, 2532, 2033, 4324, 2104, 3134, 2665, 2464, 2527, 3024, 2526, 
       2646}], Line3DBox[{2099, 2521, 2520, 2489, 2442, 3022, 2659, 4330, 
       2723, 2517, 3021, 2516, 2487, 2441, 3073, 3000, 2089, 3099, 3098, 2485,
        4320, 2273, 2975, 2627, 2712, 2510, 2657, 2509, 4273, 2484, 2260, 
       3065, 2830, 2079, 3096, 3095, 2481, 2249, 2953, 2605, 2705, 2704, 4352,
        2952, 2703, 2951, 2237, 2950, 2069, 4335, 2937, 2936, 2392, 2383, 
       3017, 2695, 3050, 2694, 3016, 2693, 2382, 2381, 3049, 4360, 2060, 3090,
        3089, 2479, 2209, 2653, 4247, 2572, 2686, 2498, 2901, 2497, 2360, 
       2196, 2795, 2051, 3085, 3084, 2477, 4310, 2184, 2651, 2554, 2678, 2493,
        2877, 2492, 4344, 2876, 2170, 3035, 2780, 2042, 3081, 4362, 3080, 
       2474, 2312, 3011, 2647, 2668, 4304, 2667, 3010, 2666, 2857, 2310, 2856,
        2311}], 
      Line3DBox[{2100, 3105, 3104, 2456, 2292, 4255, 2726, 3075, 2725, 2724, 
       3001, 2281, 4253, 2841, 3100, 2988, 2987, 3129, 2274, 4251, 2715, 3067,
        2714, 2713, 2976, 2261, 2831, 3097, 2965, 4353, 2964, 3127, 2250, 
       2708, 3058, 2707, 4329, 2706, 2954, 2238, 2819, 3094, 2939, 4351, 2938,
        3124, 2227, 2698, 3051, 2697, 2696, 2924, 2218, 4250, 2807, 3091, 
       2916, 2915, 3121, 2210, 4248, 2689, 3042, 2688, 2687, 2902, 2197, 4245,
        2796, 3086, 2889, 2888, 3118, 2185, 2681, 3037, 2680, 4327, 2679, 
       2878, 2171, 2781, 3082, 2867, 4343, 2866, 3113, 2159, 2671, 3025, 2670,
        4325, 2669, 2313, 2150, 2766, 2765}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
+WTjbAlBPvfzH1XBfvCy76FC2r/AGb9jj7B/WVIpxvSD2gpuubTfIfOe6DH9
zoyvsY3YDzok8n6h/RGp0fh8DfsjH6GySewHhY7mjdJ+irAt/W6L/ZRTo8A8
7AetitOx/yJ7BzJMsf/y1mkTwH4wruKuFu3XSM7hQ0y/5j4azfSDdWZOi2l/
Bxtzhp9hf9fJq92F/eD5rArsB0FZU6AV+8HdNx4y/WDtrTodXL+rYAbTD2pO
OLOwH5SRXa2L9mf+6zBC+/+WHE7BfvBb+1lBxFO+e9cZxFO5V/w29oOpXT4j
iF9W/fElxN/UJv0b+0HDiIg69Lc8QOsq+ittZrUe+8Hlpj9zkJ+Fm3wlkR8h
fQfsr8nMMguGT/691xg+X6kqMfMNDd+lu2k/TjZIcDHzDT1dVXmcbxSL2ufR
/p3MNp1k5hsLSbQmzjek9oiI036fuLFax7Hfv1j70hbnG3qxO5VqXmSRZLD/
hPOBad7kfzjf+BPNn1LTnk7A8ZUIzhP4hAo+4nzD8ZCgLn9lBNG0mvkH5xt9
95Yw8433Qbs3v5sMhURJP2a+IaKQuDTQLjfT1ap80ZenHbBXg7jhfOPf5S/M
fOOr/ZVnuN7tZx8z33jRpDGF841ln3fYoH3VwwvX4HxjlcxncZxvRP50fYN4
cuzmCCKe0du6V3C+8bdijiLij7MWLkH8Vz1KcZ4DauQ64+/rRTY/0d+fJ14y
842r+yQKkJ+KtxnMfOPgb2DmG0E50XuQT7tXzePI5/Lmx8y8rkCE99ozxWRy
V6WJmS8J14ow87pqu+POIuPPQKpZmZlH+XvF9+K8LtJS5mtIbxGcVb85D+dX
l9MkmXmd0cPZ8xTH6mFo57G1OO+KOnSMmdctMErC+Rhw+01o43zskIddKM7r
ntT/mB23tRUu7FTejPO0vY2PmHnd3NSqIIMfseSMcxQzrwvsLgzGeZ0jVy/O
64i9vlI2zuuc9vMw87qM24ZNuJ4jZx8zr1vT3y2L87qzv1/NQ/vTMZqqaJ+3
h4+Z11VbfmDw+EuwMfO68vjKOJzXLVnRKIj47/iKMPgbz5qwcF73/MR0I/rr
YafJ+MsRXMDM61wPTTkhP40PGzWQH0XZWGZet9Z3EcPnhqIfDJ/q9z/q+b5v
JB82bz2x8qs6bPr1b4bmgiFYfXBJ1kaLZnJ3kv/IyhvZJPyAt9nahTQ/CCxJ
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
PpM6n2/zPtZJ/la1saqMK0DFUMGozqIHru/n8KL1AvrPdT3FerEmXYdgvUiU
mstHzwuuZ91YiPinZhvNR/x7srSOdc8shIJn/x599mmHll3VfjMu9IH17mPy
72JSQPmF00ud5Dq4Ktl9f3vOEJTbhKYavPAjCb9HY+dlvIepmrrPJc0seCy+
S4Tmf+i9oHgP8/9GR4XTmP+r4jp/0vghFnVf1Wj8wBpJlX8BNH6uhZ/8JsnG
Ih17hNhNfTNh9apcF4mqUviZrMdF45AUma0/QOOQvN53OwXj0Mg14xPGoYPu
bVO0U/jgpxLG4aGbZdtpPSKLA+a/wnoU8CFIA+vRkSzwoHFO3oUq8NE4h1WW
A+yXaZyPH594aGjbSgo5lvvz29TDmQiJzsmqXii6daCa3hfyZF/RrxnnS+G3
meEmvC9V7q+XnWhuJf1Lux6NLEkEh8KpexdEB0DlkHQHvXdkike9h947ksrK
uYL3zvBnWTytI2TrvdUSWEfsl++SxDrirzznO9736SrlOHrfyc+Idh+879na
F9zovYafYopymsvbye1bsTV4r4NlPqpiHiCe1TKPijuJUZmHNuaBYLenPLTe
gRQ7Sw7r3fnh1DasdyZJHAdNtFmk8+x46LsFJZD/aFOnsWUMsPYLdtG6SfJk
Pppj3fz1ZJMB1s2sLRaaIVpZYD0WdhTr7MaexMNYZ7fv3cX2gQzAimW3hYbW
0D5y2tZulcNXYG9OkdNXiycznA1fYr1OklNci/V6kY/AAvl3LqBXcEcWcfLe
P74XcR542/QS8xX3sb2i6Bdx7shBvwbDWT8pD2TA2+E58qD4tdQTedjn/kXC
LaaGHIt1vpe9s5+4SJucObzqG3wOArvdnZVEXEnGy722izgWGv/uqeyChT6p
GavaE8jR6w8ZXdE4q5nRFWZd8+RoviWxn4aDaL6F89IXAzHf3mgwYvL8vNIV
0jTPE3G1VXKY59/MGv9S1NJIFsgaDWMdv31u+ArW8boqz5mXJ/rA3GLOOZrP
icKhIj/M561XI4cxz4vLRnjj9+X1zUX4fXH+nKtUJ4B55uklqBNk8nu9USew
LEqA1gtIvDh7Da0XRL65yBLrhUsW8REK64A95R6t7Mc7yY/sJFu7iWZYn64V
QOsOCCtaVNG6Qwrd27Zj3dlsHhIlYt0LfTZH5dQMK8nd7BOHk363g9SrZCfq
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
OpRPEFYunMi4pBzfPQipvwMPWlTkQi8PS4+l5U+W2buMuSSx4HbvvhX70qtA
J+9i22WjePjFN7l7yYtReLfeL4FDshzGFcfZPnXWQlv63VU7t46A4NCd8oKE
UXiSl9kZuTmffNKdtvd2ZzkcGOs4uVeV8s9+LWPTKd4t/+L10JzADlhROTmo
evgtfHeO3tBwagAGgzN/rPjTCWKKZ15M8++FBruUHFu3CtKtzO/esLUHsk8f
6/l2YwBuJYY1XbIsJeruW3N9pndCyniDDVs/C7a5f//GnxANH38K2cx2TQEZ
5n5ydeZ+8hTmfnJ+v8kVvfnNxHV6YNnfuiriOS37e6r0EKRdUXllPF5FTvad
mTJP6SECesqOUTk98ES8g19Ri0WmndwmpeBQCOWtSR+m9r+BEHtNcQm7HuLs
HgM/FvcS2XLl1vMuVbCgdqa73+YSMlLEtvBFwwgxVf46J4S9BvgrK0XmCI+Q
DO3ZHy56lcI9SzWduMx6iPvcI9//i0XOmxdymGndI5dreEYr34T9X50zhKlz
TmfqnFeMzy+j2oHKTULV2I6Zo7oBtvOVgyPDX7sKgg8IxCbs6oUbOkLSgdAD
Dm86hl6zZwCPRT055jgC0l9WC+23b4SDohFnCzaMgmRl3PWigFrSHVrgKmeQ
CtXO4qIi97pgZZiUzOqaftg4b8NLcjUfjLTzDXT9i+Bv5IqyOD4W6Dc2PVM9
kAc9ny/9PC/GgnJ7n3aNgEU5K65az70fWAbN4gXcpn9ZYHt7b+s8bwGNy65v
bsyLuAGHmPrkKFOfrGfqk6/SgieodojblsPD2I6IcNcybMdotUkq9kswTj+e
6hdZstZKHPuloLl8BPu1ctYh7BdxCzNYiv0a/hHmjP2Kjgj3p/oFN4Wl6H7V
11kJY794vE/JUf0iCZJS6dgvSYtQU+yXY0BBKdUv8s076CX2y+fvlBi+L51s
7gBqnMliy5dbcJxTDYfo9xUdua/PVOse3FefRb+v/9UhXZg65GKmDvnr+rPl
+L4MXy24je20OWRuw3b4Pl8ffFPXTC7mlG3leVEFJrlhO5JXDsGdL/rpOA9f
estxWqT0wBXRPadwHtbfHWDjL3hNnE1yAsJbhsBe8MxoQk4rHBHhpefn97MH
lan5SbaEfi/F+bkwKIKen/Y1Ijg/4c1G8Tacn6fqb17F+Rk8N0CQmp+QNNI9
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
CW05PvNWCLn64tt7zOOq+I6FU+0TF2f3d9h+9Vi5Ira/g8mvef/Jr61TQhox
z9Ja+cQA7b8Qz+JH+8s1D9N51rFVxorY3z8SknSetThuzx/Mm3oCxw/g+PiP
uezG8XEo3UfnWQ+ubvmD+7Z1HwvpPOvFD3davyd2nYPWmezbaULrTA5b/6L1
J0HlZvqo62t6XEbjm7YVXZNXrCL1vT22BdqZ4Gt5TJU7fhS4fYIjsV8RFcuj
qX4RK3izEftV46DNkRjwhth157ZjHPcP4TPCuCa67jTXTY0n5KrOKcf0Xy45
xtx9I18mWP+n/1Rj9J8mjP4z7/FyH3yuz+U0mzztTHLiqr4mPjeCuefH9J97
fhzW+iV48zTApsn5uZCSTF7Zp9Rj3WCnc3PKabU0In/ivvz8RU3kneSui0c6
hsGKW5L+/+/3YVxYZ1DJW03/f/lyl3M66yqJbkBfavWCbth38o107M0+CKvU
iaVw4FAcSUT82t0FEjTesX6JZWMazJV2X7r+Yh+siw1hSQf3wJLzNWf1Qhvg
50SGsdasQWIzsm7R/VfN8Fzf6DmFk2P77+1EfOdyyTmIm7S7AM/UbSovttFH
PuwLLwORD/9ZHG1coFYPQ39+PqJSbwg6puK6zakC8pq/yVM4kZ/e+4zCSWMH
WwjiP92q9iGvnhY/ezvVDhxpC7mK7WQGfJbszW+GGu6E5r91VPzT/TCOOkbF
3dohaKeLtOMWyh6Y+6dWHe35JvK+GO2svrZXA/GKNe/XIW6u5hRk1ZhG3LSf
SFP9Jf1GGc3Y36HR/ddx3JS7ue5Q40NWW5Vq4Pj4Rkpl4LiN+/DeQnyHn/hG
xMXv78nEOs/vic8E39fPZ5F0ncen2JvPQS0N3H4ut6beFxiLO5zE93W2T/D6
oR1dJKXp59SGmx3kcv2jWuLZCU8Z/Y8Eo/9xZvQ/NWvVh7AO2cNtaob7y2Mm
FxWwDvl3w/fJ7M2fSGLIPb5jI8VwffZzvgInyp+81V56pLsa2NXVV3VbNJLO
h64e6jOHwWKy8GYkZe/WAB9wGu8Ci8TVYZcqK2HDPzofX0bnM3hOne02yQPT
TZ8ScJ8x+py6N9bPd9Wo7lG+1ADW5wrDV/F1E715Cw4I/+6BhIQLUtIKPUT/
w/qU9uUdULT96vCm9+0wbaWUYt/sUTKS7bOmLrqOaG9TzGv4nQi+jJ5nIaPn
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
xIf+sRsDKLsxhLIbzTknhPzaCb/lsrFTz2APeswd8fyMQTlytzu7WYl/EOkE
DZm6rO5FwgrccrYBhf/WuSziZfwAccsbVJ3LL6r/wzmavhD/jr/6+8v/jsdb
Q8TAzky/8yoc+l9p1zNXgZ2ZTdFLKLoORTeg4qsZNPHVb4zZEO/Fw/P/xHtv
bBh7DHHdR+/nhQj+8egZbhPgv/5Khwzwz+3xFOLAOHb2nziwppXTIxjP/p5R
DPpdqBwauw99GHgf6TNAH4apL088wJ6P/vCNtGOt02z/sWOpvhABNH0hJh2/
VZ19lott344rhF2ewPrB3zRYjuWhPApvMEbhDZ5ReIOkp/2GgJcoHRA3gL5e
oxb6qYCXuLF1GYmXGGFzegU4w8E4HhIvsdDvq5vCGTpROEOPJbstoQ6oz5or
BeqGKkrEF0EdUDKfkCzBDzqbMnYU+BHa1XIF+PlO9algpPpUXKX6VARQ9vMN
yn62peznlVv7eUGee752WxLyxN+6Q/eBPHs/BYoR+wc70pnaEPsHC8qYesP+
WaiLcWj/py7mPVUXY0j1o1Cm6VOxMD6y55/xkdT4LfYN0eCvmcnIfSL8NcyV
apwP/poQRX9O0VdR9EJVl1TQSxLqhSOEPkHKhk7coE+CqP5mx6j+ZrJUf7MF
uhRFRxR9a2eWOnGu0ZJtdSXgdzz7dJ30O2bSOB8S5xrtGn78jjjXWC3YTxLO
dd1l6yVcl7tQbeh5S8j3TQp32YHea+ZoOw/6TS7Opwn4Ocizegnw85aKnwvQ
9Mdw9uaFeD46Nrm7FuL5UfWeS0BfCQWnicA5vSV6xw7kHDhn7wty/nLSEeL8
KPvT4s0Q56fP1goFfej+QW8a7hH3vs36hD5Ec3p6r0AfXqT6Xeyn6YNh+M3G
EOIAeq92QxwAWdhXkHGA/8Jd+Gd9bwJ/v9ak7Q/h7+OGRyakv7+uiYv09811
7q6DeGZ00SnS3x+h+l2MU/0utKh+F9o0/kg+5Y/sfqb/E/R5k/7oTeD/p3Oz
L/A/PuNJxxTRg5g/Jx4i7k3kkvXwINybqVQd0AaqDugAVQd0juprYUHT72Kh
buj3/P9dN1RwYWgX2D8rw+4OEfYMrrBV0Qd75lOkk8BM0RiW0S3ghL6aySGW
26Cv5jDVj24ZTT+6EYrOTEMPq26MBXtpf6VjHcz/4Vj1BZjflcpTyNP0wYir
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
LvR2o6laIH0SOqsbGGXnO4zyhPY6RTxoQTJNJ1a3b05HgRlWfH5Jo6jNJaPL
61MVusZ4/ZZoUjq6GBjpauwxjqb1uPnnc2Px4rrHujU3g7Gk/qpr1iMTKCuI
7mft537MRj+vznU+Evfp7ryXfKsfnXGpizR16cY/nGqVI0WLsEDK4nVOakNI
WHhrzERGPWJXvLSUZWYE223qNFm2qw555PjZffAsQC7KDufZM8fx6t7vrqUZ
xUhzZ/iQzva7yHKF/54XARP4x7byB+s+56N9izk71VY24Yusw2FL1o9hlly1
bYofc5Fz2mzXPuIevfVpoyJdeTwq876dEjsUh3ieNiSZMnfhfSd6WXu5RpB1
79Px50f9kPdbLvoHe3rRTOsy2Q9Wg3jREdvtLPI5KPe6q4F32kcUJvPMyNZ+
Ao+Kh+sYleShlfQH1h3kxtjSyqj+gugEvvmN5fESs0JUbWDKMeNXjWuGA64a
8I7h5xVZdq2d1eiJd9NNPsFOfEeueJXA1n78nvusxpA9YY+69NE5nuvDLK+j
2UyGk/BJsZp7exIHkI3+qQ8iU6P43K7dTAfia3GoYKRwenIVGo3/IK08PIoj
q+dTtn2qx4O3qo+MPy5HTmvObn0nMoL7FOmfOUy3Yrt1myvELYj7eYTNNLu8
GQkGdo+c/QC4lFyevPpO5Ei9o3qCekf1MPWO6hz1zvVv6p3rFUr/vHPdMSbq
rizYj1Bao931MGI/Bojp/DnZiK4tL+PebTqKTEcFGsJbG/H3V9Hd+nQVaC5G
xHqKbQxNxuaEDTrX4ce7o3TklleiZiePMYe3hP8txlUYx1KLCziTd9Sp1qII
9l1dgmVDqITToIRvZR1+JPkD7zDpQEtCio6LjgxjsaWPV50sa0B0x0/Sp21q
QnuiWY9lGXZjZ8fStKfKHchVVONpzVQvSnv98Cmxn/ETk4KVsJ8PcpRtgv2c
suR3/lxuLDqcZaMP+7Zjzpjct0NvZz8S+xMtu6WkAPtzS4gsB+zP/VjqL7Gf
0dvJbUqwn2/c6bsD+3mnQqTFUNYg+nRx9ZhMEkZc2iu19w70oCXUuz+7qXd/
Gql3f2abcMXzjDH8K5Bv0473pejL8RhPptpqVCJziHOom/DvQjTEB+7H4bj3
vauUs6JQVWp/rhrPBFLhe8RVGJqLNnDwXG2cLUDa545dyGsvRG1+yoEqxb3o
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
/Bc3Xkjf
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{878., 718.},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  ViewPoint->{1.4476304896128647`, -1.682961620901936, 2.5538218708661695`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.408859722930237*^9, 3.408860024311023*^9, 
  3.4088600996249695`*^9, 3.4088601690794277`*^9, 3.408860223517973*^9, 
  3.408860270550126*^9, 3.40886031997295*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMvQeUJcl1HZiMzPy/qs0YAANDC1GiNyIpUiRFkIBIrShD7WpFSSuzkhbL
FUXKkFySIgWC8APMAIPx3nvfprq6vPe+fXVVV/uxdHBc7ZG0Wmlz330mIjJ/
ZnUVjs6e7XPid9Wv/PkzX9x3330vIiP+1od/+1f++b/58G//6i99+P0//5sf
/o1f+dVf+q33/9Vf/016K/2GJEl/LUnc8fcn+LlIEnup/Pvf8dLx9rXfHcNL
ilM6fpd/tAPpPfvtlegz4zVHpvyaxe/5n1/+//6z31VzKL9+4v8f53s//ud3
5YjC+jVY/JPRmbmX+E8t/9N3Vr7No+JT0Qe/7A/fzZ82am7kpp1Y4Gx00C//
8i+Ha3ooOmidf879mXBg6QYejA4+U2M/+kAdWPn1vuizp/wdpvqV9lX+M/b5
+6OPnaw5d3atE8Tfe6LmBLm+F52g1uP49e7oZMf8TXTVnCJtOsVd0SnWKgcl
DSfLmk52Z3SyVb2dKgfhpO2mm3QVpNeeedkfacbaaQ80Xvjt0emXag5q1bxn
Hht/kTle3Xd8MfqOxZqD9leMElu/42S3RSdbqDnousrJ8NuOTjaHFzbujTWn
6G46xReiU8zWHFR3sj1NJ/t8dLKZmoPeUXOyvU0nuzU62ZS/uZtqTrGv6RS3
RKeYrDmo7mT7a47j189FJ5uoOejdNSe7rulkn41OFrj/fTWnuL7pFDdHpxit
OajuZDc0newz0clGag76xpqT3dh0sk9HJxvyN/ctNad4R9Mp4mA1WDkoaTjZ
O5tOFgfaAf65nt2+ueak72o66Seik/bXHPRtNSdrDLEfj0521Fvs22tO8e6m
U3wsOkVvzUF1J3tP08l+PzrZkZqD/mzNyd7bdLKPRic77G/uO2tO8b6mU/xe
dIpDNQc1nizIn/gqDtac4rt2d4pX/Z++t9EW9YI3vpdXai6k7nzfXHMcv/5u
dLKXaw76vpqTfUvTyX4nOtmL/v5+sOYU39p0in8bneKFmoPqTvZtTSf77ehk
z9cc9OdrTvb+ppP9VnSyZ/3N/UjNKf5M0yl+MzrFM/xzRw//cM35zPM6zhen
aU/XHFQnH+sM+GdrjuPX34i+4Kmag3605mR/rulkvx6d7Am8sAF/Yjen+LXo
FI/XHFR3su9oOtm/iU72WM1BP1lzsmpK5U/2r6OTPeJv7gM1p2hMFP9VdIqH
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
KiOr47FqCuHFaQEhFkrsGXoq7aCIw7iHMvRQuo17OPSS085R9YROQhKM/t6u
h7iDIl8aZDFd6iH2mzySTwMn/VfvEQ3Vf1w0ai5qdZBfUF4Z6hhCaSS1d0Rd
UreWYyC1HF2So0tYTzGnZVGXWEaW13RJVtGwUqVN4mpEVumSSbakOc0+dEkL
XeIitSUpQeQ0SBC2tNijg5nSKWipSK+RTZFe3BF51BEc/LliNnhG6hGp74i6
gNLC6ztreoGpK9tNL9wY9ULdopx1LJbhtVXfH2M6o8dnyKE/bNRh4kylmhG6
x6F3utAprahTuEyxBTag173ojy5xkbJ3aG/k3jvYHcxtg4toV7BPECFrfMkl
oAyeqemUuD9aPoKIxrWOoQuh15vQKQmTlc+Qs/ruiWc2V2VaYj+ok/z7KMB3
9lFY2riR1XLfZYkOtUlLIn6j7jrpyxuF8L+fSzIuLXFNPcniIUyYraSGCSct
1ptJl+/JbvGsWp7LzbGCJ0k0sj71MWlEXsmzh0NLfbdmcbdCIZhWaAWqK3uY
0yQmfu89TX2bpJLU6JBKoEKnAy7DUVdfc51C9cj/g//rqB9m9W9/07YE2kbv
t0W6++7OS9095mcxfv193phJZej8ijPneN0jmp0gAAlyvvCJlaIAURZ6PvQ5
RzVWmCNgbutm+NPZoqwOc+119DjOOcC3sl2vZ3GvUy+jv1Ui9sGA/Xjh+gGX
h62HuYN3mnhd//V0b3V5MpimxMzHCjRyOOvoipszRzspMY+dLMyzmam1l5mj
U5ExEzqYnnkZ47ZNlVvoYJvWoZ69V7u14tSaRTNHj6LgKX07co77VTE4wgpm
eNP7csJEnUgZeUhakkXyUlxauznI/6D3OWY6deG4g7vwmvsO3r2DZ7vp/uu+
nu5/r/fkOvr/qehDCgS0VlnIBs8PCNBTdva7k36fPFuVr0zmbentqfMeEOS5
yPC6fb+LQsrYp5NQBMxFJI1C2o4iQI+ck2BsON4s9/bQRuhth9fUd3ked3lc
+Mtixz4pjp37DLzS+Sleu3zns5xqXbvLY48fOX2N3GP/19Pl76k52wc9DDJ0
cF4uyLTiTCWidhFlTn2cO0MqM4mrOrv1d6Ofd6Hns5qebweP14fS6Q/a+Q4/
qFoekyYpTAYgpCKQRxgNUGXDAQ3e94dA80NnC836BzWkMwacdn0MBOeTTK/U
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
zU5lbwUq2xhR2QY0Zr0URdXL0VEZZDYisXARa8K8RTQj7JRWhTbhV6Fv4H9O
cKMyW93C2LRFEiTArLjGTm+dxsI7/l0qbaCzTR2av2juVE+4pUs94dZu9YTb
aBDcdqs7E7ENBZcTS8NyNKmKrbp9mjFWtZ0I1Bavhd7GvpdJbf1R9YRT5HZ8
OZLB0CyGFn1NyqTCFD1hPGDRWiJ2mu7mdLBV0/S+78yjPCQouGl5C48qm6C8
cv1UKLKcSqfEUmE9f4RfhkWohw7VGRiUuluN1Pr3fTf9G9PSw2+IvPaYdVsd
Y3TDA9srKjx0keUy5pxRXVtWdXvwZsaczXKcU9OSn6qwC6KwIrBxamtM9/Rj
uXqN83vZQ5JWsilnN1cziqueShfYP71ZdJtudHd/KD/jVthMCUyZCs+YCs9T
hWFLJ5pCWD1VP5UqvAXbgbruQmX3YPtQ4QPYIZT3GAp8dKXf83dUa75+m39z
zibexdf/09/D9/tmB7BD2C4+YwufuY5rWMb1zOPaktu6eGTQZjc7bWS3oZ1a
0TWbxnW9YQW6dAmGZj66/EP6pxhA79FnhYy+Bln9JX1byO3fQH7/WwEkuFD/
/7eQ4r+DFP8Yv/sppPjneN1LkOKXq1W+fwUpfgPv8Rak+N1mTX/cw/s/wFB7
hKGVj88spN8NHS6BDpfSD8dQKh/Tg42pw8FBxml+b5OdUNxqOszuS1Xrcumv
b+hOv3o+gfi9ERnW7ch3fN0DZogVk0MUVE3MSeGOzZBIxmqY4eQQB9LQvuYq
PGo3j8COTJhIwcSOy2LK8gZZqbrJiDJ9FXPKRjKp+37S41iQiHA+jFXo77aa
CreoCosIQ4rl7IlAhkdTZFhVODtQYR6s45zd2sDNraGP6UobvEhVAwW3ShIL
VW2aNrbhgP9Re2OSk0hQgfEuzeryigpTfaHF4vGqQYlbVYk9irBHBfYovx61
16PwelRd3Hi76W6H7WclmmuOLp3cnuFwrSE1t29cjZo74Dxc83JTNNd0N11z
x5cCzfUouFxlteanu7gxl3qYDn1cTT3gZ8k9jTk1cpL8wzT1dpoKOnXk2m0q
6uqGGhyX4iXNrlGAR+UlUF92viN1cofMTIDpR/fLxF2wXmbXd4XfMTkI19N9
+uSZBoczJKQiqi2sY/QouZ7qbdMyiUy9bVxSvW1YDPTWr6OxirFWnIKaWZNc
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
4LLYQVKddH0nneKa6k4xUaqCO/38gutRb/GOSXN7Wd9Ks/8nTHZPmICgyI6L
DzwGiaDQjooPDLllAsKyw+L3wgbFFx5gdqNfOmnfgYmtOL96tgkd365ddXo7
OePRwRitXXb4a4ts1yFCu65C25QitA1Ssg6l9euXVGfr6PGK0NbKynMRWhPb
6lkmIGZc2rdKjTJLp/cGrf1j+Zp5bYXucBqrvckRdqd+cZ5rlGY3NWl1KZwH
m93TObEFNNDSoYrx6rHOl20wh0Axhu1SjM80mWspB3V2VXxxq5eP8YGXdIkf
iwhfsDdf4WWP8SfHeNsdfNQqesdcMAE1iW71F/4EO9iCdjzut8Z9JbmlR6cV
7fBA3CqMxVKMhgKMq4fQy3vQ4dvQ0Tehqa9CX1+C5v6EGvwIGox/fwIt/im0
+Gf4+c+hxb+AFr8ELf5lier2a/i716HFb+I93oYW38b7vQ//9wNo/AN+BkZh
Lj4vH2O/EFpQ0qdTgeJXjejhDTwDixvlcf0Bl8k2z7gUxO+IRHU43x4S1oM+
04e+049770dfGlhXDWbdxxAeyxDaZZjGacltPabSTpMbowSP7btV77r+/ZoO
e/yasF3fgq3fpJUHpbotujOvCHFw5ErkpG0nwpFTtrsCAe6UOqgOE+B2FWDR
X4/6y7UM5vU6z5cXF1Fgv1FKshpki+SGiALXhwrs2TGDKQLc6Qc7KHTo9JrV
MkgpMBMPVbQWX13gKnq4VU3uf9XNQYqC6twkA1C+1qAnQZZp/Ej+RZ38or45
8IljKsxxEWbzh2OSFMbPIv5wLNRlj7Ic+4OMnnDPkOSGdTY0qsqmzBlV2ZQ5
gyr7E0vq1EwwNzopa+AoylMqymLT6F/TZPy0zL4mbeQnpY44yW6SIsge9RgP
OnkcSqAos6jvFNV48sQyEqCBbRRAE2VWdVZhfkGEedhEmQI9yE0EjtQZ7udn
9fFTe2XLaR7n221GXe7cFV32O2QsQJwRZ7VvqzPcZssPWnFvLeYQiz6bRgf6
7FGaPeoy0/1ouFoaGrGG2bQapoqhy9l+FX3gKmaHq5gdruIMcuVzpYj7VYVr
bkxH6EzcEJ7I8LofiPHYpp4pIPmebWGlP4M7ntsLxXiFYgxbRyuyiGELtnOq
M2n7TozPI2LMrEMoyJfgDWX4fxUJvjJ7fGZyjA9btQtYQLPNo9nmMOCT7FEL
2uOYFuMMBWeJWUPZ7rb8xMiswFAsxhjJwyB6AAa9Dyl9pwyyCpl9GbL7M0rx
Q0gx/v0pJPlnkOSfQ5J/gd+9BEn+JST5Zbz2FUjya5Dk1yHJb0KS38b73K5R
V/teo6Y6cjC8czH28jHeiogCuD3l/Zqt5vVwW3juRsDdCZqmtNyK3Y0C1T7n
u0Xp3Rg0PRgsfbjNftzugGTvBiU7PGRKPCzZ4REpUWBl3iieyxiNWjwuJ15x
tIyz304cRBbXe9RnC72pzGL7mrqgm2z+sG3pxHdj0jnLHTYTPXaYwrzB2XjJ
k6ypC0+EUJSJky48oy7cTOeiYqYjIsgydarusEcl5laC5g07j1giHNVjqrFH
MeahRU6O+8NERJ2dhsZFTt0pvrBbsRH4wtXmC4vsehRg+jZ4gviffCc/S5j2
yjs0qR7jbxt9kWOocKOqsEcRjn3Hb2jRlEQjzST4OdIRqsHfDzXYdFiAbBrc
OxLqcP9YqgYPpmqwx+HA1b7PkOBJJ8Hf9KcyS7A4xkkb7NTgmb1naXAi0ODp
Ews/pplxmDpRtzhO9WVW+FS1d0yWwEKBubsDhdds6FgEmF1ditc4MvpVgP0+
Gp1jfnKP6LDo73UNFgWOU4F1OL0QiK84xzZb16ji6zewMerlPGz6xnVL4hsz
vqJzXCPOMR3j6jlxjP2qWeqviXBcRbhy2s9+ThHuUxGuSktE/HOV3jWV3kzy
O2EKOB2VX/jDS2iTlUOTX9jGscrv9onKr/jCZ1rYcAw7oQRfhMnfi0tL/Eom
Ik4Fjv1n1eAztcd4l+ND1WFewTquZA1Xtkwtpg6je02wq5H86IUj7JGTGstx
hqPVqn7oDpVhkBTCfX0EHf6g0vffgw6/BW19DXr7EvT3Z9Dhn9Pw/19Ai38B
LX4Jv/sltPhlaPEr0OJX+Xpo8eul6la/DS2+Ddf4fbznvXroMEbyw2ZNhRTg
M4sw+Eox2Cr6ND3ttoPm3JNO+9MV/ieiR+02X9WF++nG0OlFd+jDkOnHfQ6i
x/AJOUAOow2YOmK0whz+GA1jZnzH13IWLWmJ87SKWFy3EI1utpcV7HkSk4X6
slny2IFNXGSFG7+r7ywjkCcU/jA4oVBOKdyWxIiq8qYmTfo2NIFCRe5djagy
7qR7KaLKpsgdc3rnaaqsLrJKMj1J2ajVuciWfFJJvuU3ZJZkUWQ9dikhmuwc
tbT0hJNkCnFzKMQvUJYTFF23rAPP1llNg8zQUJChxYhl6vBDCLJfT8O7NNAi
qtyUQZXTFDkW8Yt/TzS5qz+86G7cJP3i3uEwW9FvwV+6Tzz0jEzFmAgMcxW3
nCAHmYqIIlNG5az2QJF3AkXG72aiahwP1TgeVWOVYrc6D5rgTLchmDw1cc5W
cT4NneMRt6vWsKSMqc2DYcZCPqfftvHpk9m7XklgQJr9bjVOFksCg+Lcsavi
3M5US7v4yG1W0kYfWSTaZJoSTf+40UrZGsRHrqePXEcfuVbiO/rHNQviH/vV
8yLQBPcssxMz/ot+ZZJfpjHMritzpqV2varMlYEyR6qDE8HgH4aNsHwQ2hz7
/RR1njRXfwZ3ObcbqjOreVc5nWbqvHms6rwD26ODDDs802qIFIXWaTlqs3jH
CdHmPxK/+Cpq+PvHeK9ji7L38NnbuJZ1ajQuex49LImGmkIjTaI3TqBnjqGX
jrLHjmqPZmqu2YZnJYZNCTQ6H3qag+a4C41+F7r7BnT4ZWjzL3Ng/PcRG/zl
XILuZej0K/j9K9DpV6HTr+H1v4JOvw6dfhM6/TZ0+jbe6w50+h7e9z50+iGG
aR6GZwGGZTGGZBl9dTyF6n5d+NVgXg97GJWIitRu01ZdGE3duJ9eqFgf1Gxg
WUvzIo8oJZskz4mh5bikjznVSnnmkdVyBtoU/d8pJoh1SxWpLTr03Z5+sqO9
+NLM61k7j0kPH90P+giPHaL3LElp+s3DOzJytgOV5sjZpLJQpZleoUr3mUr3
rqjTH6i0KXSnKXTHrKk02qDNFLrVFLplQitjmmUn3SYpI6DT3DjsUlgQ6Ni3
Aomu7wslmqfguQNcnMtco+mLhJWpWcmEKHToNXtUZ/hBDRTwBiYwGgOHGf0H
xtRFA53jWnwPkRa7SaYbW0KZblaZ9qjReBOqdJuqdFShQ69Z1FlTyqkKDeuP
qPSgU+lI1mKY2XlIdOzFqEAHVRSWtHACzQk7qaJIcZe3xF2miyyhkrnMMo0/
o4nkWJrT7FGlrbXoNYdaHZe9uIw5dBycRidCjT4VjfYo0pzOcL7zse6rbckL
jxtse6LOWn0BhfZ7pCdTnV8Q57lzz0/XZ0letDn3+Zt+ayZ9Xld9phvdYCVM
dVJQ4STaozp7lGb0E1m9UUX3GQ1eKTMhTp8T1OcEDwWQz8u0cKNHpblC/rm2
Clr349VlTQN4UAOrfrpc+6PrkeNZIdaxH4hcT2+HcJ9HQyziWS0fmFzDNo5M
ro9VrndNsg/SJRt2BjuHXcAuzyWbjNt4zGV2V/IFT/AP/Su8w2PD8zE+bX/H
xHrdxBq9bhY9cAYDPon2mkInncQgn0DHHWFHZulmn/otjbZeqhyDq6gGDi8E
9j7E9g7E9y0I8msQ6Vch1q/yXzjUr9HgVP8qD5fzq3yuFX8dev069Pp16jv0
+s0SzY3crtA8yT287YM6+OsYs3kYp4UYnyXQhnJ8fGWPTj0yGqfWuNMXWt3J
JC/4nawUwV30YFz1YUwN4O4GMZ6G8JhGWPA2SpSOycYQ4yrR4aEjO35052pZ
85RgNeitoBrUKpGmDgOxllSHE2oTaRPAMeny7kzL0V3TaXwKJxMp0kMExKB4
XAOmz/2mz32yiJbrb74vGt2DG2GSpsv0uTOiz+3P1meqs9/E9XMQZ4wu5pcb
LD2UIs9OmkN5jrnssmwzqXUVmleOJZw+q/+cltdoEMOfV9az/KJefqESLTLt
mVhfl+5EIN0m2x5126Noe1Rslrimara61eZap2aafyB67QZcl9PriGb3Rbxq
ZjkGbdNKetXDptkuy5y+4sMEO6bVFvHQo5aFZ1NSNpMhvxHTmb+sFMGeOfDD
Sot0tzrmMhweN/QSueYaaBNt/jvJw0Mp2bdSJfs0dK2HRe+HhAHU7AHV7JiI
NvezPNSzEWjQbN1xkH27iw5HJwdEh1w2BbttJzILKG5GC0uFmql2TbIsJKrV
9Rh9dcuWqKmVBUs1i+pMVy+oM10lJUNVzEhWypqQSup2Ugz3WinTgRX4vmJa
DDeKry9QxfFhFZPh5chZVvp9JmnvVhEvC3ztRIYX/aV8/bb8rB8XTpUfdBH5
akaVV488KDT/PXnas9ZMTuZXDlTmmTfZPNI6ZJH6Y61L3j9JlXrK/KmTenx/
AbuU9XuQ+URE4d3Nn+MDjtGt9vHh27igdVzoMi58CV11AU09D9mYQ1eeQUsm
0cWn0d3H0P2HMCR6WbTPbQXa9P0wav1SyHEBpPkhVP4uJPtdqPwbUPfXofKv
P9T/vwGVfyMXjflmHtXqTXjlb0Hl34LKv03Dn70NpX8HSv8evPL3AY0P4JXn
QOVz6fVDPoowokvbVeWreqTIS5Mkv+c34+pabVC249l3sA4QxrrAXtxNP+5q
EHc3jMc0gkcjZ6Sv6zEF0UNYSF+Z3rUp3mCzGI4zLTuVASheUzZHYUJGYbZs
YMKF8VOHEeW3JHcsHhypNy4uV3iaOgQfWiU1I9s6hcmpTCbSB12ZCVnUL2f6
cAaUufdek/qeRU0HdcmwgNjH/geVe6aM8OzaTOpbTepbTOqbVer9JkhbIySu
cVC1vsF0XjQ/gxteG7rhnm0ibKtExAVPBNnrWFxzJY1iHLJ0xitF4CvxRPE/
kfsEv2b51fVBzR1+UaPmUeI96ns8Tdu/kaLtLRFtbzOH3OrpVN5vqaxbEpvu
eETaOVUwwq066Y6nTyLKfENU2jMtLFkOq5kj0p45UbKdlihBczhZn5FeNXPo
yuhY1JEU4U0eB6v+1CHXLLbTeMmW2As4mygzivzxGL9A29m/7PyGoZPQGx8w
dVdnnF+g6bEf+j34cCi6mGwxsK/eOE/CoTfevuuniHsrbqplS93wZhr6bNOG
ueLmjjesRSSeu0ei0WptNUWNZJ2q6ZRXyf4skHe/kjZrhtavmKEvTtfc6blH
Cbfywgo5EJhyXvmMddZdqumlGX6Vaceifx/Ns/TjYkXiNaD3qO+xP1KFX8uo
8Fo5qQGYKPy85amX9lXhV03lN2Cbh6bysN10lWeemyoPYwn0GewcP7uAXZ5q
HvxK5jEg8TZZ+gTvcYX3OsdnHeNz93Ed27i2dTyDNbT/Cm5nGZ14Cc28gOad
RyefQ9PNoPNPYiCMYID0Y/B3czyxoKpJr70CilwMoc9FI96Hat+B0L+dw+f3
Vg6v4G0I/dsQ+rdz+bN38tgv34XSvwulfxevv12Ipnu3iKH3bYj9++DrPQj9
A7ztw1q48hD6giadFi3D0K7o1H3P2A2pTc3DQfDXPhHijAXf3biDXhYjzus6
HTnledWdtpW6DaNbZBAsMOBMkRVXmqcVZ5m7x12hEhyTWdzvxOJj8fKn5Dwa
5s3dmVsTYcKF+/yN76nJtOfoDos+ncAPb4YCP7gus6ha12LqzsR+r1P3UOED
Z74jou5tpu6tpu4tpu7N6eqO1mvoD734+l6LjUN1d1s9OSfeHHmXZMlKza9Q
uvG0KhtUzGGi7Bi9dRR0dzaBE/NYqObiqSPQbmjSHEtjs+ZYmmit6liYrrMw
RhIt1PV21fWYirrqXVdfIOoeVZ2LBXHHfcNhimUg4rJHC0Nk8iJSFJKu6eOq
6Z4kV7KD2Ujx1ENvXTMriTCzol3Io5w7NZ85MjU/dmqeml5JmJSfcVbyjL+d
ODNnQTYsC3Q8S3U8ouWD8pYDAgieWtZn1ss+2iMpw26T8y5Y576rre6g79Hu
llrd8ltMxCngPNGHAt64IQLOJN0ak3Qi4BlEvGZJt14Xb3BBnHS/kumVSvPT
Pcq3R/kWdxw3WI6HUD4lhg8vZ6KlfNK1i52gbbqeCHTdtD2TtHeqtJdk+NV/
iWRn+iwt289cEKQ89l81OwsbXlUL1DziGKaoOWxm2zLpVpLAxdgrsDU08fpB
qOhU8500RaeaH1HRYSewU9gZ7By/u4BdnmjWnO76lQV2VPMneJ8rvOc5PvMY
NNnHNW3jGrdwzRt4EOu4rTU0/gq68zIEYgktvIAGm0e3T2IojEMEhjDoezGS
OjHCWpjlrNf3L4WiF6DtHkKh7+VCpXOo0jns9rch6Lch6O/lmkHw7+Tj13cK
8OW9Aj/2L/zbEPf3ijQhf59RANQ8F2pegLcvwseUYmCXc6VFpyo59afRSgla
cWltGKXtGKUdGKWdJuvduPw+3MbAnB6oyGMebLNHLZgNh6PH58Iq2EgR0IxV
Zs5Syec4DTXHOU3IeTaX73sck/SzjnRflWmZKOL+j7qjuh2rKDZhE53cBYDT
p2O7Ws8yuu3qXL6vir6hU7BO0Znu4/TsNUVf0CkCThW4RaQd0KN2lptAzpnY
jAh6VMybTMwbTcwbpOAaUs7V3z16rDkv9ZqbLnsrR8VcfPTsUMzjUTFnPqaO
+c9aFhLIF35LTX/Rr6mzz2D6BVbXoCmY+kbNnDdIOQp0HYKRSdlbzGMXb908
dlN21aJ/Fkxvdke89d5IIsYlzgNVN2+diRjnqfMSo1nzNFW/uR9lpdSXhDUm
MzLrPWNbQMxIh9FONHOsO1cm3em4XuCfJwJR96jpDAPPormaNFE/NVE/iYj6
cUTUj0zU4yLqXSrqDPwkhUj/XJYv4JrbzNdsxX1Q2puZQmziPTZKUrNhXX3y
+jWV9LpVk3SVdY+azl2xFvV4oiqrxK2UOBOyjr5Dz5wbwFfMmKEPl7P+D9r+
IiU9i0JuDYL/JUTNs1LUvOoZWz13qKQXBV64VqT8T/IimV8zo2s+4ObalkM1
D8L8tdQw33mAKWqOdlpAmy2aoq+w1HpfV3+LosO20hUddhBVdPz/BHYKOzsx
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
b+G1LFuhMT7b3OTiHgJra0NPq9rCx2yupp5vsjanc/wrSdsRH89lET1jAb1i
jpXPXEHTq7AabDNYWdWcwKrEYJULlSKsWLVwR2sUMB5k7ugdvTpGUBpwA1We
//B1P/bH/sNfIbR6Hd0NoVUxXlwGyFUBeLV4r0a8Z0sBHk4xPhOC1w91HIaS
TUDBkriOOVzPIlRqBQq1BnXawLVuQZV20CX30N8OcD9HuK9j3OMp7vUc93yB
p3CJNrhE01+iPR6jfR6jyR6jGR9jUD7et0H3mNx6TG49PnY+Aw+ToV3YcQTn
zM2cnfLkSp47c2ImBLN9rV19A/cq4p5F3FyCS1K5WIuLtjgtyPRtlFwzjlwW
THE3dh64MQoFHcF9DPNMLgZTJFfSsnu2KiIlszesP2Mw1QLlTsnsfR22GgVb
UhoXwVb2TdiSnJ6nQVRpWTq7vJBdiXR2eYSXJ+C6lTKnlBZWmef8bxVcmcKq
Ng2rgoyeFaEHG6Kl7UWQqWxhJJLRG7OwKmWdT7RkITO4wsWiLEu6mVyMr1in
INACrmwNJ4BFXIk5YGWAVUxplX2dVhdCK4+4QmMTWAGsOGFFWv2QtPLbYK3G
qyCRFw2k9pVV0YmkKK8qI7wqR3uUrWkgVWqbxRFYJQosv1gCqWJx9ovQrkWz
Zi6Tl5WSyWMQZXW1BFY+WZIvCbr80bBoISGQws/wQAtogqxCnrlcJL8oxlMu
GXGtrZTilzKZgirHs5cCOjWhVdySfFUTGlRVq3lkFPN7UxpT1al55BTX0UZI
1UTDnTXTcKctc4rWTIHV9/lVQKTzULG3gnyfLj/NSoWUgio9F5iI1DwYrWKu
5M6RKiy5+1bmialoUjAVWp6EWQmdnzKbZjV+kl+gVQjdZ211u4OW22RSgLWl
AdYKI6lVflnbcne2zrWWmwIsf0Pi8s0N+qIkFkucWeq8jstZw6WuzqeexrWI
Z7GAxzQ/rlVrs+gB0wNGq06jldXYCa3KdSFRbYEuJCp7gG551/yjtJkoSfq9
of8HpzxiCsrz8DXfz4E9ArTyQbMikK0Mf1qJt6lFsNWAYKslHx9XhEGHKG4A
gByBik1CSGdwKfNQqiWI7ioEeB2qtInL3YYi7eLy93Ebh7ilY/SlUzzJczyl
SzyVx7j9xxhVV2iOK4yyKzTNFZr0Ck36BKPyiVXRP9FtsfHMr44cr3hMjpxE
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
PXEbLeVek+Veq3KvoVO7DbEdA4t6sugBix+0PYZ73ZZ7Pctwr38p95zKkD4i
z1F53Lmj0iPw+qzK03YAv784BuXaMsWUl9mtW1r1pNIp6vX8InflEzknFVBA
urA/C7FuSQiKd6PO67IUZUfOHVvEOVF3yVbdJfXaZyJVd//NoPOZeHFNxmOC
E0IDK4v0En3nsI6BKtxMcQbpl1Lp2OXUSqEe3jC9igDLgFHKrNbBfZhsLPic
OvV+kHp59fowmK/0A/cIv0LZRmTwAjfBS0TzlbYY5+y4Qy7Uk6494B7OjhEP
jNwj+hgNRvTVdDvqD+BjjjiuVn2v6j6mCPllQ69BCEjyMXWoUenHVDAGrpA6
zaKqWoY09KxFMhUAvufJOwibY+5xtdlaHwTYcoVSYpV8nzyFa9NVd38oXs6I
UPEU/aEQT0AXSdBFWpXXEOIbNd+I426myLMjnAYrwmq8CV66lsnFOGu1NYqs
ZJs2z5JoDG3Bim11BgNUWiSLvHlShRz/bZqwV+MVUz+qXdJrcFWqcOEqcQHL
j2rH9ZJ+7cjOfrbsmZRnt2NZuTuVAVJYFnFYMoexwg7CFu6FYdoNo7UdD/Fb
oLM2Qm99gcu5JsqYT/cb8wl49uFO8Ao8exc8e3sDWAaevQmevY7r/SpY9toH
qu0+As8+B882gmfbwbO94FmU5VnaV1ieB3Bch7G6oBvroB8b0mAi8Llt+PxO
GMnuIg/PsGzPtlie2azOgMSpWH/meCDkz5wBx2Ytz07PQwwqy4LQc8HzS1h2
hSyb9+i5hZA/09VzyrNb90I8u0qeYVyyPDt/yzilvKZh+UZh8YZh6YYvacHf
PpiqTuCME8vZa4AJ4rTVYNoqMWVlgzpVhbhpCrq13RUrpue0aXGjTBZAgjlJ
x3Sl0RWNOzzZuqMTpc1pUgn3KJLAkiRctiSwJQlTmYjLmAjmJOZqzmRCtl66
eNmaiye5EviSyJckvpBpf6uOTavjUjNtEMujXJM6qNmOpstXprFjOLuHF2A5
FWH6isst16os13D8lRp5J0yrhqmswfmxKl0dzre+XQtSP45pzKNnRQSGqXK3
s2sp03Cdey3T+izT+s8p0wYuuDrOi7RwL9IYiEKo9UoO+JLYSsXcHynWroaw
9l1IE/1m45acQl5LtFuYphL8RSiycul2nFfDOVyzTMu0TFuuxEmq3YpzmWa3
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
zPwUMnM9ZOaOgzDDCVpNjDeJcxf48bmtuP27cDwDWJ/HcbyTOI+TOL/TkJUn
QcXZk0EzA1k5fTZgpkDFkxcWzNylBXPpCsgIWXn7hobE0hEbhJwMgIgLIOJD
0O8Bxn0Q8VvQ8C7+vY6vz99bkM+evPXAHL/+jem/fNe0n79r/GfumorZuyZ/
6q5JH7tr4o7dMwcG7pmdPffMxs57pm50zBwZHTbHR/vNxOSQmZ0ZNSdnJsyJ
yWkzM3bCTI2cMhPDZ8yxoxfMwMBV09V3y7T13LOy+nmzCtfgn/Cg8fNYPfeX
gaw3YFx+AwPyWxiS3+L6/gbIeivdLnVg8B1cs/cSdaP5Q4yPMVZjfIrxOcYa
jHUY6zE2JFo0UmOmqKN2R5rFYrqE1yoW8ZkH8FkHMaJytDgOTShjIlkCNdGp
RFJqi3BVhir6SzV/v7Z1kv6jWD8lWEelmL/yLm1bWYV5rO7X9lC85SQn+bit
+TuutcelJBTLP7HYIWuSn5KaeM7D4xHw6QhYdURCeDov84J0XtEqCxwd1/jI
ft2E/QsXgxyCwWvf2ZbWG7VDFC6rISNcHDJX4ZzrfTVF9LsCiVSVpw1xKEgE
GE9Kh1YrJPNwlrm4Q3OskMw+ppmymVjhmXQCOaGYQIqTzJyCq5mMq5rUqC3V
2YMvodaE/KwamSPxrT5qRgDRgaBb7S/P+lkVhLJdLYHS0emkoiAvGisjxg5l
YorsWmLRxOFbICK+SiAnE2UtJqWbUL8RWwWQh611bR8pBEgiLi0GmFtkHOyz
JmCBUxPQlrjluhQaWiKWUS8DhwyB9VS8rWpYAkPbfouCEjCkcGl3DW2nbcdl
iegjENkAYQkO2/ps42WJhm0nE9sHVUNa4jie1g7GxTiOVp/qxs5jQEyniEfL
vEhlXttTZT/uVpL9FxdaK9z/PRZuS+SgYO7ZZTD3vcUiEFgh5uqPu3G01pla
T07XK+5GjYM6xZ2cqH+xK7XB60qNJN8il+dbpMM3fOlhnPItchHfqpVv9Kbj
9X92+VaOUQqbUTKmopBlVAqsKMzF3ZRjRWGmh2+JsENxlm9RWBgHluHbFqyz
TRSFWIPrsB4/X8K43+JWeAO295UY5y79ofnRDojCLRCFGyAG11hh+GlIHP4Y
X/9qbWivkvxbi4eaL2Hz9ydpGWlGs5XY8m2NeHprx7H24LiP4jxGcX7TsIsz
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
5+8BnBYj/3yZ7/MrgG6Ngm6p+e+OKGYPm/8D3NRzirWmHJS/IP3u84rhYoDu
/DSPuPN1446qrMstAt3s83ebOf00Ta+yjx6hDvtsP3EA6L0J8ITV0XcC0Mfs
fDBLHeoF40ahnzcKfcySn89/d2PQ2QPBi/YWhWb1wWtXoHFEs0ux3qLQWfpz
9kNw6S/MCWz2ZZZPu/S3Gv32I/TjD21853eJQ/T3N/Y6091/kFcwJl7GGHmR
WITkeA5j6lmM7Kcxzp5ydnRjTD6GsfroduARZTFwuRC/L8W4fALj8BmMs5cw
pl7DGHobY+aDkmmTteHjyilZUzMpa+smZGPDuGxuHpNtraOyY99tCTpwS0IP
3VTqvylx3YMS1TkAEp6VxK6zktlzRoqOn5GWMyflzMVe6b/YLQOg4eWBIzIE
Gt48b2l4ep/09+0DCdtk6FiDTB6zJDyK9ugsVxIeRJvsBw33lcrN1ioZbq6X
S40tcq5+v5ysPSJ9lR1yEh3vVO5+OZPeJmeTmqUfyDgbViedm+qkaWWdOVf6
C/US9WS97FzSIOt+32jee+On9aBhtTz9/XJZ9u1iWTS/CDQssuZPqMLvQBX+
oF1cP+5UIr50W6n4Oqk4bqk4Yai48ONJWfLplCxbPyWPbZqWJ7dNy1OB0/I8
bsHLeLx/FbflTYrxWE1buQK3bSWmtY+ZJhFT2TpMYxsxhW3G9LXNOifuKtV0
0mGYmnYzDCW3bdM63axburnpjS7+7ILsjuyeprvyKQ7dOg/duwC6qhDgKQIJ
iwChYpCwpF9pWGoIBsHnT/j53GP8Or1DWrvNmgMc/oUX3MsW5ovFjko0IWAM
+UppNS2j8wzZ+nVjSXU/m9LKSosruXzSLj306oKkScDNBUp3MOtvSlab7urg
VsfUGt3yn4zWSCrVrayM+BaH1orN1rQcTNHBFFfMVsQkDLvjTMhMXxMt7AET
N4zxwxhMhUFVQuyW82DHZzNY8bfLUXYKPwnEmAn8wvz2BVn5hVnjw5tBngIu
bjf7AvFryA4toSzMlLbT5OYmEwNNJqddmlc0AueLxBiMsmw0XESdYlG3uEjH
8zEhmnE6EsHEJIeJKCnoPKkJlofoQOkYvxm49My9lodojmyM5xx0qFzMH3mW
iYyX/2U8pNwrq7AmNYzDCjR5RbXysMqLhzXKQ4ND+pU0W6ln3DzruAWznot6
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
WFyP3RDX82Oy6LVxWbZ8XJ78eEKe2TAhL26fkD9Ch74WPilvRECPRk3Ku7GT
0KOTsiJ5Sj4CYldnTMkaIHZt0bRsKHNMA/NkB7e2oocEM+oDes5u9KJIxzvn
30g8OmIihlAyOiozr6dhHGSc0hQOOWf/FXhVxDKxnNlZ4cQfdUtQm6qJ+Xcb
gMbGq17SE+hsHeHx9o3wAbR9BDfQlgMoB/k/PrMf32nH9/fhXG2oRyvq1oI6
Np/WiPGNqH+DHXD0LazCrFuJQVSBQVSBQVRuHy8K0XHy0NGz0EHSczWXOvPL
MudsYpKJWm2idDKMWUyURn8xSA3X7fDcNhgeZLZNmC0UxosUwAsmToHSoM2K
U1CTNA2QwA0GqRv1LZVXuwjSXYa1uzbgO1roq7qBVtyNJgEFvkHKhuJgYTgo
GCvhKLtB2T1KWTtr/A+JREWiUKFoUDZmFmXjQdkEVD7RoSwJiwtLAWVT8dyw
N+5fICzEaZ4XZQvwDFIIyhah8YrzlbIlhZawJUpZb8JWzSQs0VTH2aUWfROQ
lTorTlk3i1jVpY203zbeYb9tOuBtv/UIUlt8DVcDpAV9oKVTScv/m83aZTO9
O5vI0UazbNkIkDR4Fb09+GkeQQupetRhQS0JXGNAW41hY9Y0zQYPB6/+pKuP
WdUkVC1Y9bW8w6NS5wrk9uHchl797c73HpxDyn6Nr/fNAV1f9+aPL4euvzd0
u9zQnVvRzkVcX7eLrN/cpO2bSdoHvJUtlewpYwY+BdKWc4XULJOWnXDchzRJ
cJ8xc1ve0hndOKQf091aPFJBj+7ayqdxOs88LeTianI6tWTz6SILF/6fTSAu
I3G5X/ugDdfIiP3tupc7qc2D3Phm3dkWg44ajU4bic67B/gJR6cORQcPRkff
hU6/E/jZXqpukluLFL1buWpWqnbibeW6qroN39lGF1t8fxsLk5Vtq3Pr1S04
/uZ6z+PDZpx3KwbHF6jPdtRvJ+q6C/UOPTItUV1TktgzJel9k5J3akJKz45L
zfkxab40KgcHb0vn0G3pGb4F1t6Us9dvSv/1G2DtiFy+NgTWXpGRkUtyY+SC
3AZvJ4bPyrTlrQygj5zFCU9ihPZh2uytUdYa22+F2n7348L2lVjbL2aBBswG
dXkyXZMro1VFcr2iXEZKKuR6XqncyCiSW8n5cjs2R8b2ZMpYKFgbqKy9tTlT
htZmSP+qNOl5L03a39wr1a/slfxnUyX58VTZvWivbP2nNPnkF+nyzo8yLG9T
5fH5e6Fr02QpmLsIZQG46zLaVl1lXfOrxfVgs7i+rQHlXA+fFNffW9ehRSPi
evKWuF6ckMVvTMiyDyblyTWT8uymSXlx55T8afeUvBE/Je+mTcl70LArsqdN
3Gefv5BNaIUtvG1oFTI20DI2lIzF7YnA7YlG94qz4z4JnTIFnXSvt4ZVg68N
x+Y/G7DKV39vvpKuGhjgz4xSdTqHg1eq1fpBVapNV41VV9UpEAq4Svs1oBTl
4HUc/dB1kvrwdTw24a0jKIfx0UP42kEc5gAOvx8VaQf594GybahwKyre4vj5
+fyNifFVjXFTibFSjm5Sjv5ZhkYoRV8tadDq5ZVrNnYmrmWiPyaAYADQRKZH
Yq6IaBNMxmy6Z4CZSMAqIkQ3IYbv0g2K3Kxo9msAesbzBzAMImGJ1A10hl3P
hgJnzVs8rRGqQUaybuALPvBzCV6P7+JDISz4YCjgGmbhGo6y2wuuPEgEyB6J
c0ehDtFecI0FXONQx3hvuOIJgfKV3zNgjbFgjf9ysHrL14IsL7DmKVxLMJxK
0X5lmEfKMczKMeQwpKSywgusKDXojDWYj2rRIWeD1dGuRk9asBJ9HoOvNO03
XCVTufVxDrBy2mwhJFo6HRq1YFptNpAw8rWZrqRNhGYjf2pw5wokV+vNROwg
1RGr+EOt8TerNWK1i2LVELYKh67qNMXHWIQDCFdfqehUi7A/ifoVZOsK5eo/
z8HQgDne+593MxF/bQ6uGqTeN9M6HDDT2da9qOq4EnXb7ZQOPkt658Knr8ZO
Nfi0BmGvDZQmi+L9qlIBS8fr1mLTV/eYMLXivLnyDZObvoQmw2BZZBZidkLx
NSG1/SWfMbuOusN/+EqOyaaRjW6QddhTDDoPmriPJrYlIx0zBFgKpoNkotNs
uE1oFp+/VHw2ariUKHTRCHTV3dW6eTwEXTmIXpbo2jtKdGPd9hLF6Ha+V65L
rXQ6YUwChunZyXA9pOXOejbjThx2Jw6/s8mZnZbILkzFwahKKKoWhmruRpUj
MGNF4api8HwQ3zste09MSe7pKSk5NynVFyak6fK47Bsck4NXR6UD1Owevi0n
r92SsyjnQc6LIOeVa9dkCOS8dm1QboKcoyMDoGa/TA+rlJOLaLpzaJNTqMBJ
DL/jGI49qG9XtaUmrudAmVqBW3GtzUXWCozhXgNyVoGcFSBnWZncLCiRW1mF
MpoK9RqfLeNRmTK+G+QMyZKxnVnmfDc2ZcrVz0DOlXulZ/leaX89VWpeSpX8
Z1Il5bEUiViUItv/KUU++0WqLP9xqvnOU/NT5AmUx0DQR0DQxSDoQtDTZeg5
0yrserBVXN857ASxcf3Cuhg9ArX69Ki4XpmUxW9PyaMrp+TJtVPy7JZpeSnI
BqX9pnxUbDzB5BNc8Ge48HVogA24mZ9XewC6HXcvEA0VhDkqFB0nnAA9qACN
xSSQYJOx+fw/HoF6epZAnbVKasKeem13tPCc4SREYWrE4hUvO68Vp3ZN1Nh1
jSD1kNMg88gNkQ6UThbStOs6PRI68dEOfO0IDnMYhz+EahxE9Q6cwyGA+/ZT
msOTp21GH+Q2uVpcaTWuuIL0REuUoruUoLsUo3WK0OXz7WYbpsVlNgiGy062
BGXEtfho3ZLP7fnR4bplP9ISlJsYuQuE/rD0iw2x9AwG9YKUnhSj6zHvBq4z
uybXCmmqolRZ6uMBKXNLkaGe4kuYYqIJxWfDLE4NShWnett+JBE4fyRoGuVF
0xjQNBZ1jPOiaUKYytQkXEuyhhmQVFzfXlxnGmiaDpmakfgVSZrtIWnJXCTF
9FJRZklqZepcJK2zJK23JG2wErXR+rw1YY5psihtMhbgJrN2SgtwM4tZO20m
JYw6dSDqR346JMWU0WxMgw5E/WdDtN5C1PdLIGoYW3PUWICdEkCi+hOoxCrN
v1rUGOxPogIend4iVQ32d8L0g7vDdN4c7/2Pmfbgb2gEHjOJOOC8qxYNcK+p
OgrUIPlOBervjVB3WDqvLZoBhp1u+amDT71x79UgBJSddxOh86z+NNLTHM2R
nc6TU7EhdxHpWdjNDzCrT36XlrxOk9qAi6u89dmHKV4ZSSvLiaaFDpLBkJkM
G0Z+7tN40Un0aEtsZtaYRPS7BJT4Ro24GY1+GVmjEcjC0WdDKzQOC+OxBKJf
B5YqSmkA3lWpC6+7qnWfC8MaMOhrEEMcNBg3FQlyM/NR2bPfy4+TMy/tg7ie
5B5dgnPkS/aZaSnqn5LKgUmpuzQJbk5I25VxOcAEU0Oj4OaonLp2W86hXLh+
C9y8JVfAzqHr18DNYbkJdo6OXJYJsHN6WNWYXMIJzqMLnkElTgEDJzDYjqOS
PahwFyp/BBdzEBfajgtsK7HWXSjOegzsWgzy6lyZqgQ7y6Eyi4pkNCdfxtJy
ZCIpUyZiwc3ILBkPBzeDUXYoO69/nimDn2bIuQ/BzndSpf1VsPPFFCl4KkVS
loGdC5Nlx2+TZd0vkuSDHyfJnx5KtsozGcozRZahLAFDF4GhLjD0TmtvA5Rn
u7i+2ymuh44H2PnU9eq0LFk+bZ/m+PrX8qKNifs6pru3EzUBJ/fVMgjgp7iV
63D1G3AbP0dLbMZt3Fav4NxpwRlCcKLl9qBHRWE8xeLWxWO8JNG02+d+EjWW
3XNOpgvGjLvP41o0C5plHlj6aPLFbxpYsgUcWDZYS64jNY3MHFFYHpoFyy6U
oyjdN1CdnhscC734cw8+3o2vd+FwnThdB059BCw/DLYfQnUPnnJvv2zt1gBk
jFRWi+FShQuvaNBMt8x8yyy4zIbLzLjMjJRlE0cx8mhKokYlZfi2BDQyd+7H
MpxpuNkNaXZGco8I/X3o+0O/WfrPhlheBm9UOy1o6Se71omBpa8Efma05zrz
B/MBc1ODicxgak9Q0udeCV6nzKT2DEUJs8AM32RgqRf4Q4nACSNw4kgvYEaj
QjEs6CGxuxSY8QBmAiqdiMonAZjJkJ4puKDUKL3gNFxkOi42A8DMhPTMSvbA
MudusMyZBcvCOWBZrrCs/qqwtMAkLBvRQ5v2ebbYUnM2H7CFqrOZfHAvlEoL
i1F5LWRUC1nQctShTLNFpj8fpHAwvjTypaHbjUz0lnqDi3qja+q6PbNbHSFa
S8TWKDVp0vWUeQaY/lLZ5QYmSwBxOY+4hCTrnM3HuWIVvH93Zt6jfMRb3l8s
wUMvCs25piVMqFYbyfwbc0Q3v+duXr3+bj3qgSn55b35s9sxeDs+Sr7EqZ96
8pZaDWrlp0Woj91BM4Of0OSnnK01FQanFSdnufZad1+72urjq2AtM7tejEQ9
rvK0xLKVWC/uNUljvfA6TwqP2oBcnYrXvA6TUM9PcviEBbbieNkHPTeaWYbS
MVXsZYBq9MIUkjXJiNIkxu20hcka4tCBY9CRo9CpIxjRBR09rEJjfgaXKWUZ
7SUE74dU6VIrt8DTJ5g7Zxg4KLTBLosGSCRYHmM3Q3AjRFqvB7TcBGF2BXq2
v0vphWkAdUpqAdTGy5PSemVC9g+Oy+GrY9IzPCanRkal/9oogHpbLqFcAVSH
IEqvAao3AdXRa1cB1MsyPYIJdKhfu+EF3OKzqMBpDLKTqNAJDMbjuN4e1LUL
9T6CaziIa2rH9bVioDcVWRMuJoFqTAaVOTJVniOjmAzG8/NkIjNbJlMB1IQs
mYhBiQBUw1CCFKi3tmTJtY1ZcnlNhpxdsVd630qV/X9KkZrnAdUnkyX1kWSJ
cCXJjl8nybqfJ8mKHyXKq99LtKI0EaI0SR4FXJcCrIsB1gUGrOleJt1Szf3x
YBNE6QFA9ajbpOv6zVVVpk+OOmGfFr8jsmyFyBOrRZ7GDPw89M/LOzXVlYkA
i+kRtZRVmP7WFKk65WL3ZtzNregR22lTwBRGW0IIWi+MgMXAi0Kni/ECbIqz
dnraucV+HlnqjtLzG7crEmWokaBXrOF20CM/jcXsS6jqSFBHfjpU7bkp0oty
DOU4Sh8L3j+O7xzDMXpxzB6c6yjO3YV6daLbdUBCHzmt5zyAgdeO62ntUJ9P
hsGuadHMgMwWyHQTTLHEaNwMXcooNQzjxkg2Rqclaug3Rr5JtHxlWIFYIIqb
S7jvkntOIixf6WfLJU0ub9IaS8ss7bS+ErSO/rprTSi7z4SEdQpA+yknAf4K
BBs1apE7i7gPGOKGrNfiEDccxN29ST+/B1yPwPkjzB7SyG3i85BEAbvRqFv0
DkVuLJAbB40aj7onALmJeEBLwvUk47pSgNxUXONeXGuaTQOSgevPTLS4TZnl
2zsXbnMVt6WzcFvxJbit/YradDZum/e7UeuF2xbDDYtag1tfN279LW5buq2/
UvddcDvPoNYLuQ5qffmD4WwAOYuHSPNCVVrF41caVVqBkQSusvj4ugkb8BUJ
+97dCXvfHO/9F29Velj+jOT0d0vTee5oCnPZdOfaGeqnu2CUoncAdLYGdXSo
jzk4gHiP28foHkNO9frCT04xKPW31t4Tjv+R8RUuPe5+rCc1LTG5ZmuY2c2H
A+LShOpi6bRxLFmMy1EurzPHGLlzmImP5YAmqjXdeZ8mr2XGvtQWzd6XbAJI
JTPScFKj+ASbRK7x6IuxtZoVIhJ9dQ/6bDhjg5YrQcMqVauGV+uKaXitOizR
SXi3XSna06Rh+Li5npHaE1CJZDoed2lOWaYeYi4GY7C2wdJKDDaZF2laai5O
SQPQ2XJlUtoHJ+QIEx4Pj8vpkTFgc0wGgM5L10dlEOgcQrkGdN68fh3YHJEJ
oHP6GibHoQvWhouT9aPpzmBgnEKrnMRkeAKtcAwV7EaFO1H5w7iQA7iwdlxk
a6mik1q0BhNjFQZ2ebZMlUJ/FgKhmCin0rNkMgWF6IxG2ZMt46Eou9R76Obm
LBnZkCWXPsmQMx8AnW+myP5XkqX22WQpeALoXJIkkb8HOn+VKOt+migrfpgo
r303waIzQZ4EPh8DPh8BPhcDnwuBT5fBZ+Ysm24tNGmruL53SFw/7BHXT06L
6xcD4vrdsOLzKQZTmJQFb4osXg5+fmj5uRb8xNz5MubIVzGPv4G58B3Mf+8z
Vmyq7hXljqcNaI4tuL9f4H7ubBG3HT7sgLIz8oiyMw5TRKJl515r1jVuvf2e
iOmOGvVSomY7i7OVxbjkXrWj4O+/VIQ6uDx6c25UnriFu4xyigWfO4nvnsCx
+nCK4zjlMVShBwK5G13uKLpel8XmYVT/AC5lH6fPg2oK5GIb9ygySjfD2jBo
G/c7MhwOg7wxTADDBjCEAPdP8jgMFsf9lQmRGoYgzmIzmgF7GLpgp/rU0r+W
XkBhDjaJwHUGm2uNAxHRqIWm3U+N79GnoOcaU/jbGoNQvAfG8rtq1FWM+lGh
+hGaDJJnERqKEqYItbfmJ7IH53cQGgnVCoBKFItFaAwQGos6x6Hu8UBoAq4j
EdeThG6TDMWassfiE4o1jQjF9WfY5MizFeuX4jPPC59Fc+CzQvFZMwufdV+G
zzZ17G2yLmMOOs0k32zi4LWgJ4Odhp++5Kev1aqtmGRbu0zhH4i6FsrMlm63
csVk1my2XTRz62QTJ2uHp37kqdGrfm5++kqt+S4NvTVa8FsND1ptfqzCm2bB
1JzSAas/uUq6okLlWqjBGLZBwarc9PHYameBdbl+4PdzQPSBOd77T3cTsX81
K+Qsf/sK1l9/9fd1AhQZujph3nvFXUpNkKA5UOtt7jWonadeRUDtA1akeqGW
wvWkRunzc6L22QOo6PUEt6VDcYkJUFRiHIxLeoxKleJuExkT5D1KEUrqFnYq
dRkoM1+pyyjSyt1cN3dzDih3s5kR1y4lZKAPprVqAnmm00s1ZtqUJu5eSGnU
XLImnyzzqKM/x9Vq5sEo9PUI9Pk9FYrhPVUqZiNqdNU1os44L9lxvMFsbuUm
V4aCYEgI7udhCCXu92E8QcYYZE4IBsUuPaN1Y84IJx1h9cVpqb80Jc1QrPsG
J4HdCciNCTkzMiHnr40Du+Ny+foYsDsmw8DvtRu35eaNWzIK9E5cHwF2MWkP
X7ImYJzgPE52Fj36NNrrFCpxEo1yAo1xDBXsxgV3YuAexoUcwEXtw0W2YKA3
YtDXYQKoxrN0BSaFMqC3OFum87JkKgslDdhNRomHeo3KlondKCGK3dEvsuUG
0Du8Pksurs6Q0+/vle43gN6XgN5nkqTwsSRJXQT0/i5Rdv4yUdb/JEFW/F2C
vPYdRe/T8+OB3gR5HPhdBvwuAX4XAb8uUxzlmu8xCT9YD/QybEMH0HsM6D0r
rl9fFpfrmuL3mTFx/RH4fUtkyfsij34E/GLufhpz8POYb1/GvPoq5tI3MYe+
i3nzfZs/zeA3X/dO0Y/7i3rFb0i7Re9hla20CyegtyYfM3ZhSbfuvtxNQ7nK
lVMTcJbd41dm46izAcZ7wyir6qB2/xyo7fJCrcHsrZmIPY1y5jbuNMo5/o/P
nMF3T+NYp3D8kzjnCdC+D/Q/DuT2ono9tvt1ooccRrc8gMvZh+HTgktsbNHp
nMZIOp3SCZXbPrgNhNtCuELI3ZZcOaQ/DreVpDqJiSM11AG3onBHJ51noy1y
6QNEfyD6BtFeSyVJLAavnSZyP5vmmihwG0ScagF1Hc5K4Cem8LdPDHXX6MeC
LHlJbzPPO9T15dF9SVwdoA+7NSuBG+EF3KitCtxoADcGtYxFx4iDXo3fZWEb
YoEbboE7S6+mA7YZNr9YVpLq1ZxUj7vvXWGb7wXbYoVt5ZfAts4LtvV3h60T
schbprZYO16LVaoGtIQvbrzhrBGMrQZzrZgyWrTwE1ScLZyMm3uc/SqWuyz+
pC6AS/Q2EML1hi11NqOG+3/lrnmt6fbQ19dNX3/C1/orVWrhvhpSv4L26nLz
YpkLWfiVwPvu3cH7tTne+493A++/nQO88+6mbQNm4tbPa3XVQa4jao3y9Lub
e1KAW9b66AZVh7BfdxuJ55G1Pn5qIPZEyaWmnYnZ0mPWLcrnGwp8L9RShBex
dImbtYUdNig1OJuvrPWVPOMcnYu+lHtAWZuDPpbdrqzNss94GeiKJn1fs0nh
50vg4oX7+FMaCOpkJm5HX46v0bT20ejnUZUK3Ohq1b7RtWZ91sfZXxHDNdsm
9Rzmpp34FvUoTrGZEumBnMP6HtVFZTZGFWa5qnPOMVYCsAzcNi1Nl6ek/cqU
dFydBGAn5ezIpFy4NiEXUa5cH5erKCOA7PUbY3LrxqiMArIT12/INCArw5hO
hyxkB3A/+nGys2jI02i4U6jESVSmDy1xDK3Qjcp2YrAexsUewEXtw0W2YHA3
YqDXYdBX42m7ghMBAFuUJdO5KJmA7F5ANwmAjUOJBGDDUYJzzDlvb8uW65uy
ZWhdlgx8nCEn30uTo6+nyIEXk6T2KUB2WaLsXZgokb9NkJ2/SJD1/wuQ/UE8
IBsvzwKwPmbNNR6QTZBHAdqlAO0ilAWA7Z0a15qIv9sorr/bL67/1SWun/eJ
61f90LiD4lqkGdJcz4+L69UpWfAOQLsCoP1Y5EnM5M9AVL2wVe3Er2L+fDNC
48F/gDnyI8yNq3M0LuTnFQrZIDRZOJovAs0YjXsZd9QDWLeuPaOuSnRRYgy/
ikt3aFl1mPqF8Thi9ebSr7Oh2mehegoAPU2IjgKmKP0o51nw3gWU8/hsP45x
Dsc8C7iewSlP4/Sn0LVOokonULXjZ/W83YBrB4bXIQyn/Xj8akNXbeYKHrUS
wwpwz2SpTv/EQSHDFaQrOogRrjjSVYcuO3SENYC1cOVuFDrP0vWHK5tc5dyz
Vb2FwjeqzgxZO024SjDQCjX7qXldM02mGq6Crg5PJXC1KfxtNR+5+R4/RyAH
g7COCZh1CCVgQ7l2Gwq1/DPzXvgGPe9uIHbP5x7ERnohNhqIjflC8Wr0bOCX
6NkIj55Nt3o2E+2RZTV+DhCbu9fiNePueC3zxmvJLLxWzo3Xei+8NsyhZX2s
l6/D1xZHxtrptkVXXMlTuvq20u+zlfRq5Uqpw1N+xYNRlbBesrbJ/DaDrb6G
rX5upup6Y52BS619D4Rl8SdkA9xYBUd5akfKBhCmEHlduvYa8BVh+s7dYfp1
NQXjrf+bP5nvGXD++znA6f8vK9a5EGpcfG3KMQedvl9JqdpFVIee9/P1Hqn0
CFf+0fmYr1SY6PGGpn22HHfs0mUmmXSZt6NUj8KUK8AOTLnnhzAt6vTAtPCI
wpRZHvJZ+CSWZ3by5lqQ5rQrTLPNWkNWm1O/DHTANGMsTmtCM+xtxEsqSLrH
ZMdNQrdNQBeOQ1eOrVKixtWojI2r01sa36D5hen9lIgundSsuYaTW9VRik5T
WQeNmjYqmxdRjourwsXXnUa3h2ZoOK8R3ni8xsvTIOi0dF6dkuPDUyDoFAg6
KZdQrlyfkCGUEVD0BsotUHQMZRJyFUgVGcG8PHTVylTMl+dxX87hRGdwwtM4
8Sm01glUpg9N0YsxdxQV7UDlD+FiD+Ci9uEiWzB+GzGW6zCmqzHGK/gonWvm
gOkclAwQNBUlESWWFM2RybAcmQhSit7ami3XPs+Wq6Do+VUZcmJ5mnS9Bqn6
QpLU/SFRCh8BRV0JEvXrBAn8ebys/3G8m6LPzY+zFI2TJ0DSR0HSR1AWg6YL
QNK55Wq5uL5TK64ftICiB0HRblD0JCh6QVwLhsS19JaS9MVJcb0+JQuXg6Qf
gqSYhp/E1PsMptMXMHW+sktzT5sMY/EqV9fkaKgP5loNZDTmfeq6FI3OFkev
M7thhquqmWjqnDMaLbBIM4OZnaXOymn9VS+n3ZnbXWxe1Aek66YXOm8pOk9a
dFKHOti8MMoeOzDKR8aL+P3SbS0X8b0BdIMLQPJ5nKMf5zuH859FPc6gPqfP
WwXzn6UXBD2K6negSx4CQfejR7ShNzTjMhtofeSCHi2UdEblNg9SgBZOWjuT
lBikB4Ua/Xno25Nk927S74dOs/QFopWVVlcKQpKLNAtDs4eCniGfgaCfToOf
U1Cpa6Z87pGgTwBR77KaxQ3QjznFBK4S/mTeB2bxTUDUwpSqN9SRq26Q6npV
2Ho9/e6NaAWQ1OchiUCNIi1LDUe3KkeNVAVH4705iqtKAkuT0UlSdluOQqqm
4erTIVUz0BqZ6DhZaJlstFBOsrZGXpo+exRk6nPIHRwtmMVRtHrVV+BoA8Zt
Q9Md3ktzei61cCnVEaiYFlttOCwuo7d2eGlUI1EpVDHdtmjx8XdePUxVedrc
68CqCfNLk1nVa+LCYiNp0sCX+l5HTNX2OHOuEanG46mG/Kk2wK6meViLGov9
CVYfQ1ZdezWi1UHsPCJ2npR2KRDnCmD/9t2Z+m/meO/fmVdrukXzOEXXeBze
+s4OymseRu58b5Zfk787YYvfTOjSKtwrjox0JKWPR7w6wQk92nWeO0avUajz
iNx7iVy0lTsmhDETV3AltsJEwK+wgbPLTZrOcrPv1ezj6eETRqkTpMIuGZuN
tZ0K2aIOD2QLDytkC4y3eL7ZXpSH7pWLrsbUSqRsDubIbKCFuQezmGrJ7unK
MKbh9CZecjq6bppTGkyaXvxtbz2Vf6rNSp+ILp9Qrf8n1tp561vGkmysyk26
0muszi26+pvGdIf71EoNPW2qXMJFBVxaVa/Gs2nENN3KrYKYolsxJbZcsrfO
ZwWUx7QMXJsCaqdkELgduj4p14DbGyi3b4wDteNA7ZgIcXsN8+zwiPa4y5Ao
F8DxfvD8LFhwBrfyNE56Eic/gYr0oX16UbGjqGQHKnwIF7EfQ7kN19aMId6A
4V7LYc9poECnBoYhJW7TUVKA2oQcmYoBaiNQQhW1o9tz5OaWbBnZmC2Da7Ok
/6MM6Xs3TTpfTZF9zwO3TyRI0ZIE2fvPwO2v4iXwp8Dtj+Llwx/EAbdxXriN
lSfx82NA7jKUJUDuQiDXZZB7p3Bd9GCVLHioQRY8vE9cf39EXL88Jq7fngFu
LwK3I+J6fEyR+8qUuN4Ect8XWfqRyGOYqJ/EBPwMZtsXrXB9G7PnB1AeH2OG
XJurET+247YHM5wlmi3qkO5PpYN3Sq8Xas8qapmFrGxAM4Jxf0yDF2bdq6y6
L8aZGOnp2+khrcL3HjdgzytgZQA3+hLK5TF2ziujDPswiPev4nODgPIVHOYS
jnwRZxnAGS/g7OdRi37U5pzNSXYKHaIPQ7cXU+ZRdIYOXM0hDJL96Aht6MXN
6OgNlZ6bbywWYEQxeUENBobk0DuWnrJoqb0Ryh6aS6nr6PLD89ANiCZWMoza
kDpxN9dD101LGEgbCtKGgLTBa6YIWmAWZfWUHxjKl4+nfb4BrE4rWp3ykf6/
y6I2CKgN/lRRGwLUAqw614CrPj80ULczlPk5HKffjZu9Z6NWJwIl0uI2aotF
rZdsjds50yo8A7V79NINavHAkQHcZkK2ZgG32YmK2lzI1jzr5VUA2VoI3BZB
thbnzERteeEs1JZ5oRaPv7VeqK13UKuYZdwkk87F8VwychW3U3fUALSkJE3C
dt21lcBo5bJrqzscn9fSq5Wtrd268upLwhqxOs+g1d9g1Quvs8BqD1jXq1G6
amn4rOURatyoBVsdvpI6VTxJFVVyJZVrBc9+J1EdCHZ5Mkz73IWxbyljfzcH
T/98jvf+rbcRWPlKtyA3PR3DcIDbMHyvpanDVjcD7zQL+7s1rb/bx8nHzxuv
PpoRW49mM2J7DMT+bshabTrPnQr7a+Tp/WTsPDLWHqESU5EtvlLp7F6YZ1hb
QTupU1ADA9sy1qrUeDyVOs5ZtoFN/KgOQ1v6YRrZXqiklYKDWvLN1uc8kxGd
tM1lmqc2pW22ifiV1cK6ZTa7icviKxlUten0+U0zG1H3omunoIsn1zhPi/ca
7KYSxY3Gskw5LOk4UDrYmsEgnJlt3NBPwqMeUoS6lXbokxk7GTthY5/uvm8/
o/sJDw7oDv0OTIzHqUSGbROtAV2nZBjlGgh7E+U2CDt+YwJ0HZdpFLmOSXYE
E+yQrjfKRRzrAqb7fhz7LM5xBm18CpPqSZz/BPpFH9qnF3U7irboQJUP4TL2
45LacJnNGNUNGOG1HOnFOgMwHAwdXbJzZTotR6aTQdd4lGiUPbkgbK6ahL/I
kRubc2R4Q7Zc+SxLzq3MkONvp8mRP6ZI27Mg7GMg7OJ4SftdvET/Mg6EjQNh
4+TD74Ow346T50FWJWwMCBsrj6MsA2mXgrKLQFmXoeydonbJ/DJZ/N1aWQRR
uxCidsHPj8qCX52QBb/vlwWLBsX1qDUPvzBt9um43pmWhStEHsE8/SQm3ucw
wb4C7fIGJtDlmCxXMkU2JsUN+Rrgg5nTw5o15C+jGDLcbwpuY9pxDfObe0aT
ntF1rdzSlWGRGq96dpzuc3acXlf7L+vTAaRSxHZbAWsWVG/qYuqZW7qICgHr
JMO1eJUrKFdRhgxqh4Hab8sIUDuMrwyhF1zFaQZxyis4/SVU4yKqM8AeoTlE
5Swwewq9rw89oheXchSX1IGHh0OYp/c32l6A+b0el14DzFblGcc3KUWTFIEZ
BWiePMo2mkLBlzSuQnJFMlRZlBCkJlWD2m3KL7JsD9UkWbdWMRsGzIYCsyFr
gNpPmA0iaPWkDwE7iTIlu1bxPb5Cy66aAmKnWfAeX38lgSvx+0pF7y6L3iDc
0mCL3pDPKJzd6HUzl/+H4f3wdYp9h7sRKJGWu1HgbvQWZW4smbvdMjdQr+8r
MTfWMjdBjQC5yWoQyLfcLWR7Zlnm5s5ibtFM5laXezG3eg7m4r41NuuaeaOZ
3ZranJnXMpfEVVcnfw9yj4ibuMZAjKZuszF81duplehrJQ5bKWId5jpythkz
drO3nLUKjAxu1GIQjI/WeyLn0VpMQAPCAZa/1dZuXG2kbjWxVGVQXImBBv4a
fWvMxwEksXUxLtfClUaC2WGykzm7azaB57Imv3l3Kn9zjvf+Ui3M5iH4Thb7
8fX/JIvvc0fg97XkvcMTykjcAO9gwt6xI4wHFE5SdtzzqGjE7XGPadnXTd6v
E7oB5O08N3l9Fbbmc5V9bhDj+ywVRHkF7dfl5raV4w6UsXSb4kvq+mprlpg4
WyaNADpM0RElWiFFI00lBexY+Ya0eehrTKhI2uaCLjmmL2a38PtZ6J9ZAGVm
o3UJxP+Z5GxGA689o16zDKcbT6Z0J26Sv6TV2T+gn2dw8TYTsvivzeFwYJOh
OKdV4c7ToiImnkfZYY2LyRX+ei5koKu29umGfe5B7AAguzAtdmJ6PEazH1UJ
ZutLnDpH3PC9AfDeQhkFeMdRJgHfaRS5xin3ppW0g5hiIWvPgwDnoLXO4hyn
ca5TuJcncf4TqMdxNFcP6taFOh5BfQ+iKfbjktpwec01VtnQklWqmwboXZqH
6SAL0+9egDcJ4I3LlakolN0K3PGduXJrW45c35QjQ+uz5fKaLDm7IkOOvZUm
h19JkdZnkqT2UUB3IaD727hZ0I0FdGMB3Rh5en60Od4T+P9x/P4owLsU4F0M
8C4w4L1T2i6BtF36nSpZ8v1GWfxwuyyCtF34y15Z+NvTshDSduHSYVnw+G1z
3AUvA7pvTMuSD6blcczOT2PGfREz66uYSd/GzPkBZsqPoUigymUTLns79z8z
CSkDUDvbrbrMdivJ7NNso0ywXQLoVoBq1cz5ckUDJLUOee2ruebZrcp6GA1r
QTvDa4mwvaWLqwO0EI8qZQfHrNPUQ3INv16nMWNUy/VbatQYwSmGdR1BrqIX
DF7GV9ETLlvYnj+jRg72hD5cQi965VH0gg5c2qEmNWy0YlJvwiRfX6Se5pWA
bTngUApQFKFZCiDacgHbbIKFkCFwuE5JENHmulMBFbNVz0mIRQBse6BndwO0
4QBt2KcK21DANgR6Nng18xAGfTxJwvLlo0nGivgImF3pXbhWG/jhNBO2Abe7
LGqDgNpgoDYENzMEqA39zCDVx3modyPWC7N7GAYRjPX5jqlg1CZLWFQ6dpsl
7A69mAQo28TgfyVhEy1hU5SwBWlqgjdaCA1aAsqWonHL7GKsIWzxLMJWeBG2
5u6EbcLNa2pz79Robnevwfp8OWHbuATbZrDUdtRi1gDPqNrWHsdw3NLrLoa0
/gStP6cwNK5JeYrJrMGW+mPWtFBn5JqXwmXxZWIHP1LWl5C1vKqikc/YqatI
H0D2HmIVLKDKvROm935FmL5xd5j+hYITb31rDmF7L1+dPTcWoffORKhjNO7Q
7G7zZgragJmC9i5RJPy9rMQOVM09LO8Tm8em4gSdiU/ipdIsxYKm/Mn8ZgDr
N1PD+pKmeI8krWB7l5uzl3dblB41xZK0lB2gpMOavM1KdBF6ShExWnjAJMxC
RyqgbmTZpzTNI9oMSXNa+Jlsoq9JUxabYvfbZBqQZtbjMjPqxOeYeTOdGR5r
Nbcx/mQ+nIMv5TRpFsg8dOg8dOh8lAKcqAAnLGzXxFhlhzTtLbMgMeQXH/Xa
8OywHzPaoVO62bAbHD0Gjh7nshmteoNq4buMifjqsM6O10a0greuTcsoYDp+
DSBFmb4GkI6o/ZPQlYv48gWaBTF9nsPsfgZa5TSnT/Txk2jNE6jIcTRaD6jQ
hUoeQYUP4gLacUGtuLgmXGg9RnBNhbpYMLNGIUZ5LkZ8JmC6N0+mEwHTWJRI
gDRcw+mPAaQ3t+bKtc9z5Oq6bLn0SZac+SBDet5Mk0Mvp0jL00lSsyxBil1x
kvYbgjQWII0FSGNngTTKgjQKII2Wx/DeI4DpYsB0IWDqMjD1KNgFULBLoWAf
/Xa5LHuoTpb+sFWW/K9DshgKdjEU7KLfn5NFi67Iwkevm+MufB7K9U/T8sjy
aXkG8++LAOmrmDzfAgnew+T4ESbDNZj8NuRoqMrASs0AH8XNV4c0o+nebk3d
nWM3X5WAUOW4h9Vo8no0fTPj3A9poN5DDCPoeCrd1HvoAPSUl6tvPz2S8N4F
lIv4+TKtvqNGosrwmLnFHoKO6XFu4//b+MwtfOcmjn8D56FfG53HR1CHYZB0
CCS9akl6CX3tAsbhWXSFU+iLfeiXvQfUiHEEffkg+nc7Ju5WTORNxTb2Ftqh
EiQtAwxKAIYiQCIfJM0FPLIjMSYAljRAJgXtl0RpRwhR7nF1kzLQxh4kSfeA
pLtB0nBQNAwUDf1ESRqyelKCPzY0XTXB/a0fTZCmsmvlJJgJtAZ+aF6m8LKC
L6DpPfgraTotQSyrIIBB1BAlqnu7MQnKs4ebvUBgqc+PjYDeozSVCJTIjRal
EKwxWyxKcQVx2y1KcVWJvDoI1uQwL5RG3sVA/CUoLcrUlW2z7parK91cgHGj
tGQWSiu9UFo7C6W4Y00elJpjNqOXOixt8VqHJRQdlKIDt3mT1IAUH2izu1XB
UFWqraRmC+fjZqpMh5++RKcNXusFT/5Pj6Zjqkr9CE1/y8sqK02rDKmrCJhK
6qMK/lRBBVd+1EpQQpOF/rOOfdjP2z6M56ivBtLX7w7Sb83x3p97HcJB6gNe
+tRxefprj5l4Jk39NEa/EVwznJ/83SLVcNXfjVK/GcZgZ8W0zz6LGM9fkza8
glElwNOvqzitUqiedFuDfYxMJVr71M/HtPVxR+A6cKXix6xV0WMKz2AeX8qP
WsRqw1vClnaIynMjzIuVsFKEPsX8x4VmAQKQxTFJO2I23/gCgIN4rshFv8xp
VkJmN9o8yQ04bFa902xZmGyyjFdwJoVqZq34pKgZmaStUeLiXfPBbKbPwjFy
cay8Jk01WYBzFKLvF6HvM81WCfp9OepWhbrWdmiCCLoU7MM1H0CjHEaDdQKG
3ZgFj0FlngBxzxCUl3UtjeCkwe/qkPo1XUe5aak7OjIt4yNTMokyDepySjZ9
7dKIovr8ZV2IOwsMnAEOTuNkp3AHTvaoaDmOhuxBxbowMI+gsgdR8XZcSCsu
qonPyNU62BnFtMTG6skp1hQnqZggEkDdGJSIPJkKU+KO7siVG1tyZWRjjgyu
zZaLq7Pk1PsZ0v1Gmhx8KVWan0qSqkcgXf+ZxI2V6H8Acf/eIW4MiBsjL4Cw
z7iJGwniRoG40bIM1F0C6i4EdV2Guh75ugDydel85iUvkce+Vy2P/l2TPPLj
/bL0px2y5JfHZAnk6+IFA7J46ZAselydoRa9PCWPvjUtz2GufhVz79ugw/uY
Uz/CPLoG8+YGzJFbcjTSJQOIMB19HPM7MCEhHlgycR9zmNSQ4ToZj4w5utHU
9SBbM+7hPty/g0MasNd7PyvP3XfbktZZZ2W5rZSlE9OV27rGOjw6k7A3UW6R
sCijKGNjVq78dxnDoUcB29u4+7dw2hvoOtdRhWuoyoj1qxtEN7uEql5Alc92
qyvccQyhHtz9LnTfI+jSB3Gp7RU2xgiDXQIJ1UBEBXBRCnQUAyOFaJ484CUH
uMkCejKAoL1QdinAUhIRRfVHdFEREmfrnBBaez4jJncDtuGAbRhgG7qasJ0i
bCUYqAVwP5qAcl05YTTqBPDKQhLzdZ4EfjBJ5Gr5cEp2fThN7vJ7eAleNe3z
Gwn52JwQNMeT0hqUz1S1Gu7i/91rxc1cN28/16cDw9utXrzdYXkL+ZoUrAbx
FMjX1N1fsiA7m7epd/LWSNdcO8FaA/FdeVvlxVsMzQZv3jYrb5sd3rbrRqsW
D2+Nbm09ZBZjHeD6zKKtH2FLBWu52GrMu/YV3bxFC/2Kj6lyBYM5izeRF418
aTjuAGwGe32l1khYStcaT4Fw7VX1amBsXW8rDX5NTZjPt1yLj6GxL5lgHIsD
3BL263OQd67gE5a8/zQHZf9qjve+4bYHAztHQLmSO9ybjCn4GyTvPXOQd+7s
OJ3GFdnbUGy0bcBMBtPj+Jh7ZdYxD/v4ujWtPaRZozXexBXcyFPBRVog+D7S
OECqzF4dL/TyMee4s7Jt7MXHbDFm/ooeffrxtU3NBi5zsPs1toLaww+pIbb4
gKK3aL8Ky8J9KjIpNvNpRYHyxPmNDkUPzTWuT1CoeI/kJT2zjU04u86xYWeR
rFrsM0tmjfjEShZ6fjZzbNVpMuc8fD+/UZNYFuLYRThHMUZACU5duk+TiDDc
eR2q3EhXA3SidnS6g7jmI3g86cIU2IupsA+z9SnM1mehR/q5nHZZl9auDKrl
b4TTKMotUPe23e0xMTwtU8NT+OOU1bc31QVmYEhF8jkc7CxQfgYnOH1K1+RO
0EyIShxD5+hGG3ai3Q6jzQ6iwu2ofCsupomP0bUaPYahCIorNKJsdimmF0wL
KZgeEjBNRIO4e5S2E7vy5Pb2XLkO4g5DHF75LFsufJwlJ9/LkKOvp8mBF1Ol
8Q9JUrk0QQrdxI0BcWNk/cMxs4gbaYkbAdpGyqOg7jK8vxTUXQTqukzx6Fym
pVsKnfvEg0Xy5Hcr5PEf1MljD7fKoz85JI/8olse+fVJWfr7flkCnbvkUV3B
Xvz8lDz++pS8sGJa3oDmeh+z7CrMqp+CuBswc27FLLkTs2JIse6G5oYspvtN
O6I7nJkqmMkjGIWMj5q11nW8Fc29/6IG8u0c8gRZ4uorz3vaejWRtGa5lYbg
UXF7Mg2RtLfV9n/jTsLKuFmSnRid9vlbGb+Np65bKDeVMOO49WPoG6PoL7fR
d26hH920uB1BFxhEF7iE+l5Avc926Ubp47j1PbjtXejHR2psWK8SzVXfCPVV
BzpUgRTlaI+SJPRvtE0B6JIL3GaDOpnAbTpIlAoqJYNQiVCH8cQtKBa9flqi
gNtI6NqIzxzs7l4zDeEQDtyGAbWhHwO5qwxuCVsJWjkOgqJ8iGJoS8Ub+MEE
7cOGtkrcXZa2QStV4QazrJr2sfNk6GrusSXTidzwz6xmAGt9vgutrdbryA1e
pN3sMRRTnxvS7lTrN63gyVC3KWG6DL0XfSQt8n+PtFS2Zt4sVJ/uO0hbNUvZ
zk1a53pbjNRwMNtqEri0mm06DmbbHMxSyuLm0zpsi8GtL2mLl15nRidoW49Z
5PqTtAFzQVany3rLhjq+rRrXcLbm2J2cJQm44aLHFJKAJ650W465Hmupa15p
53TYa+RYANmrApjstRrYofCffUUKv3Z3Cv/1HO99zesQ5E+p8TQuJXbv5PG/
c9uV592RJKfTK036XPo3YGZEf58AN3idtVldAfGwF8Q1O3mMZTnAzd77yd55
ZK9j7iGAqXvdAHb+AOryBljda8CrtnoLXp/7pQy8KNPrllLL3hKAreSA5S/6
XlE7jcwmMXAh7bytptA12RiVqUqpTvMaValSsebUG5Yqe32JVtujsm0aOQA3
QLKqyV6+xSTRuRgPeRgP+fhuAY5RiGMV4bjFOH4J5rJSnLcM569kMDoGpTts
UlGYbr8fV3kInbIDTXEU8/YxKKUTmLdPYd4+C/6ex9w9gHnzMubvQcZ2Akav
XVX23kYZRRmzoQymwF8Ztuy9TMMk93qM2H0el/WAZ3Dw04DDSdykEzhxH3rz
MfSBbrRjJ9rwMNrtAB4U9qHSLU12y2SdZmQuwwRQBP7mYULIwuSQBv4mA0jx
mDCiCmR6d77O+4F5cuuLPLm2OVeG1ufI5U+z5fyqLDmxPEO6Xkv7/0l77+g4
rmvds1cDJBWdbpp777yZWWvWzHtv3qxlWbItJ9m+zr7Bsi0rZ1nJkmxZtiyK
EoNIUaJEiRIpZoBgzhEZjZxzzjkSIEAQRI6d9nx771PVBbAp6775YxfQjUbX
qTpV51ffPvvsTZVPn6LCR45T5m+OUpKw9+Bi9n7tAL102wF6Bpx9Erx99MvR
8r0Pgr8P4PX9eP8+8Pce8PeXsLtF9ari/SUU7323xYO9SfT47an06Ndz6JFv
FtNDd1XRg//SSA/8pIPu/7c+uu+Xl+leKN57jeJ99IUAPfuXAP0RQ/Qbm4O0
AezdBJ58eIjoE4ybu2MxRnt0mRfHl/Oyrdg6TYgiS7bQjzkdWheVi7lxuZka
Tk4I3jWh31rGNVtTh+Fun4kkHg6FNoX8xjzbOq9BbjPz6jO2eOuD+dnmg+Sf
Y774ZhktPjDXOx0k3xRsIqg30m3kxa4X0PPzl3W30+j9CTRvtEtTVQ+i6f2c
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
mVD2CjMFLhR3M8DdNr0j6P9j7T2g4zyOfN85MwOQkmx549u9u3fjfTfsufc9
yrL3rrT2ylH22vKuRNnKyZZkWZKDwlqSJSsnUsyZCETOYZBzHMwAg5xJJAIk
AIIIJMBM5Jl6/6ru75sP4FCy73k8p4YIg/lSd//6X11dhakcGCeOAGP1Wwez
1rMZ698OBjjvOZ5QktutzBEC5A7mt4PZ7WBkOxnWdlNHO8xgNacJaaf2eDMb
RTz38crnGj7btUy2OsDtJqQ38lefUylZyiXGTNBcYUn39g8W/ho/+xQ0f850
gP+ZYFlqlZgYvtm67+xTgCzL1uuorH4WTpX9a6isBPSAoY6reIEA/BXZHM7o
DWP06t/WMXKvlc0SkOY0UetYi1rcJXZ7M2kN2hp+b6FuJ0/LOvjiBLZtQbd3
TcvvrpoB5t8Btmvc3np9WgvmjSZp+XMM2hbkmbS1M2px48Fayss2TZCLT8zP
Iv5KvnMyge0MYFtHEL0ujd4cS0VfjV9Bb1EQvfW65Imxgm1lr6GkBzhKTbP3
pGbvBHryFHryDG7urGbvRc3eeV7B1lFqK2DvCtgrBS2GlmgZ7F0evAo2X4Fd
gl2kpSHYML4+ARaPXqblk5fBXyjtoaviNA8cWwB/F7Riw/dtsJar4C+47AOH
vbC6S5q/YHjZObqSf5bmMqZpKvE0jUaN09D+k9S7Y5jaPxwk31v95H61hype
bKWi5+vJ9XQ1pT1eSgkP5lHkvdm0798yaRvY+/43UuiNrybSy2Dv87fEgLdR
sAjYQXGEG+x9HJx9GLy932TvTgt792r2HqAnv3hIszdS2Pval4+AvbGavQm0
Q9ibTIe/mk4x38yixO/lUvrdBZRzXzEVPVpGFU9WkfvZWjlG5+s+Gni/mcZ2
tNPMwS66cKSHLsV10dWEDlpIaqfl1FZ1PzKbyJ/to0AuHmS+Bw3EqxIDV+H7
GvxfC3Pjaw/M26BUmJRzxkNvgrWgK7Q2qgrw7ege7WgE7WgA7ehC7R3qmbT2
kL/lGK0299Nq0yCtNB6nZd8JWm4YpaX6cVr0nqZFzxQt1M3QvBvzotpzdLXm
Aph7CXYV/F2AkmY1DfZWaPYWgr15YG92gAYyFHs7EwPUCkr5QC0PCFZ9QMFP
BaMHqBBqOn8bsxcidYufMj+S1WZKeW+VkiCATfbC4t5aoVg20dJvgrhH+CWa
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
iHMtwjmXlKh0AKIAOZdfjc6871ZF8cQ1iq5Wi/brxvhVp9W9B13Ni65Wz+oe
XQ2YJx8m1I3oao3HFeibFOgZ89QslGwWVd+M/tKs4uhskp0dY7FZ/DSYFM4m
znqHYruMKA2i5g0l71U++qB/3sGIN+R7zdS18t3ObLeJiKfKCdM5z9vYPoPt
NoexGh901+uoQEG7NiV/ZGnecNirFXkD7bwMbw2sC7J9g7A93GR7cZDxa2W9
k38cTiXdHBjQbeARXxkiX/juZLw7zUj5dWiXRXl7CI1/E7/+gUXja2yvCaQz
MH7P9Qn/30Ioe7mEv+MvrYnsmOtM+TBrtJ1iPfBYJT/jvHHVymzizA9n5LOU
xg95JV658WvZX+I2Pfoa/ib6JSD+Wmd+uKzEO9QcQAXd2WRXetjaYHm7XoMX
P1f3moj5ujUL8cEMsZZdb9fufOPITh9HI67DfnBBft1ivBmJp7hvZ+hz2hnt
XCzU6C/Q6M8vMv35HDSfz0/d5H5ukPsYYB2MfRCew/Kymd+K+FmZmvgZmvg4
WlaG9vXrPDUCfiMPXZaaRSj0f1GVa3VpkZajVlyLDG8iLw8WWeKBylRCKyNr
paT85kLNuPj6OoV+LsLZ7FOFN7madgfGoi7c9G6MRT14Ir1o3Ud1lqU+PM1B
jEfHMRaNjCgWj6NHn8bYM4mxZxLYn8LQMAXsT2EgmdYCfxp8nwb6p8/BzvO1
TF8gWwR/TTP43ZkZ5RRg58AMhpAp2Gl83gQ+dxw2itHjBI4zjDHvGBpYB8ct
NavComXgRR6uGXijRIzJ0bEBOnholfbu8dNuSLvtW9Q5fPj6FXr35Vl66+cT
9PrTw/TKo8fopfva6Zf/1kDP3llDT91RSo/dlkf3g/33bkqHpdDmTUmweFgs
LBoWCTsEOwDbK2XVVVLZbZr9n9Cj+PonUPo/A/9/AaX/MvjP7H8LSl/YD6W/
k9kPpR+h2Z/w1RhK/XoMZd0ZS3nfiwX748D+eLA/gTqeTqT+nyfRyZeTwf4U
sD+VLn2URlc+Saf5nRm0uBf8P5RFy1Gw2GxaiYclZoP/sGRYahb4D8vIAv9h
aIsBlyovo8AFK+KUp7Dy7CD7PflB9jeWmQkKA621FGjzUKC9gQIdjeTvaCF/
Zzv5u7rA+15YP5g/DN6Pwk6D+WD/sXNg/mUKDC6Rn/MIcm5CtKU5jK2Tutji
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
HsS4P4aHzpOtDlA/Ob9L3uvdS4fp2KUTtO3MSao88i59vLqbzmX30rHk7dS/
dCd1zu2nxjf20pZX9tPqiYco4yn1Gsz+/WGa9i97aPLPdtHEn+6iZ36yi568
fxeNuXdnnBmc/lSiUbhlT4CvT2aafLT/QVPzB+m1okFo2EHZ1H0Ld3kWngTm
8vlduPCFNSYzCU8Dyxq0zPgKNGAVn/OFeZeG+ZaJRuQY91YB5lUR5tVqzKkS
jKw1mFPrMMo2YE5twqPcZoy8MozAcozECozISsynqhNa1rwWg7cOA7n+PSl1
zntTTL4mZmATy9dm8Q41X9TiqwxYgezlyBRsiahQtmFKW+Uue5cjjG25hbG3
uop9QwjrcxPWI3j1Ml0ZgoavwlZTrqH5FpexNzq4OM4IUf5lfpJv2mNkKX5v
Ny6+ebf9KbvVAnLAXoAFVHCPqlEfB5n4bgda2cX1OaDlpeiA7NeaRy18dWcM
mfoDBqyeXxjnBiyJvMAXfxuDrD+IQdY/3J6n/xLje3ExeHqnw9MfME/jGacu
FeoR2EtUUzf3s/h8u1h9d7EO73J857Fp6XNo2SGnBkuJi9uj0uf4eb2MSC/z
EfhhDy+XaWIBKgUgXJRs7LAZKQ18wEIDP5EKIevCrDgl37a2JZLpylYtkYeS
SlPFpKtsduPRbJ7qKxeCZWtSk58bQvocQnoZkHjMsoissIjE9VUaRFbh+gFI
qgYeq6Vadc121qqMyFp0Q12fIlIyAPdqFmDjAa0awJmAGOoUwA1pMY+YjMiQ
zTEwp5BxpCMfPxTmqczp738f2f+xfqj3XRrz/SFovKxobHDh0W6qVpkSU1yz
oozXjC2Rsu02tsmITq9ECcdLOYsSl62WGV38DkcbcFWqfLQmFwtVNlqYiZam
o8Up6IFV6JFl6KmF6L256M23gcmZ6Pvp9eYTp9OLWPwnlqhseQrS8wlIz9HL
QcqFsLeuk3/ql+R/7mPyj7nk8vnaLVd7XtKG76BkqjkrKdmh5HiQ8EXYa7BZ
sMWwJFg2y06Hkquo7perDCUTQclE2jUqkfaNTaIj45Po5MRkOjslmS6/mkwf
vZFCn76dAkqmgpJp9PlipeSXoORXSZn0dWoWfZ2ZDUrmgJK5oGQe3Sh1UxKP
CRUgZXVxDEpCenYDNls3GEqWGUpWKyX3AzSHAJnjhpLvtdOf3tNyFyfP7aXD
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
PrrgH7rgH7pxvXSLb+g+x5djNzB3DsN4rscYhuzcRf3ZzZjsEf0OYXmBhQbr
zE6O3nIUt9tIen8ycl7CaY4yca3P+g6dTq11kLHK0NEmY5O5a23UnK/iepuM
nKPLgCpgXnkFZAaKFhhlHpPjsHkVEoN1CSJdATqvacB4xxCwvNOfk25bUQb6
coOG+eUGsXlUXWq5fV8g1hVgCuwLI5u04NNfLS79soW4bm9R52BeBvjzcpBy
/MchAPg/bQC6AvQZfYMVmx0KpP/RlplTh5CZkjE0XEGaJw8GpIHMUR7yFi0s
ki00zeZ83KwWZaibEWoEu2IzrclWl8wjwSaDMZl/S2rEFxla4nUJakw8vuOI
54GNt+O+3JQp3pKTnBTkz0srJZbvMhJPs2w9I/OUZ21QWnOWLmGlCEm3cPJX
qiIvqqVfIj8ZyZjMviyYpBw2DrBCRPIZ9LmRkV8IMFVt/kaXqDhqKgwutDvU
MpUmzpcFLF2PyeJOSfKxFnd+aVSkY3Fn+2WdqmRWdn5iplWcvMRut5mVDs08
VdNkeIkTvda0N6kqNbwswKbm44I0ybRyMjgTfsDLTPAynXm5Hy59j/IyAbyM
gys/CbfOtQSOgpdHwMtDG0h5KXISzFwFXq7oVzm5BMxc3OfkJW2eL8ycdx0j
CnIqMyEhYxbcdAs8Ayka2Iyap2lAgk0e6GdFWIbNuSbkZKEZ7kfOmzY5I0DO
CJAzcjGEJMgZw2UMQc7NawdoK7Z0W9gA7YhQr7or5tZcWxaWY4ywnHjfZpoK
coZY5Hwx2p+c70VSNcjZDnL2gJxfLRhEzvWhQs7rUeH08/ZN9MOBXfTtiYPy
2T8kg5xJIGdSpE5gZkQ6FrOAnMWbqcGzl0oLcNtyDudiN06Bs7AzOAVOf6LD
MlInsDmrupW7EuH3BlgdrAZWCSuHlcKKYN5LCs6si3Q9tYd+TLhA35w4T18e
OkeX956jnu3d1BXTRR0RZ6llw2mqX91J1cs6qGzhKfLObaesj1speVoLxX7Q
TIffa6I9bzfStjH1FDWijkJfrqHVz1XRkicrBZTBD5cBmmXyffMeraD5j1XS
wieqacFTtTTvmUYKea6F5r7QTsEvddLsV87SrNfO0ewRPTT/zU9oybuf0aoP
rtD6GVdx8/Q9bQY4dwKc+wHOowBnHMCZAnBmAZx5AKcnCToS4CwCOEuyAM38
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
tj9Vj89faMbB19sQ8HYXQt/vRfingzi3cQSXd0wgZu80ksjSDLI074wLt8jS
22RpEVlaEutGZQo5mmU4esODplvkKHnaWuxBG3naYXjaRbh18Qrq5pXUwyuq
hwNKL6+uPg4mfYRlHweRPl51fe36sVemaghYn/+kBKeIz3aZqeRHWhpVRI8K
iZXQWFk5UsuvrRGm1poL9Z5OAFFqeCq7UFSphCVu8wIuLNcZlQp4Id+U5Hzk
6XWT/WMJT78QpyoWx18g6m+rSSs+p8CpK30sgvp9EUF9bS25hKAmkV2mycOu
oemvlWSlNnVn/Pv8ripO9SGh5cOGllnG+WrT0t+m5X9fBnXL0fJ7mpb/c5m3
/yvb27pG/6UJJpBM1SZ0lDWEKWpjtORKIaN1p59oEVGb0o8rBIr+AkWzLzE8
qTFqljJGvNDRsomSt1xTFFT/I/7Ua15TXPQVLpJ4qrmivBmIJAW6NEOUWqkR
VefFZHS9wqIoSJk4iFEh2WSiEFGZMDGhVTMxsU0zMUlMuJgs841Eos+faCB2
GyD2GCDSsvo0EHMMFL8IiCIj7cqaGojcOR2DOiJ7byWZkxhUk2jOaNQf2B7V
2j+QiNUmTVnVUiLedRCRt5CF+Q4ipnPnU0h2i4gxPNhrPGgSMVWIeI6NFKGJ
GEcixoTyRiTYyHlLTwoRLT1piGh7V4WKW3UOAK+edC3SkzIHaXtYP1VUlFAc
cnFOzUfq65N8ZDc4aChJOvK1A9y+jwNE4H6ikVBUdkAhcc4gkcbvPvTZgsKi
ZHCXhLIKi06NKY7WXcbRymM4RcKf5nFFkPpnJXv8cV3I+/H71nporfnrvw3A
x98+iq0/OKLQGEY0XiAa419cgsaPFqNxavcBjB8OxEjICQyeiUTfpcvq+/oS
ozGcQDQmEI0JRKNKsSOO1kO2ozUjNRwxRONC1xjxOE48TsDdMUk8TnFEprXS
Wsi/ZvKviY+NfN4wTT7OsOPM6HGinK+VaFZ6bhGtN8fgyafljMKVMYKZ5GGM
xw1i6NoA+i72ozOyDy2nelF/vBvVAV0oP9yJ4r0duLWzHXlb2pCxvhWJnzYj
+oNGXFrdgMhVdTjx+j0EvViNw89UYu+vyrHj0VIy7y7WfL+Y5/DT7xX5EpNF
HKoUGCkw14nA/HGpcrNuosDc8qiAsRrbHq/B7qfrcODFJhx9oxUh73Ti5Ps9
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
wNBK1JS+BRhfmylsR0oWAYs28btVyqZKNuw2Pt+zwKJM6ZUWHaUif1t0sWZc
Kk1dTzXj4tAsQpdiQ5eiZehyy0EXcY3l8dYyVxLPWLqFg0BGnIMuHEFTDGES
JSm1kzAcdaM4+l6TxKCSxFqShHJ0vigJQ6WsQ5B+39kAXQZeauCeOazr/4Uf
1LUAbcRozLBdw/ZKC4bKOhxtwpU90oDCFElhELLPhLPxD18ES36FoM8lnC2Q
bwgkbOQxiG+0yBJsyBKiyOJB6DGJ5woN8PAuJ5Ti6gR39uRxL1rCiczT7H5n
iNAIjoKR5oDPEysXiJWLbJTLbJwrHC2vES1RREsMGzGOaElgwyaZ/EipbHTJ
+y/5umSZX06JDiES//iNau3QKBQHB09ukYwWog869Igun9/2ZD6O/qYAERvu
IPZwCXLPVqA0uQbF/y9n7xll2XWsh911uzHMfI8vSXp+kihLtp/kpSUH6Vl+
b+l52V72srVsgyAB5kEmSIIkABIEkcMgTM65c8453c455zCxJ+c8A8xgECb1
9vdV1T7ndE8PAOlH3enpvveec2rv/X1VtWtXdeopy9GRE256xOhleNgdAL1M
g16GeirNPtwfZFHPgmpmJTY2y02Y2avs6LYfkLePAljbC1jbc0U7hLF4PBMt
6XZP0ifnDMdN4XpuCDc5gNXSj5nZi1XVjVnZCZphCL0ZD5bAA9ZhBlZj9pXj
4UvgLRdi1uXBU87EbEuDslIww7ZbUuRazKgVmEnL0nSxx37gfgML4Rdvwn95
xblHfu/cT5917kfGND94as79CEzzkydvuaVgmkce/9Q99ujH7olHPnI/e/hD
99TSa+4XP73qfr30ffeHn11xb/76slv1e60vl/HOJVe46gp0+b5r3v4B3MFr
bjzvQ7e35Lo7VvWRO13/sTvT9Ik70/aJO9v1iTvX96k7N/SpOz92w12YhOwC
y+y76T7madOjCxjmDAQM486DZeC/zMF/mbuitakcGIYsc/tqhGXw78eQjz7Q
uhQ8/XvVTlzxRBZZ5gyG4YSxzAHbnWUMfdfJe/iTmEeDGI4B+pQAiV76lRiW
LhYZ3e1r5sTEc2nxES3ZvLcoV4QulEKSXcO4EI4X+UVSlHImxKpQshGOAV1N
SSI2SWY6IjPm3DSLO0PnpmV3IHENnunNte7V+dQm9dvEyWnb51PZhHH2L2Ch
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
Oz+7jIRmrPwtK7NP4wGno2d1zFXi54SEJoyERpWERoZs92chCUXcJVYv7gQK
dETcJXbDbgYaNAFpGytDd6kOyFALJK4pVhKqKlAiYrfSshxD4a8oB6Xeg4O2
SNNTqDhzEz6QsYnGfDqrrfGU5gYtBsqioDy5mSLu007p67ojZB3+bqMkyEVc
IGGgLfLOzcI8xjY7ceGd25VxUoxxUo1x0nCj6WCcDKBcJhgnC8+SXaDH6XPx
jHl4Xp5tLIAOCkHKRbXKOiVgnVIQd3mrTdJ/4KrhhdZAxbU8IgnmaYD6E6N6
yIFbwFKQcY+GUrpmdUe/B0Pce0QMH0GOIL/Snzg+J4Vu8bigg9jX1BvNOeGa
G864/oGL8v/BSbDPJNwmuErtw1NgvUFX1tehC+w+N/GBlGkHdI2/H87zscvy
peweIs2xhuFy/anUeSfPsN4u6++y/CFr87JOLwtQsSAVT1Uzp5RnF5h4yhzV
aszCCjxiKUygQpg/eUF5hr9zqZhtO2HybGtTrtlIrsEsWwMtrsTsehezahk0
/UaB3t0f4Kz+DiP1G8yGX8JH/tl78I6WwTt6Hd7Ry/COwDc/BN88ZHzzPfDN
d8E3D4BvvgO+eeCRO+57S2+5Hz9+0z359A33zO9uuJde+dQtW/aJW7PqY7dt
00cuK+W6XKu28GPXVv6J66/71E0233TT7ZDum26m/5bbNXzL7R6/7Q5M33bH
9tx2Z2Zvu0uHb7trx2+7G6cjGzwhz7Cq2AfMWBdkM4+I5HL7unM3IZ9CPoZc
X0g0ENZBOgc5AznBjHeM1oFILiLLFzONlilQNE44VXojAVRes8PqYdIKJxRy
I65xj27G1WP61U3rplzNFMenRqJ11UCN6olAklw1WaaafFPDn2oZqKsjG9WL
C1RvuXNKXHhNNqqRmFzTrnCONbPadTNr0LRwt6VF/Z19gtDCK3Fjl9bZBezy
pUXYJc7Xr+pGDH7/yiLE8qf3Jpb/9XN8HmMW+jd7lVXidsNGKZ4IpYe59Aii
srnjSek8KB4OvZtDpA1PKVzfQilc40fUyRFLU63NODklTkLB9w1HHJ7RE7IP
TIvwJG5ngrG1Sb5M8b/TfJlR/rBMyF3y5l3H8QcSyd+GnowRyUyESKYjRDK1
V0ti+d0gn0qgARgjkhH1ZiTu1q9xNyES7ghheffSo2lXj6YTZNIBYGwHQLZ5
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
7x3o7GvD7+S6+K3mKP5K8uDXZb7+I5n3/l2zi29NuvhvM1//4cx7v97s4q8n
XXx9+Cj34K81H/y25MG/kPn6P8q896v9FjHt7BvC7+S6+OXmKL49efAbM1//
wcx7v9Ts4m8lXfzFzNd/IPPev2528Z1JF98UPso9+PPNB//H5MFvznz9+zLv
5XDyQGd/OfOlf5h57180x/P3ki6+JXyUe/Bnmw9+T/LgX818/Xsz7/3zZhd/
P+niWzNf/57Me/+s2cU/TLr4a+Gj3IM/1W8R0y7+h8yXvivz3k80R/H9SRff
Fj7KPfhPmw/+YPLg38x8/e9k3vsnzS5+KOni2zNf/87Me/9rs4v/JeniO8JH
uQd/uPngDycP/u3M178j894/zrx3oLPcb+cm94+a4/nRpIu/Ez7KPfg/Nx/8
seTBv5v5+rdl3vuBZhc/nnTxXeGj3IP/U/PBn0we/O7M1/9a5r0cShzoLCcF
OTH7B83x/HTSxfeGj3IPfm/zwZ9JHvwHma9/S+a972528XNJFzkMyoHcdzW7
+JdJF98XPso9mCP0gS6+P/Olb8q8F9mNf/9C0sUPZL6eUzt/u9nFLyZd/GD4
KPfgdzQf/DfJgz+U+fo3ZN77m80ufiXpIspY7sFvaz74a8mDOUn/+sx7OdA9
0FnOPskZQFEJ8O/fSLr4kfBR7sG/2nzwN5MHfzTz9a/NvPctzS5+O+kiZx3m
DNFvbnbxO0kXPxY+yj34l/otYtrFj2e+9NWZ9/5icxS/m3SRs9dzDsF/3+zi
PUkXPxk+yj34F5oPvi958J9lvv5nM+99fbOLDyRd/HT4KPdgji8OdPEzmS/l
/Mqva47i2aSLnOf4FZn3vrbZxUeSLn4ufJR78GuaD340efBfZr6e8++/utnF
x5MucvZoLsqQI++BzqJ9nOvizzVH8ankwX+d+fo7Mu99VbOL30u6yEVSctGe
r2x28dmki+ha5B78iuaDLyQP/nLm67l4159udvFS0sWvhI9yD+aIeqCLX8t8
KRfx+/LmKE4kXeRierm44zuaXZxKuogeau7BL2s+eCZ58N9lvp6LvH5ps4vh
pItcbDUX//2SzHsHOosOf66LL26OYjR5MBdsyEXAv6jZxXjSRS7GnYvDf0Gz
i8mki3eGj3IPvr354HTy4O9mvp7bf3hbv0VMO4txo1wXzzRHMZs8+N7M13Mb
Mk83u5hPunhf5uu5DaKnml0sJl3E4FvuwaHmg8vJg7nAX27bLNftgc5yF9Ln
dvXazfGsJl08Gz7KPVg3H7yYPPgRG3rydf4nf/c+djl5LMZt9Vvp8/GJK8kT
DBbX4aNryUe5Wx3TLxV/7P8DKubZtg==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integration Bi Dimensional", "Subsubtitle",
 CellChangeTimes->{{3.404641430673939*^9, 3.4046414450023394`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SmileBiSuperHestonVanillaAux", "[", 
   RowBox[{
   "S_", ",", "\[Alpha]1_", ",", "\[Beta]1_", ",", "a_", ",", "b_", ",", 
    "KList_", ",", "\[Tau]_", ",", "\[IndentingNewLine]", "\[Rho]1_", ",", 
    "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", ",", "V1_", ",", 
    "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",", "\[Kappa]2_", 
    ",", "V2_", ",", "\[Rho]3_", ",", "\[Lambda]v3_", ",", "\[Theta]v3_", ",",
     "\[Kappa]3_", ",", "V3_", ",", "\[Alpha]2_", ",", "\[Beta]2_", ",", 
    "\[IndentingNewLine]", "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_", ",", 
      "startmonitortime_", ",", "plafondexplosion_", ",", "initialTailFlag_", 
      ",", "InitialTailPosition_", ",", "InitialTailPosition2_"}], "}"}], ",",
     
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", "\[Epsilon]2_",
       ",", "kmax_", ",", "StartControl_", ",", "IncrementFactor_"}], "}"}], 
    ",", "printflag_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   FractionBox["2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "2"]], 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"as", ",", "res", ",", "res2", ",", 
       RowBox[{"Y", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "1"}], "]"}]}], "  ", ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\< S=\>\"", ",", 
           RowBox[{"S", " ", "//", " ", "MatrixForm"}], ",", 
           "\[IndentingNewLine]", "\"\< Process V1=\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<V1\>\"", ",", "V1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<\[Lambda]v1\>\"", ",", "\[Lambda]v1"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"\"\<\[Theta]v1\>\"", ",", "\[Theta]v1"}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"\"\<\[Kappa]1\>\"", ",", "\[Kappa]1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<\[Rho]1\>\"", ",", "\[Rho]1"}], "}"}]}], "}"}], 
            " ", "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
           "\"\< Process V2=\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<V2\>\"", ",", "V2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<\[Lambda]v2\>\"", ",", "\[Lambda]v2"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"\"\<\[Theta]v2\>\"", ",", "\[Theta]v2"}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"\"\<\[Kappa]2\>\"", ",", "\[Kappa]2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<\[Rho]2\>\"", ",", "\[Rho]2"}], "}"}]}], "}"}], 
            " ", "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
           "\"\< Process V3=\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<V3\>\"", ",", "V3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<\[Lambda]v2\>\"", ",", "\[Lambda]v3"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"\"\<\[Theta]v3\>\"", ",", "\[Theta]v3"}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"\"\<\[Kappa]3\>\"", ",", "\[Kappa]3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<\[Rho]3\>\"", ",", "\[Rho]3"}], "}"}]}], "}"}], 
            " ", "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
           "\"\< T=\>\"", ",", "\[Tau]"}], "]"}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Inner Integration\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<LegendreNbMain\>\"", ",", 
                RowBox[{"Length", "[", "LegendreCoef1", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<LegendreNbIncrement\>\"", ",", 
                RowBox[{"Length", "[", "LegendreCoef1n", "]"}]}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"\"\<IncrementNbMax\>\"", ",", "imax"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<InitialTailFlag\>\"", ",", "initialTailFlag"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<InitialTailLegendreNb\>\"", ",", 
                RowBox[{"Length", "[", "LegendreCoef2", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<PeriodMain\>\"", ",", "period1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<PeriodnIncrement\>\"", ",", "period1n"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"\"\<StoppingLevel\>\"", ",", "\[Epsilon]1"}], "}"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"\"\<AbcisseMaxValue\>\"", ",", "kmax"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<InitialTailUpperLimit\>\"", ",", "InitialTailPosition"}], 
               "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<ExplosionMonitoringStartAbcisse\>\"", ",", 
                "StartControl"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<ExplosionMonitoringMaxLevel\>\"", ",", 
                "IncrementFactor"}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"\"\<lambda1\>\"", ",", "\[Lambda]1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<lambda2\>\"", ",", "\[Lambda]2"}], "}"}]}], "}"}],
             " ", "//", " ", "MatrixForm"}], ",", "\[IndentingNewLine]", 
           "\"\<Outer Integration\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<LegendreNbMain\>\"", ",", 
                RowBox[{"Length", "[", "LegendreCoef2", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<LegendreNbIncrement\>\"", ",", 
                RowBox[{"Length", "[", "LegendreCoef1n", "]"}]}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"\"\<IncrementNbMax\>\"", ",", "imax"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<InitialTailFlag\>\"", ",", "initialTailFlag"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<InitialTailLegendreNb\>\"", ",", 
                RowBox[{"Length", "[", "LegendreCoef1", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<PeriodMain\>\"", ",", "period2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<PeriodnIncrement\>\"", ",", "period2n"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"\"\<StoppingLevel\>\"", ",", "\[Epsilon]2"}], "}"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"\"\<AbcisseMaxValue\>\"", ",", "kmax"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<InitialTailUpperLimit\>\"", ",", "InitialTailPosition"}], 
               "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<GrowingControlStartAbcisse\>\"", ",", 
                "startmonitortime"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<GrowingControlMaxFactor\>\"", ",", "plafondexplosion"}], 
               "}"}]}], "}"}], " ", "//", " ", "MatrixForm"}]}], "]"}]}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "2"}], " ", "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "2"}], "]"}]}], "  ", ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<BiSuperHestonFondamentalTransform[\[Rho]1,\[Lambda]v1,\[Theta]\
v1,\[Kappa]1,V1,\[Rho]2,\[Lambda]v2,\[Theta]v2,\[Kappa]2,V2,\[Rho]3,\[Lambda]\
v3,\[Theta]v3,\[Kappa]3,V3,Z1,Z2,\[Tau]]=\>\"", ",", 
           RowBox[{"BiSuperHestonFondamentalTransform", "[", 
            RowBox[{
            "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
             "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", 
             "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", 
             "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", 
             ",", "\[Alpha]2", ",", "\[Beta]2", ",", "0.1", ",", "0.1", ",", 
             "\[Tau]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<integrand(0.1,0.1)=\>\"", ",", 
           RowBox[{"SmileSymetrizedBiSuperHestonVanillaIntegrandCC", "[", 
            RowBox[{
            "Y", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
             "KList", ",", "\[Tau]", ",", "\[Rho]1", ",", "\[Lambda]v1", ",", 
             "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", 
             "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", 
             ",", "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", 
             "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", "\[Beta]2", ",", 
             "\[Lambda]1", ",", "\[Lambda]2", ",", "0.1", ",", "0.1"}], 
            "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "4"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "4"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"SmileSymetrizedBiSuperHestonVanillaIntegrandCC", "[", 
               RowBox[{
               "Y", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"KList", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", "\[Tau]", ",", 
                "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
                "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", 
                ",", "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", 
                "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", 
                "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", "\[Beta]2", 
                ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                "\[Omega]2"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", " ", ",", 
               RowBox[{"2", "period1"}]}], "}"}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"\"\<1st Inverse Fourier: K =\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"KList", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
               "\"\< \[Omega]1=\>\"", "<>", 
               RowBox[{"ToString", "[", "\[Omega]1", "]"}]}]}]}], "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.2", ",", "2"}], "}"}]}], "}"}]}], "]"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "5"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "5"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"SmileSymetrizedBiSuperHestonVanillaIntegrandCC", "[", 
               RowBox[{
               "Y", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"KList", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", "\[Tau]", ",", 
                "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
                "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", 
                ",", "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", 
                "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", 
                "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", "\[Beta]2", 
                ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                "\[Omega]2"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", " ", ",", 
               RowBox[{"2", "period1"}]}], "}"}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"\"\<1st Inverse Fourier: K =\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"KList", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
               "\"\< \[Omega]1=\>\"", "<>", 
               RowBox[{"ToString", "[", "\[Omega]1", "]"}]}]}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.2", ",", "2"}], "}"}]}], "}"}]}], "]"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "6"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "6"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", 
               RowBox[{
                RowBox[{"VectorAdaptativeIntegrateExplosionSafe", "[", 
                 RowBox[{
                  RowBox[{"Function", "[", 
                   RowBox[{"\[Omega]1", ",", 
                    RowBox[{
                    RowBox[{
                    "SmileSymetrizedBiSuperHestonVanillaIntegrandCC", "[", 
                    RowBox[{
                    "Y", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", 
                    "b", ",", 
                    RowBox[{"{", 
                    RowBox[{"KList", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", "\[Tau]", ",",
                     "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
                    "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", 
                    "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", ",", 
                    "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
                    "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", 
                    "\[Alpha]2", ",", "\[Beta]2", ",", "\[Lambda]1", ",", 
                    "\[Lambda]2", ",", "\[Omega]1", ",", "\[Omega]2"}], "]"}],
                     "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                  "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",",
                   "period1n", ",", "\[Epsilon]1", ",", "imax", ",", "1", ",",
                   "startmonitortime", ",", "plafondexplosion", ",", 
                  "initialTailFlag", ",", "InitialTailPosition"}], "]"}], "[",
                 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", ",", 
               RowBox[{"2", "period2"}], ",", 
               RowBox[{"period2", "/", "30"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<2nd Inverse Fourier:\>\""}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "7"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<integrand(0.1,0.1)=\>\"", ",", 
          RowBox[{"SmileSymetrizedBiSuperHestonVanillaIntegrandCC", "[", 
           RowBox[{
           "Y", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
            "KList", ",", "\[Tau]", ",", "\[Rho]1", ",", "\[Lambda]v1", ",", 
            "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", 
            "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", 
            ",", "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", 
            "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", "\[Beta]2", ",", 
            "\[Lambda]1", ",", "\[Lambda]2", ",", "0.1", ",", "0.1"}], 
           "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "7"}], "]"}]}], " ", ",", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<code integ 2 : \
{i,exploded<1,Abs[increment[[1]]]>\[Epsilon],(i<imax)}\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
         "Print", "[", 
          "\"\<code integ 1 : \
{i,exploded<1,Abs[increment[[1]]]>\[Epsilon],(i<imax)}\>\"", "]"}]}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"VectorAdaptativeIntegrateUnprotected", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"\[Omega]2", ",", 
           RowBox[{
            RowBox[{"as", "=", 
             RowBox[{"VectorAdaptativeIntegrateExplosionSafe", "[", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{"\[Omega]1", ",", 
                 RowBox[{
                 "SmileSymetrizedBiSuperHestonVanillaIntegrandCC", "[", 
                  RowBox[{
                  "Y", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", 
                   ",", "KList", ",", "\[Tau]", ",", "\[Rho]1", ",", 
                   "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
                   "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", 
                   "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", 
                   ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", 
                   ",", "V3", ",", "\[Alpha]2", ",", "\[Beta]2", ",", 
                   "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                   "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
               "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
               "\[Epsilon]1", ",", "imax", ",", 
               RowBox[{"Length", "[", "KList", "]"}], ",", "startmonitortime",
                ",", "plafondexplosion", ",", "initialTailFlag", ",", 
               "InitialTailPosition"}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"printflag", ",", "7"}], "]"}]}], ",", 
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<\[Omega]2=\>\"", ",", "\[Omega]2", ",", 
                "\"\< Integ_2=\>\"", ",", "as"}], "]"}]}], "]"}], ";", 
            RowBox[{"as", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", "LegendreCoef2", 
         ",", "LegendreCoef1n", ",", "period2", ",", "period2n", ",", 
         "\[Epsilon]2", ",", "imax", ",", 
         RowBox[{"Length", "[", "KList", "]"}], ",", "printflag", ",", 
         "initialTailFlag", ",", "InitialTailPosition2", ",", "kmax", ",", 
         "StartControl", ",", "IncrementFactor"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "7"}], "]"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Integ_1=\>\"", ",", "res"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.3997288601267104`*^9, 3.39972890803388*^9, {3.3997289692069297`*^9, 
   3.3997289944261637`*^9}, {3.399729087443575*^9, 3.3997291578199263`*^9}, {
   3.399729214633517*^9, 3.3997292559936857`*^9}, {3.399729338917153*^9, 
   3.399729443137904*^9}, {3.3997297921289797`*^9, 3.399729801332281*^9}, 
   3.3997984631978292`*^9, 3.3997986822957864`*^9, {3.399799475623518*^9, 
   3.3997994825611515`*^9}, {3.399813039024555*^9, 3.3998130523841867`*^9}, {
   3.3998138111956306`*^9, 3.399813818523896*^9}, {3.3998138975254135`*^9, 
   3.3998139300104117`*^9}, {3.399814002074295*^9, 3.3998140680286865`*^9}, {
   3.3998141794214506`*^9, 3.399814187827862*^9}, {3.3998161633189154`*^9, 
   3.399816166818983*^9}, {3.399816989678531*^9, 3.39981701069456*^9}, {
   3.3998175772210617`*^9, 3.3998175797054844`*^9}, {3.3998177980534267`*^9, 
   3.3998178039285393`*^9}, 3.3998191717048006`*^9, {3.399819229424659*^9, 
   3.399819249925052*^9}, {3.3998192996916327`*^9, 3.3998193255202537`*^9}, {
   3.3998194002404385`*^9, 3.399819401990472*^9}, {3.399819437022394*^9, 
   3.399819443678772*^9}, {3.3998195847752314`*^9, 3.3998195956035643`*^9}, {
   3.3998937261423693`*^9, 3.3998937440645885`*^9}, {3.399894673945778*^9, 
   3.3998946780865884`*^9}, 3.399895357951172*^9, {3.3998971752360635`*^9, 
   3.399897202986596*^9}, {3.399995099817901*^9, 3.3999951242558703`*^9}, {
   3.3999951653972855`*^9, 3.3999952424143887`*^9}, {3.399995434089944*^9, 
   3.3999954559809895`*^9}, 3.400214359554536*^9, {3.4002194753715076`*^9, 
   3.4002194862310915`*^9}, {3.400221264780864*^9, 3.400221267812172*^9}, {
   3.400221324438259*^9, 3.4002213249851446`*^9}, {3.4002307045682325`*^9, 
   3.4002307106777253`*^9}, {3.4002309417446613`*^9, 
   3.4002309457603636`*^9}, {3.4002355676772275`*^9, 
   3.4002356840075865`*^9}, {3.4002357813375797`*^9, 3.400235782228222*^9}, {
   3.400238239244146*^9, 3.40023824052542*^9}, {3.4004065560321016`*^9, 
   3.400406572266788*^9}, 3.40040661272069*^9, {3.400406710910075*^9, 
   3.400406802349331*^9}, {3.4004079962316275`*^9, 3.400408003981776*^9}, {
   3.4004080367167797`*^9, 3.400408037591797*^9}, {3.400408141500042*^9, 
   3.4004081422656813`*^9}, 3.400504474791651*^9, {3.4008198209228888`*^9, 
   3.4008198369544463`*^9}, {3.401177200473509*^9, 3.401177296365975*^9}, 
   3.4011776191065464`*^9, 3.4011776885297546`*^9, {3.4011777732345057`*^9, 
   3.4011777815627904`*^9}, {3.4015301347651124`*^9, 3.401530142671514*^9}, {
   3.4015342195318975`*^9, 3.4015342774861345`*^9}, {3.4015343731285963`*^9, 
   3.4015343749255056`*^9}, {3.402033437670154*^9, 3.402033457561161*^9}, {
   3.4020334928118377`*^9, 3.402033502483898*^9}, {3.402143403333747*^9, 
   3.402143421193465*^9}, {3.402143489991661*^9, 3.40214349125731*^9}, {
   3.402143653151044*^9, 3.4021436941674557`*^9}, {3.402205803123693*^9, 
   3.402205848499564*^9}, {3.402294611715026*^9, 3.4022946131681786`*^9}, 
   3.402294775718175*^9, {3.4022949263773174`*^9, 3.4022949270960813`*^9}, 
   3.4023779225819693`*^9, 3.402388039487956*^9, 3.4023881114109564`*^9, 
   3.403871476831417*^9, 3.403871589333577*^9, {3.403871732195695*^9, 
   3.4038719361371107`*^9}, 3.40387197021589*^9, {3.4038729130621176`*^9, 
   3.403872917359075*^9}, {3.4038732665532794`*^9, 3.4038732913350053`*^9}, {
   3.40387338716497*^9, 3.403873392790078*^9}, {3.4038739059561806`*^9, 
   3.403873929300379*^9}, {3.4038757265536356`*^9, 3.403875727100521*^9}, {
   3.4038760173873444`*^9, 3.403876028450057*^9}, {3.4038767128225718`*^9, 
   3.4038767355730085`*^9}, {3.403876883685227*^9, 3.403876894872942*^9}, 
   3.4038770811577682`*^9, {3.403877262489375*^9, 3.403877296927536*^9}, {
   3.4038779003609967`*^9, 3.4038779017516484`*^9}, {3.403877950330706*^9, 
   3.403877995722203*^9}, {3.4038805669746947`*^9, 3.4038805816156006`*^9}, {
   3.403940196949411*^9, 3.403940212309081*^9}, {3.4039402503098106`*^9, 
   3.403940330483225*^9}, {3.403940565097104*^9, 3.4039406320983906`*^9}, {
   3.4039477736886315`*^9, 3.4039478349866834`*^9}, 3.403947942238743*^9, {
   3.4039479736924715`*^9, 3.403948027771635*^9}, 3.403948162852353*^9, {
   3.4039491169487963`*^9, 3.4039491206988688`*^9}, {3.4039492631391034`*^9, 
   3.4039493470938406`*^9}, {3.4039496376931696`*^9, 3.403949723882324*^9}, {
   3.4039498424783516`*^9, 3.4039499998719983`*^9}, {3.404147952397335*^9, 
   3.404147980680135*^9}, {3.404148073983735*^9, 3.404148107492535*^9}, {
   3.404148258531735*^9, 3.4041482678605347`*^9}, {3.404148945009735*^9, 
   3.404148946164135*^9}, {3.4041489846337347`*^9, 3.404149017549735*^9}, {
   3.404149060200135*^9, 3.404149083178935*^9}, {3.404151307641535*^9, 
   3.404151309185935*^9}, {3.404151474499135*^9, 3.404151483219535*^9}, 
   3.404151568223935*^9, 3.4041938717523823`*^9, {3.404193912175033*^9, 
   3.404193917190755*^9}, {3.4042041069801445`*^9, 3.4042041521685123`*^9}, {
   3.4042042123415427`*^9, 3.4042042386076717`*^9}, {3.404204276624027*^9, 
   3.4042044284238167`*^9}, {3.40420452156623*^9, 3.4042045494573903`*^9}, {
   3.404204582895532*^9, 3.4042046181149583`*^9}, {3.404204788415103*^9, 
   3.4042048062748213`*^9}, {3.404204841759877*^9, 3.4042048723542147`*^9}, {
   3.404204936324193*^9, 3.4042052265172644`*^9}, {3.4042052790182724`*^9, 
   3.4042052894403477`*^9}, {3.404205340738208*^9, 3.4042053679418545`*^9}, {
   3.404205400817486*^9, 3.404205419677223*^9}, {3.4042054802252607`*^9, 
   3.404205497178711*^9}, 3.40420552863244*^9, {3.4042072185555105`*^9, 
   3.404207235243331*^9}, {3.4043000701119347`*^9, 3.4043000786295347`*^9}, {
   3.4043001168183346`*^9, 3.4043001401871347`*^9}, {3.4043234063901434`*^9, 
   3.404323420461344*^9}, {3.4043237408853436`*^9, 3.4043237568753433`*^9}, {
   3.4043239580841436`*^9, 3.4043239680837436`*^9}, {3.404389056089944*^9, 
   3.404389064997544*^9}, {3.4044553143383374`*^9, 3.4044553173471303`*^9}, {
   3.404464727328169*^9, 3.4044647793115463`*^9}, {3.4044648634193068`*^9, 
   3.404464895731186*^9}, 3.404464939995961*^9, {3.404466809225696*^9, 
   3.404466820006739*^9}, 3.4044669271765566`*^9, {3.404470193535716*^9, 
   3.404470194207578*^9}, {3.404652102174907*^9, 3.4046521218471603`*^9}, {
   3.404662523952945*^9, 3.4046625707061453`*^9}, {3.4046627912433453`*^9, 
   3.404662802490945*^9}, {3.4046642321459455`*^9, 3.404664234080345*^9}, {
   3.4046642723003454`*^9, 3.404664298679945*^9}, {3.4047349612907963`*^9, 
   3.4047350190586395`*^9}, 3.4048112009093513`*^9, {3.4048112843813066`*^9, 
   3.404811295334852*^9}, {3.4048122778100777`*^9, 3.4048123057486506`*^9}, 
   3.404826576562254*^9, {3.4048266892697067`*^9, 3.404826703692135*^9}, {
   3.404831024244785*^9, 3.404831026635502*^9}, {3.4049792115931997`*^9, 
   3.4049792117922*^9}, {3.405087246152504*^9, 3.4050872465900154`*^9}, {
   3.4057874400886683`*^9, 3.4057874406668043`*^9}, {3.4058685558066044`*^9, 
   3.4058685559941077`*^9}, {3.405868666058721*^9, 3.405868666511855*^9}, {
   3.405870801146589*^9, 3.405870805568549*^9}, {3.4059348794306903`*^9, 
   3.405934879477566*^9}, {3.405935341189556*^9, 3.405935371252633*^9}, 
   3.4059358268238797`*^9, {3.405936151048855*^9, 3.4059361524238815`*^9}, {
   3.4064685458853703`*^9, 3.406468599871127*^9}, {3.406468673951149*^9, 
   3.4064686899671836`*^9}, {3.406542078362503*^9, 3.406542081112573*^9}, {
   3.40654334195735*^9, 3.4065433446292934`*^9}, {3.4065549038588*^9, 
   3.4065549048275747`*^9}, 3.406557370890704*^9, {3.4065579994692955`*^9, 
   3.406558026516863*^9}, {3.4065582133810215`*^9, 3.4065582157873335`*^9}, {
   3.406562183092019*^9, 3.406562199811197*^9}, 3.406612023137294*^9, {
   3.40661206652903*^9, 3.406612068169697*^9}, {3.4069594399533267`*^9, 
   3.4069594454690576`*^9}, 3.406959819101231*^9, 3.4069686605366087`*^9, 
   3.4069734408940144`*^9, {3.407048476521969*^9, 3.4070484922566457`*^9}, {
   3.407585769727401*^9, 3.4075857710964007`*^9}, {3.4075863558724008`*^9, 
   3.4075863657104006`*^9}, {3.4078516893378*^9, 3.4078517913258*^9}, 
   3.4078519658627996`*^9, {3.408424092344942*^9, 3.408424296036353*^9}, {
   3.408425129099222*^9, 3.4084252504609275`*^9}, {3.4084253248998566`*^9, 
   3.40842549616877*^9}, 3.4084275721773787`*^9, {3.408429774125905*^9, 
   3.40842977464154*^9}, {3.408860450850463*^9, 3.4088604617881727`*^9}, {
   3.4088605178361235`*^9, 3.4088608449049034`*^9}, {3.408860975360533*^9, 
   3.4088609932046256`*^9}, {3.4088610402055283`*^9, 
   3.4088610479869275`*^9}, {3.4088610876283135`*^9, 
   3.4088610907064977`*^9}, {3.40886114003557*^9, 3.4088611418012285`*^9}, {
   3.4088612225371537`*^9, 3.4088612988354936`*^9}, 3.408861353711547*^9, {
   3.408861393993571*^9, 3.408861409696997*^9}, 3.4088628404119663`*^9, {
   3.408864386004141*^9, 3.408864407238924*^9}, {3.4089680771965632`*^9, 
   3.4089680778997016`*^9}, {3.409742415520429*^9, 3.4097425036994295`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Handling of (K > 0 or K < 0) and (\[Beta] or Q input)\
\>", "Subsubtitle",
 CellChangeTimes->{{3.404641877166887*^9, 3.4046419260584507`*^9}, {
  3.4046422780339584`*^9, 3.4046423090970545`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SmileBiSuperHestonVanillaPositiveK", "[", 
   RowBox[{
   "S_", ",", "\[Alpha]1_", ",", "\[Beta]1_", ",", "a_", ",", "b_", ",", 
    "KList_", ",", "\[Tau]_", ",", "\[IndentingNewLine]", "\[Rho]1_", ",", 
    "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", ",", "V1_", ",", 
    "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",", "\[Kappa]2_", 
    ",", "V2_", ",", "\[Rho]3_", ",", "\[Lambda]v3_", ",", "\[Theta]v3_", ",",
     "\[Kappa]3_", ",", "V3_", ",", "\[Alpha]2_", ",", "\[Beta]2_", ",", 
    "\[IndentingNewLine]", "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_", ",", 
      "startmonitortime_", ",", "plafondexplosion_", ",", "initialTailFlag_", 
      ",", "InitialTailPosition_", ",", "InitialTailPosition2_"}], "}"}], ",",
     
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", "\[Epsilon]2_",
       ",", "kmax_", ",", "StartControl_", ",", "IncrementFactor_"}], "}"}], 
    ",", "printflag_"}], "]"}], ":=", 
  RowBox[{"SmileBiSuperHestonVanillaAux", "[", 
   RowBox[{
   "S", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", "KList", 
    ",", "\[Tau]", ",", "\[IndentingNewLine]", "\[Rho]1", ",", "\[Lambda]v1", 
    ",", "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", 
    "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", 
    "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", 
    "V3", ",", "\[Alpha]2", ",", "\[Beta]2", ",", "\[IndentingNewLine]", 
    "\[Lambda]1", ",", "\[Lambda]2", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n", 
      ",", "\[Epsilon]1", ",", "imax", ",", "startmonitortime", ",", 
      "plafondexplosion", ",", "initialTailFlag", ",", "InitialTailPosition", 
      ",", "InitialTailPosition2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2", 
      ",", "kmax", ",", "StartControl", ",", "IncrementFactor"}], "}"}], ",", 
    "printflag"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399897194377056*^9, 3.399897245940546*^9}, {
   3.3998976692611732`*^9, 3.3998976795269957`*^9}, {3.4002144512750473`*^9, 
   3.4002144569782815`*^9}, {3.400238263213356*^9, 3.400238300573448*^9}, {
   3.400408049201395*^9, 3.4004080510451803`*^9}, 3.400504474791651*^9, {
   3.4005667653701477`*^9, 3.400566798886416*^9}, {3.400819839626373*^9, 
   3.4008198425014277`*^9}, {3.4009134614843187`*^9, 
   3.4009134792034087`*^9}, {3.4009135487047434`*^9, 3.400913581252243*^9}, {
   3.4009136129872274`*^9, 3.4009136377220774`*^9}, {3.4009136698945704`*^9, 
   3.400913678910368*^9}, {3.400913713848539*^9, 3.400913720848673*^9}, {
   3.4009138946020093`*^9, 3.400913904914707*^9}, {3.40091789471006*^9, 
   3.400917899053893*^9}, {3.400921389214653*^9, 3.4009214402156324`*^9}, {
   3.400921492029127*^9, 3.4009215467489276`*^9}, {3.4009217594717617`*^9, 
   3.4009217705500994`*^9}, {3.401110611225083*^9, 3.4011106255847335`*^9}, {
   3.4011155613669987`*^9, 3.4011155856330895`*^9}, {3.401425790206461*^9, 
   3.401425813269404*^9}, {3.402046069834562*^9, 3.40204607210023*^9}, {
   3.4022357520580764`*^9, 3.4022357573706784`*^9}, {3.4022370965213895`*^9, 
   3.4022371025371304`*^9}, {3.402294637481146*^9, 3.4022946494188747`*^9}, {
   3.4022947595616145`*^9, 3.4022948086094313`*^9}, {3.4022949118926644`*^9, 
   3.4022949123770485`*^9}, 3.4022950944274187`*^9, {3.4023880298479567`*^9, 
   3.4023880317599564`*^9}, {3.403871467549989*^9, 3.4038715521922393`*^9}, {
   3.4038772034257407`*^9, 3.4038772338482*^9}, {3.4038778690791464`*^9, 
   3.4038778880951366`*^9}, {3.403877923330188*^9, 3.403877959690261*^9}, {
   3.403880525208268*^9, 3.403880528802087*^9}, {3.4039401668863335`*^9, 
   3.403940181277235*^9}, {3.403940658427021*^9, 3.403940660661439*^9}, 
   3.403940704459155*^9, {3.403947868049818*^9, 3.4039479096443667`*^9}, {
   3.404148916726935*^9, 3.404148924370935*^9}, {3.4041938566583424`*^9, 
   3.4041938600646577`*^9}, {3.4043010082023344`*^9, 3.404301032195134*^9}, {
   3.404301326445134*^9, 3.4043013377707343`*^9}, {3.4044640641065283`*^9, 
   3.404464086512348*^9}, {3.4044642317595596`*^9, 3.4044642428374715`*^9}, {
   3.404464285946019*^9, 3.4044643278983383`*^9}, {3.4044660317874985`*^9, 
   3.404466040881074*^9}, 3.4044661178795953`*^9, {3.404652033251709*^9, 
   3.4046520563146515`*^9}, 3.404811189237028*^9, 3.404811270615153*^9, 
   3.4048265897658854`*^9, 3.4048266716909065`*^9, 3.406469404844859*^9, 
   3.406470124910167*^9, 3.4065573404368*^9, {3.406558170583051*^9, 
   3.406558173301871*^9}, {3.4066126435750513`*^9, 3.4066126576691628`*^9}, 
   3.4069598513674755`*^9, {3.4069605121301622`*^9, 3.4069605220522275`*^9}, {
   3.4088614763076515`*^9, 3.4088614879953756`*^9}, {3.4088615211053863`*^9, 
   3.4088615308399477`*^9}, {3.4088616069820347`*^9, 
   3.4088616184666305`*^9}, {3.4097425144524293`*^9, 3.4097425286174293`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SmileBiSuperHestonVanillaNegativeK", "[", 
   RowBox[{
   "S_", ",", "\[Alpha]1_", ",", "\[Beta]1_", ",", "a_", ",", "b_", ",", 
    "KList_", ",", "\[Tau]_", ",", "\[IndentingNewLine]", "\[Rho]1_", ",", 
    "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", ",", "V1_", ",", 
    "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",", "\[Kappa]2_", 
    ",", "V2_", ",", "\[Rho]3_", ",", "\[Lambda]v3_", ",", "\[Theta]v3_", ",",
     "\[Kappa]3_", ",", "V3_", ",", "\[Alpha]2_", ",", "\[Beta]2_", ",", 
    "\[IndentingNewLine]", "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_", ",", 
      "startmonitortime_", ",", "plafondexplosion_", ",", "initialTailFlag_", 
      ",", "InitialTailPosition_", ",", "InitialTailPosition2_"}], "}"}], ",",
     
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", "\[Epsilon]2_",
       ",", "kmax_", ",", "StartControl_", ",", "IncrementFactor_"}], "}"}], 
    ",", "printflag_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"SmileBiSuperHestonVanillaAux", "[", 
    RowBox[{
    "S", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", "KList", 
     ",", "\[Tau]", ",", "\[IndentingNewLine]", "\[Rho]1", ",", "\[Lambda]v1",
      ",", "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", 
     "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", 
     "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", 
     "V3", ",", "\[Alpha]2", ",", "\[Beta]2", ",", "\[IndentingNewLine]", 
     "\[Lambda]1", ",", "\[Lambda]2", ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n",
        ",", "\[Epsilon]1", ",", "imax", ",", "startmonitortime", ",", 
       "plafondexplosion", ",", "initialTailFlag", ",", "InitialTailPosition",
        ",", "InitialTailPosition2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2", 
       ",", "kmax", ",", "StartControl", ",", "IncrementFactor"}], "}"}], ",",
      "printflag"}], "]"}], "+", 
   RowBox[{"S", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "-", 
   RowBox[{"S", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "-", "KList"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399897194377056*^9, 3.399897245940546*^9}, {
   3.3998976692611732`*^9, 3.3998976795269957`*^9}, {3.4002144512750473`*^9, 
   3.4002144569782815`*^9}, {3.400238263213356*^9, 3.400238300573448*^9}, {
   3.400408049201395*^9, 3.4004080510451803`*^9}, 3.400504474791651*^9, {
   3.4005667653701477`*^9, 3.400566798886416*^9}, {3.400819839626373*^9, 
   3.4008198425014277`*^9}, {3.4009134614843187`*^9, 
   3.4009134792034087`*^9}, {3.4009135487047434`*^9, 3.400913581252243*^9}, {
   3.4009136129872274`*^9, 3.4009136377220774`*^9}, {3.4009136698945704`*^9, 
   3.400913678910368*^9}, {3.400913713848539*^9, 3.400913720848673*^9}, {
   3.4009138946020093`*^9, 3.400913904914707*^9}, {3.40091789471006*^9, 
   3.400917899053893*^9}, {3.400921389214653*^9, 3.4009214402156324`*^9}, {
   3.400921492029127*^9, 3.4009215467489276`*^9}, {3.4009217594717617`*^9, 
   3.4009217705500994`*^9}, {3.401110611225083*^9, 3.4011106255847335`*^9}, {
   3.4011155613669987`*^9, 3.4011155856330895`*^9}, {3.401425790206461*^9, 
   3.401425813269404*^9}, {3.402046069834562*^9, 3.40204607210023*^9}, {
   3.4022357520580764`*^9, 3.4022357573706784`*^9}, {3.4022370965213895`*^9, 
   3.4022371025371304`*^9}, {3.402294637481146*^9, 3.4022946494188747`*^9}, {
   3.4022947595616145`*^9, 3.4022948086094313`*^9}, {3.402294889173478*^9, 
   3.402294916033369*^9}, 3.4022950990368824`*^9, {3.402301718929607*^9, 
   3.4023017207108912`*^9}, {3.4023166196688204`*^9, 3.402316620778217*^9}, {
   3.4023784653580155`*^9, 3.402378488030326*^9}, {3.402388034046956*^9, 
   3.4023880365689564`*^9}, {3.402388095676956*^9, 3.4023880963469563`*^9}, {
   3.4038714736126056`*^9, 3.4038714752220116`*^9}, {3.4038715635049562`*^9, 
   3.4038715747395473`*^9}, {3.4038772479109697`*^9, 3.40387725705177*^9}, {
   3.403877876657417*^9, 3.403877881095002*^9}, {3.403877937096077*^9, 
   3.4038779566120768`*^9}, {3.403880536192854*^9, 3.403880540802317*^9}, {
   3.403940184714801*^9, 3.403940192839957*^9}, {3.403940656239479*^9, 
   3.403940684099389*^9}, {3.403947936582384*^9, 3.4039479660829506`*^9}, {
   3.404148930517335*^9, 3.404148938223735*^9}, {3.404193865752267*^9, 
   3.4041938692054586`*^9}, {3.4042073013852262`*^9, 3.404207330682664*^9}, {
   3.4043000073687344`*^9, 3.4043000324223347`*^9}, {3.4044076957679477`*^9, 
   3.4044077049251475`*^9}, 3.404455930502843*^9, {3.4044640827467957`*^9, 
   3.404464111324372*^9}, 3.4044642071819067`*^9, 3.4044642538685102`*^9, 
   3.4044642954458365`*^9, {3.4044643395543647`*^9, 3.4044643561634207`*^9}, {
   3.404466044131011*^9, 3.4044660707867494`*^9}, 3.404469943181148*^9, {
   3.4046520351579957`*^9, 3.4046520543458643`*^9}, 3.4048111917058725`*^9, 
   3.404811272677732*^9, 3.4048265875783014`*^9, 3.404826673628481*^9, 
   3.4064694071105423`*^9, 3.406470128582136*^9, 3.406557345827563*^9, {
   3.406558179848913*^9, 3.4065581827708635`*^9}, {3.4066126617786427`*^9, 
   3.406612675013356*^9}, 3.4069598684771795`*^9, 3.40696053727127*^9, {
   3.4088614924642115`*^9, 3.408861495933028*^9}, {3.40886153798071*^9, 
   3.4088615504028234`*^9}, {3.408861611872754*^9, 3.4088616230448437`*^9}, {
   3.409742534185429*^9, 3.409742543306429*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["High Level interface", "Subsubtitle",
 CellChangeTimes->{{3.404642425693043*^9, 3.404642434083829*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SmileBiSuperHestonVanillaSpreadotion", "[", 
   RowBox[{
   "S_", ",", "\[Alpha]1_", ",", "\[Beta]1_", ",", "a_", ",", "b_", ",", 
    "KList1_", ",", "\[Tau]_", ",", "\[IndentingNewLine]", "\[Rho]1_", ",", 
    "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", ",", "V1_", ",", 
    "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",", "\[Kappa]2_", 
    ",", "V2_", ",", "\[Rho]3_", ",", "\[Lambda]v3_", ",", "\[Theta]v3_", ",",
     "\[Kappa]3_", ",", "V3_", ",", "\[Alpha]2_", ",", "\[Beta]2_", ",", 
    "\[IndentingNewLine]", "printflag_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "KList", ",", "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", 
      ",", "period1n", ",", "\[Epsilon]1", ",", "LegendreCoef2", ",", 
      "period2", ",", "period2n", ",", "\[Epsilon]2", ",", "imax", ",", 
      "\[Lambda]1", ",", "\[Lambda]2", ",", "KListPositive", ",", 
      "KListNegative", ",", 
      RowBox[{"KPositivePrices", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"KNegativePrices", "=", 
       RowBox[{"{", "}"}]}], ",", "prices", ",", "startmonitortime", ",", 
      "plafondexplosion", ",", "initialTailFlag", ",", "InitialTailPosition", 
      ",", "InitialTailPosition2", ",", "kmax", ",", "StartControl", ",", 
      "IncrementFactor", ",", "\[CapitalSigma]inf"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "KList1", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"KList", "=", 
        RowBox[{"{", "KList1", "}"}]}], ",", 
       RowBox[{"KList", "=", "KList1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
          "period1n", ",", "\[Epsilon]1", ",", "startmonitortime", ",", 
          "plafondexplosion", ",", "initialTailFlag", ",", 
          "InitialTailPosition", ",", "InitialTailPosition2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2",
           ",", "kmax", ",", "StartControl", ",", "IncrementFactor"}], "}"}], 
        ",", "imax", ",", "\[Lambda]1", ",", "\[Lambda]2"}], "}"}], "=", 
      RowBox[{"BiSuperHestonVanillaOptimalParameters", "[", 
       RowBox[{
       "S", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
        RowBox[{"KList", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[Tau]", ",", 
        "\[IndentingNewLine]", "\[Rho]1", ",", "\[Lambda]v1", ",", 
        "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", 
        "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", 
        "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", 
        ",", "V3", ",", "\[Alpha]2", ",", "\[Beta]2", ",", 
        "\[IndentingNewLine]", "\"\<VanillaSpreadoption\>\"", ",", 
        "printflag"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"KListPositive", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"KList", ",", 
        RowBox[{
         RowBox[{"#", "\[GreaterEqual]", "0"}], "&"}]}], "]"}]}], ";", 
     RowBox[{"KListNegative", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"KList", ",", 
        RowBox[{
         RowBox[{"#", "<", "0"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "KListPositive", "]"}], ">", "0"}], ",", 
       RowBox[{"KPositivePrices", "=", 
        RowBox[{"SmileBiSuperHestonVanillaPositiveK", "[", 
         RowBox[{
         "S", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
          "KListPositive", ",", "\[Tau]", ",", "\[IndentingNewLine]", 
          "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
          ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
          ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
          ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", 
          ",", "\[Beta]2", ",", "\[IndentingNewLine]", "\[Lambda]1", ",", 
          "\[Lambda]2", ",", 
          RowBox[{"{", 
           RowBox[{
           "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
            "period1n", ",", "\[Epsilon]1", ",", "imax", ",", 
            "startmonitortime", ",", "plafondexplosion", ",", 
            "initialTailFlag", ",", "InitialTailPosition", ",", 
            "InitialTailPosition2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
            "\[Epsilon]2", ",", "kmax", ",", "StartControl", ",", 
            "IncrementFactor"}], "}"}], ",", "printflag"}], "]"}]}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"printflag", "\[Equal]", "1"}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", " ", ",", "1"}], "]"}], ")"}]}], ",", 
       RowBox[{"Print", "[", "\"\<Fin partie positive\>\"", "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "KListNegative", "]"}], ">", "0"}], ",", 
       RowBox[{"KNegativePrices", "=", 
        RowBox[{"SmileBiSuperHestonVanillaNegativeK", "[", 
         RowBox[{
         "S", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
          "KListNegative", ",", "\[Tau]", ",", "\[IndentingNewLine]", 
          "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
          ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
          ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
          ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", 
          ",", "\[Beta]2", ",", "\[IndentingNewLine]", "\[Lambda]1", ",", 
          "\[Lambda]2", ",", 
          RowBox[{"{", 
           RowBox[{
           "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
            "period1n", ",", "\[Epsilon]1", ",", "imax", ",", 
            "startmonitortime", ",", "plafondexplosion", ",", 
            "initialTailFlag", ",", "InitialTailPosition", ",", 
            "InitialTailPosition2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
            "\[Epsilon]2", ",", "kmax", ",", "StartControl", ",", 
            "IncrementFactor"}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"printflag", ",", "1"}], "]"}], ",", 
            RowBox[{"Drop", "[", 
             RowBox[{"printflag", ",", "1"}], "]"}], ",", "printflag"}], 
           "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"prices", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"KNegativePrices", ",", "KPositivePrices"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Alpha]1", " ", 
           RowBox[{
            RowBox[{"S", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "^", "a"}]}], "-", 
          RowBox[{"\[Beta]1", " ", 
           RowBox[{
            RowBox[{"S", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "^", "b"}]}], "-", 
          RowBox[{"KList1", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", "0", ",", 
         RowBox[{"prices", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "KList1", "]"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4042074577632284`*^9, 3.4042074770760994`*^9}, {
   3.4042075328115444`*^9, 3.4042077538626633`*^9}, {3.404207970241818*^9, 
   3.404207993351637*^9}, {3.4042080286491895`*^9, 3.404208043665103*^9}, {
   3.4042173037335176`*^9, 3.4042173873444977`*^9}, {3.4042175109093704`*^9, 
   3.404217554472707*^9}, {3.4042999349691343`*^9, 3.4042999555923347`*^9}, {
   3.404381253215744*^9, 3.404381270172944*^9}, {3.4044634862113743`*^9, 
   3.4044635745846777`*^9}, {3.404463622474383*^9, 3.4044637577842846`*^9}, {
   3.4044637895649247`*^9, 3.4044638511887417`*^9}, {3.404463881485035*^9, 
   3.404463962092862*^9}, {3.4044646348143206`*^9, 3.4044646352830615`*^9}, {
   3.4044659090554795`*^9, 3.4044659091648526`*^9}, {3.404466252111393*^9, 
   3.4044662673767247`*^9}, {3.4044662976417685`*^9, 
   3.4044662980323863`*^9}, {3.4044673732461166`*^9, 
   3.4044673808397207`*^9}, {3.4046519546877003`*^9, 
   3.4046519750474663`*^9}, {3.4046528875181103`*^9, 3.404652993051387*^9}, 
   3.404811180721076*^9, {3.404811251817556*^9, 3.404811256317729*^9}, 
   3.404826602406996*^9, {3.4048266367520647`*^9, 3.4048266473149705`*^9}, {
   3.404838584300705*^9, 3.404838585847639*^9}, 3.405092320454278*^9, {
   3.405664986154463*^9, 3.405665079594355*^9}, {3.405665127720587*^9, 
   3.405665280114807*^9}, 3.405665328600113*^9, {3.406309714793578*^9, 
   3.406309844411578*^9}, {3.406309920658578*^9, 3.406309939960578*^9}, {
   3.406471623651659*^9, 3.4064716512929916`*^9}, {3.4065572919668093`*^9, 
   3.4065573000451407`*^9}, {3.406612407397131*^9, 3.4066124373510227`*^9}, {
   3.406960300219844*^9, 3.4069603147826233`*^9}, {3.4070484093800545`*^9, 
   3.407048424458469*^9}, {3.4070568540421886`*^9, 3.4070568786207857`*^9}, 
   3.407583314664401*^9, {3.408861679389675*^9, 3.408861721390482*^9}, {
   3.4088620032708936`*^9, 3.4088620157711334`*^9}, {3.4088620513186913`*^9, 
   3.4088620973039494`*^9}, 3.408862692768507*^9, {3.4088734197088346`*^9, 
   3.4088734908195753`*^9}, {3.408889582941366*^9, 3.408889586410183*^9}, {
   3.409742552712429*^9, 3.4097425704494295`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Smart Parametrization", "Subsubtitle",
 CellChangeTimes->{{3.404383407939944*^9, 3.404383415193944*^9}, {
  3.404387350604344*^9, 3.404387351228344*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BiSuperHestonVanillaOptimalParameters", "[", 
    RowBox[{
    "S_", ",", "\[Alpha]1_", ",", "\[Beta]1_", ",", "a1_", ",", "b1_", ",", 
     "K_", ",", "\[Tau]_", ",", "\[IndentingNewLine]", "\[Rho]1_", ",", 
     "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", ",", "V1_", ",", 
     "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",", "\[Kappa]2_", 
     ",", "V2_", ",", "\[Rho]3_", ",", "\[Lambda]v3_", ",", "\[Theta]v3_", 
     ",", "\[Kappa]3_", ",", "V3_", ",", "\[Alpha]2_", ",", "\[Beta]2_", ",", 
     "\[IndentingNewLine]", "type_", ",", "printflag_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Lambda]1", ",", "\[Lambda]2", ",", "scope1", ",", "scope2", ",", 
       "Nb1", ",", "LegendreCoef1", ",", "Nb1n", ",", "LegendreCoef1n", ",", 
       "period1", ",", "period1n", ",", "\[Epsilon]1", ",", "Nb2", ",", 
       "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2", 
       ",", "imax", ",", 
       RowBox[{"s1", "=", 
        RowBox[{"S", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"S", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", "Rmax", ",", "smax", ",", 
       "smin", ",", 
       RowBox[{"forward", "=", 
        RowBox[{
         RowBox[{"S", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"S", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
       RowBox[{"scopeDivisor1", "=", "1"}], ",", 
       RowBox[{"scopeDivisor1n", "=", "1"}], ",", 
       RowBox[{"scopeDivisor2", "=", "1"}], ",", 
       RowBox[{"scopeDivisor2n", "=", "1"}], ",", "VolNb", ",", 
       "\[CapitalSigma]moyen", ",", "startmonitortime", ",", 
       "plafondexplosion", ",", "initialTailFlag", ",", "InitialTailPosition",
        ",", "InitialTailPosition2", ",", "kmax", ",", "StartControl", ",", 
       "IncrementFactor"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"type", "\[Equal]", "\"\<VanillaSpreadoption\>\""}], ")"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Lambda]1", "=", "1.1"}], ";", 
         RowBox[{"\[Lambda]2", "=", "1.01"}], ";", 
         RowBox[{"imax", "=", "10"}], ";", "\[IndentingNewLine]", 
         RowBox[{"period1", "=", "10"}], ";", 
         RowBox[{"period1n", "=", "5"}], ";", 
         RowBox[{"period2", "=", "10"}], ";", 
         RowBox[{"period2n", "=", "5."}], ";", "\[IndentingNewLine]", 
         RowBox[{"Nb1", "=", "50"}], ";", 
         RowBox[{"Nb2", "=", "50"}], ";", 
         RowBox[{"Nb1n", "=", "20"}], ";", 
         RowBox[{"\[Epsilon]1", "=", "0.000001"}], ";", 
         RowBox[{"\[Epsilon]2", "=", "0.00001"}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"startmonitortime", "=", "2"}], ";", "\[IndentingNewLine]", 
         RowBox[{"plafondexplosion", "=", "0.1"}], ";", "\[IndentingNewLine]",
          
         RowBox[{"initialTailFlag", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"InitialTailPosition", "=", "0.5"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"InitialTailPosition2", "=", "2"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"kmax", "=", "100"}], ";", "\[IndentingNewLine]", 
         RowBox[{"StartControl", "=", "20"}], ";", "\[IndentingNewLine]", 
         RowBox[{"IncrementFactor", "=", "2"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"LegendreCoef1", "=", 
       RowBox[{"LegendreCoeffs", "[", "Nb1", "]"}]}], ";", 
      RowBox[{"LegendreCoef1n", "=", 
       RowBox[{"LegendreCoeffs", "[", "Nb1n", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LegendreCoef2", "=", 
       RowBox[{"LegendreCoeffs", "[", "Nb2", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
          "period1n", ",", "\[Epsilon]1", ",", "startmonitortime", ",", 
          "plafondexplosion", ",", "initialTailFlag", ",", 
          "InitialTailPosition", ",", "InitialTailPosition2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2",
           ",", "kmax", ",", "StartControl", ",", "IncrementFactor"}], "}"}], 
        ",", "imax", ",", "\[Lambda]1", ",", "\[Lambda]2"}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.404206970488248*^9, 3.4042070773496747`*^9}, {
   3.4042071143347597`*^9, 3.404207163288825*^9}, {3.4042073815430155`*^9, 
   3.404207439044119*^9}, {3.404207590797033*^9, 3.404207592265811*^9}, 
   3.4042080218053083`*^9, {3.4042193238816786`*^9, 3.4042193956955576`*^9}, {
   3.40436125513815*^9, 3.40436146885815*^9}, {3.4043709412927437`*^9, 
   3.4043709917743435`*^9}, {3.404371410696744*^9, 3.4043714124127436`*^9}, {
   3.404379892022144*^9, 3.404379895844144*^9}, {3.4043802460173435`*^9, 
   3.4043802517737436`*^9}, {3.4043803816437435`*^9, 
   3.4043803864953437`*^9}, {3.4043809028397436`*^9, 3.4043809080657434`*^9}, 
   3.4043809481421437`*^9, {3.404380999793744*^9, 3.404381054456144*^9}, {
   3.404381172750944*^9, 3.404381179380944*^9}, {3.404383541148344*^9, 
   3.4043835467175436`*^9}, {3.404383602690344*^9, 3.404383683311144*^9}, {
   3.404384106032344*^9, 3.4043841829091434`*^9}, {3.404384406535144*^9, 
   3.404384450917144*^9}, {3.404384498013544*^9, 3.404384507451544*^9}, {
   3.4043845726907434`*^9, 3.404384583142744*^9}, {3.4043847152123437`*^9, 
   3.404384740219144*^9}, {3.4043847763331437`*^9, 3.4043848473755436`*^9}, {
   3.404386205314744*^9, 3.404386275155944*^9}, {3.404386399597144*^9, 
   3.4043864558039436`*^9}, {3.4043865184223437`*^9, 3.404386525738744*^9}, {
   3.4043865649883437`*^9, 3.404386677667144*^9}, {3.404386732969144*^9, 
   3.4043867353403435`*^9}, {3.404386773310744*^9, 3.4043868160859437`*^9}, {
   3.4043868745391436`*^9, 3.4043869154267435`*^9}, {3.4043869601207438`*^9, 
   3.404386988107144*^9}, {3.4043870432687435`*^9, 3.404387052067144*^9}, {
   3.404387084764744*^9, 3.404387091425944*^9}, {3.4043871566339436`*^9, 
   3.404387168817544*^9}, {3.404387511689944*^9, 3.4043875842299438`*^9}, {
   3.404387648158744*^9, 3.404387847885544*^9}, {3.404387887899544*^9, 
   3.404388043915144*^9}, {3.4043882453735437`*^9, 3.404388484942744*^9}, {
   3.4043886348431435`*^9, 3.404388660957544*^9}, {3.4043893521311436`*^9, 
   3.4043893973867435`*^9}, {3.4043894515187435`*^9, 3.404389466104744*^9}, {
   3.4044067113261476`*^9, 3.4044067667841473`*^9}, {3.4044068889789476`*^9, 
   3.4044068907573476`*^9}, {3.4044072635021477`*^9, 
   3.4044072769649477`*^9}, {3.4044097282983475`*^9, 
   3.4044097309971476`*^9}, {3.404409800947548*^9, 3.4044098049567475`*^9}, {
   3.404409863815548*^9, 3.4044098674347477`*^9}, {3.4044102178107476`*^9, 
   3.4044103703943477`*^9}, {3.4044105926007476`*^9, 3.404410596297948*^9}, {
   3.404410672410348*^9, 3.4044107208951473`*^9}, {3.4044108745083475`*^9, 
   3.4044108748827477`*^9}, {3.4044110777451477`*^9, 
   3.4044110782443476`*^9}, {3.4044112932123475`*^9, 
   3.4044113036175475`*^9}, {3.4044122671337476`*^9, 3.404412270830948*^9}, {
   3.4044129093205476`*^9, 3.4044129134389477`*^9}, {3.4044130657261477`*^9, 
   3.4044130661473475`*^9}, {3.4046440467710423`*^9, 
   3.4046440589900265`*^9}, {3.4046714034331455`*^9, 
   3.4046714322307453`*^9}, {3.4046714863783455`*^9, 3.404671526875945*^9}, {
   3.4046715679975452`*^9, 3.404671590477145*^9}, {3.404671833712345*^9, 
   3.4046718472687454`*^9}, {3.4046719060495453`*^9, 
   3.4046719070011454`*^9}, {3.4046720273083453`*^9, 
   3.4046720700679455`*^9}, {3.404672150080345*^9, 3.4046721506107454`*^9}, {
   3.4046737151951847`*^9, 3.404673726005985*^9}, {3.4046742811943846`*^9, 
   3.404674287418785*^9}, {3.404675072800785*^9, 3.404675088447585*^9}, {
   3.404722606195922*^9, 3.404722760024047*^9}, {3.404722792852172*^9, 
   3.404722828555297*^9}, {3.404722858742797*^9, 3.404722874555297*^9}, {
   3.404723026992797*^9, 3.404723070117797*^9}, {3.404723584805297*^9, 
   3.404723587024047*^9}, {3.404723625367797*^9, 3.404723724945922*^9}, {
   3.404724050649047*^9, 3.404724053367797*^9}, {3.404724126289672*^9, 
   3.404724126852172*^9}, {3.404724346508422*^9, 3.404724346930297*^9}, {
   3.404724412367797*^9, 3.404724419289672*^9}, {3.404724488524047*^9, 
   3.404724494805297*^9}, {3.404724536164672*^9, 3.404724536774047*^9}, {
   3.404724609961547*^9, 3.404724610539672*^9}, {3.404724649352172*^9, 
   3.404724649774047*^9}, {3.404724703289672*^9, 3.404724703774047*^9}, {
   3.404724779289672*^9, 3.404724779945922*^9}, {3.404724983289672*^9, 
   3.404724983899047*^9}, {3.404725141758422*^9, 3.404725142352172*^9}, {
   3.404725251883422*^9, 3.404725256133422*^9}, {3.404725730211547*^9, 
   3.404725741320922*^9}, {3.404725782539672*^9, 3.404725787180297*^9}, {
   3.4048120178000937`*^9, 3.4048120200814314`*^9}, {3.4048120540983624`*^9, 
   3.404812056098439*^9}, {3.4048385442679176`*^9, 3.404838552158846*^9}, {
   3.404904947785347*^9, 3.404905056907347*^9}, {3.404905142395347*^9, 
   3.4049051440801473`*^9}, {3.404905174234947*^9, 3.4049051748589473`*^9}, {
   3.4049055172009473`*^9, 3.4049055245485473`*^9}, 3.4049063731261473`*^9, {
   3.404906609076147*^9, 3.404906628732147*^9}, {3.405012915826548*^9, 
   3.405012918104148*^9}, {3.405013030954548*^9, 3.405013083635748*^9}, {
   3.4050131731641483`*^9, 3.4050131735541477`*^9}, {3.405013298931348*^9, 
   3.405013299321348*^9}, 3.405013387601748*^9, {3.405013672110948*^9, 
   3.4050136728441477`*^9}, {3.4050870992581186`*^9, 3.405087188244772*^9}, {
   3.4050919512885776`*^9, 3.405091970320315*^9}, {3.4050920588538313`*^9, 
   3.4050921463248205`*^9}, 3.4050922096076903`*^9, 3.4051008441777725`*^9, {
   3.405101549126173*^9, 3.4051015502649727`*^9}, {3.4051087689419727`*^9, 
   3.4051088029031725`*^9}, {3.4051474371040525`*^9, 3.405147460839035*^9}, {
   3.4051842251563773`*^9, 3.405184247214777*^9}, {3.405187762815177*^9, 
   3.4051877766835775`*^9}, {3.405782055391534*^9, 3.405782078766983*^9}, {
   3.405782198878664*^9, 3.405782204394395*^9}, {3.4057824962906246`*^9, 
   3.4057825771046762`*^9}, {3.405783004144125*^9, 3.4057830088004646`*^9}, {
   3.405783043926139*^9, 3.4057830526606817`*^9}, {3.4057831590064735`*^9, 
   3.4057831625846667`*^9}, {3.405783516450836*^9, 3.405783516575838*^9}, {
   3.405783929349388*^9, 3.405784011866598*^9}, {3.405784054867423*^9, 
   3.405784079633524*^9}, 3.40578411432169*^9, {3.405784210479786*^9, 
   3.4057842109016695`*^9}, {3.4057843172162104`*^9, 3.405784319935013*^9}, {
   3.4057847778969307`*^9, 3.4057847977098107`*^9}, {3.405785003104379*^9, 
   3.4057850043231525`*^9}, 3.4057850676681185`*^9, {3.4057855103328676`*^9, 
   3.405785511879772*^9}, {3.4057867328407145`*^9, 3.405786770700816*^9}, {
   3.4057868111234674`*^9, 3.4057868121234865`*^9}, {3.4057871768804903`*^9, 
   3.405787178099263*^9}, {3.405787230584646*^9, 3.405787263147771*^9}, {
   3.4057875294028835`*^9, 3.405787530106022*^9}, {3.4057881914155936`*^9, 
   3.405788191696849*^9}, {3.4057883580750437`*^9, 3.405788394403866*^9}, {
   3.4057891793408117`*^9, 3.405789195356744*^9}, {3.4057892624830327`*^9, 
   3.4057892632017965`*^9}, {3.405789299155612*^9, 3.4057893318593645`*^9}, {
   3.405789407485817*^9, 3.405789434064452*^9}, {3.4057904175989604`*^9, 
   3.4057904183802257`*^9}, {3.405790562195487*^9, 3.405790605321315*^9}, {
   3.405790662900545*^9, 3.4057906710257015`*^9}, {3.405790972484614*^9, 
   3.405790976969075*^9}, {3.4057911609569826`*^9, 3.4057911857230835`*^9}, {
   3.405791450275038*^9, 3.4057914535719757`*^9}, {3.405791800297383*^9, 
   3.4057918054537315`*^9}, {3.405791913112049*^9, 3.4057919187684073`*^9}, {
   3.4057919890197563`*^9, 3.405792019410965*^9}, {3.4057920545053883`*^9, 
   3.405792063396184*^9}, 3.4057921215535507`*^9, {3.4057922472278385`*^9, 
   3.405792247712223*^9}, {3.405792400855788*^9, 3.4057924013870487`*^9}, 
   3.40579245460682*^9, {3.405866783928835*^9, 3.405866820132655*^9}, {
   3.405868075906765*^9, 3.4058680763755245`*^9}, {3.40595621734037*^9, 
   3.4059562285124598`*^9}, {3.405956346905358*^9, 3.4059563475928707`*^9}, {
   3.4059572673136544`*^9, 3.405957283954599*^9}, {3.405957318814643*^9, 
   3.4059573194396553`*^9}, {3.40595880772317*^9, 3.4059588236319647`*^9}, {
   3.405959129540866*^9, 3.405959181560153*^9}, {3.4059599331644917`*^9, 
   3.405959941383399*^9}, {3.405960024916253*^9, 3.4059600408228083`*^9}, 
   3.405960080667323*^9, {3.4060284224102015`*^9, 3.406028441801199*^9}, {
   3.406028486442681*^9, 3.406028501755475*^9}, {3.4060285346936073`*^9, 
   3.4060285387718105`*^9}, {3.406313116433578*^9, 3.406313122591578*^9}, {
   3.406313300481578*^9, 3.406313306719578*^9}, {3.4064720867260137`*^9, 
   3.4064721409461517`*^9}, {3.406527247232836*^9, 3.4065272474203405`*^9}, {
   3.4065272918589783`*^9, 3.4065272923902416`*^9}, {3.4065275900228605`*^9, 
   3.4065276161016536`*^9}, {3.4065309311865177`*^9, 3.406530946921295*^9}, {
   3.4065311201444798`*^9, 3.4065311241133313`*^9}, {3.4065326088544645`*^9, 
   3.406532609323227*^9}, {3.406532674512396*^9, 3.406532675168662*^9}, {
   3.4065330856479206`*^9, 3.40653316513433*^9}, {3.4065406920926404`*^9, 
   3.406540708905571*^9}, {3.406540748531585*^9, 3.406540749000347*^9}, 
   3.4065407933452325`*^9, {3.40654089325404*^9, 3.4065408940978117`*^9}, {
   3.4065409250361032`*^9, 3.4065409352707405`*^9}, {3.406541505707218*^9, 
   3.406541506316609*^9}, {3.4065415674900503`*^9, 3.4065415679275613`*^9}, {
   3.406541630616666*^9, 3.406541638163734*^9}, {3.406541697102743*^9, 
   3.4065417119624987`*^9}, 3.4065431039200068`*^9, {3.406543134358286*^9, 
   3.406543155905712*^9}, {3.4065434409755096`*^9, 3.40654344155365*^9}, {
   3.4065442714498944`*^9, 3.4065442742468414`*^9}, 3.4065447334460964`*^9, {
   3.406551466192673*^9, 3.4065514664114285`*^9}, {3.406551545522829*^9, 
   3.406551559741943*^9}, {3.40655686073702*^9, 3.406556888909616*^9}, {
   3.4065586540329275`*^9, 3.4065586790179415`*^9}, {3.4065623382834916`*^9, 
   3.4065623420804634`*^9}, {3.4066123443017654`*^9, 3.406612389646676*^9}, 
   3.406616477111749*^9, {3.4066166596476717`*^9, 3.40661668924218*^9}, {
   3.4066167266806383`*^9, 3.406616742149784*^9}, {3.406617761816512*^9, 
   3.4066177670510206`*^9}, 3.4066178056926355`*^9, {3.406618088309245*^9, 
   3.406618092418725*^9}, {3.4066184137707014`*^9, 3.406618414192587*^9}, {
   3.4066184677408333`*^9, 3.4066184949134035`*^9}, {3.406619603285527*^9, 
   3.4066196047699404`*^9}, 3.406622157085278*^9, {3.406872336701084*^9, 
   3.4068723879377546`*^9}, {3.406872731562523*^9, 3.406872750829011*^9}, {
   3.406872793924692*^9, 3.4068728002687263`*^9}, {3.406872865584152*^9, 
   3.4068728666623254`*^9}, {3.4068750010235653`*^9, 
   3.4068750012423253`*^9}, {3.406875034290681*^9, 3.4068750419628997`*^9}, {
   3.406878543729147*^9, 3.4068785479949627`*^9}, {3.406885566312332*^9, 
   3.4068855669529657`*^9}, {3.4068856232974367`*^9, 
   3.4068856584228864`*^9}, {3.406885976723836*^9, 3.406885979676998*^9}, {
   3.406886014896199*^9, 3.4068860150837016`*^9}, {3.406886372166397*^9, 
   3.4068864067449646`*^9}, 3.406886718155201*^9, {3.4068872465213385`*^9, 
   3.4068872563027143`*^9}, {3.4068873361318607`*^9, 
   3.4068873363349886`*^9}, {3.4068873860231247`*^9, 3.406887387945024*^9}, {
   3.406887454899006*^9, 3.406887455149009*^9}, 3.4068876085884733`*^9, {
   3.4068891314985914`*^9, 3.4068891772335515`*^9}, 3.406889244281285*^9, {
   3.406889705474688*^9, 3.406889713521666*^9}, {3.4068898275856256`*^9, 
   3.406889857867264*^9}, {3.406960721337304*^9, 3.406960863949417*^9}, {
   3.406964705804429*^9, 3.406964713726456*^9}, {3.406973231890002*^9, 
   3.406973232358761*^9}, {3.406975501855459*^9, 3.406975502292968*^9}, {
   3.4075837139394007`*^9, 3.407583769973401*^9}, {3.4075838175304008`*^9, 
   3.407583834878401*^9}, {3.407583894569401*^9, 3.407583911034401*^9}, {
   3.407584372492401*^9, 3.4075843758204007`*^9}, {3.4075844058614006`*^9, 
   3.4075844276584005`*^9}, {3.407584522055401*^9, 3.4075845373754005`*^9}, {
   3.407584856398401*^9, 3.407584860883401*^9}, {3.4075855286034007`*^9, 
   3.407585561128401*^9}, 3.4075915669562006`*^9, {3.407669066973*^9, 
   3.407669073028*^9}, {3.407669128307*^9, 3.407669145632*^9}, {
   3.407670846019*^9, 3.40767087731*^9}, 3.40767137685*^9, {3.407671426678*^9,
    3.407671475852*^9}, 3.4076716477530003`*^9, {3.407671818773*^9, 
   3.4076718374960003`*^9}, {3.407671897007*^9, 3.407671920833*^9}, {
   3.407671983174*^9, 3.407671995396*^9}, {3.4081965282953873`*^9, 
   3.408196547636387*^9}, 3.408205557267*^9, {3.408205855988*^9, 
   3.408205929368*^9}, 3.4082061086140003`*^9, {3.408211708394207*^9, 
   3.4082117441522074`*^9}, {3.408212452378207*^9, 3.408212463687207*^9}, {
   3.408212569728207*^9, 3.4082125907682076`*^9}, {3.4084456191957493`*^9, 
   3.4084457151975927`*^9}, {3.408445846621991*^9, 3.408445847012624*^9}, {
   3.408862199352783*^9, 3.4088622385566607`*^9}, {3.408862278041794*^9, 
   3.4088622977140465`*^9}, {3.4088630050401273`*^9, 3.408863006055772*^9}, {
   3.408872956043683*^9, 3.408872956574943*^9}, {3.4089014416690493`*^9, 
   3.408901463731973*^9}, {3.4089017482218103`*^9, 3.4089017579251213`*^9}, 
   3.4089479311378913`*^9, {3.40894806232791*^9, 3.4089480635935593`*^9}, {
   3.4097425981094294`*^9, 3.4097426020844293`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exemple", "Subsubtitle",
 CellChangeTimes->{{3.40887293298074*^9, 3.408872934621396*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
      "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
      "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
      "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", 
      RowBox[{"\[Alpha]2", "=", "1"}], ",", 
      RowBox[{"\[Beta]2", "=", "1"}], ",", "Z1", ",", "Z2", ",", "\[Tau]", 
      ",", "S", ",", 
      RowBox[{"\[Alpha]1", "=", "1"}], ",", 
      RowBox[{"\[Beta]1", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}], ",", 
      RowBox[{"b", "=", "1"}], ",", "KList", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "printflag", ",", "prices", ",", "smile"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Rho]1", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v1", "=", "0.15"}], ";", 
     RowBox[{"\[Theta]v1", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]1", "=", "0.2"}], ";", 
     RowBox[{"V1", "=", "0.01"}], ";", 
     RowBox[{"\[Rho]2", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v2", "=", "0.15"}], ";", 
     RowBox[{"\[Theta]v2", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]2", "=", "0.2"}], ";", 
     RowBox[{"V2", "=", "0.005"}], ";", 
     RowBox[{"\[Rho]3", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v3", "=", "0.35"}], ";", 
     RowBox[{"\[Theta]v3", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]3", "=", "0.2"}], ";", 
     RowBox[{"V3", "=", "0.01"}], ";", 
     RowBox[{"\[Tau]", "=", "5"}], ";", 
     RowBox[{"Z1", "=", "0.1"}], ";", 
     RowBox[{"Z2", "=", "0.2"}], ";", 
     RowBox[{"\[Lambda]1", "=", "1.1"}], ";", 
     RowBox[{"\[Lambda]2", "=", "1.01"}], ";", 
     RowBox[{"S", "=", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.05"}], "}"}]}], ";", 
     RowBox[{"printflag", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "8"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"KList", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.02"}], ",", 
        RowBox[{"-", "0.015"}], ",", 
        RowBox[{"-", "0.01"}], ",", 
        RowBox[{"-", "0.005"}], ",", 
        RowBox[{"-", "0.002"}], ",", 
        RowBox[{"-", "0.001"}], ",", 
        RowBox[{"-", "0.0005"}], ",", 
        RowBox[{"-", "0.0002"}], ",", 
        RowBox[{"-", "0.0001"}], ",", "0", ",", "0.0001", ",", "0.0002", ",", 
        "0.0005", ",", "0.001", ",", "0.002", ",", "0.005", ",", "0.0075", 
        ",", "0.01", ",", "0.015", ",", "0.02"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prices", "=", 
      RowBox[{"SmileBiSuperHestonVanillaSpreadotion", "[", 
       RowBox[{
       "S", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
        "KList", ",", "\[Tau]", ",", "\[IndentingNewLine]", "\[Rho]1", ",", 
        "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", 
        "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", 
        ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",",
         "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", "\[Beta]2", ",", 
        "\[IndentingNewLine]", "printflag"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"KList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"S", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"S", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"KList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"smile", ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<ImpliednNormal Vol\>\""}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4088573008524837`*^9, 3.408857524653656*^9}, {
   3.408857593264348*^9, 3.408857593936236*^9}, {3.4088576304056864`*^9, 
   3.4088577180479937`*^9}, {3.4088579406460176`*^9, 
   3.4088579635995836`*^9}, {3.4088580380385127`*^9, 
   3.4088580947583513`*^9}, {3.4088581676191254`*^9, 3.408858175041143*^9}, {
   3.408858209635557*^9, 3.4088582112605886`*^9}, {3.4088595422080173`*^9, 
   3.4088596282721696`*^9}, {3.408859659069636*^9, 3.408859700211051*^9}, {
   3.408859742008728*^9, 3.4088597739312162`*^9}, {3.4088598296510363`*^9, 
   3.4088598803707595`*^9}, {3.408859910386961*^9, 3.4088599120119925`*^9}, {
   3.408862520890207*^9, 3.408862705706255*^9}, {3.4088644251923933`*^9, 
   3.4088644315675163`*^9}, {3.4088644814278483`*^9, 
   3.4088644825841208`*^9}, {3.4088645223973846`*^9, 3.40886454192901*^9}, 
   3.408864646259138*^9, {3.4088730742022014`*^9, 3.408873187891884*^9}, {
   3.4088732184080954`*^9, 3.40887333455095*^9}, {3.4088736279315825`*^9, 
   3.408873674291848*^9}, {3.4088737740281377`*^9, 3.4088737983879805`*^9}, {
   3.408873940390707*^9, 3.4088739409375925`*^9}, {3.408874060471137*^9, 
   3.4088740618149133`*^9}, 3.408889602301113*^9, {3.4097426103834295`*^9, 
   3.409742647922429*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.05`"},
        {"0.05`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V1=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V1\"\>", "0.01`"},
       {"\<\"\[Lambda]v1\"\>", "0.15`"},
       {"\<\"\[Theta]v1\"\>", "0.05`"},
       {"\<\"\[Kappa]1\"\>", "0.2`"},
       {"\<\"\[Rho]1\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V2=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V2\"\>", "0.005`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v2\"\>", "0.05`"},
       {"\<\"\[Kappa]2\"\>", "0.2`"},
       {"\<\"\[Rho]2\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V3=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V3\"\>", "0.01`"},
       {"\<\"\[Lambda]v2\"\>", "0.35`"},
       {"\<\"\[Theta]v3\"\>", "0.05`"},
       {"\<\"\[Kappa]3\"\>", "0.2`"},
       {"\<\"\[Rho]3\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" T=\"\>", 
   "\[InvisibleSpace]", "5"}],
  SequenceForm[" S=", 
   MatrixForm[{0.05, 0.05}], " Process V1=", 
   MatrixForm[{{"V1", 0.01}, {"\[Lambda]v1", 0.15}, {"\[Theta]v1", 0.05}, {
     "\[Kappa]1", 0.2}, {"\[Rho]1", -0.5}}], " Process V2=", 
   MatrixForm[{{"V2", 0.005}, {"\[Lambda]v2", 0.15}, {"\[Theta]v2", 0.05}, {
     "\[Kappa]2", 0.2}, {"\[Rho]2", -0.5}}], " Process V3=", 
   MatrixForm[{{"V3", 0.01}, {"\[Lambda]v2", 0.35}, {"\[Theta]v3", 0.05}, {
     "\[Kappa]3", 0.2}, {"\[Rho]3", -0.5}}], " T=", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.4089681073846426`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Inner Integration\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"LegendreNbMain\"\>", "50"},
       {"\<\"LegendreNbIncrement\"\>", "20"},
       {"\<\"IncrementNbMax\"\>", "10"},
       {"\<\"InitialTailFlag\"\>", "1"},
       {"\<\"InitialTailLegendreNb\"\>", "50"},
       {"\<\"PeriodMain\"\>", "10"},
       {"\<\"PeriodnIncrement\"\>", "5"},
       {"\<\"StoppingLevel\"\>", "1.`*^-6"},
       {"\<\"AbcisseMaxValue\"\>", "100"},
       {"\<\"InitialTailUpperLimit\"\>", "0.5`"},
       {"\<\"ExplosionMonitoringStartAbcisse\"\>", "20"},
       {"\<\"ExplosionMonitoringMaxLevel\"\>", "2"},
       {"\<\"lambda1\"\>", "1.1`"},
       {"\<\"lambda2\"\>", "1.01`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"Outer Integration\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"LegendreNbMain\"\>", "50"},
       {"\<\"LegendreNbIncrement\"\>", "20"},
       {"\<\"IncrementNbMax\"\>", "10"},
       {"\<\"InitialTailFlag\"\>", "1"},
       {"\<\"InitialTailLegendreNb\"\>", "50"},
       {"\<\"PeriodMain\"\>", "10"},
       {"\<\"PeriodnIncrement\"\>", "5.`"},
       {"\<\"StoppingLevel\"\>", "0.00001`"},
       {"\<\"AbcisseMaxValue\"\>", "100"},
       {"\<\"InitialTailUpperLimit\"\>", "0.5`"},
       {"\<\"GrowingControlStartAbcisse\"\>", "2"},
       {"\<\"GrowingControlMaxFactor\"\>", "0.1`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Inner Integration", 
   MatrixForm[{{"LegendreNbMain", 50}, {"LegendreNbIncrement", 20}, {
     "IncrementNbMax", 10}, {"InitialTailFlag", 1}, {
     "InitialTailLegendreNb", 50}, {"PeriodMain", 10}, {
     "PeriodnIncrement", 5}, {"StoppingLevel", 1.*^-6}, {
     "AbcisseMaxValue", 100}, {"InitialTailUpperLimit", 0.5}, {
     "ExplosionMonitoringStartAbcisse", 20}, {
     "ExplosionMonitoringMaxLevel", 2}, {"lambda1", 1.1}, {"lambda2", 1.01}}],
    "Outer Integration", 
   MatrixForm[{{"LegendreNbMain", 50}, {"LegendreNbIncrement", 20}, {
     "IncrementNbMax", 10}, {"InitialTailFlag", 1}, {
     "InitialTailLegendreNb", 50}, {"PeriodMain", 10}, {
     "PeriodnIncrement", 5.}, {"StoppingLevel", 0.00001}, {
     "AbcisseMaxValue", 100}, {"InitialTailUpperLimit", 0.5}, {
     "GrowingControlStartAbcisse", 2}, {"GrowingControlMaxFactor", 0.1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.408968107400268*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum pre-initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.17858446259333788`", ",", "0.17773356623519776`", ",", 
     "0.17688528954968463`", ",", "0.1743561775965603`", ",", 
     "0.17019336813269673`", ",", "0.1620638572087421`", ",", 
     "0.1392326840335852`", ",", "0.12196228072401112`", ",", 
     "0.10624424781222278`", ",", "0.0792518683307935`", ",", 
     "0.057749180296752085`"}], "}"}]}],
  SequenceForm[
  " sum pre-initiale=", {0.17858446259333788`, 0.17773356623519776`, 
   0.17688528954968463`, 0.1743561775965603, 0.17019336813269673`, 
   0.1620638572087421, 0.1392326840335852, 0.12196228072401112`, 
   0.10624424781222278`, 0.0792518683307935, 0.057749180296752085`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.408968195808215*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.1806934989135593`", ",", "0.1796871748890606`", ",", 
     "0.1786848675376288`", ",", "0.1757020890401474`", ",", 
     "0.17081130286911267`", ",", "0.16132992365472223`", ",", 
     "0.13524950793016488`", ",", "0.11612505915487405`", ",", 
     "0.09922925290176782`", ",", "0.07148675343785901`", ",", 
     "0.05067277302452979`"}], "}"}]}],
  SequenceForm[
  " sum initiale=", {0.1806934989135593, 0.1796871748890606, 
   0.1786848675376288, 0.1757020890401474, 0.17081130286911267`, 
   0.16132992365472223`, 0.13524950793016488`, 0.11612505915487405`, 
   0.09922925290176782, 0.07148675343785901, 0.05067277302452979}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.40896828329427*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"kini=\"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\" increment initial=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.000025582357218024668`"}], ",", 
     RowBox[{"-", "0.0000255690853768989`"}], ",", 
     RowBox[{"-", "0.000025543548599543654`"}], ",", 
     RowBox[{"-", "0.00002539714960878235`"}], ",", 
     RowBox[{"-", "0.00002494168997388164`"}], ",", 
     RowBox[{"-", "0.000023340959441141786`"}], ",", 
     RowBox[{"-", "0.000015328507512413828`"}], ",", 
     RowBox[{"-", "7.875901949877065`*^-6"}], ",", 
     RowBox[{"-", "1.9908498286010825`*^-6"}], ",", "3.741494991244314`*^-6", 
     ",", "4.222665633047069`*^-6"}], "}"}]}],
  SequenceForm[
  "kini=", 10, 
   " increment initial=", {-0.000025582357218024668`, -0.0000255690853768989, \
-0.000025543548599543654`, -0.00002539714960878235, -0.00002494168997388164, \
-0.000023340959441141786`, -0.000015328507512413828`, -7.875901949877065*^-6, \
-1.9908498286010825`*^-6, 3.741494991244314*^-6, 4.222665633047069*^-6}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.4089683185136967`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" i=\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\" Kini=\"\>", "\[InvisibleSpace]", "20.`", 
   "\[InvisibleSpace]", "\<\" increment =\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "7.737366186231472`*^-8", ",", "7.731890466223667`*^-8", ",", 
     "7.726410439564209`*^-8", ",", "7.709944598579446`*^-8", ",", 
     "7.682416162646242`*^-8", ",", "7.627042568980193`*^-8", ",", 
     "7.458458630662546`*^-8", ",", "7.31526538413972`*^-8", ",", 
     "7.169739725267283`*^-8", ",", "6.872166059309724`*^-8", ",", 
     "6.566677456249623`*^-8"}], "}"}]}],
  SequenceForm[
  " i=", 2, " Kini=", 20., " increment =", {7.737366186231472*^-8, 
   7.731890466223667*^-8, 7.726410439564209*^-8, 7.709944598579446*^-8, 
   7.682416162646242*^-8, 7.627042568980193*^-8, 7.458458630662546*^-8, 
   7.31526538413972*^-8, 7.169739725267283*^-8, 6.872166059309724*^-8, 
   6.566677456249623*^-8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.4089683512487*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"raison=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"increment<=\[Epsilon] :          -8\\n7.73737 10\"\>", ",", 
     "Null", ",", "Null", ",", "Null"}], "}"}]}],
  SequenceForm[
  "raison=", {
   "increment<=\[Epsilon] :          -8\n7.73737 10", Null, Null, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.4089683512487*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Sum finale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.18066799393000313`", ",", "0.17966168312258837`", ",", 
     "0.17865940125313365`", ",", "0.1756767689899846`", ",", 
     "0.1707864380033004`", ",", "0.16130665896570678`", ",", 
     "0.1352342540072388`", ",", "0.116117256405578`", ",", 
     "0.09922733374933647`", ",", "0.07149056365451086`", ",", 
     "0.0506770613569374`"}], "}"}]}],
  SequenceForm[
  " Sum finale=", {0.18066799393000313`, 0.17966168312258837`, 
   0.17865940125313365`, 0.1756767689899846, 0.1707864380033004, 
   0.16130665896570678`, 0.1352342540072388, 0.116117256405578, 
   0.09922733374933647, 0.07149056365451086, 0.0506770613569374}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.4089683512487*^9}],

Cell[BoxData["\<\"Fin partie positive\"\>"], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.408968351264325*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum pre-initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0630816401472876`", ",", "0.08341120465567631`", ",", 
     "0.10868800736211981`", ",", "0.13949218063175586`", ",", 
     "0.16083547581613056`", ",", "0.1684463128802632`", ",", 
     "0.17234625627885494`", ",", "0.17471661835694727`", ",", 
     "0.1755118166098021`"}], "}"}]}],
  SequenceForm[
  " sum pre-initiale=", {0.0630816401472876, 0.08341120465567631, 
   0.10868800736211981`, 0.13949218063175586`, 0.16083547581613056`, 
   0.1684463128802632, 0.17234625627885494`, 0.17471661835694727`, 
   0.1755118166098021}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.408968431984625*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.05632521328756086`", ",", "0.07650384079706374`", ",", 
     "0.10303535495279591`", ",", "0.13730981039672926`", ",", 
     "0.16215315464668856`", ",", "0.1712039845260841`", ",", 
     "0.17587801215853902`", ",", "0.1787304904780919`", ",", 
     "0.17968933800710576`"}], "}"}]}],
  SequenceForm[
  " sum initiale=", {0.05632521328756086, 0.07650384079706374, 
   0.10303535495279591`, 0.13730981039672926`, 0.16215315464668856`, 
   0.1712039845260841, 0.17587801215853902`, 0.1787304904780919, 
   0.17968933800710576`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.408968511126769*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"kini=\"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\" increment initial=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.02112588507004`*^-6"}], ",", 
     RowBox[{"-", "7.844470775066569`*^-6"}], ",", 
     RowBox[{"-", "0.000011292982280654248`"}], ",", 
     RowBox[{"-", "7.937511361571362`*^-6"}], ",", "2.219428551854256`*^-6", 
     ",", "7.391670074364123`*^-6", ",", "0.000010307686213668882`", ",", 
     "0.00001215806989678035`", ",", "0.000012791629074315124`"}], "}"}]}],
  SequenceForm[
  "kini=", 10, 
   " increment initial=", {-4.02112588507004*^-6, -7.844470775066569*^-6, \
-0.000011292982280654248`, -7.937511361571362*^-6, 2.219428551854256*^-6, 
   7.391670074364123*^-6, 0.000010307686213668882`, 0.00001215806989678035, 
   0.000012791629074315124`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.4089685441742787`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"raison=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"increment<=\[Epsilon] :          -6\\n4.02113 10\"\>", ",", 
     "Null", ",", "Null", ",", "Null"}], "}"}]}],
  SequenceForm[
  "raison=", {
   "increment<=\[Epsilon] :          -6\n4.02113 10", Null, Null, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.4089685441742787`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Sum finale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.05632521328756086`", ",", "0.07650384079706374`", ",", 
     "0.10303535495279591`", ",", "0.13730981039672926`", ",", 
     "0.16215315464668856`", ",", "0.1712039845260841`", ",", 
     "0.17587801215853902`", ",", "0.1787304904780919`", ",", 
     "0.17968933800710576`"}], "}"}]}],
  SequenceForm[
  " Sum finale=", {0.05632521328756086, 0.07650384079706374, 
   0.10303535495279591`, 0.13730981039672926`, 0.16215315464668856`, 
   0.1712039845260841, 0.17587801215853902`, 0.1787304904780919, 
   0.17968933800710576`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408873335691597*^9, 3.408873676166884*^9, 
  3.408873804481848*^9, 3.4088739418282347`*^9, 3.408874062674305*^9, 
  3.4089685441742787`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"431.23500000000035`", ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], 
      LineBox[{{-0.014460168590842253`, 0.010697518724347039`}, {-0.01, 
       0.010519895133612503`}, {-0.005, 0.010359999090142692`}, {-0.002, 
       0.010290901504162115`}, {-0.001, 0.01027351555030231}, {-0.0005, 
       0.010266003152827944`}, {-0.0002, 0.010261892236174616`}, {-0.0001, 
       0.010260588020784263`}, {0., 0.010260213863791057`}, {0.0001, 
       0.010259017472958194`}, {0.0002, 0.010257854894792218`}, {0.0005, 
       0.01025457175148899}, {0.001, 0.010249780372319635`}, {0.002, 
       0.010242645870912176`}, {0.005, 0.010239316434351204`}, {0.0075, 
       0.010254385881227823`}, {0.01, 0.010282690902815578`}, {0.015, 
       0.010370440066038857`}, {0.02, 0.01049007466556725}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0.0103},
    ImageSize->{620., Automatic},
    PlotLabel->FormBox["\"ImpliednNormal Vol\"", TraditionalForm],
    PlotRange->{{-0.02, 0.02}, {0.010239316434351204`, 
     0.010697518724347039`}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{3.408862761379199*^9, 3.4088629484921665`*^9, 
  3.4088644589742923`*^9, 3.4088644936312075`*^9, 3.408864565913845*^9, 
  3.408864664431362*^9, 3.4088728389320593`*^9, 3.4088730082634354`*^9, 
  3.4088733213788223`*^9, 3.4088733695984983`*^9, 3.408873715417638*^9, 
  3.4088738765769815`*^9, 3.408874015251519*^9, 3.4088741348006897`*^9, 
  3.408968544189904*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
      "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
      "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
      "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", 
      RowBox[{"\[Alpha]2", "=", "1"}], ",", 
      RowBox[{"\[Beta]2", "=", "1"}], ",", "Z1", ",", "Z2", ",", "\[Tau]", 
      ",", "S", ",", 
      RowBox[{"\[Alpha]1", "=", "1"}], ",", 
      RowBox[{"\[Beta]1", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}], ",", 
      RowBox[{"b", "=", "1"}], ",", "KList", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "printflag", ",", "prices", ",", "smile"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Rho]1", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v1", "=", "0.15"}], ";", 
     RowBox[{"\[Theta]v1", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]1", "=", "0.2"}], ";", 
     RowBox[{"V1", "=", "0.001"}], ";", 
     RowBox[{"\[Rho]2", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v2", "=", "0.15"}], ";", 
     RowBox[{"\[Theta]v2", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]2", "=", "0.2"}], ";", 
     RowBox[{"V2", "=", "0.005"}], ";", 
     RowBox[{"\[Rho]3", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v3", "=", "0.35"}], ";", 
     RowBox[{"\[Theta]v3", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]3", "=", "0.2"}], ";", 
     RowBox[{"V3", "=", "0.001"}], ";", 
     RowBox[{"\[Tau]", "=", "5"}], ";", 
     RowBox[{"Z1", "=", "0.1"}], ";", 
     RowBox[{"Z2", "=", "0.2"}], ";", 
     RowBox[{"\[Lambda]1", "=", "1.1"}], ";", 
     RowBox[{"\[Lambda]2", "=", "1.01"}], ";", 
     RowBox[{"S", "=", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.05"}], "}"}]}], ";", 
     RowBox[{"printflag", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "8"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"KList", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.02"}], ",", 
        RowBox[{"-", "0.015"}], ",", 
        RowBox[{"-", "0.01"}], ",", 
        RowBox[{"-", "0.005"}], ",", 
        RowBox[{"-", "0.002"}], ",", 
        RowBox[{"-", "0.001"}], ",", 
        RowBox[{"-", "0.0005"}], ",", 
        RowBox[{"-", "0.0002"}], ",", 
        RowBox[{"-", "0.0001"}], ",", "0", ",", "0.0001", ",", "0.0002", ",", 
        "0.0005", ",", "0.001", ",", "0.002", ",", "0.005", ",", "0.0075", 
        ",", "0.01", ",", "0.015", ",", "0.02"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prices", "=", 
      RowBox[{"SmileBiSuperHestonVanillaSpreadotion", "[", 
       RowBox[{
       "S", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
        "KList", ",", "\[Tau]", ",", "\[IndentingNewLine]", "\[Rho]1", ",", 
        "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", 
        "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", 
        ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",",
         "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", "\[Beta]2", ",", 
        "\[IndentingNewLine]", "printflag"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"KList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"S", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"S", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"KList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"smile", ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<ImpliednNormal Vol\>\""}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4088573008524837`*^9, 3.408857524653656*^9}, {
   3.408857593264348*^9, 3.408857593936236*^9}, {3.4088576304056864`*^9, 
   3.4088577180479937`*^9}, {3.4088579406460176`*^9, 
   3.4088579635995836`*^9}, {3.4088580380385127`*^9, 
   3.4088580947583513`*^9}, {3.4088581676191254`*^9, 3.408858175041143*^9}, {
   3.408858209635557*^9, 3.4088582112605886`*^9}, {3.4088595422080173`*^9, 
   3.4088596282721696`*^9}, {3.408859659069636*^9, 3.408859700211051*^9}, {
   3.408859742008728*^9, 3.4088597739312162`*^9}, {3.4088598296510363`*^9, 
   3.4088598803707595`*^9}, {3.408859910386961*^9, 3.4088599120119925`*^9}, {
   3.408862520890207*^9, 3.408862705706255*^9}, {3.4088644251923933`*^9, 
   3.4088644315675163`*^9}, {3.4088644814278483`*^9, 
   3.4088644825841208`*^9}, {3.4088645223973846`*^9, 3.40886454192901*^9}, 
   3.408864646259138*^9, {3.4088730742022014`*^9, 3.408873187891884*^9}, {
   3.4088732184080954`*^9, 3.40887333455095*^9}, {3.4088736279315825`*^9, 
   3.408873674291848*^9}, {3.4088737740281377`*^9, 3.4088737983879805`*^9}, {
   3.408873940390707*^9, 3.4088739409375925`*^9}, {3.408874060471137*^9, 
   3.4088740618149133`*^9}, 3.408889602301113*^9, {3.408968509923621*^9, 
   3.408968517298763*^9}, {3.409742660099429*^9, 3.409742676372429*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.05`"},
        {"0.05`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V1=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V1\"\>", "0.001`"},
       {"\<\"\[Lambda]v1\"\>", "0.15`"},
       {"\<\"\[Theta]v1\"\>", "0.05`"},
       {"\<\"\[Kappa]1\"\>", "0.2`"},
       {"\<\"\[Rho]1\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V2=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V2\"\>", "0.005`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v2\"\>", "0.05`"},
       {"\<\"\[Kappa]2\"\>", "0.2`"},
       {"\<\"\[Rho]2\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V3=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V3\"\>", "0.001`"},
       {"\<\"\[Lambda]v2\"\>", "0.35`"},
       {"\<\"\[Theta]v3\"\>", "0.05`"},
       {"\<\"\[Kappa]3\"\>", "0.2`"},
       {"\<\"\[Rho]3\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" T=\"\>", 
   "\[InvisibleSpace]", "5"}],
  SequenceForm[" S=", 
   MatrixForm[{0.05, 0.05}], " Process V1=", 
   MatrixForm[{{"V1", 0.001}, {"\[Lambda]v1", 0.15}, {"\[Theta]v1", 0.05}, {
     "\[Kappa]1", 0.2}, {"\[Rho]1", -0.5}}], " Process V2=", 
   MatrixForm[{{"V2", 0.005}, {"\[Lambda]v2", 0.15}, {"\[Theta]v2", 0.05}, {
     "\[Kappa]2", 0.2}, {"\[Rho]2", -0.5}}], " Process V3=", 
   MatrixForm[{{"V3", 0.001}, {"\[Lambda]v2", 0.35}, {"\[Theta]v3", 0.05}, {
     "\[Kappa]3", 0.2}, {"\[Rho]3", -0.5}}], " T=", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.408968547471217*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Inner Integration\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"LegendreNbMain\"\>", "50"},
       {"\<\"LegendreNbIncrement\"\>", "20"},
       {"\<\"IncrementNbMax\"\>", "10"},
       {"\<\"InitialTailFlag\"\>", "1"},
       {"\<\"InitialTailLegendreNb\"\>", "50"},
       {"\<\"PeriodMain\"\>", "10"},
       {"\<\"PeriodnIncrement\"\>", "5"},
       {"\<\"StoppingLevel\"\>", "1.`*^-6"},
       {"\<\"AbcisseMaxValue\"\>", "100"},
       {"\<\"InitialTailUpperLimit\"\>", "0.5`"},
       {"\<\"ExplosionMonitoringStartAbcisse\"\>", "20"},
       {"\<\"ExplosionMonitoringMaxLevel\"\>", "2"},
       {"\<\"lambda1\"\>", "1.1`"},
       {"\<\"lambda2\"\>", "1.01`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"Outer Integration\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"LegendreNbMain\"\>", "50"},
       {"\<\"LegendreNbIncrement\"\>", "20"},
       {"\<\"IncrementNbMax\"\>", "10"},
       {"\<\"InitialTailFlag\"\>", "1"},
       {"\<\"InitialTailLegendreNb\"\>", "50"},
       {"\<\"PeriodMain\"\>", "10"},
       {"\<\"PeriodnIncrement\"\>", "5.`"},
       {"\<\"StoppingLevel\"\>", "0.00001`"},
       {"\<\"AbcisseMaxValue\"\>", "100"},
       {"\<\"InitialTailUpperLimit\"\>", "0.5`"},
       {"\<\"GrowingControlStartAbcisse\"\>", "2"},
       {"\<\"GrowingControlMaxFactor\"\>", "0.1`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Inner Integration", 
   MatrixForm[{{"LegendreNbMain", 50}, {"LegendreNbIncrement", 20}, {
     "IncrementNbMax", 10}, {"InitialTailFlag", 1}, {
     "InitialTailLegendreNb", 50}, {"PeriodMain", 10}, {
     "PeriodnIncrement", 5}, {"StoppingLevel", 1.*^-6}, {
     "AbcisseMaxValue", 100}, {"InitialTailUpperLimit", 0.5}, {
     "ExplosionMonitoringStartAbcisse", 20}, {
     "ExplosionMonitoringMaxLevel", 2}, {"lambda1", 1.1}, {"lambda2", 1.01}}],
    "Outer Integration", 
   MatrixForm[{{"LegendreNbMain", 50}, {"LegendreNbIncrement", 20}, {
     "IncrementNbMax", 10}, {"InitialTailFlag", 1}, {
     "InitialTailLegendreNb", 50}, {"PeriodMain", 10}, {
     "PeriodnIncrement", 5.}, {"StoppingLevel", 0.00001}, {
     "AbcisseMaxValue", 100}, {"InitialTailUpperLimit", 0.5}, {
     "GrowingControlStartAbcisse", 2}, {"GrowingControlMaxFactor", 0.1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.408968547486842*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum pre-initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.1648252227206963`", ",", "0.16399007572674146`", ",", 
     "0.16315760597610174`", ",", "0.16067626489465592`", ",", 
     "0.15659423674226677`", ",", "0.14863068998455914`", ",", 
     "0.1263329810586365`", ",", "0.10954797277602812`", ",", 
     "0.09435137427359737`", ",", "0.06850158596750834`", ",", 
     "0.04825085035714897`"}], "}"}]}],
  SequenceForm[
  " sum pre-initiale=", {0.1648252227206963, 0.16399007572674146`, 
   0.16315760597610174`, 0.16067626489465592`, 0.15659423674226677`, 
   0.14863068998455914`, 0.1263329810586365, 0.10954797277602812`, 
   0.09435137427359737, 0.06850158596750834, 0.04825085035714897}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089686340822554`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.16242600090386625`", ",", "0.16142167858724196`", ",", 
     "0.1604218470380571`", ",", "0.15744927775157044`", ",", 
     "0.1525846459692866`", ",", "0.1431898193530777`", ",", 
     "0.11762373131762362`", ",", "0.09918314316648058`", ",", 
     "0.08315719913573993`", ",", "0.057520523915516285`", ",", 
     "0.03900783007942221`"}], "}"}]}],
  SequenceForm[
  " sum initiale=", {0.16242600090386625`, 0.16142167858724196`, 
   0.1604218470380571, 0.15744927775157044`, 0.1525846459692866, 
   0.1431898193530777, 0.11762373131762362`, 0.09918314316648058, 
   0.08315719913573993, 0.057520523915516285`, 0.03900783007942221}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408968722427701*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"kini=\"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\" increment initial=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.00005742059482220859`"}], ",", 
     RowBox[{"-", "0.00005724021860857304`"}], ",", 
     RowBox[{"-", "0.000057035359924782305`"}], ",", 
     RowBox[{"-", "0.00005626758254210801`"}], ",", 
     RowBox[{"-", "0.00005452083516187728`"}], ",", 
     RowBox[{"-", "0.00004953097782057821`"}], ",", 
     RowBox[{"-", "0.000028386680898800276`"}], ",", 
     RowBox[{"-", "0.000010755598692334325`"}], ",", 
     "1.8680213809867303`*^-6", ",", "0.000011759884825142301`", ",", 
     "0.000010277164686194034`"}], "}"}]}],
  SequenceForm[
  "kini=", 10, 
   " increment initial=", {-0.00005742059482220859, -0.00005724021860857304, \
-0.000057035359924782305`, -0.00005626758254210801, -0.00005452083516187728, \
-0.00004953097782057821, -0.000028386680898800276`, -0.000010755598692334325`,
    1.8680213809867303`*^-6, 0.000011759884825142301`, 
   0.000010277164686194034`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089687582877645`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" i=\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\" Kini=\"\>", "\[InvisibleSpace]", "20.`", 
   "\[InvisibleSpace]", "\<\" increment =\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "9.804994301719742`*^-9", ",", "1.1322162838304088`*^-8", ",", 
     "1.2501800206749702`*^-8", ",", "1.5237540033768692`*^-8", ",", 
     "1.843812109445633`*^-8", ",", "2.244526169812463`*^-8", ",", 
     "2.7517959335231635`*^-8", ",", "2.9053918493194843`*^-8", ",", 
     "2.9827414354188706`*^-8", ",", "3.0753927198439555`*^-8", ",", 
     "3.167905691361339`*^-8"}], "}"}]}],
  SequenceForm[
  " i=", 2, " Kini=", 20., " increment =", {9.804994301719742*^-9, 
   1.1322162838304088`*^-8, 1.2501800206749702`*^-8, 1.5237540033768692`*^-8, 
   1.843812109445633*^-8, 2.244526169812463*^-8, 2.7517959335231635`*^-8, 
   2.9053918493194843`*^-8, 2.9827414354188706`*^-8, 3.0753927198439555`*^-8, 
   3.167905691361339*^-8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089687891008563`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"raison=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"increment<=\[Epsilon] :          -9\\n9.80499 10\"\>", ",", 
     "Null", ",", "Null", ",", "Null"}], "}"}]}],
  SequenceForm[
  "raison=", {
   "increment<=\[Epsilon] :          -9\n9.80499 10", Null, Null, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089687891008563`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Sum finale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.1623685901140383`", ",", "0.16136444969079625`", ",", 
     "0.1603648241799325`", ",", "0.15739302540656838`", ",", 
     "0.15253014357224579`", ",", "0.14314031082051884`", ",", 
     "0.11759537215468416`", ",", "0.09917241662170674`", ",", 
     "0.08315909698453527`", ",", "0.057532314554268625`", ",", 
     "0.039018138923165316`"}], "}"}]}],
  SequenceForm[
  " Sum finale=", {0.1623685901140383, 0.16136444969079625`, 
   0.1603648241799325, 0.15739302540656838`, 0.15253014357224579`, 
   0.14314031082051884`, 0.11759537215468416`, 0.09917241662170674, 
   0.08315909698453527, 0.057532314554268625`, 0.039018138923165316`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089687891008563`*^9}],

Cell[BoxData["\<\"Fin partie positive\"\>"], "Print",
 CellChangeTimes->{3.408968789116482*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum pre-initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.05357741938748567`", ",", "0.07249174827231802`", ",", 
     "0.0963674595498277`", ",", "0.12582405644328706`", ",", 
     "0.14639922225070903`", ",", "0.15376227848820093`", ",", 
     "0.1575400120289552`", ",", "0.15983760217703266`", ",", 
     "0.16060863615367976`"}], "}"}]}],
  SequenceForm[
  " sum pre-initiale=", {0.05357741938748567, 0.07249174827231802, 
   0.0963674595498277, 0.12582405644328706`, 0.14639922225070903`, 
   0.15376227848820093`, 0.1575400120289552, 0.15983760217703266`, 
   0.16060863615367976`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089688642272987`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.044130253536431026`", ",", "0.06209516409643535`", ",", 
     "0.08664113508169993`", ",", "0.11949670490805744`", ",", 
     "0.14390856433447027`", ",", "0.1529010262304182`", ",", 
     "0.15756301561997865`", ",", "0.16041378145680402`", ",", 
     "0.1613730045939833`"}], "}"}]}],
  SequenceForm[
  " sum initiale=", {0.044130253536431026`, 0.06209516409643535, 
   0.08664113508169993, 0.11949670490805744`, 0.14390856433447027`, 
   0.1529010262304182, 0.15756301561997865`, 0.16041378145680402`, 
   0.1613730045939833}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408968940697517*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"kini=\"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\" increment initial=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.86497258049769`*^-6"}], ",", 
     RowBox[{"-", "0.00001427479637461694`"}], ",", 
     RowBox[{"-", "0.000024630412597526813`"}], ",", 
     RowBox[{"-", "0.00002060909556769009`"}], ",", "9.077297007021978`*^-7", 
     ",", "0.000012275337921453042`", ",", "0.00001872457333609622`", ",", 
     "0.000022834190985458275`", ",", "0.00002424442685875568`"}], "}"}]}],
  SequenceForm[
  "kini=", 10, 
   " increment initial=", {-4.86497258049769*^-6, -0.00001427479637461694, \
-0.000024630412597526813`, -0.00002060909556769009, 9.077297007021978*^-7, 
   0.000012275337921453042`, 0.00001872457333609622, 0.000022834190985458275`,
    0.00002424442685875568}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408968972526253*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"raison=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"increment<=\[Epsilon] :          -6\\n4.86497 10\"\>", ",", 
     "Null", ",", "Null", ",", "Null"}], "}"}]}],
  SequenceForm[
  "raison=", {
   "increment<=\[Epsilon] :          -6\n4.86497 10", Null, Null, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089689726043797`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Sum finale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.044130253536431026`", ",", "0.06209516409643535`", ",", 
     "0.08664113508169993`", ",", "0.11949670490805744`", ",", 
     "0.14390856433447027`", ",", "0.1529010262304182`", ",", 
     "0.15756301561997865`", ",", "0.16041378145680402`", ",", 
     "0.1613730045939833`"}], "}"}]}],
  SequenceForm[
  " Sum finale=", {0.044130253536431026`, 0.06209516409643535, 
   0.08664113508169993, 0.11949670490805744`, 0.14390856433447027`, 
   0.1529010262304182, 0.15756301561997865`, 0.16041378145680402`, 
   0.1613730045939833}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089689726512556`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"423.3589999999996`", ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], 
      LineBox[{{-0.02, 0.009944568629138013}, {-0.015, 
       0.009703199621973918}, {-0.01, 0.009490798082122213}, {-0.005, 
       0.009321857068881582}, {-0.002, 0.009250420510521986}, {-0.001, 
       0.009232986211740582}, {-0.0005, 0.009225611954087278}, {-0.0002, 
       0.009221634403440294}, {-0.0001, 0.00922038449400871}, {0., 
       0.009220982771180303}, {0.0001, 0.009219898651625149}, {0.0002, 
       0.009218853967596901}, {0.0005, 0.009215955297004703}, {0.001, 
       0.009211898845919185}, {0.002, 0.00920658565994106}, {0.005, 
       0.009210689366570367}, {0.0075, 0.009233184516406038}, {0.01, 
       0.00926924630643315}, {0.015, 0.009371330454392732}, {0.02, 
       0.009501261734831408}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0.009200000000000002},
    ImageSize->{471., Automatic},
    PlotLabel->FormBox["\"ImpliednNormal Vol\"", TraditionalForm],
    PlotRange->{{-0.02, 0.02}, {0.00920658565994106, 0.009944568629138013}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{3.4089689727137566`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
      "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
      "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
      "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", 
      RowBox[{"\[Alpha]2", "=", "1"}], ",", 
      RowBox[{"\[Beta]2", "=", "1"}], ",", "Z1", ",", "Z2", ",", "\[Tau]", 
      ",", "S", ",", 
      RowBox[{"\[Alpha]1", "=", "1"}], ",", 
      RowBox[{"\[Beta]1", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}], ",", 
      RowBox[{"b", "=", "1"}], ",", "KList", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "printflag", ",", "prices", ",", "smile"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Rho]1", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v1", "=", "0.15"}], ";", 
     RowBox[{"\[Theta]v1", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]1", "=", "0.2"}], ";", 
     RowBox[{"V1", "=", "0.0003"}], ";", 
     RowBox[{"\[Rho]2", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v2", "=", "0.15"}], ";", 
     RowBox[{"\[Theta]v2", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]2", "=", "0.2"}], ";", 
     RowBox[{"V2", "=", "0.01"}], ";", 
     RowBox[{"\[Rho]3", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v3", "=", "0.35"}], ";", 
     RowBox[{"\[Theta]v3", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]3", "=", "0.2"}], ";", 
     RowBox[{"V3", "=", "0.0003"}], ";", 
     RowBox[{"\[Tau]", "=", "5"}], ";", 
     RowBox[{"Z1", "=", "0.1"}], ";", 
     RowBox[{"Z2", "=", "0.2"}], ";", 
     RowBox[{"\[Lambda]1", "=", "1.1"}], ";", 
     RowBox[{"\[Lambda]2", "=", "1.01"}], ";", 
     RowBox[{"S", "=", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.05"}], "}"}]}], ";", 
     RowBox[{"printflag", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "8"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"KList", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.02"}], ",", 
        RowBox[{"-", "0.015"}], ",", 
        RowBox[{"-", "0.01"}], ",", 
        RowBox[{"-", "0.005"}], ",", 
        RowBox[{"-", "0.002"}], ",", 
        RowBox[{"-", "0.001"}], ",", 
        RowBox[{"-", "0.0005"}], ",", 
        RowBox[{"-", "0.0002"}], ",", 
        RowBox[{"-", "0.0001"}], ",", "0", ",", "0.0001", ",", "0.0002", ",", 
        "0.0005", ",", "0.001", ",", "0.002", ",", "0.005", ",", "0.0075", 
        ",", "0.01", ",", "0.015", ",", "0.02"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prices", "=", 
      RowBox[{"SmileBiSuperHestonVanillaSpreadotion", "[", 
       RowBox[{
       "S", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
        "KList", ",", "\[Tau]", ",", "\[IndentingNewLine]", "\[Rho]1", ",", 
        "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", 
        "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", 
        ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",",
         "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", "\[Beta]2", ",", 
        "\[IndentingNewLine]", "printflag"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"KList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"S", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"S", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"KList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"smile", ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<ImpliednNormal Vol\>\""}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4088573008524837`*^9, 3.408857524653656*^9}, {
   3.408857593264348*^9, 3.408857593936236*^9}, {3.4088576304056864`*^9, 
   3.4088577180479937`*^9}, {3.4088579406460176`*^9, 
   3.4088579635995836`*^9}, {3.4088580380385127`*^9, 
   3.4088580947583513`*^9}, {3.4088581676191254`*^9, 3.408858175041143*^9}, {
   3.408858209635557*^9, 3.4088582112605886`*^9}, {3.4088595422080173`*^9, 
   3.4088596282721696`*^9}, {3.408859659069636*^9, 3.408859700211051*^9}, {
   3.408859742008728*^9, 3.4088597739312162`*^9}, {3.4088598296510363`*^9, 
   3.4088598803707595`*^9}, {3.408859910386961*^9, 3.4088599120119925`*^9}, {
   3.408862520890207*^9, 3.408862705706255*^9}, {3.4088644251923933`*^9, 
   3.4088644315675163`*^9}, {3.4088644814278483`*^9, 
   3.4088644825841208`*^9}, {3.4088645223973846`*^9, 3.40886454192901*^9}, 
   3.408864646259138*^9, {3.4088730742022014`*^9, 3.408873187891884*^9}, {
   3.4088732184080954`*^9, 3.40887333455095*^9}, {3.4088736279315825`*^9, 
   3.408873674291848*^9}, {3.4088737740281377`*^9, 3.4088737983879805`*^9}, {
   3.408873940390707*^9, 3.4088739409375925`*^9}, {3.408874060471137*^9, 
   3.4088740618149133`*^9}, 3.408889602301113*^9, {3.408968509923621*^9, 
   3.408968517298763*^9}, {3.4089685630652666`*^9, 3.4089685660653243`*^9}, {
   3.4089691876085076`*^9, 3.4089692344219065`*^9}, {3.409742683759429*^9, 
   3.4097426982024293`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.05`"},
        {"0.05`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V1=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V1\"\>", "0.0003`"},
       {"\<\"\[Lambda]v1\"\>", "0.15`"},
       {"\<\"\[Theta]v1\"\>", "0.05`"},
       {"\<\"\[Kappa]1\"\>", "0.2`"},
       {"\<\"\[Rho]1\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V2=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V2\"\>", "0.01`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v2\"\>", "0.05`"},
       {"\<\"\[Kappa]2\"\>", "0.2`"},
       {"\<\"\[Rho]2\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V3=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V3\"\>", "0.0003`"},
       {"\<\"\[Lambda]v2\"\>", "0.35`"},
       {"\<\"\[Theta]v3\"\>", "0.05`"},
       {"\<\"\[Kappa]3\"\>", "0.2`"},
       {"\<\"\[Rho]3\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" T=\"\>", 
   "\[InvisibleSpace]", "5"}],
  SequenceForm[" S=", 
   MatrixForm[{0.05, 0.05}], " Process V1=", 
   MatrixForm[{{"V1", 0.0003}, {"\[Lambda]v1", 0.15}, {"\[Theta]v1", 0.05}, {
     "\[Kappa]1", 0.2}, {"\[Rho]1", -0.5}}], " Process V2=", 
   MatrixForm[{{"V2", 0.01}, {"\[Lambda]v2", 0.15}, {"\[Theta]v2", 0.05}, {
     "\[Kappa]2", 0.2}, {"\[Rho]2", -0.5}}], " Process V3=", 
   MatrixForm[{{"V3", 0.0003}, {"\[Lambda]v2", 0.35}, {"\[Theta]v3", 0.05}, {
     "\[Kappa]3", 0.2}, {"\[Rho]3", -0.5}}], " T=", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.408969452535469*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Inner Integration\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"LegendreNbMain\"\>", "50"},
       {"\<\"LegendreNbIncrement\"\>", "20"},
       {"\<\"IncrementNbMax\"\>", "10"},
       {"\<\"InitialTailFlag\"\>", "1"},
       {"\<\"InitialTailLegendreNb\"\>", "50"},
       {"\<\"PeriodMain\"\>", "10"},
       {"\<\"PeriodnIncrement\"\>", "5"},
       {"\<\"StoppingLevel\"\>", "1.`*^-6"},
       {"\<\"AbcisseMaxValue\"\>", "100"},
       {"\<\"InitialTailUpperLimit\"\>", "0.5`"},
       {"\<\"ExplosionMonitoringStartAbcisse\"\>", "20"},
       {"\<\"ExplosionMonitoringMaxLevel\"\>", "2"},
       {"\<\"lambda1\"\>", "1.1`"},
       {"\<\"lambda2\"\>", "1.01`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"Outer Integration\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"LegendreNbMain\"\>", "50"},
       {"\<\"LegendreNbIncrement\"\>", "20"},
       {"\<\"IncrementNbMax\"\>", "10"},
       {"\<\"InitialTailFlag\"\>", "1"},
       {"\<\"InitialTailLegendreNb\"\>", "50"},
       {"\<\"PeriodMain\"\>", "10"},
       {"\<\"PeriodnIncrement\"\>", "5.`"},
       {"\<\"StoppingLevel\"\>", "0.00001`"},
       {"\<\"AbcisseMaxValue\"\>", "100"},
       {"\<\"InitialTailUpperLimit\"\>", "0.5`"},
       {"\<\"GrowingControlStartAbcisse\"\>", "2"},
       {"\<\"GrowingControlMaxFactor\"\>", "0.1`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Inner Integration", 
   MatrixForm[{{"LegendreNbMain", 50}, {"LegendreNbIncrement", 20}, {
     "IncrementNbMax", 10}, {"InitialTailFlag", 1}, {
     "InitialTailLegendreNb", 50}, {"PeriodMain", 10}, {
     "PeriodnIncrement", 5}, {"StoppingLevel", 1.*^-6}, {
     "AbcisseMaxValue", 100}, {"InitialTailUpperLimit", 0.5}, {
     "ExplosionMonitoringStartAbcisse", 20}, {
     "ExplosionMonitoringMaxLevel", 2}, {"lambda1", 1.1}, {"lambda2", 1.01}}],
    "Outer Integration", 
   MatrixForm[{{"LegendreNbMain", 50}, {"LegendreNbIncrement", 20}, {
     "IncrementNbMax", 10}, {"InitialTailFlag", 1}, {
     "InitialTailLegendreNb", 50}, {"PeriodMain", 10}, {
     "PeriodnIncrement", 5.}, {"StoppingLevel", 0.00001}, {
     "AbcisseMaxValue", 100}, {"InitialTailUpperLimit", 0.5}, {
     "GrowingControlStartAbcisse", 2}, {"GrowingControlMaxFactor", 0.1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089694525979705`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum pre-initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.16837808225684064`", ",", "0.16755015989049024`", ",", 
     "0.16672632637264848`", ",", "0.1642727868673794`", ",", 
     "0.16023927955615613`", ",", "0.15237495076588978`", ",", 
     "0.13036734811280448`", ",", "0.11379969826384274`", ",", 
     "0.0987879456766853`", ",", "0.0731861191423901`", ",", 
     "0.05300234452493613`"}], "}"}]}],
  SequenceForm[
  " sum pre-initiale=", {0.16837808225684064`, 0.16755015989049024`, 
   0.16672632637264848`, 0.1642727868673794, 0.16023927955615613`, 
   0.15237495076588978`, 0.13036734811280448`, 0.11379969826384274`, 
   0.0987879456766853, 0.0731861191423901, 0.05300234452493613}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408969535568313*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.16557076613708047`", ",", "0.1645726724490041`", ",", 
     "0.1635805661353271`", ",", "0.16063356676042018`", ",", 
     "0.15581532643205326`", ",", "0.14652080423101901`", ",", 
     "0.12127876785686588`", ",", "0.1031021533336857`", ",", 
     "0.08731025272314763`", ",", "0.06199947962315082`", ",", 
     "0.043590534497397346`"}], "}"}]}],
  SequenceForm[
  " sum initiale=", {0.16557076613708047`, 0.1645726724490041, 
   0.1635805661353271, 0.16063356676042018`, 0.15581532643205326`, 
   0.14652080423101901`, 0.12127876785686588`, 0.1031021533336857, 
   0.08731025272314763, 0.06199947962315082, 0.043590534497397346`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408969622335604*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"kini=\"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\" increment initial=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.00006109020999101358`"}], ",", 
     RowBox[{"-", "0.000060886561259177676`"}], ",", 
     RowBox[{"-", "0.00006065628151889691`"}], ",", 
     RowBox[{"-", "0.00005979995127360959`"}], ",", 
     RowBox[{"-", "0.00005787211654599849`"}], ",", 
     RowBox[{"-", "0.000052444009956669056`"}], ",", 
     RowBox[{"-", "0.00002991453144450616`"}], ",", 
     RowBox[{"-", "0.000011419237919642994`"}], ",", "1.778361363559408`*^-6",
      ",", "0.000012218446048962496`", ",", "0.00001083966677948971`"}], 
    "}"}]}],
  SequenceForm[
  "kini=", 10, 
   " increment initial=", {-0.00006109020999101358, \
-0.000060886561259177676`, -0.00006065628151889691, -0.00005979995127360959, \
-0.00005787211654599849, -0.000052444009956669056`, -0.00002991453144450616, \
-0.000011419237919642994`, 1.778361363559408*^-6, 0.000012218446048962496`, 
   0.00001083966677948971}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408969657633157*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" i=\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\" Kini=\"\>", "\[InvisibleSpace]", "20.`", 
   "\[InvisibleSpace]", "\<\" increment =\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0213938891551885`*^-8"}], ",", 
     RowBox[{"-", "8.562928428253337`*^-9"}], ",", 
     RowBox[{"-", "7.278074293557204`*^-9"}], ",", 
     RowBox[{"-", "4.2952505465559775`*^-9"}], ",", 
     RowBox[{"-", "7.979271715467221`*^-10"}], ",", "3.6021334935859796`*^-9",
      ",", "9.270532371319824`*^-9", ",", "1.1069701009007337`*^-8", ",", 
     "1.2034942931789095`*^-8", ",", "1.327856078563244`*^-8", ",", 
     "1.4514893748060387`*^-8"}], "}"}]}],
  SequenceForm[
  " i=", 2, " Kini=", 20., 
   " increment =", {-1.0213938891551885`*^-8, -8.562928428253337*^-9, \
-7.278074293557204*^-9, -4.2952505465559775`*^-9, -7.979271715467221*^-10, 
   3.6021334935859796`*^-9, 9.270532371319824*^-9, 1.1069701009007337`*^-8, 
   1.2034942931789095`*^-8, 1.327856078563244*^-8, 1.4514893748060387`*^-8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089696879774895`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"raison=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"increment<=\[Epsilon] :          -8\\n1.02139 10\"\>", ",", 
     "Null", ",", "Null", ",", "Null"}], "}"}]}],
  SequenceForm[
  "raison=", {
   "increment<=\[Epsilon] :          -8\n1.02139 10", Null, Null, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089696879774895`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Sum finale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.16550966571315057`", ",", "0.16451177732481648`", ",", 
     "0.16351990257573393`", ",", "0.16057376251389602`", ",", 
     "0.15575745351758008`", ",", "0.14646836382319584`", ",", 
     "0.12124886259595374`", ",", "0.10309074516546707`", ",", 
     "0.08731204311945412`", ",", "0.06201171134776057`", ",", 
     "0.04360138867907058`"}], "}"}]}],
  SequenceForm[
  " Sum finale=", {0.16550966571315057`, 0.16451177732481648`, 
   0.16351990257573393`, 0.16057376251389602`, 0.15575745351758008`, 
   0.14646836382319584`, 0.12124886259595374`, 0.10309074516546707`, 
   0.08731204311945412, 0.06201171134776057, 0.04360138867907058}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408969688055616*^9}],

Cell[BoxData["\<\"Fin partie positive\"\>"], "Print",
 CellChangeTimes->{3.4089696881337423`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum pre-initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.05339253530470596`", ",", "0.07204326049436845`", ",", 
     "0.09563040020643394`", ",", "0.12482089584339437`", ",", 
     "0.1452753935936001`", ",", "0.15260875737935128`", ",", 
     "0.15637403950560896`", ",", "0.15866497949670022`", ",", 
     "0.15943393830886118`"}], "}"}]}],
  SequenceForm[
  " sum pre-initiale=", {0.05339253530470596, 0.07204326049436845, 
   0.09563040020643394, 0.12482089584339437`, 0.1452753935936001, 
   0.15260875737935128`, 0.15637403950560896`, 0.15866497949670022`, 
   0.15943393830886118`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408969762619548*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.043748723732705726`", ",", "0.06141837206324041`", ",", 
     "0.08562086161217738`", ",", "0.11815588915759727`", ",", 
     "0.142443740508402`", ",", "0.15141613836248932`", ",", 
     "0.1560732432700678`", ",", "0.1589228855499409`", ",", 
     "0.159882048867228`"}], "}"}]}],
  SequenceForm[
  " sum initiale=", {0.043748723732705726`, 0.06141837206324041, 
   0.08562086161217738, 0.11815588915759727`, 0.142443740508402, 
   0.15141613836248932`, 0.1560732432700678, 0.1589228855499409, 
   0.159882048867228}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089698382459993`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"kini=\"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\" increment initial=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.118960504267279`*^-6"}], ",", 
     RowBox[{"-", "0.000015104747856201055`"}], ",", 
     RowBox[{"-", "0.000026108881290121003`"}], ",", 
     RowBox[{"-", "0.0000217270591795298`"}], ",", "1.5387013714548033`*^-6", 
     ",", "0.000013919887041021102`", ",", "0.000020967766398325263`", ",", 
     "0.000025465913014692178`", ",", "0.00002701053030911169`"}], "}"}]}],
  SequenceForm[
  "kini=", 10, 
   " increment initial=", {-5.118960504267279*^-6, -0.000015104747856201055`, \
-0.000026108881290121003`, -0.0000217270591795298, 1.5387013714548033`*^-6, 
   0.000013919887041021102`, 0.000020967766398325263`, 
   0.000025465913014692178`, 0.00002701053030911169}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408969868684084*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"raison=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"increment<=\[Epsilon] :          -6\\n5.11896 10\"\>", ",", 
     "Null", ",", "Null", ",", "Null"}], "}"}]}],
  SequenceForm[
  "raison=", {
   "increment<=\[Epsilon] :          -6\n5.11896 10", Null, Null, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4089698687622104`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Sum finale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.043748723732705726`", ",", "0.06141837206324041`", ",", 
     "0.08562086161217738`", ",", "0.11815588915759727`", ",", 
     "0.142443740508402`", ",", "0.15141613836248932`", ",", 
     "0.1560732432700678`", ",", "0.1589228855499409`", ",", 
     "0.159882048867228`"}], "}"}]}],
  SequenceForm[
  " Sum finale=", {0.043748723732705726`, 0.06141837206324041, 
   0.08562086161217738, 0.11815588915759727`, 0.142443740508402, 
   0.15141613836248932`, 0.1560732432700678, 0.1589228855499409, 
   0.159882048867228}],
  Editable->False]], "Print",
 CellChangeTimes->{3.408969868824712*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"414.60899999999975`", ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], 
      LineBox[{{-0.02, 0.009912056941996159}, {-0.015, 
       0.009654329746485916}, {-0.01, 0.009426003633175946}, {-0.005, 
       0.009243469939120046}, {-0.002, 0.009166839192633192}, {-0.001, 
       0.009148558892550984}, {-0.0005, 0.009140982050280334}, {-0.0002, 
       0.009136961757589683}, {-0.0001, 0.009135711465366047}, {0., 
       0.009399365819047156}, {0.0001, 0.009398638817934806}, {0.0002, 
       0.009398040512953594}, {0.0005, 0.00939664289374813}, {0.001, 
       0.009395391065999818}, {0.002, 0.009396463160319493}, {0.005, 
       0.00942423519051608}, {0.0075, 0.009470492875996831}, {0.01, 
       0.009533351807316516}, {0.015, 0.009697180047224361}, {0.02, 
       0.009899478699950474}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0.009200000000000002},
    PlotLabel->FormBox["\"ImpliednNormal Vol\"", TraditionalForm],
    PlotRange->{{-0.02, 0.02}, {0.009135711465366047, 0.009912056941996159}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{3.4089698688715878`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculs des observables d'un superheston", "Subtitle",
 CellChangeTimes->{{3.3882886405822544`*^9, 3.3882886472073812`*^9}, {
  3.408874702811595*^9, 3.408874707874192*^9}},
 Background->RGBColor[1, 0.5, 0]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dF", "=", 
    RowBox[{
     RowBox[{
      SqrtBox[
       SubscriptBox["v", "1"]], " ", "F", " ", 
      SubscriptBox["dW", "1"]}], "+", 
     RowBox[{
      SqrtBox[
       SubscriptBox["v", "2"]], " ", "F", " ", 
      SubscriptBox["dW", "2"]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dG", "=", 
    RowBox[{
     RowBox[{
      SqrtBox[
       SubscriptBox["v", "3"]], " ", "G", " ", 
      SubscriptBox["dW", "3"]}], "+", 
     RowBox[{
      SqrtBox[
       SubscriptBox["v", "2"]], " ", "G", "  ", 
      SubscriptBox["dW", "2"]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["dv", "1"], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Lambda]", "1"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "-", 
       SubscriptBox["v", "1"]}], ")"}], "dt"}], "+", " ", 
    RowBox[{
     SubscriptBox["\[Nu]", "1"], 
     SqrtBox[
      SubscriptBox["v", "1"]], " ", 
     SubscriptBox["dW", 
      RowBox[{"v1", "\[IndentingNewLine]"}]]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["dv", "2"], "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Lambda]", "2"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "-", 
       SubscriptBox["v", "2"]}], ")"}], "dt"}], "+", 
    RowBox[{
     SubscriptBox["\[Nu]", "2"], 
     SqrtBox[
      SubscriptBox["v", "2"]], " ", 
     SubscriptBox["dW", 
      RowBox[{"v2", "\[IndentingNewLine]"}]]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["dv", "3"], "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Lambda]", "3"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "3"], "-", 
       SubscriptBox["v", "3"]}], ")"}], "dt"}], "+", 
    RowBox[{
     SubscriptBox["\[Nu]", "3"], 
     SqrtBox[
      SubscriptBox["v", "3"]], " ", 
     SubscriptBox["dW", 
      RowBox[{"v3", "\[IndentingNewLine]"}]]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["dW", "1"], 
    SubscriptBox["dW", "v1"]}], "=", 
   RowBox[{
    SubscriptBox[
     RowBox[{"\[Rho]", " "}], "1"], "dt"}]}], ";", 
  RowBox[{
   RowBox[{
    SubscriptBox["dW", "2"], 
    SubscriptBox["dW", "v2"]}], "=", 
   RowBox[{
    SubscriptBox["\[Rho]", "2"], " ", "dt"}]}], ";", 
  RowBox[{
   RowBox[{
    SubscriptBox["dW", "3"], 
    SubscriptBox["dW", "v3"]}], "=", 
   RowBox[{
    SubscriptBox["\[Rho]", "3"], " ", "dt"}]}], ";", "  ", 
  RowBox[{
   RowBox[{"les", " ", "autres"}], " ", "=", "0"}]}]}], "Text",
 CellChangeTimes->{{3.38828868670814*^9, 3.3882887403341694`*^9}, {
  3.3882959871920567`*^9, 3.388295992114026*^9}, {3.408874812298072*^9, 
  3.40887482078261*^9}, {3.408877206719044*^9, 3.4088772958145046`*^9}},
 Background->RGBColor[1, 0.54902, 0.776471]],

Cell[CellGroupData[{

Cell["Mono Underlyings", "Subsection",
 CellChangeTimes->{{3.3882957583439126`*^9, 3.3882957597345643`*^9}, {
  3.408875076131263*^9, 3.408875088709629*^9}, {3.40887550699891*^9, 
  3.408875509311455*^9}, {3.408878038594391*^9, 3.408878050313366*^9}},
 TextAlignment->Center,
 Background->RGBColor[0.541176, 0.976471, 0.886275]],

Cell["Total Vol :", "Text",
 CellChangeTimes->{{3.4088755138896675`*^9, 3.408875520686673*^9}, {
  3.4088766815995874`*^9, 3.4088766820370955`*^9}}],

Cell["VF = V1 + V2", "Text",
 CellChangeTimes->{{3.408875523499227*^9, 3.408875526983669*^9}, 
   3.4088773234869113`*^9}],

Cell["VG = V2 + V3", "Text",
 CellChangeTimes->{{3.4088773400809793`*^9, 3.408877344893572*^9}}],

Cell["Variance de Vol", "Text",
 CellChangeTimes->{{3.408875546671547*^9, 3.408875559484293*^9}, {
  3.40887668538091*^9, 3.4088766857871675`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["V1", "VF"], " ", 
    SuperscriptBox["\[Kappa]1", "2"]}], "+", 
   RowBox[{
    FractionBox[
     RowBox[{"V2", " "}], "VF"], 
    SuperscriptBox["\[Kappa]2", "2"]}]}], "=", "  ", 
  SuperscriptBox["\[Kappa]F", "2"]}]], "Text",
 CellChangeTimes->{{3.40887557209391*^9, 3.408875595953743*^9}, {
  3.408876697162386*^9, 3.4088767058813033`*^9}, {3.4088773521593366`*^9, 
  3.4088773653314643`*^9}, {3.4088775309596443`*^9, 3.4088775423973637`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["V3", "VG"], " ", 
    SuperscriptBox["\[Kappa]3", "2"]}], "+", 
   RowBox[{
    FractionBox["V2", "VG"], " ", 
    SuperscriptBox["\[Kappa]2", "2"]}]}], "=", "  ", 
  SuperscriptBox["\[Kappa]G", "2"]}]], "Text",
 CellChangeTimes->{{3.40887557209391*^9, 3.408875595953743*^9}, {
  3.408876697162386*^9, 3.4088767058813033`*^9}, {3.4088773521593366`*^9, 
  3.4088774244107237`*^9}, {3.4088775481943502`*^9, 3.4088775669290853`*^9}}],

Cell["Covariance Underlying / Vol", "Text",
 CellChangeTimes->{{3.4088756438140373`*^9, 3.408875656626783*^9}, {
  3.4088767309755354`*^9, 3.4088767329286976`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"V1", " ", "\[Kappa]1"}], 
     RowBox[{"VF", "  ", "\[Kappa]F", " "}]], " ", "\[Rho]1"}], "+", 
   RowBox[{
    FractionBox[
     RowBox[{"V2", " ", "\[Kappa]2"}], 
     RowBox[{"VF", "  ", "\[Kappa]F", " "}]], " ", "\[Rho]2"}]}], "=", " ", 
  "\[Rho]F"}]], "Text",
 CellChangeTimes->{{3.4088756652519484`*^9, 3.408875671908326*^9}, {
  3.408876853696641*^9, 3.4088768598530097`*^9}, {3.4088774301295834`*^9, 
  3.408877449317452*^9}, {3.408877505412279*^9, 3.4088775187250347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"V3", " ", "\[Kappa]3"}], 
     RowBox[{"VG", "  ", "\[Kappa]G", " "}]], " ", "\[Rho]3"}], "+", 
   RowBox[{
    FractionBox[
     RowBox[{"V2", " ", "\[Kappa]2"}], 
     RowBox[{"VG", " ", "\[Kappa]G", " "}]], " ", "\[Rho]2"}]}], "=", " ", 
  "\[Rho]G"}]], "Text",
 CellChangeTimes->{{3.4088756652519484`*^9, 3.408875671908326*^9}, {
  3.408876853696641*^9, 3.4088768598530097`*^9}, {3.4088774301295834`*^9, 
  3.408877449317452*^9}, {3.408877505412279*^9, 3.4088775187250347`*^9}, {
  3.4088783214681377`*^9, 3.408878345301448*^9}, {3.408882942235742*^9, 
  3.408882945157673*^9}}],

Cell[BoxData[
 RowBox[{"mais", " ", "il", " ", "faut", " ", "raisonner", " ", "en", " ", 
  "variance", " ", "de", " ", "vol", " ", "normalis\[EAcute]e", " ", 
  RowBox[{"c", "'"}], "est", " ", "a", " ", "dire", " ", "diviser", " ", 
  "par", " "}]], "Input",
 CellChangeTimes->{{3.4091455033255715`*^9, 3.409145556341572*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Correlation", "Subsection",
 CellChangeTimes->{{3.3882957583439126`*^9, 3.3882957597345643`*^9}, 
   3.408875076131263*^9, {3.4088770069964595`*^9, 3.408877009043374*^9}},
 TextAlignment->Center,
 Background->RGBColor[0.541176, 0.976471, 0.886275]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Correlation", "[", 
   RowBox[{"UnderlyingF", ",", "UnderlyingG"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"V2", " "}], 
    RowBox[{
     SqrtBox[
      RowBox[{"V1", "+", "V2"}]], 
     SqrtBox[
      RowBox[{"V2", "+", "V3"}]]}]], "=", 
   FractionBox[
    RowBox[{"V2", " "}], 
    RowBox[{
     SqrtBox["VF"], 
     SqrtBox["VG"]}]]}]}]], "Text",
 CellChangeTimes->{{3.4088776248989477`*^9, 3.408877663602816*^9}, {
  3.4088777642766237`*^9, 3.408877776573735*^9}, {3.4088778181839094`*^9, 
  3.408877838434298*^9}, {3.4088859537623124`*^9, 3.408885972590799*^9}}],

Cell["\<\
donc A partir de VF, VG et \[Rho] on reconstruit : \
\>", "Text",
 CellChangeTimes->{{3.4088859200741653`*^9, 3.4088859457934093`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V2", "=", 
   RowBox[{
    SqrtBox["VF"], 
    SqrtBox["VG"], " ", "\[Rho]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", "=", 
   RowBox[{"VF", "-", "V2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"V3", "=", 
  RowBox[{"VG", "-", "V2"}]}]}], "Text",
 CellChangeTimes->{{3.408885976356496*^9, 3.408885988153598*^9}, {
  3.408886663322811*^9, 3.4088866916983557`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Repackaging", "Subsection",
 CellChangeTimes->{{3.3882957583439126`*^9, 3.3882957597345643`*^9}, 
   3.408875076131263*^9, {3.4088770069964595`*^9, 3.408877009043374*^9}, 
   3.408885913027155*^9},
 TextAlignment->Center,
 Background->RGBColor[0.541176, 0.976471, 0.886275]],

Cell["\<\
Observable : 
 {Volunderlying1, 
  Volunderlying2, 
  Correl12,
  \[Rho]S1,\[Rho]S2,\[Nu]S1,\[Nu]S2,
  VolVolBalancement, CommunCorrel,
  \[Lambda]1, \[Lambda]2, \[Lambda]3, LTVarianceFactor1, LTVarianceFactor2, \
LTVarianceFactor3}

Equations :\
\>", "Text",
 CellChangeTimes->{{3.408878739704647*^9, 3.408878968105504*^9}, {
  3.408879056437106*^9, 3.4088790627654333`*^9}, {3.4088796577976823`*^9, 
  3.4088796708448076`*^9}, {3.40888377547049*^9, 3.4088838041741657`*^9}, {
  3.4088850737454166`*^9, 3.408885096683357*^9}}],

Cell["VolVolBalancement : \[Xi]", "Text",
 CellChangeTimes->{{3.4088791058449373`*^9, 3.408879112438898*^9}, {
   3.408879158112235*^9, 3.408879160549813*^9}, {3.4088792229893107`*^9, 
   3.4088792286613674`*^9}, {3.408879703157928*^9, 3.408879703595436*^9}, 
   3.4088803482953143`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"V2", " "}], "VF"], 
   SuperscriptBox["\[Kappa]2", "2"]}], "=", " ", 
  RowBox[{
   RowBox[{"\[Xi]", "    ", 
    SuperscriptBox["\[Kappa]F", "2"], "  ", "donc", "  ", 
    SuperscriptBox["\[Kappa]2", "2"]}], "=", "  ", 
   RowBox[{"\[Xi]", "   ", 
    SuperscriptBox["\[Kappa]F", "2"], " ", 
    FractionBox["VF", "V2"]}]}]}]], "Text",
 CellChangeTimes->{{3.4088792884601555`*^9, 3.408879317211076*^9}, 
   3.4088797117518435`*^9, {3.4088797944721813`*^9, 3.4088797965972223`*^9}, {
   3.408880401749466*^9, 3.408880444000277*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["V1", "VF"], " ", 
   SuperscriptBox["\[Kappa]1", "2"]}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", " ", "\[Xi]"}], ")"}], "    ", 
    SuperscriptBox["\[Kappa]F", "2"], " ", "donc", "   ", 
    SuperscriptBox["\[Kappa]1", "2"]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", " ", "\[Xi]"}], ")"}], "    ", 
    SuperscriptBox["\[Kappa]F", "2"], " ", 
    FractionBox["VF", "V1"]}]}]}]], "Text",
 CellChangeTimes->{{3.4088793324614773`*^9, 3.4088793443367815`*^9}, 
   3.4088797147519007`*^9, {3.408880085446518*^9, 3.408880128400468*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["V3", "VG"], " ", 
    SuperscriptBox["\[Kappa]3", "2"]}], "+", 
   RowBox[{
    FractionBox["V2", "VG"], " ", 
    SuperscriptBox["\[Kappa]2", "2"]}]}], "=", "  ", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Kappa]G", "2"], " ", "donc", "    ", 
    SuperscriptBox["\[Kappa]3", "2"]}], "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["VG", "V3"], " ", 
      SuperscriptBox["\[Kappa]G", "2"]}], "-", " ", 
     RowBox[{
      FractionBox["V2", "V3"], " ", 
      SuperscriptBox["\[Kappa]2", "2"]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["VG", "V3"], " ", 
       SuperscriptBox["\[Kappa]G", "2"]}], "-", " ", 
      RowBox[{
       FractionBox["V2", "V3"], " ", 
       SuperscriptBox["\[Kappa]2", "2"]}]}], "=", 
     RowBox[{
      RowBox[{
       FractionBox["VG", "V3"], " ", 
       SuperscriptBox["\[Kappa]G", "2"]}], "-", " ", 
      RowBox[{
       FractionBox["VF", "V3"], " ", "\[Xi]", "   ", 
       SuperscriptBox["\[Kappa]F", "2"], " "}]}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.4088801719794292`*^9, 3.4088802109958034`*^9}, {
  3.4088802409963794`*^9, 3.4088803317168713`*^9}, {3.4088804622662525`*^9, 
  3.408880501767011*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"0", "<", "\[Xi]", "<", 
   RowBox[{"Min", "[", 
    RowBox[{"1", ",", 
     RowBox[{
      FractionBox["VG", "VF"], " ", 
      FractionBox[
       SuperscriptBox["\[Kappa]G", "2"], 
       SuperscriptBox["\[Kappa]F", "2"]]}]}], "]"}]}]}]], "Text",
 CellChangeTimes->{{3.4088847467078876`*^9, 3.408884759301879*^9}, 
   3.408884869710249*^9, {3.408888568125007*^9, 3.4088885700156684`*^9}, {
   3.4088888181766834`*^9, 3.4088888308644266`*^9}},
 Background->RGBColor[0.792156862745098, 0.792156862745098, 0.792156862745098]
  ],

Cell["CommunCorrel : \[Rho]2", "Text",
 CellChangeTimes->{{3.4088792368178782`*^9, 3.408879241974293*^9}, 
   3.408879704720458*^9, 3.40888035017035*^9, {3.4088825073055167`*^9, 
   3.4088825083524117`*^9}, 3.40888381872132*^9}],

Cell["si on se donne \[Rho] 2 ,  on  a : ", "Text",
 CellChangeTimes->{{3.4088823760529966`*^9, 3.408882397209653*^9}, 
   3.4088824366166596`*^9, {3.4088827233565397`*^9, 3.408882730466051*^9}, {
   3.408882832264881*^9, 3.408882834311795*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"\[Rho]1", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"VF", "  ", "\[Kappa]F"}], 
      RowBox[{"V1", " ", "\[Kappa]1"}]], "  ", "\[Rho]F"}], "-", 
    RowBox[{
     FractionBox[
      RowBox[{"V2", " ", "\[Kappa]2"}], 
      RowBox[{"V1", " ", "\[Kappa]1"}]], " ", "\[Rho]2"}]}]}]}]], "Text",
 CellChangeTimes->{{3.408882850546482*^9, 3.4088828888597174`*^9}}],

Cell["et ", "Text",
 CellChangeTimes->{{3.408882903328745*^9, 3.4088829040162582`*^9}}],

Cell[BoxData[
 RowBox[{"\[Rho]3", "=", " ", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"VG", "  ", "\[Kappa]G", " "}], 
     RowBox[{"V3", " ", "\[Kappa]3", " "}]], " ", "\[Rho]G"}], "-", 
   RowBox[{
    FractionBox[
     RowBox[{"V2", " ", "\[Kappa]2"}], 
     RowBox[{"V3", " ", "\[Kappa]3", " "}]], " ", "\[Rho]2"}]}]}]], "Text",
 CellChangeTimes->{{3.40888259915103*^9, 3.408882621229579*^9}, {
  3.408882735669276*^9, 3.4088828253272476`*^9}, {3.408882911485152*^9, 
  3.4088829214228425`*^9}, {3.4088829517202992`*^9, 3.4088830034087915`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"mais", " ", "on", " ", "doit", " ", 
   RowBox[{"avoir", " ", ":", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"V1", " ", "\[Kappa]1"}], "+", "  ", 
       RowBox[{"VF", "  ", "\[Kappa]F", "  ", "\[Rho]F"}]}], 
      RowBox[{"V2", " ", "\[Kappa]2"}]], ">", "  ", 
     RowBox[{"\[Rho]2", "  ", "et", "   ", 
      FractionBox[
       RowBox[{
        RowBox[{"V3", " ", "\[Kappa]3"}], "+", "  ", 
        RowBox[{"VG", "  ", "\[Kappa]G", "  ", "\[Rho]G"}]}], 
       RowBox[{"V2", " ", "\[Kappa]2"}]]}], ">", " ", 
     "\[Rho]2"}]}]}]}]], "Text",
 CellChangeTimes->{{3.4088830450345907`*^9, 3.4088832671013546`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"soit", " ", "\[Rho]2"}], " ", "<", 
  RowBox[{"Min", "[", 
   RowBox[{"1", ",", " ", 
    FractionBox[
     RowBox[{
      RowBox[{"V1", " ", "\[Kappa]1"}], "+", "  ", 
      RowBox[{"VF", "  ", "\[Kappa]F", "  ", "\[Rho]F"}]}], 
     RowBox[{"V2", " ", "\[Kappa]2"}]], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"V3", " ", "\[Kappa]3"}], "+", "  ", 
      RowBox[{"VG", "  ", "\[Kappa]G", "  ", "\[Rho]G"}]}], 
     RowBox[{"V2", " ", "\[Kappa]2"}]]}], "]"}]}]], "Text",
 CellChangeTimes->{{3.4088831045513587`*^9, 3.408883105551378*^9}, {
  3.408883310758443*^9, 3.408883343993456*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"de", " ", "meme", " ", "on", " ", "doit", " ", "avoir", "   ", 
    FractionBox[
     RowBox[{"VF", "  ", "\[Kappa]F"}], 
     RowBox[{"V1", " ", "\[Kappa]1"}]], "  ", "\[Rho]F"}], "-", 
   RowBox[{
    FractionBox[
     RowBox[{"V2", " ", "\[Kappa]2"}], 
     RowBox[{"V1", " ", "\[Kappa]1"}]], " ", "\[Rho]2"}]}], "<", 
  RowBox[{
   RowBox[{"1", "  ", "et", "  ", 
    FractionBox[
     RowBox[{"VG", "  ", "\[Kappa]G", " "}], 
     RowBox[{"V3", " ", "\[Kappa]3", " "}]], " ", "\[Rho]G"}], "-", 
   RowBox[{
    FractionBox[
     RowBox[{"V2", " ", "\[Kappa]2"}], 
     RowBox[{"V3", " ", "\[Kappa]3", " "}]], " ", "\[Rho]2"}]}], "<", 
  "1"}]], "Text",
 CellChangeTimes->{{3.4088833658688755`*^9, 3.408883373478397*^9}, {
  3.408883404103985*^9, 3.408883418104254*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"soit", "    ", "\[Rho]2"}], ">", " ", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"VF", "  ", "\[Kappa]F", "  ", "\[Rho]F"}], "-", 
     RowBox[{"V1", " ", "\[Kappa]1"}]}], 
    RowBox[{"V2", " ", "\[Kappa]2"}]], "  ", "et", "  ", "\[Rho]2"}], ">", 
  FractionBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{"VG", "  ", "\[Kappa]G", "  ", "\[Rho]G"}], "-", 
     RowBox[{"V3", " ", "\[Kappa]3"}]}]}], 
   RowBox[{" ", 
    RowBox[{"V2", " ", "\[Kappa]2", " "}]}]]}]], "Text",
 CellChangeTimes->{{3.408883429682601*^9, 3.408883475808487*^9}, {
  3.4088836320302362`*^9, 3.408883692437646*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"soit", " ", "\[Rho]2"}], ">", 
  RowBox[{"Max", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"VF", "  ", "\[Kappa]F", "  ", "\[Rho]F"}], "-", 
      RowBox[{"V1", " ", "\[Kappa]1"}]}], 
     RowBox[{"V2", " ", "\[Kappa]2"}]], ",", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{
       RowBox[{"VG", "  ", "\[Kappa]G", "  ", "\[Rho]G"}], "-", 
       RowBox[{"V3", " ", "\[Kappa]3"}]}]}], 
     RowBox[{" ", 
      RowBox[{"V2", " ", "\[Kappa]2", " "}]}]]}], "]"}]}]], "Text",
 CellChangeTimes->{{3.4088836978283744`*^9, 3.408883723391365*^9}}],

Cell["donc en resume", "Text",
 CellChangeTimes->{{3.4088847274418926`*^9, 3.4088847319107285`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Max", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"VF", "  ", "\[Kappa]F", "  ", "\[Rho]F"}], "-", 
      RowBox[{"V1", " ", "\[Kappa]1"}]}], 
     RowBox[{"V2", " ", "\[Kappa]2"}]], ",", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{
       RowBox[{"VG", "  ", "\[Kappa]G", "  ", "\[Rho]G"}], "-", 
       RowBox[{"V3", " ", "\[Kappa]3"}]}]}], 
     RowBox[{" ", 
      RowBox[{"V2", " ", "\[Kappa]2", " "}]}]]}], "]"}], "<", "\[Rho]2", "<", 
  
  RowBox[{"Min", "[", 
   RowBox[{"1", ",", " ", 
    FractionBox[
     RowBox[{
      RowBox[{"V1", " ", "\[Kappa]1"}], "+", "  ", 
      RowBox[{"VF", "  ", "\[Kappa]F", "  ", "\[Rho]F"}]}], 
     RowBox[{"V2", " ", "\[Kappa]2"}]], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"V3", " ", "\[Kappa]3"}], "+", "  ", 
      RowBox[{"VG", "  ", "\[Kappa]G", "  ", "\[Rho]G"}]}], 
     RowBox[{"V2", " ", "\[Kappa]2"}]]}], "]"}]}]], "Text",
 CellChangeTimes->{{3.4088847467078876`*^9, 3.408884759301879*^9}},
 Background->RGBColor[0.792156862745098, 0.792156862745098, 0.792156862745098]
  ]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Packaging of the Spreadoption", "Subtitle",
 CellChangeTimes->{{3.408885148543728*^9, 3.408885163544016*^9}}],

Cell[CellGroupData[{

Cell["\<\
Pricing packag\[EAcute] des options sur underlying\
\>", "Section",
 CellChangeTimes->{{3.409053039809927*^9, 3.409053068138596*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PackagedSmileBiSuperHestonUnderlyingOption1", "[", 
   RowBox[{
   "S1_", ",", "S2_", ",", "\[Alpha]_", ",", "a_", ",", "KList_", ",", "T_", 
    ",", "\[IndentingNewLine]", "VolS1_", ",", "VolS2_", ",", "Correl12_", 
    ",", "\[Rho]S1_", ",", "\[Rho]S2_", ",", "\[Rho]S3_", ",", "\[Kappa]S1_", 
    ",", "\[Kappa]S2_", ",", "\[Kappa]S3_", ",", "\[Lambda]1_", ",", 
    "\[Lambda]2_", ",", "\[Lambda]3_", ",", "LTVarianceFactor1_", ",", 
    "LTVarianceFactor2_", ",", "LTVarianceFactor3_", ",", 
    "\[IndentingNewLine]", "printflag_"}], "]"}], ":=", "\[IndentingNewLine]",
   
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "S", ",", "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
      "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", 
      "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", 
      "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"V2", "=", 
      RowBox[{
       SqrtBox["VolS1"], 
       SqrtBox["VolS2"], " ", "Correl12"}]}], ";", 
     RowBox[{"V1", "=", 
      RowBox[{"VolS1", "-", "V2"}]}], ";", 
     RowBox[{"V3", "=", 
      RowBox[{"VolS2", "-", "V2"}]}], ";", "\[IndentingNewLine]", " ", 
     RowBox[{"\[Kappa]1", "=", "\[Kappa]S1"}], ";", 
     RowBox[{"\[Kappa]2", "=", "\[Kappa]S2"}], ";", 
     RowBox[{"\[Kappa]3", "=", "\[Kappa]S3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]1", "=", "\[Rho]S1"}], ";", 
     RowBox[{"\[Rho]2", "=", "\[Rho]S2"}], ";", 
     RowBox[{"\[Rho]3", "=", "\[Rho]S3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]v1", "=", 
      RowBox[{"V1", " ", "LTVarianceFactor1"}]}], ";", 
     RowBox[{"\[Theta]v2", "=", 
      RowBox[{"V2", " ", "LTVarianceFactor2"}]}], ";", 
     RowBox[{"\[Theta]v3", "=", 
      RowBox[{"V3", " ", "LTVarianceFactor3"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Lambda]v1", "=", "\[Lambda]1"}], ";", 
     RowBox[{"\[Lambda]v2", "=", "\[Lambda]2"}], ";", 
     RowBox[{"\[Lambda]v3", "=", "\[Lambda]3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"printflag", ",", "1"}], "]"}]}], "  ", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\< S=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"S1", ",", "S2"}], "}"}], " ", "//", " ", "MatrixForm"}], 
         ",", "\[IndentingNewLine]", "\"\< Process V1=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<V1\>\"", ",", "V1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v1\>\"", ",", "\[Lambda]v1"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]v1\>\"", ",", "\[Theta]v1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Kappa]1\>\"", ",", "\[Kappa]1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]1\>\"", ",", "\[Rho]1"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
         "\"\< Process V2=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<V2\>\"", ",", "V2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v2\>\"", ",", "\[Lambda]v2"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]v2\>\"", ",", "\[Theta]v2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Kappa]2\>\"", ",", "\[Kappa]2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]2\>\"", ",", "\[Rho]2"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
         "\"\< Process V3=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<V3\>\"", ",", "V3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v2\>\"", ",", "\[Lambda]v3"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]v3\>\"", ",", "\[Theta]v3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Kappa]3\>\"", ",", "\[Kappa]3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]3\>\"", ",", "\[Rho]3"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< T=\>\"", 
         ",", "T"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SuperHestonVanillaOption", "[", 
        RowBox[{
        "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
         ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
         ",", "\[Kappa]2", ",", "V2", ",", "S1", ",", 
         RowBox[{"KList", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "\[Alpha]", ",", "a", ",", 
         "T"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408889645223812*^9, 3.4088896841933107`*^9}, {
   3.4088897157095404`*^9, 3.4088897160845475`*^9}, {3.4088898452901535`*^9, 
   3.4088898999005766`*^9}, {3.4088932241362762`*^9, 3.4088932501992764`*^9}, 
   3.4088935517675667`*^9, {3.4088935821275244`*^9, 3.4088936142218904`*^9}, {
   3.408897073600809*^9, 3.4088970852104073`*^9}, {3.408897233322626*^9, 
   3.4088972339945135`*^9}, {3.4088978035523243`*^9, 3.40889781374002*^9}, {
   3.409052803664768*^9, 3.4090528182275476`*^9}, 3.4091646273014107`*^9, 
   3.409164701699411*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PackagedSmileBiSuperHestonUnderlyingOption2", "[", 
   RowBox[{
   "S1_", ",", "S2_", ",", "\[Alpha]_", ",", "a_", ",", "KList_", ",", "T_", 
    ",", "\[IndentingNewLine]", "VolS1_", ",", "VolS2_", ",", "Correl12_", 
    ",", "\[Rho]S1_", ",", "\[Rho]S2_", ",", "\[Rho]S3_", ",", "\[Kappa]S1_", 
    ",", "\[Kappa]S2_", ",", "\[Kappa]S3_", ",", "\[Lambda]1_", ",", 
    "\[Lambda]2_", ",", "\[Lambda]3_", ",", "LTVarianceFactor1_", ",", 
    "LTVarianceFactor2_", ",", "LTVarianceFactor3_", ",", 
    "\[IndentingNewLine]", "printflag_"}], "]"}], ":=", "\[IndentingNewLine]",
   
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "S", ",", "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
      "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", 
      "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", 
      "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"V2", "=", 
      RowBox[{
       SqrtBox["VolS1"], 
       SqrtBox["VolS2"], " ", "Correl12"}]}], ";", 
     RowBox[{"V1", "=", 
      RowBox[{"VolS1", "-", "V2"}]}], ";", 
     RowBox[{"V3", "=", 
      RowBox[{"VolS2", "-", "V2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]1", "=", "\[Kappa]S1"}], ";", 
     RowBox[{"\[Kappa]2", "=", "\[Kappa]S2"}], ";", 
     RowBox[{"\[Kappa]3", "=", "\[Kappa]S3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]1", "=", "\[Rho]S1"}], ";", 
     RowBox[{"\[Rho]2", "=", "\[Rho]S2"}], ";", 
     RowBox[{"\[Rho]3", "=", "\[Rho]S3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]v1", "=", 
      RowBox[{"V1", " ", "LTVarianceFactor1"}]}], ";", 
     RowBox[{"\[Theta]v2", "=", 
      RowBox[{"V2", " ", "LTVarianceFactor2"}]}], ";", 
     RowBox[{"\[Theta]v3", "=", 
      RowBox[{"V3", " ", "LTVarianceFactor3"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Lambda]v1", "=", "\[Lambda]1"}], ";", 
     RowBox[{"\[Lambda]v2", "=", "\[Lambda]2"}], ";", 
     RowBox[{"\[Lambda]v3", "=", "\[Lambda]3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"printflag", ",", "1"}], "]"}]}], "  ", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\< S=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"S1", ",", "S2"}], "}"}], " ", "//", " ", "MatrixForm"}], 
         ",", "\[IndentingNewLine]", "\"\< Process V1=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<V1\>\"", ",", "V1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v1\>\"", ",", "\[Lambda]v1"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]v1\>\"", ",", "\[Theta]v1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Kappa]1\>\"", ",", "\[Kappa]1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]1\>\"", ",", "\[Rho]1"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
         "\"\< Process V2=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<V2\>\"", ",", "V2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v2\>\"", ",", "\[Lambda]v2"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]v2\>\"", ",", "\[Theta]v2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Kappa]2\>\"", ",", "\[Kappa]2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]2\>\"", ",", "\[Rho]2"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
         "\"\< Process V3=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<V3\>\"", ",", "V3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v2\>\"", ",", "\[Lambda]v3"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]v3\>\"", ",", "\[Theta]v3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Kappa]3\>\"", ",", "\[Kappa]3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]3\>\"", ",", "\[Rho]3"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< T=\>\"", 
         ",", "T"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SuperHestonVanillaOption", "[", 
        RowBox[{
        "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", 
         ",", "V3", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", 
         ",", "\[Kappa]2", ",", "V2", ",", "S2", ",", 
         RowBox[{"KList", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "\[Alpha]", ",", "a", ",", 
         "T"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408889645223812*^9, 3.4088896841933107`*^9}, {
   3.4088897157095404`*^9, 3.4088897160845475`*^9}, {3.4088898452901535`*^9, 
   3.4088898999005766`*^9}, {3.4088932241362762`*^9, 3.4088932501992764`*^9}, 
   3.4088935517675667`*^9, {3.4088935821275244`*^9, 3.4088936142218904`*^9}, {
   3.4088938406949883`*^9, 3.4088938735706196`*^9}, {3.408896927863636*^9, 
   3.4088969568329425`*^9}, {3.408897023068589*^9, 3.408897026459279*^9}, 
   3.4088970948355923`*^9, {3.408897240135257*^9, 3.4088972407133927`*^9}, 
   3.408897808568045*^9, {3.408946503032347*^9, 3.4089465371111264`*^9}, {
   3.4089465690961156`*^9, 3.4089465932997055`*^9}, {3.409052823024515*^9, 
   3.4090528403998485`*^9}, 3.409164618589411*^9, 3.409164693483411*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S1", "=", "0.05"}], ",", 
     RowBox[{"S2", "=", "0.05"}], ",", 
     RowBox[{"\[Alpha]1", "=", "1"}], ",", 
     RowBox[{"a", "=", "1"}], ",", 
     RowBox[{"KList", "=", 
      RowBox[{"{", 
       RowBox[{"0.04", ",", "0.05", ",", "0.06"}], "}"}]}], ",", 
     RowBox[{"\[Tau]", "=", "5"}], ",", "\[IndentingNewLine]", 
     RowBox[{"VolS1", "=", "0.01"}], ",", 
     RowBox[{"VolS2", "=", "0.01"}], ",", 
     RowBox[{"Correl12", "=", "0.8"}], ",", 
     RowBox[{"\[Rho]S1", "=", "0.01"}], ",", 
     RowBox[{"\[Rho]S2", "=", "0.05"}], ",", 
     RowBox[{"\[Nu]S1", "=", "0.3"}], ",", 
     RowBox[{"\[Nu]S2", "=", "0.4"}], ",", 
     RowBox[{"VolVolBalancement", "=", "0.5"}], ",", 
     RowBox[{"CommunCorrel", "=", "0.05"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]1", "=", "0.15"}], ",", 
     RowBox[{"\[Lambda]2", "=", "0.15"}], ",", 
     RowBox[{"\[Lambda]3", "=", "0.15"}], ",", 
     RowBox[{"LTVarianceFactor1", "=", "1.5"}], ",", 
     RowBox[{"LTVarianceFactor2", "=", "1.5"}], ",", 
     RowBox[{"LTVarianceFactor3", "=", "1.5"}], ",", "\[IndentingNewLine]", 
     RowBox[{"printflag", "=", 
      RowBox[{"{", "1", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PackagedSmileBiSuperHestonUnderlyingOption1", "[", 
    RowBox[{
    "S1", ",", "S2", ",", "\[Alpha]1", ",", "a", ",", "KList", ",", "\[Tau]", 
     ",", "\[IndentingNewLine]", "VolS1", ",", "VolS2", ",", "Correl12", ",", 
     "\[Rho]S1", ",", "\[Rho]S2", ",", "\[Nu]S1", ",", "\[Nu]S2", ",", 
     "VolVolBalancement", ",", "CommunCorrel", ",", "\[Lambda]1", ",", 
     "\[Lambda]2", ",", "\[Lambda]3", ",", "LTVarianceFactor1", ",", 
     "LTVarianceFactor2", ",", "LTVarianceFactor3", ",", 
     "\[IndentingNewLine]", "printflag"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.408893268402751*^9, 3.4088935060323133`*^9}, 
   3.408893538251682*^9, {3.4088941178409348`*^9, 3.408894118606574*^9}, {
   3.4088968326586833`*^9, 3.4088968331743183`*^9}, {3.408896984692852*^9, 
   3.4088969937086506`*^9}, {3.4088972817923064`*^9, 
   3.4088972823079414`*^9}, {3.409052964370979*^9, 3.4090529645272317`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.05`"},
        {"0.05`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V1=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V1\"\>", "0.0019999999999999983`"},
       {"\<\"\[Lambda]v1\"\>", "0.15`"},
       {"\<\"\[Theta]v1\"\>", "0.0029999999999999975`"},
       {"\<\"\[Kappa]1\"\>", "0.4743416490252571`"},
       {"\<\"\[Rho]1\"\>", 
        RowBox[{"-", "0.06837722339831624`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V2=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V2\"\>", "0.008000000000000002`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v2\"\>", "0.012000000000000004`"},
       {"\<\"\[Kappa]2\"\>", "0.23717082451262841`"},
       {"\<\"\[Rho]2\"\>", "0.05`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V3=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V3\"\>", "0.0019999999999999983`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v3\"\>", "0.0029999999999999975`"},
       {"\<\"\[Kappa]3\"\>", "0.5750000000000006`"},
       {"\<\"\[Rho]3\"\>", "0.09141884364778141`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" T=\"\>", 
   "\[InvisibleSpace]", "5"}],
  SequenceForm[" S=", 
   MatrixForm[{0.05, 0.05}], " Process V1=", 
   MatrixForm[{{"V1", 0.0019999999999999983`}, {"\[Lambda]v1", 0.15}, {
     "\[Theta]v1", 0.0029999999999999975`}, {
     "\[Kappa]1", 0.4743416490252571}, {"\[Rho]1", -0.06837722339831624}}], 
   " Process V2=", 
   MatrixForm[{{"V2", 0.008000000000000002}, {"\[Lambda]v2", 0.15}, {
     "\[Theta]v2", 0.012000000000000004`}, {
     "\[Kappa]2", 0.23717082451262841`}, {"\[Rho]2", 0.05}}], " Process V3=", 
   
   MatrixForm[{{"V3", 0.0019999999999999983`}, {"\[Lambda]v2", 0.15}, {
     "\[Theta]v3", 0.0029999999999999975`}, {
     "\[Kappa]3", 0.5750000000000006}, {"\[Rho]3", 0.09141884364778141}}], 
   " T=", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.409052965167869*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.010849727644105432`", ",", "0.0033670590289154936`", ",", 
   "0.0013153553779949034`"}], "}"}]], "Output",
 CellChangeTimes->{3.4090529654334993`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S1", "=", "0.05"}], ",", 
     RowBox[{"S2", "=", "0.05"}], ",", 
     RowBox[{"\[Alpha]1", "=", "1"}], ",", 
     RowBox[{"a", "=", "1"}], ",", 
     RowBox[{"KList", "=", 
      RowBox[{"{", 
       RowBox[{"0.04", ",", "0.05", ",", "0.06"}], "}"}]}], ",", 
     RowBox[{"\[Tau]", "=", "5"}], ",", "\[IndentingNewLine]", 
     RowBox[{"VolS1", "=", "0.01"}], ",", 
     RowBox[{"VolS2", "=", "0.01"}], ",", 
     RowBox[{"Correl12", "=", "0.8"}], ",", 
     RowBox[{"\[Rho]S1", "=", "0.01"}], ",", 
     RowBox[{"\[Rho]S2", "=", "0.05"}], ",", 
     RowBox[{"\[Nu]S1", "=", "0.3"}], ",", 
     RowBox[{"\[Nu]S2", "=", "0.4"}], ",", 
     RowBox[{"VolVolBalancement", "=", "0.5"}], ",", 
     RowBox[{"CommunCorrel", "=", "0.05"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]1", "=", "0.15"}], ",", 
     RowBox[{"\[Lambda]2", "=", "0.15"}], ",", 
     RowBox[{"\[Lambda]3", "=", "0.15"}], ",", 
     RowBox[{"LTVarianceFactor1", "=", "1.5"}], ",", 
     RowBox[{"LTVarianceFactor2", "=", "1.5"}], ",", 
     RowBox[{"LTVarianceFactor3", "=", "1.5"}], ",", "\[IndentingNewLine]", 
     RowBox[{"printflag", "=", 
      RowBox[{"{", "1", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PackagedSmileBiSuperHestonUnderlyingOption2", "[", 
    RowBox[{
    "S1", ",", "S2", ",", "\[Alpha]1", ",", "a", ",", "KList", ",", "\[Tau]", 
     ",", "\[IndentingNewLine]", "VolS1", ",", "VolS2", ",", "Correl12", ",", 
     "\[Rho]S1", ",", "\[Rho]S2", ",", "\[Nu]S1", ",", "\[Nu]S2", ",", 
     "VolVolBalancement", ",", "CommunCorrel", ",", "\[Lambda]1", ",", 
     "\[Lambda]2", ",", "\[Lambda]3", ",", "LTVarianceFactor1", ",", 
     "LTVarianceFactor2", ",", "LTVarianceFactor3", ",", 
     "\[IndentingNewLine]", "printflag"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.408893268402751*^9, 3.4088935060323133`*^9}, 
   3.408893538251682*^9, {3.4088941178409348`*^9, 3.408894118606574*^9}, {
   3.4088968326586833`*^9, 3.4088968331743183`*^9}, {3.408896984692852*^9, 
   3.4088969937086506`*^9}, {3.4088972817923064`*^9, 3.4088972823079414`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.05`"},
        {"0.05`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V1=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V1\"\>", "0.0019999999999999983`"},
       {"\<\"\[Lambda]v1\"\>", "0.15`"},
       {"\<\"\[Theta]v1\"\>", "0.0029999999999999975`"},
       {"\<\"\[Kappa]1\"\>", "0.4743416490252571`"},
       {"\<\"\[Rho]1\"\>", 
        RowBox[{"-", "0.06837722339831624`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V2=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V2\"\>", "0.008000000000000002`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v2\"\>", "0.012000000000000004`"},
       {"\<\"\[Kappa]2\"\>", "0.23717082451262841`"},
       {"\<\"\[Rho]2\"\>", "0.05`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V3=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V3\"\>", "0.0019999999999999983`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v3\"\>", "0.0029999999999999975`"},
       {"\<\"\[Kappa]3\"\>", "0.5750000000000006`"},
       {"\<\"\[Rho]3\"\>", "0.09141884364778141`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" T=\"\>", 
   "\[InvisibleSpace]", "5"}],
  SequenceForm[" S=", 
   MatrixForm[{0.05, 0.05}], " Process V1=", 
   MatrixForm[{{"V1", 0.0019999999999999983`}, {"\[Lambda]v1", 0.15}, {
     "\[Theta]v1", 0.0029999999999999975`}, {
     "\[Kappa]1", 0.4743416490252571}, {"\[Rho]1", -0.06837722339831624}}], 
   " Process V2=", 
   MatrixForm[{{"V2", 0.008000000000000002}, {"\[Lambda]v2", 0.15}, {
     "\[Theta]v2", 0.012000000000000004`}, {
     "\[Kappa]2", 0.23717082451262841`}, {"\[Rho]2", 0.05}}], " Process V3=", 
   
   MatrixForm[{{"V3", 0.0019999999999999983`}, {"\[Lambda]v2", 0.15}, {
     "\[Theta]v3", 0.0029999999999999975`}, {
     "\[Kappa]3", 0.5750000000000006}, {"\[Rho]3", 0.09141884364778141}}], 
   " T=", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.408897104070144*^9, 3.4088972094159164`*^9, 
  3.40889724577599*^9, 3.4088972834642134`*^9, 3.4090529522769966`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.010828317059985632`", ",", "0.0033390146070152935`", ",", 
   "0.0013252829883473524`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.408893508251106*^9, {3.408893539611083*^9, 3.4088935587208247`*^9}, {
   3.40889359417463*^9, 3.4088936215189056`*^9}, 3.4088942429995875`*^9, 
   3.408896835564989*^9, 3.4088969945524163`*^9, 3.4088971042420225`*^9, 
   3.4088972095565443`*^9, 3.4088972459166174`*^9, 3.408897283604841*^9, 
   3.409052956730207*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Pricing packag\[EAcute] des spreadoption\
\>", "Section",
 CellChangeTimes->{{3.409053039809927*^9, 3.409053068138596*^9}, {
  3.409053125780328*^9, 3.4090531282647505`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PackagedSmileFourierBiSuperHestonVanillaSpreadoption", "[", 
   RowBox[{
   "S1_", ",", "S2_", ",", "\[Alpha]1_", ",", "\[Beta]1_", ",", "a_", ",", 
    "b_", ",", "KList_", ",", "\[Tau]_", ",", "\[IndentingNewLine]", "VolS1_",
     ",", "VolS2_", ",", "Correl12_", ",", "\[Rho]S1_", ",", "\[Rho]S2_", ",",
     "\[Rho]S3_", ",", "\[Kappa]S1_", ",", "\[Kappa]S2_", ",", "\[Kappa]S3_", 
    ",", "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
    "LTVarianceFactor1_", ",", "LTVarianceFactor2_", ",", 
    "LTVarianceFactor3_", ",", "\[IndentingNewLine]", "printflag_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "S", ",", "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
      "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", 
      "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", 
      "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S", "=", 
      RowBox[{"{", 
       RowBox[{"S1", ",", "S2"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V2", "=", 
      RowBox[{
       SqrtBox["VolS1"], 
       SqrtBox["VolS2"], " ", "Correl12"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V1", "=", 
      RowBox[{"VolS1", "-", "V2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V3", "=", 
      RowBox[{"VolS2", "-", "V2"}]}], ";", "\[IndentingNewLine]", " ", 
     RowBox[{"\[Kappa]1", "=", "\[Kappa]S1"}], ";", 
     RowBox[{"\[Kappa]2", "=", "\[Kappa]S2"}], ";", 
     RowBox[{"\[Kappa]3", "=", "\[Kappa]S3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]1", "=", "\[Rho]S1"}], ";", 
     RowBox[{"\[Rho]2", "=", "\[Rho]S2"}], ";", 
     RowBox[{"\[Rho]3", "=", "\[Rho]S3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]v1", "=", 
      RowBox[{"V1", " ", "LTVarianceFactor1"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Theta]v2", "=", 
      RowBox[{"V2", " ", "LTVarianceFactor2"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Theta]v3", "=", 
      RowBox[{"V3", " ", "LTVarianceFactor3"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Lambda]v1", "=", "\[Lambda]1"}], ";", 
     RowBox[{"\[Lambda]v2", "=", "\[Lambda]2"}], ";", 
     RowBox[{"\[Lambda]v3", "=", "\[Lambda]3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"printflag", ",", "1"}], "]"}]}], "  ", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\< S=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"S1", ",", "S2"}], "}"}], " ", "//", " ", "MatrixForm"}], 
         ",", "\[IndentingNewLine]", "\"\< Process V1=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<V1\>\"", ",", "V1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v1\>\"", ",", "\[Lambda]v1"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]v1\>\"", ",", "\[Theta]v1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Kappa]1\>\"", ",", "\[Kappa]1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]1\>\"", ",", "\[Rho]1"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
         "\"\< Process V2=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<V2\>\"", ",", "V2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v2\>\"", ",", "\[Lambda]v2"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]v2\>\"", ",", "\[Theta]v2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Kappa]2\>\"", ",", "\[Kappa]2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]2\>\"", ",", "\[Rho]2"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
         "\"\< Process V3=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<V3\>\"", ",", "V3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v2\>\"", ",", "\[Lambda]v3"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]v3\>\"", ",", "\[Theta]v3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Kappa]3\>\"", ",", "\[Kappa]3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]3\>\"", ",", "\[Rho]3"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< T=\>\"", 
         ",", "\[Tau]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "9"}], " ", "||", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"printflag", ",", "9"}], "]"}]}], "  ", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"Plot3D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"SmileSymetrizedBiSuperHestonVanillaIntegrand", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"S1", ",", "S2"}], "}"}], ",", "\[Alpha]1", ",", 
             "\[Beta]1", ",", "a", ",", "b", ",", 
             RowBox[{"{", "0", "}"}], ",", "\[Tau]", ",", "\[Rho]1", ",", 
             "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", 
             ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
             "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
             "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "1.1", ",", 
             "1.01", ",", "Z1", ",", "Z2"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Z1", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Z2", ",", 
            RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"SmileBiSuperHestonVanillaSpreadotion", "[", 
      RowBox[{
      "S", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
       "KList", ",", "\[Tau]", ",", "\[IndentingNewLine]", "\[Rho]1", ",", 
       "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", 
       "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", 
       ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", 
       "\[Kappa]3", ",", "V3", ",", "\[IndentingNewLine]", "printflag"}], 
      "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408885200544726*^9, 3.408885345797515*^9}, {
   3.4088857337737136`*^9, 3.408885740289464*^9}, {3.4088857759932747`*^9, 
   3.408885804462571*^9}, {3.4088867180582366`*^9, 3.40888677629373*^9}, {
   3.4088890347120905`*^9, 3.408889110369793*^9}, {3.4088891486205273`*^9, 
   3.408889229700209*^9}, {3.4088893464212003`*^9, 3.408889365905949*^9}, {
   3.4088894015472584`*^9, 3.408889457767088*^9}, {3.408889492752135*^9, 
   3.4088895324091463`*^9}, {3.408889566112918*^9, 3.4088895685660906`*^9}, 
   3.408889610535646*^9, {3.408897146367831*^9, 3.4088972015720162`*^9}, 
   3.4088992087043023`*^9, {3.4088992513144956`*^9, 3.408899254564558*^9}, {
   3.408946602284253*^9, 3.408946623847167*^9}, {3.408946667207374*^9, 
   3.408946675895041*^9}, {3.4089471374507775`*^9, 3.408947145794688*^9}, {
   3.408947281250414*^9, 3.4089472865161395`*^9}, {3.4089475599901404`*^9, 
   3.4089475615839205`*^9}, {3.408947683289383*^9, 3.4089476883363543`*^9}, {
   3.408947837901726*^9, 3.4089478401361437`*^9}, {3.408947975732497*^9, 
   3.4089479774669056`*^9}, {3.4090539881250095`*^9, 3.409053995125144*^9}, {
   3.409164569160411*^9, 3.4091645804064107`*^9}, 3.409164679488411*^9, {
   3.409225303138315*^9, 3.409225304928315*^9}}],

Cell[BoxData[
 RowBox[{"Off", "[", 
  RowBox[{"InterpolatingFunction", "::", "\"\<dmval\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.4089006253565016`*^9, 3.4089006277940483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S1", ",", "S2", ",", 
      RowBox[{"\[Alpha]1", "=", "1"}], ",", 
      RowBox[{"\[Beta]1", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}], ",", 
      RowBox[{"b", "=", "1"}], ",", "spreadstrikes", ",", 
      RowBox[{"\[Tau]", "=", "5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"VolS1", "=", "0.017"}], ",", 
      RowBox[{"VolS2", "=", "0.017"}], ",", 
      RowBox[{"Correl12", "=", "0.9"}], ",", 
      RowBox[{"\[Rho]S1", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Rho]S2", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Nu]S1", "=", "0.13"}], ",", 
      RowBox[{"\[Nu]S2", "=", "0.13"}], ",", 
      RowBox[{"VolVolBalancement", "=", "0.2"}], ",", 
      RowBox[{"CommunCorrel", "=", 
       RowBox[{"-", "0.27"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]1", "=", "0.15"}], ",", 
      RowBox[{"\[Lambda]2", "=", "0.15"}], ",", 
      RowBox[{"\[Lambda]3", "=", "0.15"}], ",", 
      RowBox[{"LTVarianceFactor1", "=", "1.5"}], ",", 
      RowBox[{"LTVarianceFactor2", "=", "1.5"}], ",", 
      RowBox[{"LTVarianceFactor3", "=", "1.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"printflag", "=", 
       RowBox[{"{", "0", "}"}]}], ",", "\[IndentingNewLine]", "strikes", ",", 
      "prices1", ",", "smile1", ",", "prices2", ",", "smile2", ",", "inter1", 
      ",", "inter2", ",", "smileMarket1", ",", "smileMarket2", ",", 
      "ATMimpliedCorr", ",", "\[IndentingNewLine]", "interMarket1", ",", 
      "interMarket2", ",", "spreadprices", ",", "spreadsmile", ",", 
      "interspread", ",", "VolNormal1", ",", "VolNormal2", ",", 
      "spreadMarket", ",", "interspreadMarket", ",", "\[IndentingNewLine]", 
      RowBox[{"tenor1", "=", "\"\<cms5\>\""}], ",", 
      RowBox[{"tenor2", "=", "\"\<cms10\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S1", "=", 
      RowBox[{
       RowBox[{"MarketCMSForward", "[", 
        RowBox[{"\[Tau]", ",", "tenor1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"S2", "=", 
      RowBox[{
       RowBox[{"MarketCMSForward", "[", 
        RowBox[{"\[Tau]", ",", "tenor2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"strikes", "=", 
      RowBox[{"{", 
       RowBox[{
       "0.01", ",", "0.0125", ",", "0.015", ",", "0.0175", ",", "0.02", ",", 
        "0.021", ",", "0.022", ",", "0.023", ",", "0.024", ",", "0.0245", ",",
         "0.025", ",", "0.0255", ",", "0.026", ",", "0.0265", ",", "0.027", 
        ",", "0.028", ",", "0.029", ",", "0.03", ",", "0.031", ",", "0.032", 
        ",", "0.033", ",", "0.034", ",", "0.035", ",", "0.036", ",", "0.037", 
        ",", "0.038", ",", "0.039", ",", "0.04", ",", "0.045", ",", "0.048", 
        ",", "0.05", ",", "0.055", ",", "0.058", ",", "0.06", ",", "0.062", 
        ",", "0.065", ",", "0.07", ",", "0.075", ",", "0.08", ",", "0.085", 
        ",", "0.09", ",", "0.095", ",", "0.1", ",", "0.11", ",", "0.12"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"spreadstrikes", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", 
        RowBox[{"-", "0.005"}], ",", 
        RowBox[{"-", "0.002"}], ",", 
        RowBox[{"-", "0.001"}], ",", 
        RowBox[{"-", "0.0005"}], ",", "0", ",", "0.0005", ",", "0.001", ",", 
        "0.002", ",", "0.005", ",", "0.0075", ",", "0.01", ",", "0.015"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prices1", "=", 
      RowBox[{"PackagedSmileBiSuperHestonUnderlyingOption1", "[", 
       RowBox[{
       "S1", ",", "S2", ",", "\[Alpha]1", ",", "a", ",", "strikes", ",", 
        "\[Tau]", ",", "\[IndentingNewLine]", "VolS1", ",", "VolS2", ",", 
        "Correl12", ",", "\[Rho]S1", ",", "\[Rho]S2", ",", "\[Nu]S1", ",", 
        "\[Nu]S2", ",", "VolVolBalancement", ",", "CommunCorrel", ",", 
        "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", 
        "LTVarianceFactor1", ",", "LTVarianceFactor2", ",", 
        "LTVarianceFactor3", ",", "\[IndentingNewLine]", "printflag"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"smile1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S1", ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices1", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prices2", "=", 
      RowBox[{"PackagedSmileBiSuperHestonUnderlyingOption2", "[", 
       RowBox[{
       "S1", ",", "S2", ",", "\[Alpha]1", ",", "a", ",", "strikes", ",", 
        "\[Tau]", ",", "\[IndentingNewLine]", "VolS1", ",", "VolS2", ",", 
        "Correl12", ",", "\[Rho]S1", ",", "\[Rho]S2", ",", "\[Nu]S1", ",", 
        "\[Nu]S2", ",", "VolVolBalancement", ",", "CommunCorrel", ",", 
        "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", 
        "LTVarianceFactor1", ",", "LTVarianceFactor2", ",", 
        "LTVarianceFactor3", ",", "\[IndentingNewLine]", "printflag"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"smile1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S1", ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices1", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S2", ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices2", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inter1", "=", 
      RowBox[{"Interpolation", "[", "smile1", "]"}]}], ";", 
     RowBox[{"inter2", "=", 
      RowBox[{"Interpolation", "[", "smile2", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smileMarket1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"MarketCMSOptionVol", "[", 
            RowBox[{
             RowBox[{"strikes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", "tenor1"}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smileMarket2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"MarketCMSOptionVol", "[", 
            RowBox[{
             RowBox[{"strikes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", "tenor2"}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"interMarket1", "=", 
      RowBox[{"Interpolation", "[", "smileMarket1", "]"}]}], ";", 
     RowBox[{"interMarket2", "=", 
      RowBox[{"Interpolation", "[", "smileMarket2", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"VolNormal1", "=", 
      RowBox[{
       RowBox[{"inter1", "[", "S1", "]"}], " ", "S1"}]}], ";", 
     RowBox[{"VolNormal2", "=", 
      RowBox[{
       RowBox[{"inter2", "[", "S2", "]"}], " ", "S2"}]}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Vol Normale Underlying1=\>\"", ",", "VolNormal1", ",", 
       "\"\<Vol Normale Underlying2=\>\"", ",", "VolNormal2"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ATMimpliedCorr", "=", 
      RowBox[{"NormalImplicitVol", "[", 
       RowBox[{"VolNormal1", ",", "VolNormal2", ",", 
        RowBox[{
         RowBox[{"MarketCMSSpreadOptionNormalVol", "[", 
          RowBox[{
           RowBox[{"S1", "-", "S2"}], ",", "\[Tau]", ",", "tenor1", ",", 
           "tenor2"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Implied Normal Correlation ATM for the spread: \>\"", ",", 
       "ATMimpliedCorr"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"spreadMarket", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"spreadstrikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"MarketCMSSpreadOptionNormalVol", "[", 
            RowBox[{
             RowBox[{"spreadstrikes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", "tenor1", 
             ",", "tenor2"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "spreadstrikes", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"interspreadMarket", "=", 
      RowBox[{"Interpolation", "[", "spreadMarket", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"inter1", "[", "x", "]"}], ",", 
           RowBox[{"interMarket1", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"strikes", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Last", "[", "strikes", "]"}]}], "}"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Implied BS vol: Underlying 1\>\""}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLegend", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<BiSuperHeston\>\"", ",", "\"\<Market\>\""}], "}"}]}], 
         ",", 
         RowBox[{"LegendPosition", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.3"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"inter1", "[", "x", "]"}], ",", 
           RowBox[{"interMarket1", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"strikes", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Last", "[", "strikes", "]"}]}], "}"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Implied BS vol: Underlying 1\>\""}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLegend", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<BiSuperHeston\>\"", ",", "\"\<Market\>\""}], "}"}]}], 
         ",", 
         RowBox[{"LegendPosition", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.3"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"interspreadMarket", "[", "x", "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"spreadstrikes", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Last", "[", "spreadstrikes", "]"}]}], "}"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Spread Implied Normal Vol:\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLegend", "\[Rule]", 
          RowBox[{"{", "\"\<Market\>\"", "}"}]}], ",", 
         RowBox[{"LegendPosition", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}]}]}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.4057762003884954`*^9, 3.4057762025760374`*^9}, 
   3.405776255905186*^9, 3.405776416377017*^9, {3.4057800166648912`*^9, 
   3.4057800478217397`*^9}, {3.4057804365948286`*^9, 
   3.4057804765330954`*^9}, {3.405780805461286*^9, 3.405780852274685*^9}, {
   3.405780886540968*^9, 3.405780890916052*^9}, {3.4057809307761917`*^9, 
   3.40578097858961*^9}, {3.4057810164653373`*^9, 3.405781039372027*^9}, {
   3.4057810767477446`*^9, 3.4057810779040165`*^9}, {3.4057811268424563`*^9, 
   3.405781323018098*^9}, {3.405782231113658*^9, 3.405782274176985*^9}, 
   3.405782619449239*^9, {3.4057826743877935`*^9, 3.4057826899974685`*^9}, {
   3.4057830666922007`*^9, 3.405783080770596*^9}, {3.405784231730194*^9, 
   3.4057842850280924`*^9}, {3.4057843588576345`*^9, 
   3.4057844294839907`*^9}, {3.405784469937893*^9, 3.405784493453969*^9}, {
   3.405784536564172*^9, 3.405784565455352*^9}, 3.405784639222393*^9, 
   3.405784935024947*^9, 3.405785043355152*^9, 3.4057851172315702`*^9, 
   3.4057854921762695`*^9, {3.4057856229131546`*^9, 3.4057856243819323`*^9}, {
   3.4057858318390408`*^9, 3.4057858558707523`*^9}, {3.405785917590687*^9, 
   3.405785956138302*^9}, {3.405786069874861*^9, 3.405786093844071*^9}, {
   3.4057861330323234`*^9, 3.4057862199558673`*^9}, {3.4057862719724913`*^9, 
   3.4057863361612234`*^9}, {3.4057865187272286`*^9, 3.405786547821537*^9}, {
   3.4057866082133217`*^9, 3.405786663495633*^9}, {3.4057882781360083`*^9, 
   3.4057882864799185`*^9}, {3.4057907817465773`*^9, 3.405790790449869*^9}, {
   3.4057908885455027`*^9, 3.4057908910143003`*^9}, {3.4057918203133917`*^9, 
   3.40579182125091*^9}, {3.405792185414152*^9, 3.405792211727157*^9}, 
   3.4057925336552134`*^9, 3.4057925855468345`*^9, {3.4057926925020127`*^9, 
   3.405792696111457*^9}, {3.405792752003155*^9, 3.4057927525187902`*^9}, {
   3.405941648091896*^9, 3.4059418314547915`*^9}, {3.405941926097234*^9, 
   3.405941940191254*^9}, {3.4059421299761477`*^9, 3.4059423046513767`*^9}, {
   3.405942483217305*^9, 3.4059424945300226`*^9}, {3.4059425429215765`*^9, 
   3.405942548671687*^9}, {3.405942651751791*^9, 3.4059427327377205`*^9}, {
   3.405942763988321*^9, 3.405942777801086*^9}, {3.4059443173462696`*^9, 
   3.405944558569651*^9}, {3.4059452030664005`*^9, 3.4059452053164434`*^9}, {
   3.405945361663195*^9, 3.4059456457623997`*^9}, {3.4059456851694064`*^9, 
   3.4059456922945433`*^9}, {3.405945957877767*^9, 3.4059459877533407`*^9}, {
   3.4059461661005154`*^9, 3.4059461689755707`*^9}, {3.4059463494790363`*^9, 
   3.405946350947814*^9}, {3.4059464969037414`*^9, 3.405946497685006*^9}, {
   3.405946601061991*^9, 3.405946605015192*^9}, 3.405946671563345*^9, {
   3.4059467461741524`*^9, 3.405946751314876*^9}, {3.405946800222065*^9, 
   3.4059468100347533`*^9}, {3.4059469260369806`*^9, 3.405946934334015*^9}, {
   3.405947047414311*^9, 3.4059470504612446`*^9}, {3.4059471719167013`*^9, 
   3.405947182010645*^9}, {3.4059494736483936`*^9, 3.405949480851657*^9}, 
   3.405949636042137*^9, 3.405949755060047*^9, 3.4059499185944366`*^9, {
   3.4059501806463428`*^9, 3.4059501943966064`*^9}, {3.4059503280710487`*^9, 
   3.4059503324461327`*^9}, {3.405950473995725*^9, 3.4059504837771626`*^9}, {
   3.4059506665306716`*^9, 3.4059506669525547`*^9}, {3.405950768938888*^9, 
   3.4059507691107664`*^9}, {3.40889406187111*^9, 3.4088940924185715`*^9}, 
   3.4088964601202803`*^9, {3.408896496386602*^9, 3.408896662342913*^9}, 
   3.4088967955329704`*^9, {3.408897325261891*^9, 3.4088976278458257`*^9}, {
   3.408897679815573*^9, 3.4088977197225895`*^9}, {3.408897751691953*^9, 
   3.4088977521763377`*^9}, {3.4088978373810987`*^9, 
   3.4088978378029814`*^9}, {3.4088978937415557`*^9, 3.408898045072586*^9}, {
   3.4088980877296553`*^9, 3.4088980926985006`*^9}, {3.408898136324338*^9, 
   3.408898167106179*^9}, {3.408898198325528*^9, 3.4088982149352226`*^9}, {
   3.4088982451389275`*^9, 3.4088983371250687`*^9}, {3.408898367719406*^9, 
   3.408898374860168*^9}, {3.4088988638226805`*^9, 3.4088989240738373`*^9}, 
   3.4088994916784854`*^9, {3.408899621759108*^9, 3.408899814637811*^9}, {
   3.4089000055164757`*^9, 3.4089001585662894`*^9}, {3.4089002016296163`*^9, 
   3.4089003984146442`*^9}, 3.4089006887483435`*^9, 3.4089009583316445`*^9, 
   3.4089011092564173`*^9, 3.408901256759249*^9, {3.4089013426046476`*^9, 
   3.4089013458390846`*^9}, 3.4089020594934115`*^9, 3.408941273871111*^9, {
   3.408942535457833*^9, 3.408942554536324*^9}, {3.408942997357326*^9, 
   3.4089431325786724`*^9}, 3.409163740589411*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Vol Normale Underlying1=\"\>", "\[InvisibleSpace]", 
   "0.006271412676109529`", 
   "\[InvisibleSpace]", "\<\"Vol Normale Underlying2=\"\>", 
   "\[InvisibleSpace]", "0.006510459420141592`"}],
  SequenceForm[
  "Vol Normale Underlying1=", 0.006271412676109529, 
   "Vol Normale Underlying2=", 0.006510459420141592],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.408942560661442*^9, {3.408943140156943*^9, 3.4089431691887503`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Implied Normal Correlation ATM for the spread: \"\>", 
   "\[InvisibleSpace]", "0.9767368359391849`"}],
  SequenceForm[
  "Implied Normal Correlation ATM for the spread: ", 0.9767368359391849],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.408942560661442*^9, {3.408943140156943*^9, 3.4089431691887503`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.6560000000001125`", ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{InsetBox[
        GraphicsBox[{{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Gn0i/h+VOPuQ
            "]]}, 
          {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
onR4dcRKz3r79hOfE/3UziX+DzTIdRc=
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesOrigin->{0.02, 0},
         DisplayFunction:>$DisplayFunction,
         FormatType->TraditionalForm,
         PlotLabel->FormBox[
          "\"Implied BS vol: Underlying 1\"", TraditionalForm],
         PlotRange->{{0.01, 0.12}, {0, 0.3}},
         PlotRangeClipping->True,
         PlotRangePadding->{
           Scaled[0.02], Automatic}], {-1, -0.6180339887498948}, {
        Left, Bottom}, {2, 1.2360679774997896`}], {
        {GrayLevel[0], RectangleBox[{1.05, -0.05}, {1.85, 0.55}]}, 
        {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
         RectangleBox[{1, 0}, {1.8, 0.6000000000000001}], InsetBox[
          GraphicsBox[{{{InsetBox[
               GraphicsBox[
                {Hue[0.9060679774997897, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"Market\"\>", {1.21, 0.58}, {-1, 0}, Automatic, {1,
                0}]}, {InsetBox[
               GraphicsBox[
                {Hue[0.67, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"BiSuperHeston\"\>", {1.21, 1.74}, {-1, 0}, 
               Automatic, {1, 0}]}}, {}},
           AspectRatio->0.7500000000000001,
           FormatType->TraditionalForm,
           PlotRange->{{-0.1, 3.26}, {-0.1, 2.42}}], {1, 0}, {
          Left, Bottom}, {0.8, 0.6000000000000001}]}}},
      AspectRatio->Automatic,
      Background->None,
      ColorOutput->Automatic,
      ImageSize->Automatic,
      PlotRange->All], ",", 
     GraphicsBox[{InsetBox[
        GraphicsBox[{{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Gn0i/h+VOPuQ
            "]]}, 
          {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
onR4dcRKz3r79hOfE/3UziX+DzTIdRc=
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesOrigin->{0.02, 0},
         DisplayFunction:>$DisplayFunction,
         FormatType->TraditionalForm,
         PlotLabel->FormBox[
          "\"Implied BS vol: Underlying 1\"", TraditionalForm],
         PlotRange->{{0.01, 0.12}, {0, 0.3}},
         PlotRangeClipping->True,
         PlotRangePadding->{
           Scaled[0.02], Automatic}], {-1, -0.6180339887498948}, {
        Left, Bottom}, {2, 1.2360679774997896`}], {
        {GrayLevel[0], RectangleBox[{1.05, -0.05}, {1.85, 0.55}]}, 
        {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
         RectangleBox[{1, 0}, {1.8, 0.6000000000000001}], InsetBox[
          GraphicsBox[{{{InsetBox[
               GraphicsBox[
                {Hue[0.9060679774997897, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"Market\"\>", {1.21, 0.58}, {-1, 0}, Automatic, {1,
                0}]}, {InsetBox[
               GraphicsBox[
                {Hue[0.67, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"BiSuperHeston\"\>", {1.21, 1.74}, {-1, 0}, 
               Automatic, {1, 0}]}}, {}},
           AspectRatio->0.7500000000000001,
           FormatType->TraditionalForm,
           PlotRange->{{-0.1, 3.26}, {-0.1, 2.42}}], {1, 0}, {
          Left, Bottom}, {0.8, 0.6000000000000001}]}}},
      AspectRatio->Automatic,
      Background->None,
      ColorOutput->Automatic,
      ImageSize->Automatic,
      PlotRange->All], ",", 
     GraphicsBox[{InsetBox[
        GraphicsBox[{{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
/xrl
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesOrigin->{0, 0.00135},
         DisplayFunction:>$DisplayFunction,
         FormatType->TraditionalForm,
         PlotLabel->FormBox[
          "\"Spread Implied Normal Vol:\"", TraditionalForm],
         PlotRange->{All, All},
         PlotRangeClipping->True,
         PlotRangePadding->{
          Automatic, Automatic}], {-1, -0.6180339887498948}, {
        Left, Bottom}, {2, 1.2360679774997896`}], {
        {GrayLevel[0], 
         RectangleBox[{1.05, -0.05}, {1.85, 0.27380952380952384`}]}, 
        {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
         RectangleBox[{1, 0}, {1.8, 0.3238095238095238}], InsetBox[
          GraphicsBox[{{InsetBox[
              GraphicsBox[
               {Hue[0.67, 0.6, 0.6], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"Market\"\>", {1.21, 0.58}, {-1, 0}, Automatic, {1, 
              0}]}, {}},
           AspectRatio->0.40476190476190477`,
           FormatType->TraditionalForm,
           PlotRange->{{-0.1, 3.26}, {-0.1, 1.26}}], {1, 0}, {
          Left, Bottom}, {0.8, 0.3238095238095238}]}}},
      AspectRatio->Automatic,
      Background->None,
      ColorOutput->Automatic,
      ImageSize->Automatic,
      PlotRange->All]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.408942561755213*^9, {3.4089431412194633`*^9, 3.408943170110643*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S1", ",", "S2", ",", 
      RowBox[{"\[Alpha]1", "=", "1"}], ",", 
      RowBox[{"\[Beta]1", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}], ",", 
      RowBox[{"b", "=", "1"}], ",", "spreadstrikes", ",", 
      RowBox[{"\[Tau]", "=", "5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"VolS1", "=", "0.017"}], ",", 
      RowBox[{"VolS2", "=", "0.017"}], ",", 
      RowBox[{"Correl12", "=", "0.98"}], ",", 
      RowBox[{"\[Rho]S1", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Rho]S2", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Nu]S1", "=", "0.13"}], ",", 
      RowBox[{"\[Nu]S2", "=", "0.13"}], ",", 
      RowBox[{"VolVolBalancement", "=", "0.6"}], ",", 
      RowBox[{"CommunCorrel", "=", 
       RowBox[{"-", "0.7"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]1", "=", "0.15"}], ",", 
      RowBox[{"\[Lambda]2", "=", "0.15"}], ",", 
      RowBox[{"\[Lambda]3", "=", "0.15"}], ",", 
      RowBox[{"LTVarianceFactor1", "=", "1.5"}], ",", 
      RowBox[{"LTVarianceFactor2", "=", "1.5"}], ",", 
      RowBox[{"LTVarianceFactor3", "=", "1.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"printflag", "=", 
       RowBox[{"{", "0", "}"}]}], ",", "\[IndentingNewLine]", "strikes", ",", 
      "prices1", ",", "smile1", ",", "prices2", ",", "smile2", ",", "inter1", 
      ",", "inter2", ",", "smileMarket1", ",", "smileMarket2", ",", 
      "\[IndentingNewLine]", "interMarket1", ",", "interMarket2", ",", 
      "spreadprices", ",", "spreadsmile", ",", "interspread", ",", 
      "VolNormal1", ",", "VolNormal2", ",", "spreadMarket", ",", 
      "interspreadMarket", ",", "\[IndentingNewLine]", 
      RowBox[{"tenor1", "=", "\"\<cms5\>\""}], ",", 
      RowBox[{"tenor2", "=", "\"\<cms10\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S1", "=", 
      RowBox[{
       RowBox[{"MarketCMSForward", "[", 
        RowBox[{"\[Tau]", ",", "tenor1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"S2", "=", 
      RowBox[{
       RowBox[{"MarketCMSForward", "[", 
        RowBox[{"\[Tau]", ",", "tenor2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"strikes", "=", 
      RowBox[{"{", 
       RowBox[{
       "0.01", ",", "0.0125", ",", "0.015", ",", "0.0175", ",", "0.02", ",", 
        "0.021", ",", "0.022", ",", "0.023", ",", "0.024", ",", "0.0245", ",",
         "0.025", ",", "0.0255", ",", "0.026", ",", "0.0265", ",", "0.027", 
        ",", "0.028", ",", "0.029", ",", "0.03", ",", "0.031", ",", "0.032", 
        ",", "0.033", ",", "0.034", ",", "0.035", ",", "0.036", ",", "0.037", 
        ",", "0.038", ",", "0.039", ",", "0.04", ",", "0.045", ",", "0.048", 
        ",", "0.05", ",", "0.055", ",", "0.058", ",", "0.06", ",", "0.062", 
        ",", "0.065", ",", "0.07", ",", "0.075", ",", "0.08", ",", "0.085", 
        ",", "0.09", ",", "0.095", ",", "0.1", ",", "0.11", ",", "0.12"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"spreadstrikes", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", 
        RowBox[{"-", "0.005"}], ",", 
        RowBox[{"-", "0.002"}], ",", 
        RowBox[{"-", "0.001"}], ",", 
        RowBox[{"-", "0.0005"}], ",", "0", ",", "0.0005", ",", "0.001", ",", 
        "0.002", ",", "0.005", ",", "0.0075", ",", "0.01", ",", "0.015"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prices1", "=", 
      RowBox[{"PackagedSmileBiSuperHestonUnderlyingOption1", "[", 
       RowBox[{
       "S1", ",", "S2", ",", "\[Alpha]1", ",", "a", ",", "strikes", ",", 
        "\[Tau]", ",", "\[IndentingNewLine]", "VolS1", ",", "VolS2", ",", 
        "Correl12", ",", "\[Rho]S1", ",", "\[Rho]S2", ",", "\[Nu]S1", ",", 
        "\[Nu]S2", ",", "VolVolBalancement", ",", "CommunCorrel", ",", 
        "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", 
        "LTVarianceFactor1", ",", "LTVarianceFactor2", ",", 
        "LTVarianceFactor3", ",", "\[IndentingNewLine]", "printflag"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"smile1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S1", ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices1", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prices2", "=", 
      RowBox[{"PackagedSmileBiSuperHestonUnderlyingOption2", "[", 
       RowBox[{
       "S1", ",", "S2", ",", "\[Alpha]1", ",", "a", ",", "strikes", ",", 
        "\[Tau]", ",", "\[IndentingNewLine]", "VolS1", ",", "VolS2", ",", 
        "Correl12", ",", "\[Rho]S1", ",", "\[Rho]S2", ",", "\[Nu]S1", ",", 
        "\[Nu]S2", ",", "VolVolBalancement", ",", "CommunCorrel", ",", 
        "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", 
        "LTVarianceFactor1", ",", "LTVarianceFactor2", ",", 
        "LTVarianceFactor3", ",", "\[IndentingNewLine]", "printflag"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"smile1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S1", ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices1", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S2", ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices2", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inter1", "=", 
      RowBox[{"Interpolation", "[", "smile1", "]"}]}], ";", 
     RowBox[{"inter2", "=", 
      RowBox[{"Interpolation", "[", "smile2", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smileMarket1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"MarketCMSOptionVol", "[", 
            RowBox[{
             RowBox[{"strikes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", "tenor1"}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smileMarket2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"MarketCMSOptionVol", "[", 
            RowBox[{
             RowBox[{"strikes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", "tenor2"}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"interMarket1", "=", 
      RowBox[{"Interpolation", "[", "smileMarket1", "]"}]}], ";", 
     RowBox[{"interMarket2", "=", 
      RowBox[{"Interpolation", "[", "smileMarket2", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"spreadprices", "=", 
      RowBox[{"PackagedSmileFourierBiSuperHestonVanillaSpreadoption", "[", 
       RowBox[{
       "S1", ",", "S2", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b",
         ",", "spreadstrikes", ",", "\[Tau]", ",", "\[IndentingNewLine]", 
        "VolS1", ",", "VolS2", ",", "Correl12", ",", "\[Rho]S1", ",", 
        "\[Rho]S2", ",", "\[Nu]S1", ",", "\[Nu]S2", ",", "VolVolBalancement", 
        ",", "CommunCorrel", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", 
        "\[Lambda]3", ",", "LTVarianceFactor1", ",", "LTVarianceFactor2", ",",
         "LTVarianceFactor3", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4", ",", "9"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"spreadsmile", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"spreadstrikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{"S1", "-", "S2"}], ",", 
            RowBox[{"spreadstrikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"spreadprices", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "spreadstrikes", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"interspread", "=", 
      RowBox[{"Interpolation", "[", "spreadsmile", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"VolNormal1", "=", 
      RowBox[{
       RowBox[{"inter1", "[", "S1", "]"}], " ", "S1"}]}], ";", 
     RowBox[{"VolNormal2", "=", 
      RowBox[{
       RowBox[{"inter2", "[", "S2", "]"}], " ", "S2"}]}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Vol Normale Underlying1=\>\"", ",", "VolNormal1", ",", 
       "\"\<Vol Normale Underlying2=\>\"", ",", "VolNormal2"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"spreadMarket", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"spreadstrikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"MarketCMSSpreadOptionNormalVol", "[", 
            RowBox[{
             RowBox[{"spreadstrikes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", "tenor1", 
             ",", "tenor2"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "spreadstrikes", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"interspreadMarket", "=", 
      RowBox[{"Interpolation", "[", "spreadMarket", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"inter1", "[", "x", "]"}], ",", 
           RowBox[{"interMarket1", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"strikes", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Last", "[", "strikes", "]"}]}], "}"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Implied BS vol: Underlying 1\>\""}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLegend", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<BiSuperHeston\>\"", ",", "\"\<Market\>\""}], "}"}]}], 
         ",", 
         RowBox[{"LegendPosition", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.3"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"inter1", "[", "x", "]"}], ",", 
           RowBox[{"interMarket1", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"strikes", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Last", "[", "strikes", "]"}]}], "}"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Implied BS vol: Underlying 1\>\""}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLegend", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<BiSuperHeston\>\"", ",", "\"\<Market\>\""}], "}"}]}], 
         ",", 
         RowBox[{"LegendPosition", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.3"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"interspread", "[", "x", "]"}], ",", 
           RowBox[{"interspreadMarket", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"spreadstrikes", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Last", "[", "spreadstrikes", "]"}]}], "}"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Spread Implied Normal Vol:\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLegend", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<BiSuperHeston\>\"", ",", "\"\<Market\>\""}], "}"}]}], 
         ",", 
         RowBox[{"LegendPosition", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}]}]}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.4057762003884954`*^9, 3.4057762025760374`*^9}, 
   3.405776255905186*^9, 3.405776416377017*^9, {3.4057800166648912`*^9, 
   3.4057800478217397`*^9}, {3.4057804365948286`*^9, 
   3.4057804765330954`*^9}, {3.405780805461286*^9, 3.405780852274685*^9}, {
   3.405780886540968*^9, 3.405780890916052*^9}, {3.4057809307761917`*^9, 
   3.40578097858961*^9}, {3.4057810164653373`*^9, 3.405781039372027*^9}, {
   3.4057810767477446`*^9, 3.4057810779040165`*^9}, {3.4057811268424563`*^9, 
   3.405781323018098*^9}, {3.405782231113658*^9, 3.405782274176985*^9}, 
   3.405782619449239*^9, {3.4057826743877935`*^9, 3.4057826899974685`*^9}, {
   3.4057830666922007`*^9, 3.405783080770596*^9}, {3.405784231730194*^9, 
   3.4057842850280924`*^9}, {3.4057843588576345`*^9, 
   3.4057844294839907`*^9}, {3.405784469937893*^9, 3.405784493453969*^9}, {
   3.405784536564172*^9, 3.405784565455352*^9}, 3.405784639222393*^9, 
   3.405784935024947*^9, 3.405785043355152*^9, 3.4057851172315702`*^9, 
   3.4057854921762695`*^9, {3.4057856229131546`*^9, 3.4057856243819323`*^9}, {
   3.4057858318390408`*^9, 3.4057858558707523`*^9}, {3.405785917590687*^9, 
   3.405785956138302*^9}, {3.405786069874861*^9, 3.405786093844071*^9}, {
   3.4057861330323234`*^9, 3.4057862199558673`*^9}, {3.4057862719724913`*^9, 
   3.4057863361612234`*^9}, {3.4057865187272286`*^9, 3.405786547821537*^9}, {
   3.4057866082133217`*^9, 3.405786663495633*^9}, {3.4057882781360083`*^9, 
   3.4057882864799185`*^9}, {3.4057907817465773`*^9, 3.405790790449869*^9}, {
   3.4057908885455027`*^9, 3.4057908910143003`*^9}, {3.4057918203133917`*^9, 
   3.40579182125091*^9}, {3.405792185414152*^9, 3.405792211727157*^9}, 
   3.4057925336552134`*^9, 3.4057925855468345`*^9, {3.4057926925020127`*^9, 
   3.405792696111457*^9}, {3.405792752003155*^9, 3.4057927525187902`*^9}, {
   3.405941648091896*^9, 3.4059418314547915`*^9}, {3.405941926097234*^9, 
   3.405941940191254*^9}, {3.4059421299761477`*^9, 3.4059423046513767`*^9}, {
   3.405942483217305*^9, 3.4059424945300226`*^9}, {3.4059425429215765`*^9, 
   3.405942548671687*^9}, {3.405942651751791*^9, 3.4059427327377205`*^9}, {
   3.405942763988321*^9, 3.405942777801086*^9}, {3.4059443173462696`*^9, 
   3.405944558569651*^9}, {3.4059452030664005`*^9, 3.4059452053164434`*^9}, {
   3.405945361663195*^9, 3.4059456457623997`*^9}, {3.4059456851694064`*^9, 
   3.4059456922945433`*^9}, {3.405945957877767*^9, 3.4059459877533407`*^9}, {
   3.4059461661005154`*^9, 3.4059461689755707`*^9}, {3.4059463494790363`*^9, 
   3.405946350947814*^9}, {3.4059464969037414`*^9, 3.405946497685006*^9}, {
   3.405946601061991*^9, 3.405946605015192*^9}, 3.405946671563345*^9, {
   3.4059467461741524`*^9, 3.405946751314876*^9}, {3.405946800222065*^9, 
   3.4059468100347533`*^9}, {3.4059469260369806`*^9, 3.405946934334015*^9}, {
   3.405947047414311*^9, 3.4059470504612446`*^9}, {3.4059471719167013`*^9, 
   3.405947182010645*^9}, {3.4059494736483936`*^9, 3.405949480851657*^9}, 
   3.405949636042137*^9, 3.405949755060047*^9, 3.4059499185944366`*^9, {
   3.4059501806463428`*^9, 3.4059501943966064`*^9}, {3.4059503280710487`*^9, 
   3.4059503324461327`*^9}, {3.405950473995725*^9, 3.4059504837771626`*^9}, {
   3.4059506665306716`*^9, 3.4059506669525547`*^9}, {3.405950768938888*^9, 
   3.4059507691107664`*^9}, {3.40889406187111*^9, 3.4088940924185715`*^9}, 
   3.4088964601202803`*^9, {3.408896496386602*^9, 3.408896662342913*^9}, 
   3.4088967955329704`*^9, {3.408897325261891*^9, 3.4088976278458257`*^9}, {
   3.408897679815573*^9, 3.4088977197225895`*^9}, {3.408897751691953*^9, 
   3.4088977521763377`*^9}, {3.4088978373810987`*^9, 
   3.4088978378029814`*^9}, {3.4088978937415557`*^9, 3.408898045072586*^9}, {
   3.4088980877296553`*^9, 3.4088980926985006`*^9}, {3.408898136324338*^9, 
   3.408898167106179*^9}, {3.408898198325528*^9, 3.4088982149352226`*^9}, {
   3.4088982451389275`*^9, 3.4088983371250687`*^9}, {3.408898367719406*^9, 
   3.408898374860168*^9}, {3.4088988638226805`*^9, 3.4088989240738373`*^9}, 
   3.4088994916784854`*^9, {3.408899621759108*^9, 3.408899814637811*^9}, {
   3.4089000055164757`*^9, 3.4089001585662894`*^9}, {3.4089002016296163`*^9, 
   3.4089003984146442`*^9}, 3.4089006887483435`*^9, 3.4089009583316445`*^9, 
   3.4089011092564173`*^9, 3.408901256759249*^9, {3.4089013426046476`*^9, 
   3.4089013458390846`*^9}, 3.4089020594934115`*^9, 3.408941273871111*^9, 
   3.4089431852828093`*^9, {3.408946138369096*^9, 3.408946163900836*^9}, {
   3.4089462137455425`*^9, 3.408946231495884*^9}, {3.4089462735435658`*^9, 
   3.4089464438280854`*^9}, {3.408946720786528*^9, 3.408946721583418*^9}, 
   3.4092255483343153`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyd/XV4lUfwNw4DIUCBAMEleNBSinvZG9dixYsX9+JapNDiUNwlUDTBCRa4
D8GCBoIlJBBIQggQorjl14cznznPDud+n+/7zT9c16fbuWdnZ8d2dk/RPiPa
9UuTKlUqr8ypUrn892/RBz8fSkmJN6vuznYjJSWHrfDC1he+PDhs9h+zf43v
sBeM1+oXWzk+/Ii5O1OO6cNCoxnf1r1ztnJuvmac19j+ns0iGPfd03Hkk3yH
zX5f6YQy7n0xW+MzJXfR+CDGe63aUyLs4k5lx/0Zr7nMJcR8HqZS0R/wG9Ev
G7St/RHjlRxP9JWkT/wo5/xEKMk/zVfJ+ZJ8lJQPyVNJeULOtqZZiiz1dLd1
9u6zZEXEKZYz8LZ9x71NKmCynIE3n/tL8I2yJssZeI/be7L41PVjOQPvWMn/
xuWZB1jOwCf1zJ92pc8BljPwPjNfhg/uHMVyBj7bb36hm0VcDMhZjoecJX3I
2Tk/EUryDznL+ULOUj6Qs5Qn5Lzyep5HTZdmtnlP7rmsxfwLLGfge10qf59S
6yLLGXi6+w3aX8pzkeUM3Fay6Iibd8+xnIE/ev9k8A23Eyxn4DGvmtatN/wY
yxn49EvNd796G8tyBj5saouXpVtkYjnL8ZCzpA85O+cnQkn+IWc5X8hZygdy
lvKEnL2/0ktnG3Hj6e68g4JYzsCTU6frHbQ3iOUMPN3dU3l/6xbEcgY+cHSG
44On3mA5A9/dtl2OYW7nWc7A74eNKpG8xcZyBn63zuOmx39+zXIGnv8ff9uo
H3OynOV4yFnSh5yd8xOhJP+Qs5wv5CzlAzlLeULO/l/1PLUt76zjKSP2PGI5
A7dtDM2wZeMjljPwVJ3/qfZnnkcsZ+Bel5fVmHIwjOUM/MjTe1Eel4NYzsCH
lj3iPuf6BZYz8GGdH1XvsTuVATkDX9Bv+fXpIYVZznI85CzpQ87O+YlQkn/I
Wc4XcpbygZylPCHnfV/pvTG/r/3w1zbPX7KcgU8d0afn1mNxLGfgz4/NPpaq
bBzLGXjY4+M/pHi8YDkDf3Oxzvt5dSJYzsCnF8ly+PDzGyxn4M3rdW4YHJyZ
5Qy873d5tma59j3LWY6HnCV9yNk5PxFK8g85y/lCzlI+kLOUJ+R8mOS3qEWj
AqPfMB3GC3a9GPOlYhLLGXj5y3HPWxV5xXIGXnnPgwsV/ZNZzsADN7x7HJjy
nOUMvH+Ua4hxI4rlDNw4t6tvk/cFWM7AV+S+tnXCkVosZzkecpb0IWfn/EQo
yT/kLOcLOUv5QM5SnpCzfRa3/Wq9Xr9pRvVnLGfgu9aXn/qotkOfgVec6zFy
l3siyxn4bZ+Sbj5rEljOwGc23qGWpX3McgYe90OS6/jYdyxn4MmF6p1tsK4E
yxn4xPHlvdI8a8ByluMhZ0kfcnbOTwTj4B9ylvOFnKV8IGcpT8h5M9GbLfQZ
eH6hz8C/F/oMXOoz8GtCn4H/IfQZeBuhz8C3CX2W4yFnSR9yds5PhJL8Q85y
vpCzlA/kLOUJOf9rtyeqhrDPwOcL+wz8g7DPwOOEfQb+Rdhn4EuFfQbeSdhn
4KOFfZbjIWdJH3J2zk+EkvxDznK+kLOUD+Qs5Qk5n7L7R6OoiDeAXxLxBvD0
It4AfkDEG8BtIt4A3kvEG8DHiHgD+FoRb8jxkLOkDzk75ydCSf4hZzlfyFnK
B3KW8oScd9rjPWOCiJ+BfxDxM/CMIn4GPkLEz8B9RfwMPErEz8DDRPwMvIiI
n+V4yFnSh5yd8xOhJP+Qs5wv5CzlAzlLeULOS+35i3FQ5IPAj4t8ELibyAeB
XxH5IPA3Ih8EHivyQeBLRD4IfLTIB+V4yFnSh5yd8xOhJP+Qs5wv5CzlAzlL
eULOp+35uNFL1DeAdxP1DeCdRX0D+G+ivsHjRX0D+CxR3wA+SNQ3gM8R9Q05
HnKW9CFn5/xEKMk/5CznCzlL+UDOUp6iXmdY1OsMi3qdYVGvMyzqdYZFvc6w
qNcZFvU6w6JeZ1jU6wyLep1hUa8zLOp1hkW9zrCo17E8i3zFw1X1r7iL7eqV
X9dd3R3E+Nqv+v/JvNH7z4z5v39snis9rWSo70vz3Nf1SjTf3blaY8T+RDOD
7XHmpZ7PGM/Q/Hpg6Isks2WnhslNl0YxPtjrxfl1pxlXEic6StKh7yr5XfBz
wo6rD4If4JkFP8CHC34kDn4kHfAjv0tyM5fY5aYekNyAV7LL2bhBcgb/kyZm
fdd0aXZbxr67AvNNPM76D3xbTfd7vwUfYzrA24VnfrxwJvThLuPTIw3XsNH/
MI46bULzOq17nFhE+n+Fx5dzy/3rnuWXFXCu6zZ9fsO1G+KTgzz+WK7ab33a
vmIc4x90LT6rWalE4MpivJLj6btK8kP8K4t5KTkv6K2UD3CMz1u19nDfYQd4
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
FaF8vA+99455/eGae73vsIy203ldaiy8cpnnhfrnH1FHfjR2XeZ51ayWZ8yw
0Ey2X1b9NfLJywCeV+GvepLa5rJjR+6z2cN5Xsj3Sx73LNqsVRjP6/7XdXex
XajfeVn/qcE8L9DptqJT29K/pWV/Bzp+5Wa3Lhf6QOG7A7/O9525+t2m/EMu
xPJ30V/ROahaxYy9n/N3H32d10dz2Kzkh9V3RvN3BxOduGr9j8xo587fBZ11
2/p97J3mKet/ONHppcr+2cXdER+uofpeEP0+Avgs+ZXOM/P7XxvFnK2WxN8t
Q/iK9OPeFplehL+LPo3mHReNnlXrDX83O52TblqXtt25aw5/Hf3V3/maGXw8
2s3NGsf03xH+++KdPhW7f8/0b1AdtPOhxe3bdEjP8VvQV/t50yzhmWfzj/PP
M/0fSF869zy4M7BjItP/nvAHvd9urrm9BNNHP0ZAzaQXrWd+x/Rnfp1XmKo+
eWD9oX8FMv3Yr3Xy12pJhvQl3SsmMP3nhP95223qhru5mT76MQYOHtq4WYkU
ls9Y+7mwOrh/+4OiQ+8z/V5f92kqY2bvHfmX5ohgfWj21Q58Vp1nr1rbZHwk
fxfj600b9bjUf/zjuziv3OpxJzJgcYLDHhKdrbv/nFatxRXWh3+ofhgm9KHF
6Ow5l3qmM7qfKNYuvtRt1luce1ZqmTTubd87zOfi+u51Qn3TGumHja1cbOQd
5hN0ziz7u1GWMylsB0BnzKmJJQ65BbMdqEx1SPzOBftH+742etK+Bj+ov/1N
dgD8TLLbDaP56Ys36xS47PCPRGegR6aG59Vr5gd02oxaUr3fmBu8f5fY7aTR
g+wkvou63Aiyq/huJbsdNkqQHcZ3FxOd6WVdMk5b/5K/Czq5qb8C6wU64b+N
LfGmtxevVwbx+xGwhzjvyEV+B/Yw3u5fjO+u2/0U5pW+R7b8S7flMF5uC71f
84KjvneP+irbkb/j+NnuH43b5B8xr3RExz3iS+zDVE8c8iQ6W+hdEeF/+XcW
YOfJXxuh5PcxL5yHtqE4AXRqUD0Wv0MHfB3Zt0DSZ/D/B/VjmG17N3j8V6LD
v1jgucmOZa2fP3FSg2Smk8aOqxw6rqzwMbTfzxN9xKuLad+FE5/A5X4EXpH2
RZA+X9Nqv9D62rC+GC9//1HiiIuQzyIuapU35wSvy+sYdx5fmSbpg03XB9N0
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
SP32wNGfVrzIzYMjKz5hfvaTPZ+r369UFnUVJe+bAJf3tYFb8KMkP5ivRd+X
sjgHUbKvDLiMh4E77w8JVzIOBJ/y/gJw9DmUJ/7hj9C/0YjWBfS3E/1VepzJ
9faOmv7cU1Z5jUV+weeq8r0Ii7q3Ke+X/e9wrqt/c+5pQccK57jrmvALzu+L
OXBpt/+nOOQJvY0eq/tZue+wX5DvuNN7p5w3WdSjkF+7ifHy/inmJe9N/C/x
b+5f/P/Gw5Xs64Meol7U9+KqNel28H1Prlten7nF+6cOjno4+huvj6i0pnNT
Rz1c7hfIGX3Rd6M8rmV8dYi/C3v+UMcd714SP1wfoL7xxne85lXb4sU48oKk
hdfz7vtxK8t/Benbbk3+jnf8FtK7asD3kL/LpMU/jnf81tM7fsBl3QM46ofd
6d05zBd4ncJjYlYeduQp6HNoeqjk1JjemxmHH68y/PfF1x5s4ngM43/zynF+
ohnDdgD9FWuORV84VuIp188t6oGmRXxoyvgQ/MPOP1q7d0FCaADrv+wn1+22
ww8CRx2+NckHeot1+Yfe2bPCIR/QqULyBH3ZNwX8H9qPPro+cPywVtMHk/sr
Orz/NGycS7wj/iQ9nPMgos6RqS8Yx/0FtXyJejAU96RM7rto+NDl7w31Eng8
4grP1E/7Gv3fMI48tEiasj+E7EpmHPcFHq/dlNen1GvGsV/GHjqzNyE5FfoA
OT91u7F17MMqn3k8+uebNmzcJvo099Hx+fL3gh/E+c1OP1jmcvK9I6+nPq6U
wWNd3wW+ZRznud2F3ODvOt1NqXl0Gb8jwf1aMT3NgIG/sXz4XLgpyY37u0S/
K3B5/xE48rjQZm1GNfjtAePoC82/oqTPxReO/Aj1mbkv7nXJtY3v4bIfr7ni
1LIP7td4X8C/zPlxs4dZ19Eng3sEk4uFHyt1LoLtOe69tnL1jnQpwe9R8Dny
oqw1H/lVceN1xL47E7Axd69a6RnHudWOW9dyDT/A9yj5nbqb2cv99XZ7An93
A8Xt9y++KHHglEOvEHflK5jweUZCfqb/mvL9V+nWN0i1KCfjiN+OLngQ97JZ
Hv4u/ObWK52Oe21LzTjuwy5be6jnsUauTAf+6N/E/HfOdivDOPrAyx8+2Gh1
eHHGd5Lf6T/o8qlmXUo6+p+d958r2fcCfqZTvXGtxk8g19v3avybjnNwwSf6
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
xr+/h/eNqf9NfGXcR3xF/U4W81VyviQ3JeUm7ttyv5Dor1PoZ5so+syRt4p7
ssqWKX/j6Arf1PM5XxP1Z64viToD53Fxeh+mGkZ9iagn8/kg5fXF9H5F7qdq
qef7nIciz8W++3XhgdYpboF8DgV82sHVrvsyBcr6A9fTgLMd2Bn3vl1FjA/h
uHTsqvaTFpU6jvsmjHfaeie5WnWmz/hyohOrxWMutvzaeaKjL/eonldyPDlF
t9uMo/7TR/Tx/kv5xUCBI+/zt7i3cu7/gcs60gqLc7c2ep8b93OK/j1zEOmn
uH+tquv3r9n/Wtxf5vGiXsf3KUSfPOu/uM+uEB+eEvc1zuhxNeM9Kf6cTv0q
0M+S9B4a5cuM96D6GOkV69so0iuqG7C9Rd1gqm4PbSNG2u2DqdtV22WyD+I+
oO07uq83SrdjtkJkx+heG+eDuNc2SreTPB5+BLjF/UHutzF1O8Z8FtDtId+/
m6rbQ56vuIfI84IdRr45mfxpvN6nx/35K/V4xnaV/Hs7vY+O7wXk3KrFG7ah
FG8QriS+Uo8fmL6I63hf9xH1GezfxyJvRT//0jX/52+XH/Bc1OdAeB2JB+vn
U3w/a7t+PsXnHeLdA953s/W8Q71aac87EKcBx/2y2Xpew+P1fDBSbdbePeC8
lfeX6PdWc/V8k/fjOud94Dxe5KEKeWh9vQ+f+2CrbNXydxVH+TvhSuIFRFyN
/tLBoi50mNY3VMTJ6GstX/n//B3C+hp5aB0JryPxwaK+BPqinmOIOoySOO6H
Qm8vzL+2em8B5B1ejJ8oe/x0yIAshr8Wb7jY6u//oVSO1Td4PHBVtueFFe9z
GXFaXPrZHLB0/U9TUooY+vhkczmt10SLensrke/npHxf0FegL/g0Gjnn0/iJ
+IR9Bv5mRKSn16pzUj5GgHP5GMdJPnEiDt9DcXgR0efpQ32e0/V7o+ZleoeT
+sAZX9hg79yd3gmMy/5w0JH+KKNF/NNXnK9dp/O1iXrfsq3qK3t/b2GK24EP
fxs4oNp/dljU1W3tF7e6VLD5Tr7PJfUE/f/8XoFOx5H3ER3EY6DzQl8XJdel
MtXVET/X2vndkLLHvFFXZ7wLvcNJfaqMj6D3Nn2p7xr4z26zz7btlEx9uec4
Pp8w/8+TxdwfqdTURw384hX3lht8bik9Xoo0+1fLGPEqTaLs3+DzTeSb2C+x
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
xchIv4Mm6hsiHvi2P1/QsU2k34X8/wC0q3gW
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnXccV9P/xz+fz733c9dHUzIiKQmVSAoRkZCdvbfISoqIIkValJFNRvbe
W1ayZZeZrWTzJfq9nr2Ox++P+zjve+4555577xnv9+s9brtDT9jt+FqlUmlX
VCqR0k5ZpdJc6b5JpXJGvVJZvlqpfCx6E+VvrPynlZ6k83VE/xRXKu+klcqj
KjNSZQfovLMaeVrnQ1VmXZX5WXnv6tpA3eQdpdvrfC2VeVJlLhK9stINVe4p
pSvp6C76ZNXtrPQXXd9OR1uVf0TXvlP+qkq/VXp4WalspTLbqj9f5pXKB2r7
gkalcqHKN1OZNblG+6r7kM77qtwA5b2odEsd24t+QekGut5W1zfR+V1q43Ol
93EftdlXdH+VOVP5K6jMp8pfW/fdSHWG6n2tqDKLlbeL7ruy6B9F7yq6s+qs
orr3Kx2luq1V9zNd+0Tv4H7RpY7Ddd5OZb5XHw8Tvbro70S/yr1Fd1XdW/Vu
71XZ4WrjHF0bo+Nv3buNrk0Q/aGuL83czvpKZ6j9qo4OqnOp6pysdGNSHYno
N9T2MNF10W+JXqq27hD9r+r/o/orKz1HzxGr7fuUn+uo6ryb8nvp+rGqs57o
X3V9fmF6I+WfpjabqOz7uj5P+Z+qD9srTVR3I5XZWGXqonuKnqT0JdWfrWOy
jktUd6jq9lJa0bW1lZyntKZjvtrbSe9ztczf9WM970l193e2rh2iQ5crX+ja
brpnpHZqOqaqzN5K2yk9XXUnqcwHSg/UtztB9HGiHxR9kughoh9T/Ud1jNL5
bkoP1Hv5QPXbq/4+StdQOk3HQl1/WPfsrXuVOnbUtaOU7q90Bx3Hq80TVeYE
tXm82vhR9ETGtuqewDhXOkrXrqTPStdV3YaORTr/SuW7iB6scgPVh6N1/ono
bqqzH+NZ6Xo6BonuqnSK+nGW6rVVOlv1XtRxrK7tobonqe7nog8R/YDoI0Q/
KfoJ3rnqPKH6hyhvbaV9Va+JjidFb6G0k47D+B56/6eq7Aj18xVdO1h5nZRO
1/VbRf/Bu1DaVEeHiscz68b7zFmVuUX5v+n8ZqW/KtXlyv6J15gPVGY/0aw7
74k+VPRyvAPR91Q9VpfX+dt1j88hSndQ4dtE/0/5N2oc/M38Vb0VVOd5nkXH
4DB3vlXeCNVZTnnvKm+o6Fj0a6JXUzuJjq9U7l7lL2CeKr9P6rl5ivI+Sj32
5yp/G7XVPPJ8YM6lSldQnaMTz/EvlXeM6Daivxa9Qea18VGl/XTeiDyHT617
3r/N+NG7PV5lBqvMr7pXJ96V8seqTEfRP4ser7o/iX5a5caTp2M2a1ph+hLV
PUZ1p6r9o5VurvK9dfyia1sq7aPjV9GXqdxTqneK7nm36v6ovHuVPqrjN9GP
KX1I9fuq/INKHypc7xGl/9Zcnvr/6D476/wf0YuZw6wxSkfm7td1us8BauM6
lftL15bovJny11Z6gso8JvpS0d01Ry5VmYfV/lDl76NnvliTeCZjWvX2VXqq
8p9R+StUvo/KL1b+JNE3s8aL3k/prXpHs1Smn9JbEpffmjmhum+Jvk3ll6q/
Z+r4U3XO0j1H6fhW9D66tr/KvK6yqxQeD7sqb3Vdi0TvzbfUPTLRq7CPFc7f
UWVWUJrrOEVl6npfqeiHVfZmtX2Tjr+rfhe8k63U946F1+StlLdd1W2erGst
lMY69hH9Rml6J5VpGcbnAcq/R/27V+ki5Q/Tu/1G9a/V+YGFn+Mu1lfl99Cx
kLVeaU8dP4i+rXB6h9J+ha/PVHqG+ni6jq91frfq36P2Fqr9i5hbOt7T+VlK
F+l4VPTlmcfgU+rjTB0tRa+rvFmiX2d+iz5D7cwRfb3oBaLf1/s4Sd+0meiF
en8HiS5Ffy16Z9Gbq+7L6sMC9ecz5W+mupur7gjmm+hI6f8iz3fm+dmiJ+id
jNL59anXlhN0jxPrXg+eV/kmuetuoXYy0ZuL/lxprqOP6ClKR6v8iqq7QOX3
qnnu76lj+8x1v1CZM3VtD9Gl0ttY63Sspzq3KF1VR1fRD6idzkr/VJn76h43
P4jeUs/VXO+/UHqg2rpN7ZyvttuzF7FHsE/XPJbuV71ZrOs6diJfdcYyhvRO
ThHdWvWu1bs6WO3crusTdH4F+xm8jNIxmdv/TumeuucpqvuVru0tenQY58+I
flrHVSq3l9KR4bsfovbvV96F7InKnxnG7SzeqdIeSs/UfY9Uuq/6cKfSa5Q/
SOlwvf9/GFeix+lYi/Vdz/6l0mHwdKw1So9jjRI9Q2XOFb2b0sFhPE+B71If
ztd9b9fzHqn8Xdhrda9fdT5Z+fcoHZu5nz8o/V5tnMn3Z96qD2fCKyl9Ve+y
mY7huvYj70f0YqXH173/PKu+XSn6DF3fWmlVbY+u+XkPVrqb0jbKX1/3u1Pn
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
LGNS4A/QQ45KbAvTQI+qa3vWbA+zY8DBjqtYbuW97qu+rYMtZs12iRcW5gPn
KL9amG+pgBEFXSQ6yS+CjgldE/saRscjK5Z/+1eMS6+tOnvUbJf7Xt02uUti
417wpOiMkKOPVf7R7FeFMZmflTcg4GNcQ34/UOl+KjMv6LPQa30S9EHohdCf
7l6zDWuZuj/YdmaR8eSmFcvN2BH9GxtfJh+9GrgbWA1t1dSHYaz9mdc63sk5
jJ+a90RsOMCPwFh4fnAW6CW55xBzCZ4KuXu46p2SGUeZFb5p78Lr3k9Ku/Ju
wnx/I+ASn2bGBA4Pe+NXYY2Fl90rYHG0Cy4Gja5trdSyP/q+FevuI/Ymexbe
K2Ol39a9t2IDyxgcHMbh0ty42UuZMQTGxTGZ85CHsKUZWBgP/E3Xpxfec99S
mTToo9FLHxHWFfTRYFWc/5Eb/+Ld/iB6UW7MDP3jGqkxGXR5T9S8p/CeF9Vt
Y9uBNbhm+5/pOn8k8TzDNufawjYw2NxizwVWAx7aBbmyZruCAWp/Ss16GdIL
atZjYR8Ijf3A0LCmYtvDXDw1vJNOgWZf5tudUvO+f3fgaT9Tma1T640Wx7YD
hwb/v0v3m690j8S8L+XRuYxR3ZdEn6Fj29Q2K6dhl1qYT5ibWW82JfSTdWVY
WJfAsZjjGyZe74eHNf/3zGsh9hRtCu8v7DP3l7Zj+rM0hgLvin3PJqXt7lYo
bFs+sWZdI/Z459PPivmVk8M43ytglXWlsxLLQ9hhgbOx9h+u+6+bmKfARmtR
zXIHY2LzyDw885Z9g/2GfRjbJvatv+rGvcaH79slNc+Gvps5MS3MC2Qv9GTI
X8hS6MOqFdtHo5OHp/xf3e/jz7qfaVJ4ru3Ay2LjeOgMaZ+x9UhkOzP0/U1T
63/hQyaHd4KuE9so8nmnB8WWa7CfYR9gn4YH2z02TT/Bxh+oee0A2783rF0/
1kyztnRKXQb7DfQR94V1+JGacULWE/D2B8McZ68EZz664vSemucP68uDYb6B
MTJmvytsv0qb2J+kqe1AHk49ttkj4fOw78Y+AdzwnNT0v3XbgKOLRW+6amrd
5lLln59aF15NbU8Hzf4K5npVzfrdsxLvsU0S77fYVjIuwWn/0y3jC0Kb2Fed
m7ouN0PHyn3R+/J8PCe8wY6xbYaY3y30/UYrb/nSPCqy82uZbfuhsUe5Pje/
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

         "]], Polygon3DBox[CompressedData["
1:eJw1nHfgV+P7xs97nPM+413JrFQqFRIiMxUhRSgjo5JUVqiUVGhJgwYpOw0y
IiGyIyUzEvI1srdsyuZ3vbrO74/z+Tz3s854P+O+r/u6n8Z9Bx03sBgEQf0o
CMr6P13/f1bGUl1JJQg+0nWNCl7W9YHSf4dBsGchCL5W+Y6Sa+p6Wunv1PYx
lV2VBsEJpSDYRv1sXQ2CWP/bqP4vqrOz6jZM9F/yr0rvq/I2qr9cZRPUfj+l
f1H+PbrXcZIT9fePrr1U/wvVaaKy9ervRcmfS24searaHKv7dVLepNTP96nK
XpA8WXWn6Nog+V5doepPVJ2jVf989f+rnmULlXdU3Z9UvpPKr5T8ZdF9NJLc
RfU/VnoHpQdUfb9j1L6v2k9R+j/V30vpj1Sngercpj6b6fkfUHqy6n+k8tfV
/48qb668ZipvKXmp8g9Q+YHKWyK5hvpsq/QBulKlM11tlP5B9W5U/5eq/Y9K
j9W1TPUv0D0+0bsOk/yA5PMlr5U8V22+U9sblLctz5Dpv9KjVa+V7reL8n5V
X0cpr47ybouD4CX1/7Lyr1L5YL3T3mq/lfqroWf9XO2/VLq+6uymurWV10ht
H1TbvVX/BNX/Xv29qrzfE78j78pv9qHq1FfeTkpPVHof1e+u+j8U/U3+UVmo
Z26idGNdFyv9pcpf1/0/4/fR/Uao3VKVPaC8EYwNXRU9Tyddw1U2S/KbKjtD
9S9X+0foQ+lvdY+m/N56/q3U/lLV3UP3/0r9d1d5VfVqSP5C8mtq30V5zfU8
E1R/S9V/X+W7q/xntftHclF19lF/G1X/W6WfVv0b9XzXKe8tyWdK3jr0GGes
ryt4/lym/hL6U3o39feL2n+j+vNVf6Hud7H6f1jlg/Q+/1P79YxppZ/X9W7F
44OxMEDyRYwFtflO/TdT/rnq73vGp8q/VX8H89vpekTlj+lqp7pv6v4DVbat
+t5W9V9XHwt1v1Bt9lUfgd7hwbLnz7+Sz9N1s8pu1HWw2lyjPp5W2Ti166r2
2yjvNckH6Zqg9Lnqv7+62UrprVQ+RfUfVdklqn+M5KL6X6r+L1SdyarTW/Lp
Sv+n+9yk8o9ZTwKP6TFqc4ry++velyrvZKVPiL0W/Kn0jap/mOQVqjtedbtJ
7qn8gao/VXW+U96bkndW+nHVWaf0P7oe0P0HK2+70POxb9FrwHGsb8prpbIn
8znyP71PH8lbKL+2+j8x9XrIunic5Ksln6S2F6nOH3rX09THRZJvltxb6etV
3lPyBZKvU7qO+hss+Srur/R8temqe9VTf8dX/XtP0fNtq/L3lH5KbebRXulL
VH6t6n3E/NbVWumX1ceLqjs4Lx9Scf3rVX6Pyt9R+aD8XbdjfkqerP4f43n0
7e7U/Qep7jUq767ye5jjkm9U2xOr/v2fUt3Z6nMgY1vXJLXfQtdipQ9RvXkq
/0ptbmbtUfsNSs9R+mS1H6jnb622q1W/qrL9lX+N6n+qOtcpfb/yvlH6FqVP
Uv3t1OfbKg/UZm+lO+oZV6r8cpUfq/Kq5CfV15nKS5X+XnVulTyK31vpo/Qe
9/B9VX6n0kcxX/V7fSt5rtK76vpT8geSZyl9uZ7vCNU/S+2/Yb5L7iL5PMk/
Su6r73W7+n9Q8tW639YVfzv63FPpI3WP21V/mvq7XenLUq83Dyt9oZ73d9VZ
XPYYZwzdpvLRJX+zbuq/ieS5zE3JH0v+WfdrqOc6gd9AZW8orX9BRW32Y/1n
T1F/K5XXkb1N8rWSX9H1MfuT8u5W3UMk36H0AWq8TP1frvr7Kn2qri/U903q
93w938up69PuUsn/6f9pqvuS6lwR+Xs/ob7GKC+Lvd+eov7aq83Rut/+av8k
80f1D9Xz91PeeJWNUt5vkcfjnyq7VXlDK15DWEsmKG8+c0p9PqX+p/N9lP5V
ed2UfjbfI5g/vVX/RMao0hXVeaxsOVR6S/V5t+r/pfvtrvQrsZ+1gfr5Vd8y
U97jKuuOzqD+munqyd6kvBZ8O9W5JN9L++r938u8NpzIPJbcjTGo+5+kvILS
78Z+1mbq/y/VvVJXffX3FXqJ6n8m+XM93/aq01J1j6x4/N+rvI1Kv693WCV5
D5WvV7qG2i1Cv5A8VumP1X696m4l+U6lv9L1uvIj3WMH1X9Zz3mxyvpIXq30
Jl1Xqv0YyZ2U3lZ1puTfvp+eJ1Lbqex9rMH5fojus7/kSHVO0292mdLzlO7E
eqr/rxY9J2crfanuv0bP85mevbPKC8p7UOWHqbyW0nuqv1sDt6nN/qrrWb1f
I+VtULuO7Kcq66K6h6v94ZLXSr6P9Vz3PlXXuHxuUn6Yyteo/B7WT5V9ovuv
1D02Sj5NZR/oep69iPmo8m7s55LrSO6aWS9DP1uivIvZe9XvRH5flT+hfiro
pOyX6ACh15u3JH/PnFR6d9Ufr7rnqHyPiEGvOa+yuuxRuncPtXmL9U/y3/p9
D1GbuirfUfK/qj9D9c9S292U7qD32aj/k9X/Rcpry9qt8nfVfkvVb8F4V94k
lQ9TeZvIaxJrE3teC6Vbq/9/i9YvOrCnVvw9GfOM/fG6nlHd/1iTVP931leV
z9T1h9KH6JkvZK1V27P1PM10zzd1/3W6miu9o67XlF6gPi5UX9uqzZHcX+0r
kXVQdNFtAuufj0bWlRkDEXJoXYM5xlwLI48tdKBrJf+l+9dSejv2bKU7MIaL
3gM66Perq/pPSO6hNk3R5XWdrbIDJb8Uef2ivKq+zqp6zDH2TsdIiTwuGZ+v
6mqid2mMforuqOtE9f+4nu9Z1R0geU/V/1bXqQXbKNgq3B/d9ynJNSq2T7B1
+AZ8ix0jP9sFyvsa3V7Xc6w16LisGbrW8a1V5+7Iey57L2Oqjvp7Us/zhtLb
KH2Onr8/OkXgNujjrOms7feqzZsqO13vW1NyO+WvCr1Os16jU7SPvCeyN7Km
0v/1md+1A99F/X+pvLVl/6ZNY7/vyKL3gJ2U3kLlLxa9RvetWIdFl12vbu/T
/b5Wfz+pbQvJe6n9DrH3btYw1jJ0RHRFpsZa/blK5UtYu5Q/Vve/gfU01wU6
Sv5E7/OS6k9mHZR8jcqHqHw/lR8qOa1YN8Xm+kx5TfSbtVD6IcZR1To7uvsr
BdtrL6Te39nnd1H5GMag5HML/j1eU/ljJc+59kp3UvkuJe+Rn1T8Xfm+6NTo
V2VddxVtY/ypPttXPNe3Y41R+nXGH/qU8g7Xs/0r+V/JvVV3oO7/huT+jB/d
+2DJC/U9PlTdB1S+K7839Vm7JA+quv9tS16zPtYz3K36H6l8icpbqnxmPv//
0DPtqrpfY3eobkPlfaN0qutgybtIHhV6D2Mve0/yBrV9Qd/3UqUfU/6VVa93
XZlP7PHoIipvy/dTeij6nZ5vG8a36l0g+XzJe6n8CJUPkXyS5I3q/y3VqSh9
hdpvl+vme6p8UmTbGp3gPWxKtftb6ft1zwPUZ6/U+hZ61x9qe4zKD1L/95et
wz+r/Dr8VuABSrdU/TuZf2p/jL7Ngsz777EV61Psl+zFhymva8VzmrnNGAdv
eFt5V6jv5apziOSf0cewX5TfS+2vY39X/RWsjZL/jLxWMqeZ25+q/FO1r8d6
qvtfnxhfeF9ltVT/J8rVbx3lNVLfDbCXyx5jjLVXVd4g/60Y7wPV7i7WX/W/
Ap2BPVt9Xy/5b6W/VP3XlB+qzhnqbxz6tvpawTsqfyfl3aa6HRh/sTEOsI4v
An/vD9X+bd2/tuSdY49Zxu5D2GRKN1b75uAZ6utM5hP2BN8bU0/v9qHkF1T/
cMk1JZ8tuQnjCx0c3Vz9/6z+d5XYOjbGA9bzcsF4yAusUZIXSx6i51mpq7bk
oWqzTGXDGXMl28wXKf2B8hpLfoLxG9luxX4FE2K/+aHse1PnMJUdqqt+yZjT
h0p/yLjB1kJHDP28VbU9W+nBer+ukj8r+jf7Qc8/smKsgD7pu39ovQT9ZA+9
zyUqf1DlvSSPC21PzFf5Q9icrJXhZhVg8zuyv34h4VuVN0YfUPt3dE1Tuqnq
/amynXX/BUXrsLvo/vWwT/Qs7ylv+4r3AfYDbAhsiXeYp+pvkur8r+I9hL1k
ODaD0t3V7316lnFFr8/9MuNh4GLXV/2bgMUMCP1bnaP7N1P9jnxXyXurvIHK
z+W9JW8MbT8vKhtzY4wHul+f0GMfnVXdBqeH1mUXsSeWbUOfpbyC3qmG6g9k
38+sk96MfVGxrso3KTOWQ38r7BXG8gL18WPFewq68Tn/v9co7w6VjWXPqhhT
qqHyvqGxJuZEHb1Ph4rnyveqt7BszIfnuUH1b1H6G3R5Pfho9tuy83op/ava
b1D7W1R+cdX6DvjWTfn+eKu+8U8Frxl8/z6Z7Sue9TrVTzLbuodgU+jdG2MP
MX9zfYN+6R8dbS/0TcaH/s9T+WlKp7pqlz1/ZySeo6guPUPP3fvYb1S+d8H6
zNjM+tlD/AbokiqfwfjXdTZ7ofroVbSO9GbiNZa1djqYk8rP0DUJvE99fK70
MvKUnp3jkeicKg56hdZF0akTZexfsa69i/Jnqvxr5c1W3lbK21HtT2JPV90z
Mtuz2LU3gA9mtsei2PYS9kkzxr/q1w+tzzWVvEbyVKWvzrzes+6fqvpPgLlK
vilfnxvoHjPQx/UMWym9L/hL2fjSFpIztRvO0sQcUnqVrvpFY4Zgh3upfg/V
Hy+5L/M/8/rMOj1T/Z+i/5HqP6H79WT/Dm07TC8bk6ule1yu8v34OdT+BezA
sm3205W+JLOtvX3BeEZ35fUAGynavmyt8p4qn8qeSnlmPKe+7ntN1ftTm7Ln
PHO/Pb8xuonu95Pq1NO1ijEuuX/F3wNdBjviDLVfLHkUtpmee6TkczLjdeB2
4GfFyFjDfcr7g98vsj27pGw87yn00LJtMMZLbfQDsD/1eVloPLyfyj5Wu2Hg
w/p/hdrXQIdE/9T9emGvq/4wvd+24G+SR0reOrb8DPNPbbaJjXuDf59SsP4M
PoB9uiCw/llHdZ5V+aOS5+r+dXX/6So/RvKxKrtMbTqzVjOGItsTf+h5/6K9
0juqzRSlvwJzU3+tMusfe+T6z6P6fyzzCXum4ucHzzyf56gaj9u5bJttDliG
rhGSX1L5dJXXVP+jytYR2R9eZdzrfqOVtwZ9MvP8Yp5NU/17sakl31vyfvc6
e4jSlynvDXSTivVh1jzWvi5qf5L6fpe5ofZHSR6X151RdT7lJ+qeY7DfI88F
5gRjGBwbPHtC2fjmw7o2Sj5M8iNKd1R/I5VeXTGev7zi+T5Qec8o/bSuc7EF
wdhZTxOvR6xLk6rGohpJflt9zsD2QQ/DVgSTVvp25U1RWTu+seQddb8rJHdn
3Kj9eP2Gs7FV9X+O5Acrrju3ZMwS/B5dhT2GvSao2LbHxp+kdIfMz8dzTlT7
FRXvB4PBwCrGwMHCi+jSFfsA8AWgY6P//Kf3OVff73jd41+lF1Zct8BvWvFF
egv2aLCRitfq2jm+yfOCr7aXvFTpAyKvjZ+p/vVKv6K8xyWPycdDq9BY/th8
vXgu3KxGBX9Jvl3yb6n9Ofh1Juh9+uj/yJLnEPOF8k2SfwPjUXpQ5DR5t1Ws
x6LPYsNhy52h8nfQbZQ3n720YlsS592dSg/LPB+Zm3OrtlevLdgnhG/oinz+
MQ/nqXzvyHOpFpiD0gt45pJ9BNz/sczrE+vU/KoxCbAJfCBzVP6TXraP2h6q
+rcofWTkuc096qrNBZnxRLDbm/EPqM0rJWOg//KcieWpyr9M5UMz44O12Gsl
r1N/x2N/q89fy8Zn/ivZxsLWurpi/81aXTOU3l7tnitbh0SXPDTyb3Ny2TZS
iW/M/qH87bFXE+vGw/RefbCnJZ+s8lbo8EoviW0fYrth/4EJYo+sVp9XKv19
6HSxaJ8YeO9Qtb1W+SPwH7GGlIxpT1B5sWL7jLxpFa8vjCVszhahf0/szX9U
54LI/owJuQ6ELnRxZl9sbfVXSrxusX7xG6M//q4+TmE4FO1jHJh4vjJvu+DP
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
sefh0hKrdwfzU8/zfys4eEA=
         "]], Polygon3DBox[CompressedData["
1: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
Jt/8jPSOHnf1KXFO0N7KSO/ocVdvzPd/0qT5HA==
         "]], 
        Polygon3DBox[{{2156, 2155, 3028, 2027, 2028, 3029}, {2158, 2157, 3033,
          2051, 2052, 3034}, {2255, 1418, 1568, 2998, 2161, 
         2162}}]}]}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{772, 1, 660, 243, 2089, 16, 2096, 31, 2103, 46, 2110, 61, 
       2326, 291, 76, 562, 2344, 303, 825, 91, 2357, 321, 106, 2362, 337, 
       2152, 121, 992, 354, 631, 2170, 136, 366, 2174, 151, 2178, 166, 2183, 
       181, 2195, 196, 2427, 403, 925, 211, 767, 504, 1361, 212, 1362, 213, 
       1363, 214, 1635, 406, 215, 1636, 408, 931, 216, 1952, 1006, 409, 217, 
       1639, 412, 937, 218, 1010, 414, 1364, 219, 416, 943, 1365, 220, 1012, 
       418, 1366, 221, 419, 1367, 222, 1368, 223, 1369, 224, 1644, 421, 944, 
       225, 771, 511, 2219, 210, 2205, 195, 2193, 180, 2181, 165, 2387, 375, 
       150, 2525, 579, 364, 877, 135, 2372, 351, 2169, 120, 334, 2150, 105, 
       984, 317, 2541, 605, 90, 454, 2127, 75, 2114, 60, 2109, 45, 2101, 30, 
       2302, 259, 776, 15, 733, 431, 1256, 14, 1254, 13, 1252, 12, 1483, 257, 
       11, 1481, 255, 593, 10, 1820, 732, 428, 9, 1479, 252, 590, 8, 665, 250,
        1247, 7, 248, 587, 1246, 6, 661, 246, 1245, 5, 423, 1243, 4, 1241, 3, 
       1239, 2, 1645, 422, 772}]}, {
      Line3DBox[{2089, 2300, 1370, 2088, 3039, 2220, 2090, 3040, 2221, 2091, 
       2983, 3041, 2222, 2434, 2984, 3042, 2655, 2806, 2223, 2808, 3026, 3205,
        2807, 2656, 2224, 2435, 1477, 2657, 2809, 2225, 2812, 2810, 2811, 
       2658, 1373, 2813, 2895, 2896, 2659, 2814, 3182, 2226, 2817, 2815, 2816,
        2660, 3183, 2227, 2436, 2301, 3043, 2228, 2092, 3044, 2229, 2093, 
       3045, 2230, 2094, 1485, 2231, 2302}], 
      Line3DBox[{2096, 2945, 3077, 2095, 1380, 2097, 2303, 3046, 2232, 2437, 
       2985, 3047, 2661, 2233, 2438, 962, 3048, 2591, 734, 2439, 1962}], 
      Line3DBox[{2101, 2237, 3051, 2100, 2236, 3050, 2099, 2235, 3049, 2098, 
       2234, 3184, 2664, 2304, 2440, 945, 3197, 2574, 735, 1032}], 
      Line3DBox[{2103, 2947, 3078, 2102, 2780, 2781, 2948, 3201, 2104, 2305, 
       3052, 2238, 2441, 2986, 3053, 2665, 2819, 2853, 2820, 2442, 2634, 2779,
        2987, 3213, 2877, 2875, 2876, 2443, 3150, 2306, 2239, 2903, 3219, 
       2937, 2938, 2307, 2666, 2821, 2854, 2822, 2444, 2823, 2308, 2667, 2949,
        3118, 2105, 2309, 2950, 3119, 2445, 2310, 2575, 3178, 2635, 2636, 
       2446, 2824, 2311, 2668, 3185, 2240, 2106, 3054, 2241, 2107, 3055, 2242,
        2108, 3056, 2243, 2109}], 
      Line3DBox[{2110, 2529, 2594, 2951, 3168, 2530, 2312, 2596, 2952, 3120, 
       2447, 2313, 2953, 3121, 2448, 2782, 2988, 3057, 2592, 2637, 2855, 2638,
        2449, 2826, 2881, 3206, 2314, 2899, 2897, 2898, 2450, 3151, 2315, 
       2244, 2904, 3037, 3234, 2939, 2316, 2670, 2827, 2856, 2828, 2451, 2829,
        2317, 2672, 2954, 3122, 2111, 2955, 3079, 2112, 2318, 2783, 3022, 
       3123, 2786, 2319, 2787, 2878, 2289, 2894, 3217, 2892, 2893, 2482, 2509,
        3167, 2320, 2452, 2245, 2669, 3186, 2531, 2601, 2246, 2113, 3203, 
       2788, 2789, 2247, 2114}], 
      Line3DBox[{2127, 2342, 2790, 2341, 3129, 3024, 2126, 2604, 2339, 2602, 
       2338, 3128, 2603, 2125, 2510, 2322, 2453, 2321, 3124, 2124, 2978, 3081,
        2785, 2290, 2123, 2891, 3216, 2533, 2784, 2532, 2122, 3080, 2956, 
       2121, 3127, 2337, 2673, 2336, 2674, 2676, 2675, 2857, 2335, 2671, 2334,
        3126, 3030, 2120, 2916, 2915, 3223, 2119, 2333, 2825, 2332, 3125, 
       2118, 2599, 2331, 2593, 3174, 2989, 2117, 3153, 2330, 2329, 2116, 3152,
        2328, 2597, 2327, 2598, 2115, 3023, 3202, 2324, 2595, 2323, 2326}], 
      Line3DBox[{2150, 2353, 2459, 2352, 3132, 2149, 2516, 2540, 2517, 2458, 
       2552, 2644, 2551, 2148, 2538, 2692, 2539, 2457, 3179, 2550, 2643, 2549,
        2147, 2702, 2703, 3092, 2701, 2925, 2924, 2146, 3032, 3091, 2923, 
       2145, 3090, 2958, 2144, 3133, 2359, 2696, 2698, 2697, 2143, 2699, 2700,
        2695, 2922, 2921, 3226, 2142, 2920, 3089, 3031, 2141, 2358, 3088, 
       2994, 2140, 2641, 2642, 2456, 3207, 2547, 2640, 2546, 2139, 2536, 2681,
        2537, 3087, 2455, 2543, 2639, 2542, 2138, 2534, 2677, 2535, 2454, 
       2512, 2527, 2511, 2137, 3163, 2869, 2889, 2870, 2576, 2354, 2357}], 
      Line3DBox[{2152, 2356, 2361, 3134, 2248, 2485, 2520, 2524, 2521, 2363, 
       2558, 2559, 2249, 2794, 2611, 2613, 2612, 2365, 3012, 3135, 2705, 2250,
        2832, 2830, 2831, 3058, 2713, 2251, 2156, 3029, 3059, 2911, 2252, 
       2158, 3034, 3060, 2253, 2927, 2997, 3061, 2714, 2833, 2254, 2836, 2834,
        2835, 2715, 3191, 2255, 2162, 3062, 2256, 2164, 2367, 3063, 2257, 
       2466, 2648, 2649, 2467, 3208, 2565, 2712, 2258, 2795, 2614, 2617, 3175,
        3015, 2370, 2568, 2569, 2259, 2796, 2615, 2618, 2616, 2371, 2493, 
       2570, 2260, 2486, 2996, 3064, 2590, 2261, 2372}], 
      Line3DBox[{2169, 2360, 2465, 3155, 2995, 2168, 2522, 2555, 2523, 2464, 
       2567, 2647, 2566, 2167, 2553, 2704, 2554, 2463, 3013, 3154, 2646, 2564,
        2166, 2562, 2563, 3099, 2484, 2368, 2165, 2999, 3098, 2366, 2163, 
       3097, 2959, 2161, 2998, 3096, 2707, 2709, 2708, 2160, 2710, 2711, 2706,
        2928, 3190, 3035, 2159, 2926, 3095, 3033, 2157, 2910, 3094, 3028, 
       2155, 2364, 2483, 3169, 2561, 2560, 2154, 2548, 2694, 3189, 3011, 2462,
        2557, 2645, 2556, 2153, 2544, 2693, 2545, 2461, 2519, 2528, 2518, 
       2151, 2993, 3093, 2460, 2355, 2362}], 
      Line3DBox[{2170, 2503, 2504, 2468, 2494, 2960, 3165, 2373, 2505, 2506, 
       2469, 2495, 3156, 2262, 2799, 2797, 2798, 2624, 3180, 2650, 2263, 2837,
        2651, 2652, 3065, 2577, 2765, 2264, 2764, 3021, 3066, 2265, 2171, 
       3036, 3067, 2266, 2929, 3227, 2376, 2717, 2838, 2267, 2841, 2839, 2840,
        2718, 2961, 3137, 2172, 3068, 2268, 2173, 2377, 3069, 2269, 2378, 
       2369, 2625, 3204, 2800, 2270, 2801, 2620, 2621, 3070, 2578, 2766, 2271,
        2487, 2588, 3173, 2589, 2579, 2622, 2768, 2272, 2767, 3198, 2507, 
       2508, 2470, 2496, 2273, 2525}], 
      Line3DBox[{2174, 2374, 2770, 2871, 2872, 3212, 2488, 2619, 2375, 2580, 
       2771, 3136, 2772, 2489, 2526, 2380, 2471, 3157, 2274, 2490, 2981, 3071,
        2719, 2275, 2716, 3014, 3072, 2720, 2276, 2175, 3228, 2930, 2277, 
       2931, 3229, 2382, 2721, 2842, 2861, 2843, 2472, 2844, 2383, 2722, 2962,
        3139, 2176, 2963, 3100, 2177, 2384, 2723, 3192, 2278, 2473, 2803, 
       2385, 2626, 3176, 2279, 2474, 3000, 3073, 2280, 2475, 3158, 2386, 2581,
        2773, 2774, 2491, 3164, 2802, 2379, 2623, 2281, 2387}], 
      Line3DBox[{2178, 2769, 2964, 3199, 2890, 2571, 2965, 3170, 2572, 2381, 
       2966, 3138, 2492, 2982, 3074, 2724, 2845, 2862, 2846, 2476, 2653, 3181,
        2388, 2627, 2282, 2179, 3230, 2932, 2283, 2933, 3231, 2389, 2728, 
       2847, 2863, 2848, 2477, 2849, 2390, 2729, 2967, 3140, 2180, 2391, 2968,
        3141, 2478, 2392, 2630, 3016, 3210, 2864, 2654, 2479, 2850, 2393, 
       2734, 3193, 2284, 2480, 3159, 2394, 2285, 2481, 3160, 2395, 2777, 2873,
        2874, 2582, 3171, 2573, 2943, 2286, 2181}], 
      Line3DBox[{2183, 2969, 3101, 2182, 2970, 3102, 2184, 2934, 2935, 3232, 
       2185, 2936, 3001, 3233, 2725, 2396, 2865, 2726, 2727, 2629, 3142, 2397,
        2628, 2398, 2186, 3143, 2399, 2400, 2187, 3027, 3144, 2940, 2401, 
       2905, 2402, 2866, 2732, 2733, 2731, 2403, 2730, 2404, 3145, 2188, 2405,
        2406, 3161, 2189, 2879, 2407, 2880, 2408, 3194, 2804, 2737, 2738, 
       2736, 2882, 2409, 2735, 3103, 3002, 2190, 3146, 2410, 2411, 2191, 3200,
        2775, 2778, 2776, 2914, 2192, 3038, 3222, 2912, 2944, 2913, 2193}], 
      Line3DBox[{2195, 2971, 3104, 2194, 2972, 3105, 2196, 2973, 3106, 2197, 
       3003, 3209, 2851, 2412, 2900, 2198, 2632, 3004, 3177, 2631, 2413, 2739,
        2741, 3017, 3147, 2414, 2740, 2415, 2199, 3220, 2906, 2941, 2416, 
       2907, 2417, 2867, 2744, 2745, 2743, 2418, 2742, 2419, 3221, 2200, 2908,
        2942, 2420, 2909, 2421, 2868, 3211, 3018, 2747, 2746, 2422, 2633, 
       3107, 3005, 2805, 2201, 2423, 2852, 3108, 3006, 2202, 3007, 3109, 2424,
        2203, 3075, 2287, 2204, 3076, 2288, 2205}], 
      Line3DBox[{2219, 2433, 2432, 3149, 2218, 3116, 2977, 2217, 3115, 2976, 
       2216, 3010, 3114, 2431, 2215, 3009, 3113, 2760, 2762, 2761, 2214, 3020,
        3196, 2763, 2759, 2888, 2887, 2213, 3162, 2430, 2754, 2756, 2755, 
       2212, 2757, 2758, 2753, 2886, 2885, 3215, 2211, 2429, 2749, 2750, 3195,
        3019, 2210, 2751, 2752, 2748, 3214, 2884, 2883, 2209, 2428, 3112, 
       3008, 2208, 3111, 2975, 2207, 3110, 2974, 2206, 3148, 2426, 2425, 
       2427}], Line3DBox[{2344, 2497, 2606, 2291, 2325, 2292, 2791, 2498, 
       3130, 2128, 2584, 2605, 2293, 2583, 2294, 3172, 2585, 2129, 2587, 2295,
        2586, 3082, 2979, 2678, 2680, 2679, 2990, 3187, 2600, 2345, 2130, 
       2991, 3083, 2346, 2131, 3224, 2917, 2918, 2132, 3225, 2919, 2347, 2682,
        2348, 2858, 2685, 2686, 2684, 2349, 2683, 2350, 3131, 2133, 2957, 
       3084, 2134, 2792, 3085, 3025, 2135, 2793, 2351, 2607, 3086, 2992, 2687,
        2689, 2688, 2980, 3188, 2690, 2860, 2859, 2609, 2608, 2691, 2499, 
       2513, 2296, 2340, 2297, 2514, 2500, 2136, 3166, 2501, 2515, 2298, 2343,
        2299, 2610, 2502, 2541}], 
      Line3DBox[{1027, 1029, 1028, 2663, 2946, 3117, 2902, 1224, 2818, 1031, 
       1963, 1383}], Line3DBox[{1191, 1192, 1026}], 
      Line3DBox[{1222, 2662, 1027}], Line3DBox[{2901, 3218, 1222}], 
      Line3DBox[{2901, 1191}]}, {
      Line3DBox[{1239, 1371, 3039, 1240, 1380, 1259, 1926, 3201, 1389, 1269, 
       1504, 1662, 3120, 1398, 1279, 1519, 3152, 1667, 1403, 1286, 654, 3172, 
       1718, 531, 826, 2677, 600, 1549, 607, 843, 2693, 608, 1564, 618, 2559, 
       619, 552, 576, 537, 3156, 1314, 578, 1726, 3136, 956, 1323, 1775, 1776,
        3170, 1432, 1332, 3102, 1438, 1341, 3105, 1443, 1351, 3110, 1452, 
       1362}], Line3DBox[{1241, 1372, 3040, 1242, 1486, 1651, 1381, 3046, 
       1260, 1494, 1657, 1390, 3052, 1270, 1505, 1663, 3121, 1399, 1280, 1520,
        3153, 1668, 1404, 1287, 1867, 3082, 1461, 1671, 1755, 1825, 1756, 
       1869, 1757, 3087, 1826, 1533, 1550, 1759, 1830, 1760, 1874, 3189, 1761,
        1831, 1552, 1680, 1764, 1802, 1765, 3135, 1877, 1766, 1803, 1464, 
       1683, 1835, 3180, 1836, 1315, 1947, 1588, 1727, 1426, 3157, 1324, 1744,
        1589, 1730, 3138, 1433, 1333, 2071, 3232, 2072, 1439, 1342, 3106, 
       1444, 1352, 3111, 1453, 1363}], 
      Line3DBox[{1243, 1472, 1473, 3041, 1244, 1487, 1652, 1488, 3047, 1857, 
       1986, 1987, 1495, 1658, 1496, 3053, 1861, 1988, 1989, 1506, 1664, 1507,
        3057, 1927, 1792, 3174, 1521, 1669, 1522, 1933, 1794, 1868, 3187, 
       1531, 1672, 1532, 1827, 1824, 1674, 1758, 3207, 1967, 1536, 1551, 1537,
        1798, 1720, 1763, 3169, 1565, 1681, 1566, 3058, 1968, 1880, 1881, 
       1578, 1684, 1579, 3065, 1837, 1779, 1467, 1728, 1468, 3071, 1885, 1990,
        1991, 1469, 1731, 1470, 3074, 1892, 2074, 3233, 1609, 2073, 1610, 
       1970, 3209, 1621, 1622, 1353, 3112, 1631, 1632, 1635}], 
      Line3DBox[{1245, 1787, 1788, 1474, 1646, 1475, 3042, 1848, 1984, 1985, 
       1489, 1653, 1490, 3048, 1924, 1790, 1858, 1497, 1925, 1498, 3213, 1981,
        1821, 1791, 1862, 1508, 1983, 3206, 1509, 2006, 1966, 1965, 1523, 
       3125, 1670, 1524, 1288, 3083, 1534, 1673, 1535, 1295, 3088, 1553, 1677,
        1554, 1302, 3094, 2027, 2028, 3059, 2029, 2030, 1916, 1918, 1917, 
       3066, 1316, 1773, 1883, 1774, 3072, 1886, 1887, 1598, 1690, 3181, 1599,
        1838, 1810, 1811, 1611, 3142, 1695, 1612, 1841, 1812, 1813, 3177, 
       1623, 1700, 1624, 1903, 1993, 3214, 1994, 1633, 1706, 1634, 1951, 1814,
        1636}], 
      Line3DBox[{1246, 1745, 1846, 1746, 1647, 1955, 1956, 1954, 3205, 1849, 
       1850, 1852, 1851, 1654, 1962, 1961, 1960, 1499, 1659, 3150, 1500, 1271,
        1510, 1665, 3151, 1511, 1281, 2034, 3223, 2035, 1289, 2039, 3224, 
       2040, 1296, 3089, 2044, 2045, 1303, 3095, 2051, 2052, 3060, 1309, 2056,
        2057, 3067, 1317, 2061, 3228, 2062, 1325, 2066, 3230, 2067, 1334, 
       1613, 3143, 1696, 1614, 1895, 1896, 1898, 1897, 3147, 1701, 1972, 1973,
        1971, 1904, 3195, 1905, 1907, 1906, 1707, 1816, 1844, 1815, 1952}], 
      Line3DBox[{1247, 1476, 1648, 1477, 1853, 2011, 2012, 2010, 2076, 3218, 
       2075, 1859, 2015, 2016, 2014, 2078, 3219, 2077, 1863, 2018, 2019, 2017,
        3234, 2080, 2079, 1866, 2037, 2038, 3126, 2036, 1525, 1870, 2042, 
       3225, 2043, 2041, 1538, 1875, 2047, 3226, 2048, 2046, 1555, 1878, 3190,
        2054, 2055, 2053, 1567, 3061, 1882, 2059, 2060, 2058, 3227, 1580, 
       1884, 2064, 2065, 2063, 3229, 1590, 1888, 2069, 2070, 2068, 3231, 1600,
        1893, 2021, 2022, 3144, 2020, 2082, 2081, 1899, 2024, 3220, 2025, 
       2023, 2084, 2083, 1908, 1995, 3215, 1996, 1953, 1637, 1639}], 
      Line3DBox[{8, 774, 427, 1018, 2812, 23, 786, 435, 1029, 38, 800, 441, 
       2444, 1037, 53, 813, 448, 2451, 1044, 68, 823, 2676, 453, 1047, 83, 
       835, 2686, 460, 1052, 98, 2143, 850, 468, 1055, 113, 2160, 863, 473, 
       1060, 2836, 128, 874, 479, 1065, 2841, 143, 883, 482, 2472, 1068, 158, 
       893, 487, 2477, 1073, 173, 907, 2733, 494, 1081, 188, 920, 2745, 500, 
       1089, 203, 2212, 936, 507, 769, 218}], 
      Line3DBox[{1252, 1377, 3044, 1253, 1385, 3049, 1265, 1394, 3054, 1275, 
       1515, 1712, 3167, 1516, 1743, 1666, 1517, 3124, 1715, 1518, 1930, 1793,
        1872, 1873, 3188, 1462, 1542, 1463, 1828, 1797, 1675, 1762, 3179, 
       1829, 1543, 1558, 1544, 1832, 1801, 1678, 3154, 1768, 1833, 1560, 1572,
        1561, 1805, 1804, 3175, 1575, 1772, 1806, 1465, 1585, 1466, 3070, 
       1807, 1780, 1594, 1688, 1595, 3073, 1330, 1605, 1693, 3159, 1606, 1339,
        1619, 3146, 1699, 1620, 1347, 3109, 1628, 1705, 1629, 1358, 3115, 
       1457, 1368}], 
      Line3DBox[{1254, 1378, 3045, 1255, 1386, 3050, 1266, 1395, 3055, 1276, 
       1751, 1865, 3186, 1752, 1795, 678, 3128, 1716, 561, 1527, 543, 2513, 
       566, 545, 750, 2644, 613, 1559, 694, 757, 2647, 627, 1574, 700, 2618, 
       704, 556, 1724, 657, 3173, 1781, 1596, 1689, 3158, 1597, 1782, 1607, 
       1694, 3160, 1608, 1922, 1920, 3200, 1921, 1348, 1449, 3075, 1359, 3116,
        1458, 1369}], 
      Line3DBox[{1256, 1484, 1485, 1257, 1387, 3051, 1267, 1396, 3056, 1277, 
       1934, 3203, 1935, 1936, 1937, 1938, 3129, 1717, 1528, 1529, 1735, 3166,
        1736, 1545, 1738, 1737, 1676, 1546, 3132, 1721, 1547, 1679, 3155, 
       1562, 1723, 1563, 3064, 1784, 1785, 1786, 1586, 1742, 1919, 3198, 1741,
        1685, 1587, 1729, 1946, 3164, 1945, 1808, 1890, 1891, 1783, 3171, 
       1777, 2085, 2086, 2087, 3222, 2032, 2031, 1349, 1450, 3076, 1360, 1642,
        3149, 1643, 1644}], 
      Line3DBox[{1361, 1451, 3148, 1630, 1350, 1442, 3104, 1340, 1437, 3101, 
       1331, 1431, 3199, 1997, 1999, 1998, 1322, 1425, 3212, 1980, 1725, 1577,
        1313, 1421, 3165, 1732, 1576, 1740, 1739, 1308, 3134, 1417, 1722, 
       1548, 3093, 1301, 1413, 1719, 1979, 3163, 1978, 1294, 1409, 1915, 1796,
        1530, 1734, 3130, 1733, 1285, 1402, 1713, 3202, 1932, 1931, 1278, 
       1397, 3168, 1750, 1749, 1268, 1388, 3078, 1258, 1379, 3077, 1238, 1370,
        1471, 1645}], 
      Line3DBox[{1364, 1454, 1708, 3162, 1638, 1354, 1445, 2026, 3221, 1625, 
       1343, 1440, 3145, 1615, 1335, 1434, 3140, 1601, 1326, 1427, 3139, 1591,
        1318, 1422, 3137, 1581, 1310, 3191, 1418, 1568, 3096, 1304, 1414, 
       3133, 1556, 1297, 1410, 3131, 1539, 1290, 1405, 3127, 1526, 1282, 1400,
        3122, 1512, 1272, 1391, 3118, 1501, 1261, 1382, 3117, 2013, 1491, 
       1248, 1373, 1957, 1478, 1479}], 
      Line3DBox[{1365, 1455, 1845, 1778, 1709, 1910, 1911, 1909, 3196, 1355, 
       1446, 1975, 1974, 1702, 3211, 1901, 1902, 1900, 1344, 1441, 1697, 3161,
        1616, 1336, 1435, 3141, 1691, 1602, 1327, 1428, 3100, 1319, 3068, 
       1423, 1311, 3062, 1419, 3097, 1305, 1415, 3090, 1298, 1411, 3084, 1291,
        1406, 3080, 1283, 1401, 3079, 1273, 1392, 3119, 1660, 2005, 2004, 
       1262, 1383, 1964, 1963, 1655, 1855, 1856, 1854, 1249, 3182, 1374, 1959,
        1958, 1649, 1748, 1847, 1747, 1820}], 
      Line3DBox[{1366, 1818, 1819, 1817, 1710, 1640, 3113, 1356, 1447, 1703, 
       1626, 3107, 1950, 1345, 1843, 1842, 1949, 3194, 1617, 1982, 1894, 1337,
        1840, 1839, 3210, 1977, 1603, 1992, 1889, 1328, 3192, 1429, 1686, 
       1592, 1320, 3069, 1424, 1583, 1582, 1312, 3063, 1420, 1682, 1569, 3098,
        1306, 1416, 2050, 2049, 3091, 1299, 1412, 1940, 1939, 3085, 1292, 
       1407, 1754, 3216, 1753, 2000, 2033, 1929, 1928, 3123, 1514, 1513, 1864,
        1914, 1823, 3178, 1822, 1661, 1502, 1860, 1263, 1913, 3197, 1912, 
       1656, 1492, 1250, 3183, 1375, 1650, 1480, 1923, 1789, 1481}], 
      Line3DBox[{1367, 1456, 1641, 3114, 1357, 1448, 1704, 1627, 3108, 1346, 
       2008, 2009, 2007, 1698, 1618, 3103, 1338, 3193, 1436, 1692, 1604, 1809,
        1329, 3176, 1430, 1687, 1593, 1948, 1321, 1944, 3204, 1943, 1584, 
       1573, 1834, 1771, 1879, 1770, 3208, 1969, 1769, 1571, 1570, 3099, 1767,
        1307, 1800, 1799, 1976, 1557, 3092, 1876, 1300, 1942, 1941, 1541, 
       1540, 3086, 1871, 1293, 1408, 1714, 1460, 3081, 1284, 2002, 2003, 3217,
        2001, 1711, 1459, 1274, 3185, 1393, 1503, 1264, 3184, 1384, 1493, 
       1251, 3043, 1376, 1482, 1483}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
s+kwk4dSOKDI5KHU5fyY/NT2Sw+ZuqP1vGsY+hSXmzKOfvWkYefOnuWHb4LK
ycfj7z9vh5nFrY+nUvuiKGQi7jjag3iM3ux5IK8a1poWbRRO5JCelHmu078E
kqPejhFXt2XAvYllt+l42FqevAfHx2TzFeF4FYk+YTo/tB5cPYTza73PnoHz
L8nMXO2tnU425WdWbT8WDwrnf0QejPt//e7SEX63gp7CMbPcJnKlanDevaFH
EDkhup77bMu/7yMk2fcRX9j3EX/fH3Wy74/y2fdH88W51ek8kGp3TAbnkR1b
P4jzOG9zOHrdPYfUOV222STxCi5O3s63diXnX3/55wh/ecHAlEOtvByizv89
O37QgzxxeZRR318E3uci9lE6aIVe535O6X0NMuMaKD33cfrdVyFtEFnwbcXp
HX4gZ/AhI3TmF5jlGqc21zSJJIutSIjcUArid7dtLrTrhlWuSo/X6ZUS2XmH
4apGMRyYcbhe+V7Xv36r4gh/tnCao+a9hxzCbVA0odHdi+ySDX5i9jQLrtl2
rG2xqID74a/bxul+gOZIuXCsBwh8tWHWOqs84uvSzXMtpg5azty0TPNqB6GC
KEuT8mri9FaX2+1HNQjs2ZNb7tf6f/hxJ1g/Lqe8frJHUDdxNvly/tz0eLgm
eXpc0rsS2JxxNIbiASL79HRvDvULxC8vF0M88Nc/khrhH30dt12Y4g3ifvDO
Noo3YFJxnRjijY9sn8f3bJ/HVWyfR70kl0bEV4kTRCy+28eQu0pjkhBfuTcf
+DpmG/UXPuy+5jlUQBJ/tEzC+pNxqzqbOhM4xCZ1+nuvFQkk6VPWht6OZJj8
9pvEQygHuccVqhl2si/PFaTGaEt1w8LCyI2/9raQwi4eI6y3qZ5lsR7rbWbd
zLuO/kKqrsl3xIevU8qvIj78i2PDWRw7k8WxnbzbG+n/QtbMoQXeKxKg1eOY
Ff6v0ftsf+SPrlU6N+Iln82HFyF//uK6xyNwnYL9HXX0T3m+WVRifcvkVJnb
6J9ObhvPS/kPJ58MPqL8J6nqqQuR/yPxzHsWz7xYImRMzxdaLpb8cf1RTR5a
zi7C841XkKlYa5UHw/ovUR7IUi3vKygPu1Q3J2YkUz3wZ4W1m80zstvEwxjj
Dzea9myn8gbS+49tp/IG4u96SlHe/uKHUyPi/1sMK49SeYaq2J2KVJ6JpPeX
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
aOjYAg4puTexAN8tTl+juR3r2EXY/h0JbP+OfrZ/x7QR9L7/oP8dv5Dt67GV
7euRyPb1WJ14rgLP5UR1ijXlM8z/fGQJ8vnWtrvqe+o5ZJxXmha+BxxM+3QT
3xccOqWfheeSpWnqgeMLuW4Cjp80ov+FLtv/YoGyMSM/s9aHbaHyAElbbkSg
PHSkeOH7C0K8Gj3xnd2thQXfmhY+A41XJoz8rOrdcArHnylwr8Px4w8ri2Ec
4O6a00wcLPZNChMH67VrwfcpZG3djYX4fk0yXSsH36fMd1jyCOW8/YRvKJVz
UG+WXolyPtLezWbtnZ9nndub06VkWoPdcYwXHZUU8cF40arJYfh+h0yvfjYZ
35cdX/F9Nr7fGfleLI99L2YRb2+DdkEubk4U/u+Ty1Hr8H/fh5ZPMfeog7G3
fL9PcamDocjWXuXXTXC7bGPHQygni/5U3yN2si/nn3JwwvjS8zgRc81WDnno
N+yE78UswSYT3z39ff8l0PPP+69d7PuvK0VBNrh+l8m6iZhPHPw9LQDXf/++
C77nIqYz9tRXt4koTZc65Y3vuf7iRi2p/8WH59jv3quy373fyn73/u/38Jv6
/6FvYekVHgLMOrX5ZjzE91mCodbMOs9f+cjE/bQSpM5h3GlP5Bsm7resJJTh
p4xGNvITpqhwzUF+vma/627Kfte9m/2uu7/yzJPSH7qI/Zlpq/A9kchWN2N8
T5S4dWl9uUcXOf7MOkXxcyRJnFCWe3zcR9h0ZewmlIdLzdzc+F5Jdq0QIw+H
pjd+pOMhPuhgB46/IRPKwfG+iUWVqhGeoF0lvnv4yUfS+Utw2+1bXdBgey3p
06pbMO6tXVFvxXuSZrR1VvWGbpjEfv/8OPv9833s988bH3sy8hwjtdYL3xPl
add9R3nW2V/rhXZKXn7dRF1qx3eN2boe7dTW8wrxZv7dRKxH5gy+01muZ7UC
3+n8/R74aPZ74CLs98BH0qf9X+jWkU+Y+1tk3i6D74Nc5UTt8f7+/S53APtd
7r3sd7lH0vf9X+iNl94yetJrQf1LfEdjbb+R0ZO32tOdUE9yzXeaiu9uTqQu
voR68u93uXew3+XWZ7/L/XME3YClD7D0bSO+4+0fEMjoycfXnufiex84/W0H
6sm/36+WZr9fTdjvV/+ly7D0VyPof8dnsPSH32TPYz7rl1D7N6zHO3o6ownz
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
Oby1an8BlkP4xG5aSeTwhIKk3rhCJ9pT8k7eMK0OeIbE7Q8eaQWLtu8rNcdq
UYm28ENyH08fen2Y3Ef/4hljae0spDKv5mAZSkYNgZL7LDTvwBPDwlEMh3X1
XCYE3njs7FkCD6J5dqP2v3l2we6/efZNNC+vb/k3L/+B5uVPxj33LPiVLb/7
09IOngEW4v7DLvf2dCL4KRjNI3Vx1R517YT+7/VXfxP6TbJKfxE7ovXq90+y
3+41gXfIfiuML+zA+4I/bC/1yL7CeL8HkH2JVyU5LJrTAC8i9Bd6bG/B78bG
d+PPO8Fvx/oyf53XoNkjJRGo2wrvO9ITtxv1wJC4rQ/xw+OXP/mN7SwyMlrC
S/RelnbX6NXRVpCm7zvPmaO7iT7Zn6inyFnbjN5rsHsT/aPzxPcO0T9L5n6K
+4zv48wbU5p9XZLQj8ezgg1rrwDvpScEDm+13/0g8E9vLr4gcHPzaQp6ezpg
70sPg+i6LnQlkVPSiSMQJC59tDD8xIJF6NX0XP4MJPHNpmp6wlXgN/lbt1kV
xdRtorSzf+s2L9zbT9ajqJ/vN5D1hqILWGS968oqsZruATgf+S2mUyAcLZ/T
ecDS6wOI8WwwIPWZzvxr2sn7VGhTliJ5n25M1+gj753AYrmt5H0qV/Uwlbx3
qB5GJhP0cOrS7bOJ/CjtfX+E+A+1namniPywae3L/PyHhaTPr6woiloufyH4
uiqntAlwbGLgENjd10/g5qo3TQhc+90lpr9mfO+2P3/+PP2vv+bf+uJvveNk
vRVdn1al97cfZ8L6f/+7ynJFG1lvRv9XrbmzFNsvmLdEVBPbL1grPe8VsV9R
Dn8kMH+Q05wjYpg/sDj87SLCn32H3jHnuMpodRs+L0hV4WDOUTnFiznHQZUf
IwT+yPI8c47z0j8z/YANsneUSBy7/Ye3C4ljv2ybz9wjPm6Jffi+wN0Fpcw9
0m6pYu5Ru7r1OQKPfSvJ3KMZa5VXEn/+zt1rN4nfciRMfhHxW7byaR1sbBtE
DSdSfvXJRaLw2iPvYk3egftmbleir2T7G8Sw/gEno2+MvipxaWH0kk/TsAyB
n7CuY/TSdje5fRgPyDaeFevHeMoURAcJnn/fYz1N56Ir0bnoK+xXLCL62ctR
2RDrVXT8uc0Xop/PXeEtf9zXhmZERX0d8ElGk31EA8R7uuEPu2IdyVsp3L1b
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
acG7Ig19CanPknvCRm6XtI14Z9XguafGx4WdEhAr3z9H8M4gapntnR+o2IlH
zyYneWzyQwq1qxzko4j9inHRIO+jzZpnvtP3m+qq8uj7ncLelb1qBUgnq9RQ
2CINjfKIjUc8ZaO9I5q+6X0shHWVrYz+SkfKtcPPU0l/DPysfJ3QQ1z1On/i
rF4ucrHjWdofTM4lkC8Uy5UvNCdqe+OSom6s5SowKC8VgvZGZf6yybsbXS90
sSnNeIiE/Hr6B0pyUYGBzPE8Mg7CCROzi7PCkFKe+PLcqHwUZ3wr70QdG9Vb
XxkL4AvHZwe2z5kQLkARmw7xTHnLRmHAEzvNxROzhvyihZBfpMXJL9oZrXsg
rQrlPDK/1uFThswKdYxujgyi3zMX9nZ2pKAtPg0S2/+oQN9WN61RuMBGT+YZ
FfnNDMLnA5T3tQg+RgKarKbfybkxFfzOevA7cuB3UiCvIBbyChZCXoGK64h2
ThEbh7As1yT6JKMs1oKKNHKPnybgfsugl403vGrUllXLRLeanwZcFYv/Yf+d
wf6Hg/3XOHyybAo5F7wTdAwrvJmGfr3aee6pawKy1bRJTc5io+prD0rDPych
hTsDSrNvPUDl4F+6wb+YgX/h5G+bQv72Usjf9pJwuvbCiI03nkxG0z2IfdtQ
Me758MmPdf4a1vkSWOcc/tUa4F9JAP9KLOeLH2kHLWyTM6ftVC37W8GLtONv
brlK3rgNrYs7YWUq2YbnievNfb6zG/FB/oM35D+YQP4DR6+5AextANjbqeDX
1MGv6YJfm4DzyR9c+Qwrf8J3Eq211QyaG4bdHh/3fMlXgDXOfPfXJc/zdUOn
kudoRO5eAHmOqtzeMs+d+Q7pnH4cgHg/KDWNj1agWvfoGcsvsVHs4dsC34id
CTpm2m8YFIJDZbZqn7OsQNVujtXHyH56rq0VZK0XjneOlX49r1GMHCF+Vwzx
uwsQv9syOnsHGR/8rNnQhIwPOi2yT4iOjyMrkZkXOUUJdTKeSOIf6TE6L5em
Vj7d3k38fnDamn8VEvCJPYYNPnpZKOnhR2b8lbbkGdH3M4JXKdPx3wF5zt6Q
5ywGec4zoB4nEOpxlkA9TsySmjtkXeG2MlEbsq6wSIYDP11Xi6bpM+tWy0Bm
H1m3WCryBLNuE3wi5LvJvcNh2VqHYr27eKl0e7zN3Xgkd+4ysz4tg4TCaDvv
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
iyE/PwTy8y0gP5+jCykMupC6oAv5fw3NzNw=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 282.1915817031009},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  ViewPoint->{-3.152639913469072, 0.6057273392572688, 1.0695587718672015`},
  ViewVertical->{0., 0., 1.}]], "Print",
 CellChangeTimes->{3.408947649460608*^9, 3.408947708414865*^9, 
  3.408947870777357*^9, 3.4089480225458965`*^9, 3.4089481011567802`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.04818389411495181`"},
        {"0.050081170606599515`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V1=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V1\"\>", "0.00033999999999999655`"},
       {"\<\"\[Lambda]v1\"\>", "0.15`"},
       {"\<\"\[Theta]v1\"\>", "0.0005099999999999948`"},
       {"\<\"\[Kappa]1\"\>", "0.5813776741499483`"},
       {"\<\"\[Rho]1\"\>", "0.41107992606931365`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V2=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V2\"\>", "0.016660000000000005`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v2\"\>", "0.024990000000000005`"},
       {"\<\"\[Kappa]2\"\>", "0.1017199035366737`"},
       {"\<\"\[Rho]2\"\>", 
        RowBox[{"-", "0.7`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V3=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V3\"\>", "0.00033999999999999655`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v3\"\>", "0.0005099999999999948`"},
       {"\<\"\[Kappa]3\"\>", "0.3380000000000035`"},
       {"\<\"\[Rho]3\"\>", "0.7070789683665915`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" T=\"\>", 
   "\[InvisibleSpace]", "5"}],
  SequenceForm[" S=", 
   MatrixForm[{0.04818389411495181, 0.050081170606599515`}], " Process V1=", 
   MatrixForm[{{"V1", 0.00033999999999999655`}, {"\[Lambda]v1", 0.15}, {
     "\[Theta]v1", 0.0005099999999999948}, {
     "\[Kappa]1", 0.5813776741499483}, {"\[Rho]1", 0.41107992606931365`}}], 
   " Process V2=", 
   MatrixForm[{{"V2", 0.016660000000000005`}, {"\[Lambda]v2", 0.15}, {
     "\[Theta]v2", 0.024990000000000005`}, {
     "\[Kappa]2", 0.1017199035366737}, {"\[Rho]2", -0.7}}], " Process V3=", 
   MatrixForm[{{"V3", 0.00033999999999999655`}, {"\[Lambda]v2", 0.15}, {
     "\[Theta]v3", 0.0005099999999999948}, {
     "\[Kappa]3", 0.3380000000000035}, {"\[Rho]3", 0.7070789683665915}}], 
   " T=", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.408947649460608*^9, 3.408947708414865*^9, 
  3.408947870777357*^9, 3.4089480225458965`*^9, 3.408948101484912*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Inner Integration\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"LegendreNbMain\"\>", "50"},
       {"\<\"LegendreNbIncrement\"\>", "20"},
       {"\<\"IncrementNbMax\"\>", "10"},
       {"\<\"InitialTailFlag\"\>", "1"},
       {"\<\"InitialTailLegendreNb\"\>", "50"},
       {"\<\"PeriodMain\"\>", "10"},
       {"\<\"PeriodnIncrement\"\>", "5"},
       {"\<\"StoppingLevel\"\>", "1.`*^-6"},
       {"\<\"AbcisseMaxValue\"\>", "100"},
       {"\<\"InitialTailUpperLimit\"\>", "0.5`"},
       {"\<\"ExplosionMonitoringStartAbcisse\"\>", "20"},
       {"\<\"ExplosionMonitoringMaxLevel\"\>", "2"},
       {"\<\"lambda1\"\>", "1.1`"},
       {"\<\"lambda2\"\>", "1.01`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"Outer Integration\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"LegendreNbMain\"\>", "50"},
       {"\<\"LegendreNbIncrement\"\>", "20"},
       {"\<\"IncrementNbMax\"\>", "10"},
       {"\<\"InitialTailFlag\"\>", "1"},
       {"\<\"InitialTailLegendreNb\"\>", "50"},
       {"\<\"PeriodMain\"\>", "10"},
       {"\<\"PeriodnIncrement\"\>", "5.`"},
       {"\<\"StoppingLevel\"\>", "0.00001`"},
       {"\<\"AbcisseMaxValue\"\>", "100"},
       {"\<\"InitialTailUpperLimit\"\>", "0.5`"},
       {"\<\"GrowingControlStartAbcisse\"\>", "2"},
       {"\<\"GrowingControlMaxFactor\"\>", "0.1`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Inner Integration", 
   MatrixForm[{{"LegendreNbMain", 50}, {"LegendreNbIncrement", 20}, {
     "IncrementNbMax", 10}, {"InitialTailFlag", 1}, {
     "InitialTailLegendreNb", 50}, {"PeriodMain", 10}, {
     "PeriodnIncrement", 5}, {"StoppingLevel", 1.*^-6}, {
     "AbcisseMaxValue", 100}, {"InitialTailUpperLimit", 0.5}, {
     "ExplosionMonitoringStartAbcisse", 20}, {
     "ExplosionMonitoringMaxLevel", 2}, {"lambda1", 1.1}, {"lambda2", 1.01}}],
    "Outer Integration", 
   MatrixForm[{{"LegendreNbMain", 50}, {"LegendreNbIncrement", 20}, {
     "IncrementNbMax", 10}, {"InitialTailFlag", 1}, {
     "InitialTailLegendreNb", 50}, {"PeriodMain", 10}, {
     "PeriodnIncrement", 5.}, {"StoppingLevel", 0.00001}, {
     "AbcisseMaxValue", 100}, {"InitialTailUpperLimit", 0.5}, {
     "GrowingControlStartAbcisse", 2}, {"GrowingControlMaxFactor", 0.1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.408947649460608*^9, 3.408947708414865*^9, 
  3.408947870777357*^9, 3.4089480225458965`*^9, 3.408948101531788*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
06NcAvYnLUnrbXahWKecVaiVgGczrrciErsQC+vb+vofErDHo9Ixduon6t1/
9/bQggR8Oa41Y+LYifjYZ8+n/JGArd25FQcYOtHhzotHXGgk4dkpQvDrNz9Q
pttxwianJNw/Q47+UteBnn6Qr+WnSEJVv7zpY6F2tIO3Q1L/nCRU++ll5rg0
o5GgEa/wS5Lw0TnK3HGrCb1hWx0dvSoJQbrWJieDmhAHg0hmoLskmC9/Tlww
/Y4mVk4d6nguCTGXg9UF39Whdz29To4VknBgUDnAgFyBJJKHcQhFCq7Undlz
tz8RtZFWSAM7peDAw4nnKYR4FJDA5K++RwpqLyDxxqootB4tf/KnnhTkPY4k
HW3xRp1BjmNEGyl4kuun3XDjJX55Y5onJ1gKBt31t+K4srDx3N9bLOFSkJ0e
y1tamY3prnN1n46RgqYslX1nPXKwy+Wd77Y+SEHqLsHXL3/m46OnXLWNSqWg
aN/LUzd3UzEbWr7QsygF5sZl3lxWldj9gAJLzroUyJMOPeEgVOER/TNpIbTS
MFjsbsw8UoXLDpeu63FLg0yvvGqRQw2+Zxb08qOiNKTLmPd/NazHYyep2t5q
0nDeC+QUV+uxpdVin42WNPx79UBrT2ID3mVzSpnnkDQIaIUtjc814slLct9u
X5CGuEd13k3pTfi0g/XV4w7SsPayxeDUehOuvhLAq+gsDbIyuJpJrxknOc+f
7fWUBiGb2n+4rhnzuZEYcr2l4fh8h2gFZwt+dNMqJdRfGqoEu2t6TVuwzd3i
Ff0oaQhIy68wqG7BtR5zryXjpEGkIHApgK4Vaz2Q1V99Jw1v6my8e3RasYC3
X0hKljR0Se0IC3nXir2eFGn4FEhDfscd9+kfrXju2Wz32VJp4Dmp9+gISxuu
D7RQ4P2+XS/haS3Nf21YJ8S3caJdGkZ7KydPBrXh5OeFNyt6pGGyYWT67dc2
LBQ2IxY7KA2ZuwNyxrvbsE+ETOmdCWko6XY6rUDTjheiTtqfmJeGsU/7JW2J
7fh8zDNOpTVpEK686uqv146lmlaUZ+kIwKkQ8uibZzu2OMFDY8NEAOfmLyxt
Ee04sIXSWs1K2D5/ixZ1prXjcnP99xqcBCj+oLvUWtGO19ts7r7lIUAuF59W
ZWc7VrO8bcItQABx+aq96RPt2OFHiLSnMAF2afr1v1hvx3HWHxfGxAiwJKum
7szSgTt+ln2zkCLAf8dXXQ4JdGDOMz1RZTIE8N6Q+Ssq1YENepav7pQjwG+F
9CuTch3Y4yw3eq1AgOdStHeKlDpw5i8FPlZlAoz5uLOF7OzA4+f0hm/tJACX
urTWJbUOTPh9Jm9gFwFeFcL+A9vYyu5WwLE9BIhLZ3wst/1+8GCwbZE2AfZ+
ZwsT2K737WKyGmU/ARI3l3bybu+3OVzKEAEEOLKHTlNKsgPvtu/+QWdAAF/P
yCxd/g58ZWwpxdmQAHu+1f24xdyBExy5HvQYE4CFcW6z8k877pyQP2F0lABD
NgKJGtt+8Fw7QMo5QYCfd/1dvm37ZTh9epVoQYBsjUtq976141gB79aH1gQo
0Wv1LUlvx0t7P33pOUOAYHnttxDdjo3/aw3QPkcAY+VOTwavdhzvv2EfYUeA
eTZBbS6HdrySIWuweIkA0qqrwnYm7dj05xHCcUcCnG5/d49h53Ze8q87WV22
+Xr7TB+abcPHj1VkX75BgLq+iTNz9W34/e2p0PLbBGC+dJt1I7kNm3/bZ3T/
PgGSWHaQD9u04VS73vw5/23+bq+/mqe3Yjp/xgjTYAKkj1hERz1uxdYZKm4p
zwlwbyEn3PFEK2akeaB4MYoAorvblaqmWrDtG6mYH+8IMNek/kCUvwVnVxy6
o/6RAGEpVC77n82YbcrJ/Hnqdt7qjtg1thnn6mD2I1nb/XjwdFQnqRnzdJ7z
LKESgP9w3c/3sk348tYza/EKArgrfRfdWfodF5HT1d2rCLBWcKhgRes7drxF
M63WSACiGAuLK7ERl/ElnH3XTQCG9OPab3/V4ZumA7qBK9t+nXDQKmepwp1l
F2lPK8uAYdy7hKdi+XjuQJfY/Z0ywNJ01cekMxczlx5Tj98lAwNrDoYfw3Pw
HqxjP6IlAzobVqW+3Nk4rJCnwe2gDEjsP9bLzJiGj2UXRQXYysBqGKCmsZf4
8u5dmWkXZMCubW957VAQfpD5oa75ogy8XlDkcqbxwanpL/4JX5WB88zFIg83
SJjts8PFpDsykK5V2+wHL1HlOwHV4lAZsExnMq+9kIp+kfyN+l/KQML7nQbs
H9LQcuKWHX2kDLwqvfSg9kY6Ir2dCDd6IwN3QqfsV1IzkVcsdaP9owzUDpwb
7NzKQbqR16pmymRgR3fbRSyCkaXQQD9vpQysvB9MzmGiouvhVuvqNdv89e03
Tj2kotcv9VQ8vsuAvgKdq+PVUrQeIvKSuUcGkr9SP82olCM+7uBUxT4ZGI2q
ujvxqhxRgukrTQdkgMw8YfiPvgJZB86svRyTgciopGbLlgr01bfClrAsAy9a
LT12W1WiZOM6kWdrMkBnKstNU1iJojlaWqY3ZOBnz/CNsxJV6FFo36FCOiL0
RLZaZv+oQjfMRmiITEQ4H2d0IFGtGl0WmC7wZSXCOteHdk6/amQStb7DkocI
f5+8vauvWoPQadrxIn4ibN3wH2B8VIN2SbAkygoTodBUMnlXQw0SjhcUnpck
QqTLw3dF52oRm51Es5UMEfhLXpL539WiTVnZgBISEULP/o6oHK1FAx9UtwKU
iPBZwcxL+1IdanfUzF/YQYTBw5t7luLqULWS7o1Tu4iwfLXKlK6zDn3+cmSU
rE2Er/sKinihHsW7miUE7SNC3MPD+3hc6tGL3afOLCEieIneumbzph65517+
XnqICB/Ehb93zdajq3ev+ykYE6GsvoOXQ7AB2e69qR9iSoT/pE/I+Wk2oON/
7/1dPk6Ew2YfFMysGpA+fpxrc5IIvhu/b9vfbEB7Hvu6llsRgZ2a+L4muAEp
6IcoKZ4hwrMDP/zuvm9A4owRw6G2RFA8aq3iXtiAuKpex61eIILYuajOyoYG
ROuXeMr2EhEWb+hy2vc2oCXjFP5vDkR4aVX29PREAxrhyGhQukYEnrP0OolL
DehnY+6zF85EME/sOqm/2YDqQ0sO/HEjQudU8v79tI2oxOzbxrnbREgU73/x
kr4RZQjUf628S4Qd530VjbZxUkeLs8p9IgQrlvJeoGlEkVE/KWGPiHB2Zn/g
r/UG5H+6f3DdmwjF1SX83xYakKfE6JsLz4hgJfrESmSsATn/mraq9idCnlTF
3p6uBmQXv8S7M5gIHh84fwrUNaCTdht14c+39Y8VeFTmNSBDEt3TzTAiJPuf
SFxObEA6IyzwXxQROGiHaT8ENiCVZO71mhgiCOvc9Ohza0CEK0LZqnFEMCnW
l0uybEB8ypJOkW+JYH1Y/eD6dh6MM7IK/94Roeav4IlRoQa09kVx4OJHIoxq
rU27LNajCVe113Wp2/6J3J593VCPmpZ1eV5lEaF+mWC+dK8elecerN3KIULz
zXJd5aP1KOeuic/lgu1+nHaOl5auRzF/T63tLiVCuEzIV/OCOnSZ8VZ/YyMR
7CaMinM6apGYdM2PjWYiPG/0DSx5XYsatSS/K7QTgfWzsu2/87Voz7VvxV7d
2/14RO83GqpBTK2CMXvGtvv5YabUk45qVDDl+OK/SSJkMVQvMIVUIyemEr/Q
GSIwPfolsnqwGnVoX3afWCKCcd+0CfpShd7F51jE0srC5YXpRF2XSmRdwGZa
xyALcqH3s2glKxFHm63BGrMsWHHd53eu/oZuMjPvNuOShSfkg8oO4t+QgZMV
D5O4LJT8FZLJyixHQ3vXaq+ry0J1qoVu+2cqirIwKYvWlAWbsKC3rEZUZOIc
n1+lIwtB94QOdVZilP32cLLMAVlwjvkWXqhUgnxYXz1pN5UFg3Jnw9qhAkT6
oQ377WXB8KmZibpsNvrPzeMrR7QszHtzj8tRXqE9u359pbyRhX1sdK8Hq8IR
2wLkHIqXBQHOgjRfhxco3ZUp99F7Wfh64eLltfPP0KbL87ylTFkg9XlqPhw5
hSOcPxT21MlCoIHQkKNPDHbcyVb0p1EWQuQ7gt59isX7Zq8VCbXIwvsJr4WM
kXg86LSr+HinLJwLrdtRt5WIVZ2KSyqGtvmwix6O4UjBNddaS1P/ykLMdTmN
L8WZ+LXynrIaGhLcnv1sn3c1C7tMRZWN0JPg+aRpc6JwNha6ZltOYCOBo182
cc3hK7a7Ol4RJkSCHYNrw4/ncrGGksm3DFESHJO9//ppYB5mmUz71ihBglEH
5scEcj7+cuVmJYssCVKS+g/MnyjAm45bVZ47SZCp0PKBEFCEv1Psql/tIsHC
RO3pUb5i/Ha8ojpHgwSmzPU59FHF2MjRv2ZuLwnoKsraZKJLcISDYN3FwyTI
i+UIi9OlYkcF97rHR0hw5GiK/4M7VLxvrKsu9igJXOmvf5lNo+IB+/j6zpMk
oMr+OfVAtBTvtFdqNLlAgv0TVt4cvaX4l6O08+eLJAj9/eXIFmcZDrzGz8Pl
QAKBw5TNHfvL8LjrxonvTiTwUwya2BdRhqNuzi7sdCPBsEHiXWFqGT50Z/Bl
6C0SfB4jv5QfK8OJnnXtJzxJ0FrdUjuwqxybPcS3Mx+S4KTyyOMAi3JM45Ul
zO+9rQ8LLV+8XY7TfD7k3XhKgt8WBZZO4eX47LOYU21+JPCCPNoPmeWYwz9k
XT2IBNy7r9zlaizHBYHeMeGhJHjce9cxabQcC7+42msZSYJ37+kVzwhW4Mqw
cw9yo0kwlPRX1JNSgW9GmkuLxJJgLPQPtW5vBSZGG1LdE7bz5Sx8bmxSgZtf
773wM4kEg6f0yX9OV+BHcTvpdJK38/GNQp32FXjHW9nE6E8ksHrn923MrQL3
JAkbbKSRoL7BuVLJswIHfGAfPpNJglLjqdtvvSuwTsrWk6Kv2/XTEtWO+lXg
sdRFsmQ+CaoZVm6rBlXgiC+jVfeLtrFY9pRxSAU+mNnt8AuToHay+WzcNl7K
/s6KyknwRluoYGdwBX6bW54SV0mCgzZVgv/8K/DxgtwjNLUkeGBm8ZHjaQXe
Kvo0db6BBO2StM1nH1bgNBwXVNpEAv2bjzmWbldgm7KXO4htJIhrSfrXfK0C
s3179t3rBwkc1ueurZ+vwPlVHi6DXSSQHkHIxbwCO9Q68xr8IsFZdPrhHoMK
LNTwX2bSbxJsXQixPr67Ald8tzJnHCaByJqxcCmhAt9oObJ0aYwEkjrJCoEc
2/62o/DKSRJE99GJfV0px00/du+RnyVBUd2TKNRXjlV6xd3HlknA58YQ7Pup
HPf0cYsa/SHBPSnD9aMh5dh/gL7g4+Z2XlpHe5+6luPR0cmNK/Ry0NaBtW3U
ynHERN/rOiY52HlHPoyOuxwbTLfuV2aTg986JmTlyTKcsFD4cJpHDv4JXhoW
jyvDZ/4G0LtIyUEuf5Xu2nIpZqN5lNQkIweOyxN0etWlOI/u5kE1OTmY37Tz
0XxVigVZbJ4tKMmB602upr2apfg7nzL7LW05mD641XD4IhXrXr8+HrNPDm59
9rI8oUrFaVVpVWVIDvLucTJnrWAc7Knmw3NIDv6IfPf9I4Gxyciev5/M5EDc
MEJ+r3kxrs0/MDtwVQ5eDs6p1zjn42/nrVqPx8rBmrlGqW9OOlYvjMq4kyAH
JtRZkf9k03GSYFdIbJIcTA2MIl3pL9in1sZkKkUOfGpRWnt9KtZTt/v2LFcO
wnW2HqhIJmMq8/XckiY5SGh2UXhk+gYXpnnFKNOTofAGnTbie4SYTCzEIpnI
EGmc0Ga47oNOjMu/omUjg19weDVPtx8alW2I6OAhw2JF89cPZc8R/yvhF4+k
yCCr2PCsUysGXfVO9W3TJkPH6Wv+w+HvUQ7hITPaTwbDSwuk9A8fEG3Jiacf
gQwliWX3dHKSUeTaivcDQzKITKgd0a1JQeXXDzxUsCDDgdnWF6MVaUjcuuOW
pwsZfn30yo+hzUKXl5OXRm6QYXLPnNeea1ko44XHjRN3yFAxHH8guS0LGTYQ
XMkPyNDcBOXLsdnoht7Va00BZAjt3qvrJ5KDSvr2T+qEkGEnTetzRdccxHqf
58q7F2R4LJo041aVg+Jyv9rfe0UGeV8e4eFruahOmeY/0gcyPFBZ026JzkNC
tS2/g1PIcJc6aqnSn4cu2L87/+czGYIo/4lxyeaj1QRj28ZsMtwweWZwMiEf
6SHJXq08MtxL7hfK7slHQT2zZxILyeCVI2MfLFiAZIXDT7mXkeG+LnHw48MC
5JRt3znwjQxax46aj6YXoPwTOlamNWT4RMdZG9lXgBhmOTpy68lAyE/dzGcv
RMcC+04Sm8jAKyjcbaJRiKIpma2BrWQ4eiE55JhNIRqu9DFb7SDDCjvdw9JH
hciDVvF4fS8ZdrwvKJsvLUQjBuyd5N9kqL0fGrrzVyE67jt17vEQGc4b+Kou
rRaigrqG0e5RMgRofJYC7iJE4v7ivGeSDHdaWtgFSEUo2Cx0NXRmO08l016X
PUVoLdz14eQ8GaJ43qVaHSpCdj/NmA8tk6Fd+XBVjXkRqpdQD4lfI4OAjEZa
tW0R2nNeUHhjgwzHEhIFLe2LUHziSqzFFhl2JSUP3bhehNhGf5DT6eSBN71D
neRahG4p5qexMcnDyRNdJxzdilD/9eg9l1jloa6SL//g9rpxhkcJ5pCH1jmy
aNH299lLNofEeORBMTTixPft+lJauo03+eXh429DN69zRcjXQ9ryu5A8vEni
Lew8WYQWSmh+UcTkQeDVgZh2wyJkQzdwyUdSHsp8pDM8tYpQ1cHy6V8EeRio
u1bTTC5Cu/ySbmmT5EH/c/+vTr4i9Lr+yd+X8vIQvzNBNGKzEDHx2D+ZUZQH
i+95jZxDhdv/0MOcRjvkYWTD96FBTSHqiqCEJ6rJA/WG9k/d1EJk0MUm+U99
GweTsmmDCpHohQblrL3y8KP2ieyyYSHySUrL5kTywHzXbK8qsRDNjIbsc9CT
h6PrtT8PrxegMiczE0kjeaDfecGZklSAlDN3t90xkQe/nBHFv7cKUMSygE3L
MXkYMoxY+nawAF31/HH1maU8rI179Rzry0cC/jYB8//Jw9lXdBx/1/PQg4b9
/Cb28nAxOkJHtTgPjfFIx7y/Ig8fCC4Xgu/noeLI3ylnXOWBm4GbeXwtF11+
d7n22wN5sNKoPTPVlbN9Bzc0I3jJwwnQ5TsSkoN0lCld955s8yt/HsOnl4O4
sybHdwbKQ08bm/jft19RHtWFNfqVPLz44leoZJ6N2HruHXbKlofudOs94Tcz
0J47HzlDcuVh8KW/qLhYBrrA19nypWA734VGyfySdJR3WOPsPFUelHeG0Now
pqPLX2ddbzbIw1vP668U+D6j0uCLMfdG5CEx5Yeg9sB75H7g6MxTEQVIatFI
lZh4iZJ6PLM+iCvAUzWqRNzhF+j7nU/u1VIKoD30TMD+Qygip7HQs8kpbJ9f
LLIf1/ujVrFy4SA1BUg1EHMJyfBAO5Y0D7w0VoCeo7eN8nbewcPvZcLiPBXg
6iMas5tBb/CUz+8/9I8UgNZ3+Bw/ZxxesEs45+CtACtl3H7qBvGYRlpGSc1f
AZ7oCikP5SVgsUhCWVmkAgQ7iVLUniZhmVv98vIxCgA84HNu9zusYB4fFBCr
APUB2g1bve+wBjfh1Ml3ClCj3X3/stIHfPyZ9NxwpgLYam7uCn73EVtd6rMw
ztnmE3tlkX1/CrbVjytMy1eA6y2OYYnNKfjqltSzO1QFuDDRNvhn/hN+ekdK
irVRAbLfaWsd5ErDQRa/vK83KwD3Zt/NF0FpOGx37HhzmwJE6l8mZ7N+wQmz
kl+juxVA4nLwjNXaF1xkL2miPK4ADSJxBbt/pOPyg70ZoVMKQD8QadLImoFr
Zd8IL88qwFcWc5kCnQz8o09isHhFAVavJ7J6RmbgX8U9h4nr2/r3mRWZlmfg
oZjXaU//KsDjF7Rz9tMZeMFK4t4xBgrERvA1Oe3LxH80evqymCnbfGXPWF/I
xDQCrw+KsFPgU7A3yccnE3M2ifP+5qXAhTq6kTffMrFAWvftg4IUGKG9sOE3
mInFAmN6PopQ4LX7eb/srUyscFg82U2aAnJMPzfLdmXhneRuzh9EChy6dnXv
e6MsvIch5sZeMgUmeAKTKm2z8L6B0z/jKBQ4nH7jEMktC+tTxRCDCgVSKoiW
2DsLG8d2JTmoUqAicPfOqJdZ+LhnNFvDbgoMzCebf0nIwlanT7uoaVLgu0XB
Vca0LGyrJdYRrkMBj2OvD8bkZeFLQl171/dv72d7qN21NAtfW3qVYHuAAnXx
Gur+1VnYreUUc7kBBUr9lBOGG7Lw3XTR6/KHKaCYOfvwSXMWfhT8syXgCAU+
Fm5ZX23Nwk+vvdKaO0oB4VPHf0Zt4yDjU7Enzbb1eW02c7dk4TAFUYZ8Cwpc
6V3VbGnMwja25A+D1hTwikv/qF+bhUlhu425bCjANM9zYl9FFp6qgWmtc9vv
C30SKSnKwtlbpqH/2VHA2foYY11WFvbUOLM7+BIFwoh1Gpc+ZmGDqw4deQ4U
WHJ+PxD8JgtzJNy6O3iVAvWBfWeNQ7NwW4eXBJczBdZ2v+OLfpyFX3OEYi03
CrRwcT955JqFL+q9sfvvFgV8Y9tO0JzPwsruKYzB7hTQiKDbIWGahZc+5ybn
eVDAJjVtpEMrCxcNVhwZfECByMmP53fLZmEf0ZYZTi8KWPqpRalzZGH+J1Pq
//lS4JwHX5JaVybuKvjzIyiAAp2+5MHdOBO/nWPyyAumQKBmWPbo20y8y0am
lDOcAmz/MXS4Xs7E6893XNSKosDjGn507FAmLqvay/xfzHZ/8Q1dnSJlYrPd
lqZ5CRR4rorlbv3KwGKO/80NJFEg7QCts0N+Bh6IdXnJmUwB2fycRcWXGdiN
LeCnXRoFWHtK11X0M/CL3/gSZyEFgFLJ/DY8HZ8WbmDRKqGAVWXJZx/7dEw0
7fpkV0oB5Q73BWutdJyZtzSfW7Xt/+epwObPX3BLCOWBXRsFqlpHq8x50jCv
7suI3GkKKLAsHKR7mII7b8RrD8xt9/tZKZlnjCk4/uPnHo4lCpxe2dEY7P8R
qwpWE+3WKWAacSjoRGgyPj61mcbBrAiznTeK2gLe49Doy1UXCIpwy2lK+qHJ
W3znttcNT1lFeGv2niRenoBtzWKlI8mKMCp24sSiVgJWZuu4U6+sCFpNj5i9
ifG45u5BBU1tRXhUPHf4VU8MpjtF8uMwUwTG2h/s3YMv8C3hAeNcb0WY9HX0
9Phtgm0W/640P1WECHMm3ZZvFGTwXTRx6n8Nl3dcz98XxxuUVZLwQ0pD1Ge+
35+kUt0jaUqhUmkPpRINLe1Pe2hvDe0lJKvhqggNMiIpI0V8SQuV9Xv/+Xzc
9z2vc8953ffjnngFeFW22u1zvwkSjT34SypVAdr/TYcfHHNHDT9u1yWdo/KR
Ao91jDA0MVC8yuGqAggkeTx5tCEVPbrcciP4hgJENy+p9f1fGrqW/MIpp0UB
+jaJXhlfn46i9q1u621XAEWX8rT/VmUiqauhJ3Y9VIB9sV1P+17lIMtM64er
PirAbZ5G+amfRUj8yorN7p8VYKBP28nsbTF68/i6y4OvCmD0Vu1SvEMJclot
yhszpwAjfFodNXvOI8+ELs4/XhrYv7p4vmqiFLFrfMKtl9LgF/QOORuWodl7
W/taltHg9N13jusvlaGApWeOBaymQcresaKdJ8tRZDgrb1qcBjsqbld2P61A
WsXD40ZbaZBp+fqj//ZKJHgrnmyQocH90V7V/wIqUdKv9z1uCjTYp7ZzfM26
KnRgU9r/HjBoMCjlVNtqW4XWqGg4bydosHJ2g7V4dRXK9sv9+34XDZyfNlz/
j6hG5ln7DDR306AnRzXExKcabW6aySnRoMHoynZ3p8ZqVDK9n7DeR4PD/J8O
e8rXIAeRxZAWXRq85T+xxdG+Bsmyqro37qcB/+uLF+eya1CNB6/T80M0WHM7
XObDYg3ySGy4pGhGg0+dErGa8rWIWXv0T7oFDaaV/a4rmtaiqfvL9KetaNDU
0xLcElqLGj9ezTayo8G3yiUDAxW1yFfA8f0FRxpErZOdi+yuRbu2ibBXuVD1
bI7a2/GlFrU6uD24f4IG+oXnZX7I16HQiA3rt3vRwLY6Oe2zVh3aU3LHIdqX
BovpDZ9OWdehJdjr4nt/Gvy+FV0U71OHukYkfu85Q4NVJhNmO2PrUNzvHt2S
UBoIRDR/9c2tQwabA7P+RlDx8yu99KrqkLCq3KhVNA3apPplm67UoX7zp8yW
OBrwdUQGX2urQ+n+4Wc2JtFAQndk66G7dcg0m3HfP4WKXxXwJa67Dv3v6pDY
83QaHF2z8otVXx0aehprr5hNg5scQZt+is/NKDak59Ggu3BX43hPHbJdM7o4
dY4GYs5m8cX36pA0O0XHqITKb/X5Jp72OjR2QC3zQhkV/5HrzlU36lDliU9v
V1bR4H9yxWp36+vQ8aRshlst1f9pGwVWcR2i1+0Nun+BBgOzXsmGKXVo8sFU
l9xlGth9eyItG1KHLk0Uro1uokGiMX3gmmsd8hE0sHt/nQbGMYdblx+qQ0py
8/V7WmhQKdwuLqVSh+a1KhaKb9GA0F3qwitRh4Jbirl32mlgY+cRep2vDvGQ
+UKf7tCgopbojx2vRYKSKVJkDw22M7doxVL9TciKrzN7SIMl3x7dvRVZi4RX
Re0885gG545KgJRNLVq/EKB35wUNsvqiWIGra1H+SZ+nE0M0OF5U+NN/vAZt
+XDCWug1DYJSj1s33aT8+NTBy2yMBpyLQh8WrGoQ58L+vIkpGoBUOUcvpRpd
k9GREZqjAY91kfPdI9VINX/PBeInDeI/27fVSFQjzVil9qA/NNhNd1vZQc27
xvZbP61aQQeN3IOxg1WVyHPdnDIhQwebfpU/ks7laCZxssNUjg4M15Hf/BvK
0Wm+T/uD5OkQ9kkx99q9MhT8bcSuk0UHlQbNB2XbylDig3txpmp0qLhmbX3s
2XlUHVIwGGhKB/Pha1LTgkXo/bhmQEcstf9w0a1t7WlIs/hhqUIiHbYfZn42
HktFJeaWfeln6WBY+Oz2Z4FUZNPjJe2YRYfE+v4En6wkNHSppJe/jA5PTzz4
/aowGj0583frvlt02Lov4tDcgCcidiYYXGing8C+cMQ35YJSJ9f5rbtLhyOa
n9pYq+3RAXtGz3gPHV69Af7mBVXUrW11OuYlHWwPWszL1brgjjXND+7N0WHn
Mwn9mYVILNWzb441TwfrtCueB85G4fCoxxK5v+jwb7dTt6pkDNb4OeHjyseA
wfbmGB2leNw8vEFiuQgDjp3pLnm3MwVvzC7T9VrLgOtnPJOvmabiACOWz8v1
DEhTy71oKJyGlTq079dsYcC8tqjRzYB03Fh12lufxoAI6y4nMSILr7HnLWxk
MuBRkinPzGAWPrUp+d4mkgFLRA+tUg3NxszkcvH/lBmgnWqw8tXtHFzr/bQr
UZsBT90vm9O25ePldNvpWT0GJCQn7dt2PR+7jn/ebGXIAJnu9q2K2gVYzpzP
i27CgB2kvqX70XO4VJ3Y3GfPgBvFheEG9kW448AK7i8nBrwo/d7P87QIj9q+
/yzvyoC1slkfp/YUY5nIrOYYTwbsbfvreHVlCdbK8JS+6sWAkPSm/+Y0SrBT
uU7Ce18GrKmwEb93qgSXdy1YwBkGlC4dWbapvwTfefGk3TOUASI7zM2z/5Tg
sYk6+cIIBngIswPOyZ/HsittFhZiGdBmGFaoEXIeVxh15F7JZEC3zfihetFS
3GVXwDOaw4DYjdu26SqW4g9evq4iBQyIjvbvsjcpxXKZcsonzjMgSVD/2orU
Uqxd8a+4oJyq/wu7U7l1pfjYtUHB7iqq3ikF/SV3S3HlYMILuQYGaNgIV0p+
p+J/ckSmlxkQMx3qn7WiDH9YVKviNjFgMtSsKkqiDAusWr+68ToDRl7uZH5l
l+HtW775vW1mAMo6Kv1oTxnWZd5/LXyLAR2x0dcVDpZhV3ReW72dWif7NXhs
y3CccVCD+x0GtAplyhm7l+Fq+8Pr8+8xQOkuLG7yK8P3vemh97sZ8N1WycE+
rAxPcJd++NHHgGz7czKysWV4WdZrw22PGfBpTGmrU3IZ3lF5/erhZww4dU3F
TDqd0r+euiXyBQP0fDe+tc2i9O8fj740xICWG5ZzW3Io/ZeaX1+PMEDR1Hbc
muKaz5tNhd5R/iklpKSyy3D3r7nW3WMM8PpmSBzPKMOfVz2UdfvIAKFVbs27
UsrwComqpNzPDBDk3x18Nr4MK7DC57q+MmDmt/LBk5FlWB8srL5PMYBhYc8c
DizDbgfJOzJzlJ95f0q/OFmGExxW0g/9ZEAGzx5zB6cyXOszlhG+SO0/qrMm
/AilH9X2q+EPA75onq0l9Sj9rGzHER4mHDn7KC9YhdKvOtmzcgkTmooaT9jt
KMO0G7ocVUEmXCqM7Hu7rgzvfyBV4LqCCVsV3gfw8JVhj6FFvhwhJmzx4+p0
fCnF9b/rn8yuZUIpb6mM8q1S3CsUoyq9gQnJ9t9MZ8pL8RcJ21LjTUy4k+Y3
Z5lQiul71nhf2MqEY2aSN7UOluIL0afXuDCYEKjMu/Dq0Xn8Rc06MprNBM7o
ShvJC9T7cU5rtozDhIPp/T0q8edxrYPYwFsVJvDdbbzMp3EeV6MruZbaTFBr
clpxML8ET/zIXx6oxwQXfcWcG54leHtDZFDOfibUjY7cX69ZgivFD1k9O8QE
9Vq6UmpPMS5fmJI8YMuELpF3ttOaRXjs0mCqhwP1vXmSicRwIZZxvc2b6MyE
sg2jp8N8CnHp85T399yZ4HU8t5y/8BwuvsKs2hPAhOWTeckSw/k4/4QHc2ca
ExjlpoTK2hw8JGtSfDiTCeVrj3xQyszGG4d3i3jnMIGuNhohKJaNc/VXzjQU
MsFS552OgUgWztpee3VHLRP2W/0zi/qdjlPffVQT72TCWN8tMSnLZBxr6mjA
/50J5LX8Z7SPfrjUaNjKeZ4J23oWl4X6+eJWPVPPe7+o/qAfwSkC3nhGXSct
kY8Fen936kcfdsNWcrQXa0VYEP/ngN9jkf2Y/DnjIEtjwS01kym1Rk9kOO3u
G8NkwV4+Q6vxCi/k+t9Y9ATBgj9Zlx/0TfqgwjfPq+uVWcApsFAw8A1Ay+43
Typqs+CY1dBcTHk4ep0bGbTPngW+A1cfyi3GoYX0X4lVTizona1Ldv4Zj8SS
fQuXu7LAX2qe6TKdgPQijt3u86TWT54VdH+VhJqO6wuYBbOAL5DueF+Teq87
dm64EcaC2P7Mb2FXUtFnazX5TVwWrIp2LjCVTkOSh5j7X8ezoDh6WlV9MQ0l
qIqmH8thwcoA5szO9AxUoZhYdj+fBXKnUfC62Qx0m7nkqkIRCyw+0jYPH8xE
36V/vJgsZ4Hr3rxxgeVZyG7l0Bb/RhZcR/W2ytbZKGjpYdbLqyxo98bPm+qz
Uda/Hth9kwUvUnudJheyUfdsm+M/zAL9s2p3YpNz0M7h8zWxfSx4dlTq5ERu
LhJhus5f7Kfy/2r3YfRxLvoSxtQZfErtl0j17V2Wh8plWsZ2DLFg0dQ42OlU
Hgo/HcE5OMKCHldNYvX5PGR1Tycy8C0LtuW89jn/KA+JuT+T7P5A5ffZcdRP
Lh9NteZ7znxigVafavb1A/moV9i+bdNXFjTI+n8c8s1H1XbbV+2dYgG3PI73
bW4+imr8auk+y4LjQptVuprzkd2SppqMHyyYzPm1MnkoH6mZBc23LLBgi8uv
rYrz+WgxmN9AgIcN10X/C5BmFKCJimPe+bxsEMbWA8e1CtDzhw/ymPxsoHVX
VKZZFKA7P+ntHUvY8MQixibfowA1bk2dMBNgg/+mweyokAJUoje7+j9BNjTG
H1lzMKkAnfU22xW2nA2MwFPXefIKUHDBTZu1K9ng2yeQn1lWgNzuiMdUrWID
ilSbFqovQOZfwy7sFmaDxIKiuGdjAdJe//7Zo9VscM4fKLl2rQApIu3fjmvY
sLyfS/t0owBJu9bIzIuy4YLd27OCNwuQSNoqgyQxNmxTDO9ce70A/b150nvr
ejZoxpZ+XH2lAH0ZfZLXtIENNbljGn8pvZcrldp1N7Ihd2CGeFdegLoU8yaG
N7EhLGXXgZb8AtRk/Xu1lzgbpDRj96WcLUClMba7lkqw4adP91fb8AKUerHD
Jk+SDbLKFcA+VYBCB7fFMKTY8Oqo+FF+mwLkwRt/oV2aDV06yiHDegXIUuHL
M1NZNiQWVSzHnAKke9jo96dtVP3PH45u2FyAlIIbZUK3s+H8MZGcBt4CJFux
zkBUng0lY9KCneP5iOfnqzxVOhv0Phy4r1ydjyYlUftDBhuGx4sNS2Py0bBu
6YQDiw2/0KtctmM+upHvuiuRZAM7LmJf3/p8VNnZYyOpyIaOPYsDY1/zUOYX
ZsyVnWyQ1kiJ53TmoVMa35+9UmbDaJwBT4JrHtoxGuFNR2zwXlw9X1uUi9av
HM+7DWxQrdlQsMI1Fy1R1G030WSDmNF0dA8rF72NFhYJ2ccGm5crIK45B+XK
F1zoM2DD+uEtfzLastHcrHYF15ANKumOwQu+2cjo1sw5FSM2ODE+ZF1WyEYC
h/WTKg6xQV99eaVqWhY6HbzgFmLBhsnXrMpCg0x06NGRHQwXNqTxDow4hqSh
hjz+re9d2TBF5NkJSqSh5U4XN+S5saGeT68xqS0V3Z4XEFzqyYa/KZV+XTMp
iCV9bXzYlw3b1f9qlXQnoVWnxcqSItlg4X4ru4ARg1zR7XzNKDY4vvYwMjKJ
Rp3LPdLno9lw8lOQH39QFAoq6oxwiqf8r9pf39YRiT7d87ZTS2XDYFi16tGc
UNS16fGWL4WUv3aIBi7JP4XCbifnGtyk+vGDXfOiyhl/HrmdudDMhhgdW3mR
cVds9ms2taqVDcaNvKf+E/fAdCXLeP7bbGhm3qPdVffCg3VyQS1dbMCbl954
4OePyRx8lPaMDRtC6AfZ5yJwYdPMkZcDbODjSx2ZPhCJlz3ZZhL7gvKXdk+m
z79I/GZV0v73Q5R/Jwl2tEUUToo0Vy94xwbrhjdlZ6di8IcT0xIrv7FBiId8
GlKSiA8mym6+OcWG3Q/3XB2VT8Kt1Uc2uMywQcMkwtDqUhLOeN+2uvM7GxRO
xKh4NCVjsEjgOfObDdOH2KLbclNwnV/b7x1/2cAjePNdzZJUvD5zav75P+r+
zS4du7A7FX99aDZN8hMgyrOi51t5Ks7Xkhn9vJyAO4qP84Wd0vBSB7PXuSsJ
cD1r2NSWkoZPhcUPaQsRsPbAddG7N9OwTvO3J6UiBMznBSoPLKPmgRfSj4xF
Ccg/7lk3xEjHEt9Ne/6uJeDu36hm4mA6nmO1dlpuIAA/nC17lJ6ObQ2/4WUb
KT1BPnOxy+m420269domAv4rCD9a2ZeOd8aZ3nASJ0CnU38haiIdl1TENYlK
EGC55tL5i7wZeGVny6XbkgSoTlp+3rYxA/u9naz3lCIglV/x7EdmBh79I1Uj
LkNAWqnmiTnNDGy42bSiW5aA7h0JSftNM3DuGPP2UTkCxERia944ZeCxC8te
fdlOQPJMgPhP7wzM9h/9HiJPgM2JeygjLAMHQ6vIahoBXCn7+KaEDHx/eTat
hE5Ak0ZewtHMDCz29KQ2wSTAjM4/FXcuA9ud07PvYBHgbLI/Qr0sA9c7ywQf
Jgj4uk5MKqg6A88z/2SPkQS4jLb3ovoMrDX//PJpRQIeJlqcS2nIwKntl3oF
lAjgvW/Y4XYxA79KSPiYs4sAxqRx4hNqXc7EiU9ehYCpWRmb+9R+7y0aW5pV
CShucGwxrMnAtz5sUDZQI8DY1kTdqTwDr7g0fWhYneLkuhyhogxsFthz4gQi
IEnJPMcgOwOXalbE/QUClljqSW9NzsCTK8PKUjQJaBwldyVHZmCVAfNbW7UI
+Dtv/DXTLwNHFZEvL+8j4BeW91U5noH7XVbNaeoQsCPacG2IZQYWJz4IP9Ol
6uW6TsFBPwO7LmJ5Z30CtnHtWP8pZ+CmzjytHwYEXE43urxJLgPzJPvYxhoS
oML+ZzK7huqP5PasGmMCngofFKwbT6fmLZ5LqocIeDOY0p9C+YPdONTdc5iA
4AmSLd+Uju9pneWZNCPAMP3d+piQdCwq7Lo5zJwA8uHjJcZ26djmxR4lEUsC
4p8amb3ak45/HP/uTloTYPdO4ele3nQsl2L1ws+RAJ+EEP3bXmnY21xpRtCZ
8hNf2NC8fhq+JSUilHeMgIJfk1tFZNKwaVOnZstxyr/CD55/fpSKo14qNPw7
SUDvN4tbd8RTcX/pkgepXgTsWip5o3coBYt7vH4v5UPAMM9gn0hQCr7yN22j
lh8BQ4MZ8bjxLB6VWYiKC6b8dlbU6qZQMt7jee/omngCDm2u/R7hHY8XBz9p
30kg4NvLzznvvsbhpr2rSP8kAlbTa+4Vu8RhuY0Hl42kUH4oFRv1MIvFq+4M
NVVnE5B9P3u6XToaD26cFIJyAhSS9Wz3R4bjU3fFbntiAjKtn88oL7hhBfau
Oql2AkpDPvL4hLvi9/kW2c86qP4dQ2+Elh3DZqeKPFS7CHj8c+stjY32WG3z
jo0CfQQ8Mh7Tqt5miJd57fYuHCLAILjsZeboEdTxytraeJiKv/vOsoxsK3RG
O1yX/zUBTlW1whfO26HJzXcljr8jQB6/GXin6YyedR3oUZwggG5+zmn0oCcq
FneQ7f1OQEzfxfi0Nn+kyqExHX4S4D0+Mtd9OQA905vbNT9PQMd5Iz3NskC0
zD/GQPY3AZEu7OL6kDPo1ONa72A+Eq7W/nvTKxyGVkz4BIsuIaHfyanY+L8w
VP5XLaZ6KQlekUYNBxzC0SDtUd6zZSSIRvs5NihFIIiZvU1fTcLd7VV2y3oi
0dC51u4OERKkPqt/bKFxke+V6GfmoiS88VPrKU3gouq3Gyai1pEg7+Kx9Ltm
FFqzW231yGYSYqIC0sQLo1H9waUbfbaQ8EdtYveryWik7fpQerkkCT78GzdV
asSgoCw7pZ3SJMw38nw1GoxBo9+irJN3kBAl8j0ofjYWBQsccJFRIIHD3cvU
2BmH1m/Z4HWTRsIKH/rhUd84pK9fEzXOJKG98ey1r1/j0Jid99kzbBLu227p
MNoej0L9d+euIUnY8zfqZbZNPGos76tT30nC2LjauZ6ueLS/JfvqUyUS/HQq
3a5S88OHx7b4uDIJnnViicFyCWjTv+knWbtJWAhUeX0uJAE1rWsZpqmT8Fqj
Ln62IgEdoEd9aNcgwUM+MEC6NwFxLdYvft1DwjsXvfGloolI4tQb/qi9JAiO
X2LdJBLRjZhqoU37SAg8KmCmaZSIDhV6bbikTYK5aN/2826J6MsVVSltXRLS
VroXDXATUUw3P21YjwRXCb6RN/mJaOu7XkVvAxIeiWqzb19MRM0/szSWGZIQ
dMdI2L8jEZkI2+oWHSBhl8mJ9UufJqJJ2R2HFI1JcPT4JuL+LhHF7Z4+2n2Q
qsf52cmar4lI+lCzs91hEj5P07o7fiaiVlfuyR8mJDC8y8au/UtEZmH7A5PM
SDgjE14duzQJTWWt40qbkyCwtKNKaXkSSqh/nXTDggS6w7+CuyuSkGxnVfaB
oyRcOSZxTInih/T58mErEuyvizYUCiahgGzdK242JJT9+jbxjy8JSfPktc/b
kjAgrqhr+zsR9Rz/9CjGnup3Z/rWW7OJyPepymsxRxIO3Kn5JPGJqqd6wpdS
JxI2HrqiHjWciO5XDi2yj5FgPb3z5VRfIvIWoS3HLiSUo8Z8l7ZEJB50ZoPh
cRJWpR2I/K82Ed1937PtlRsJh0+EXw7LTkSehuKKxz1IaJi74rY9PBH977qH
5s8TJGzaOS3ywSURdWxtM44+SdXbP2w7NkxEHglCtmu9SFBOjTl4jeontm44
w/IlYdylZbnwXAJyvfc3vu00Cfv46UF+TxKQKGGUa+BPwg/r/vZVFxPQsSVT
TS5BJHQESn586pCARDyh8/sZkppXTbOFVBPQzRepj7khJBRq/LoVszoBraoj
JovDqfN0b7HQvxqProlF/mZEkrCcPhJSFB2P7EKfrGjlkjDVVB+xzyQeXTno
s30whoS2wOeNJV/ikOV8k51IMgkZp/+TlVoRh5Y4LD1ZdJaEJ6TJt5K+WNTQ
YxpCTyVB6+YlleKUWMRb/CNPN4O6/7ci3jBXx6LqfcpPw/NIsJCyk9D6E42+
p7fsm66g9Oo01g/kc1HR75UmYVUkHE+hvZLX4yLdY1YOQjUkbBH213D6EYnO
qfwJla8ngd218VuFYSTSfKtxw76RBLOPkYqyU+EoldGh8OQWCTuVDpsPrA9G
1cpHl0feJqEnS3dpvvYZhPfOfSQ6KP/uMtv6yjcITVrIVaTdpe6P/RGZrX0B
yCAmQfJgLwnvfxwnn3ueRgJvDon1vyShbmzisqjICXQm9f2fvjkSOgWcVydu
k0HpBcHDIT9I6P6peEI+TATXVq5rYcyToCup4eJ4h8CDrToByb9IaD3w43bp
SW2s9KluZj8fB2TdHT6bp5jjqT2+H3tWc2Dvkw7axvXH8TJDoa4zazggprvk
Q36JG5Y0ryynreXAFcJa2Xi7Bz7gOWifuJ4Dn0b6ZN7uOInr8tWG9bdwQIdw
Xtoa7I2PzS55/ECBA5LfizbkDftjm1qth1Z0Dgg/S37l7h2Azeyjer4xONAj
fLfq/dJArP2Iv2sdwQHpPOOzxduCsFwdX4v9Lg68hNOP7XSCsYSD5o05ZQ4E
9A6Uez8Ixus3Rl6NVeXAvZ4XJz/phmCBWN5LF9Q58MTtBM9nFIrHHXgqFvZy
wOySKM9tgXA8vBFKk/Zx4ENrWSiPejh+1h9WLKnDgdneDO8hr3B8R+Nf3j59
DqSHXTlq/CIct37XyBk04ICJZqTbR8EI3FQfmuluyIFJnnXSwrsicPmmv2fT
jDlQvNDGy5cWgc89Vk+SPcSB6o0lzJ6WCJwZFxJ//TAH5odmhMTHI3DUj9/c
ETMOiHCjyAOcSBx8QS3ilDkHIgeXH6ebR2Jfp+BQfksq3qMUxaQzkdjpya8A
eWsOrP52sbGnLRJbxe/2a7XhwMdk9b01w5HYBM74GNlR/TpWLrtkMRLv/9l8
atSe0g8uT3m1jou1GhZPnHbkwKsJ9yEmm4vVnFXdlzlzoEYuLuCPLhcrige5
FhzjgK/ewKK2HRfLJiw4tB/nQP7X2Ai9BC4W36NiZ+JO6b0OVOEr5GKx+QDr
jx4cUDaLVtvZwMWrLt6wDPLkgOvvB/WjbVy85Nj8EaFTHOD4bHuwopeLf4sr
m5Z4ccB9jdjXC4NcPPfU/xDHhwPMcympve+5+EvCdaMuXw7cXPJFx+UrF7/f
83O/hR8HaPTGztDvXDw0r6T/xZ8DVk0B/Wt/c/GTi346YYEcaHjbbLadNwp3
H7umJXqGA9eSLlg2L4nCHVt+7KkI5oCbuujvPoEo3PxsJ1IO5UD9wWV+joJR
uDHxtFpPGAc6jgxLBFPrtZpXVWwiKH8lDbhspPaXLswpTUdygCeJd0SNJwrn
X1JUjIrigC35V3ZikYvTXXyJDTEc6G9r59kyx8UJEk3M2ljq/HR7g5H/uDhy
YJamHs8BYvTZgsIoFwclceT7E6h+F7RsWvaCi733+sg5JlH1v7j5uV83F7st
Nsr8SOaAbqP0icBWLna4PLM1PoUD+u7vVUQvcKl55MykehoHBAVHXLvzuZjh
wN86k84Bm5xvNW9iqHyaE+OrMjlw9tMlK1MvLp4XFTtilc2BUstwXpYlF9u4
n5Ndk8uBo/82qJzaw8V3OmVn7uZxYL375jvi27k4xXdnMquQAz/be3zufY3E
c71tlmNFHNCc4VztexiJLbdp78gr4YDA1iTqRRWJ5Z6bdfKVc2BTifTeF66R
uHVXwMJALZWf7GGFgN4ILJ3Kcy+hnqqv3ljX0PkIHDsRl4kaOHDR7WX369MR
+FBeHqvmMnXeSq1vbzZG4InFZufgGxywVnugbXMoHB84vJdDNFP5+RNLHbeE
4yt1PTwfWjiQ/fdwq9vDMBxqNVxghDlQ4vFb5epkKF53689j6S4OWLp7J5aJ
heCg9THFL+5x4FaLkO9QbjB+6yl8IukBBxTrr9qs3hyM6yUll/3opfzlvo2o
2ngGa0aAxoOnVL6ZFvM8vIHYU4tbe/IdB6S8HifvifLF97uXcVt/c2Dlcnhq
EuaMPfa+S31AcdGxl48aTztjkdabRc8pdlJNqBbxcMbmF9yapygeMv412WPu
jD+m9E7L/qH+d275A0A6YwHTVLtkit9v6twpO+6E977ZoGHzlwP0w3rnn+g7
4Q9HpgzcKTbVkY2k73HCCf33LQIoVouy3hezywk/aQ88nU6xeuAVHxVZJ+xQ
/qq+i+KqkOOni/444vDjxZtZ/zhwQ2dY2fGSI5Yd9ZdXo1imVPxIS6Ujvm9p
vEuP4jSLEcu1hY5YZD/vYUeKV+ytXtsZ74iLmY4JORTv5742knJ0xJpVu3PL
KX5hdK44wMIRf5AUq7xMsYKc+/NHRo6YueZuew/F7UpLFkPUHPGT+MJHgxR/
TyE/PiMdsR+f38g4xZYc1VaavCPedObAfzMUJzEMAyMlHfGtWbmFfxR3JhRK
vFzniP8PPfeG+Q==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0 \[Omega]1=0\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
wVuieWjw6JKv00+oYPPsb2ZWEA8JZXwwVeugwlxQ9uIkDx7acOVuFfslqaeV
RctW2JH+76YrHHlNhX8VwyvW7yb9P/ZOKO+hwq4VO06/0eGha9/kbFZ8poK4
189scQkeav09WavbT85H/6Hsi/+C0TeRp6o+A1TwLBIQezoUjDTocZNNI1R4
r5jsoVIdjPaA/f6pUSpEitL55vnByMeS9UhlkgoZhxwjKQnBqITXfyZujgqf
T948J2ASjFrjH/wu+0v2u/xwgYAmaT8jk/NegAbCjDifOuFgRLm3i9i6lAY1
Rgk/DzcHoet/rr+YWE0DU40kj7OMINS+InHrOmkafPO7s39kaRAaVjxQYLGG
BjcCzVJVPgQiTQOx4BvKNNi+r75W51ggupEQKuZJpYG8ieOixdkBaFjP6UgC
gwbHnQVZPJ0ApDlpNHGZoIEbR8R+5pU/KnGTePVpCw1EhM+c9xL2R8XodpaD
MQ0ytlYO97r4osLZUSWzAzS4r9ztnFPnhfrLu9N93cj4hTbWdW73Qipe9QtO
eNDgyMbVJx80e6KCrpN9zVwatM/6lLa1HUR5t2lXDSJoYDe4smLyP3eU4+dL
23SKBopViidun3BBParWeeyzNBjo+hv8XsAFyb7TFQ0+R4MljdZdD785o6w9
wuNlF2hQbol10P39KGN9SdWGEho81jq2hL3HDqV/HtCTb6TBmta33RZ5ZuiY
Dcdk0RQN/DWWLnxOUcUF5u/2e8zQ4FxzM78rm4prd9v4N/+mgbvyrcSOGAKP
b9t56sRCOhzbVLi9qU0P71envF4tSge/7OHf/xJ3YtavcTdVCh26Lsws0wi3
xqZj3JBEGh3elxf8vHfYBnt9708YZJLfq/ncdE6yxRc+dhVf16HDZYpJa/5J
Oyz0uPqHljEdVMSqGkdD9+MPWUeidrjS4UOK9fiWJ6549vTvE1fd6XDu1r72
RZvdsERqyIVlXqS9lIjujotuePfhg/VP/Okw+uSk7QEvDq703iNoG00H4x7Z
lym97vgZp1H6Xiwdmr09HzfqeuBvTnob1xylg1hN6bMnpz2wkhVt74ckOhw+
f8TfeOtBnLxV/PTBc3TorxAT2eHviYu0Tlx+nEOHx2Um29OqPHE9bXGVxkU6
DCa3306c88RT66Zf/yikQ7ytuUN4jBcWVQgYsiimg+qX+2reNV5YQ3pwrqKU
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
AdBqK5o=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0 \[Omega]1=0.2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
6UQBkVc3IiTvW2F6odu/JBcK5GtK/MW2VvjByKNUu90UyEuQqN8ftQU/9/Jr
bAikwIWKoXfavZb4rXMHveI8BabFWs/G6Jrh36Z589mVFNjVORG5ROjh8Irs
s6+qKUBNmulYzdLFPKwM4bFXXH3nZe7rs3TwSoVLSqxmCiSzfOTdCG0sOR+6
+VU3BSqfHs17oMbC7GLr9NFJCli3xN18s1oVP1axUBGeoUDdzZt/O1coY70M
o2LmHAUodiEdav8UsHGMdvWJfxSYL/5Fujwmhe09FceEVlHh5F6Dks1nliqD
JGZ0mCpUcLskecAiTApNx03UbFenwudHf7IN7OXQkeVj1ic2UuG4js4PBwUF
FP7j4+6XDCpktH2/um+7CoprrD+/XZ8Kahf/nuEpJ6OCk5k9x7dTge+AbMTu
XZqIOpPidd2ZCtKrhhVqtLRQqV/i9xo3KrysDXN/JqiNnuw4xyPkRYXu3ux5
3UIOqmMe0LgeRIV42W3Ka1/roYEh49CaGCpo2QoF+psCMs5uySHHUWHsY7jZ
pRuAbji7vkm6SIX3N2db+v4A8mgOVt6TQgWlpgdNH+8Yod7SG695b1GhT3FV
+adJY6TrR53zv02FDZZpSuUGJihNpVyp8w4V1P+1vU48b4KcUluP5pZy31fL
fsuUNkXtYYuKZpVU2L7F41ntBjPE1Iq1Kq6mwjDthADLzQwlTkgclailwqXt
Jw+fSTFDtp605qFmKjg6BzZW8pqjYtmnv2xaqaA6urk6n2OOhDpNFR+3U2H+
2viMr685ajJ3PxL9ngqNlU+2hdSZo408o9kTfVTY5Juo+GjKHJ1/eqjJqZ8K
M5Uh+5tkLdBIyNJM5QAVNt9a+lVqZIHMqXEKpBEqhMgmN+3fZ4HyhiS3XPpK
Bb+LGyUmzlugFdk5h+fGufl8Z3JM7ligmjXPGutnuPudbjzpPGCBlJrNZhi/
qcDMkHWT/meBIqLaNqT95eoXWoy4LW6JPhns3MyzRAWFtlQzXrIlMpwbPeSz
nAaS1x0ZDANLlFV6+PpbPhqc7CyZIdtaogVfnkYdQRrsvvw1bM7dErmpxP+8
IUSD1KGG3hRfS/SsT2qDoBgNWgCcVh62RDKptyyD19FAUZbqZRNuiULtGIfe
S9Kgtn/+hm+kJeoWqMgykqXBY9g6sDPaEmnXmDfckaeBWF0liXreEqWEtU+v
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
oniU
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0 \[Omega]1=2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Print",
 CellChangeTimes->{3.408947649460608*^9, 3.408947708414865*^9, 
  3.408947870777357*^9, 3.4089480225458965`*^9, 3.4089481049537287`*^9}],

Cell[BoxData["\<\"Fin partie positive\"\>"], "Print",
 CellChangeTimes->{3.408947649460608*^9, 3.408947708414865*^9, 
  3.408947870777357*^9, 3.4089480225458965`*^9, 3.4089484238192253`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
1PRbcX6ZYPPnO+kthh7of+O45Hc=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =-0.01 \[Omega]1=0\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
f2QX1/6/v2z0ZuNrbfw/G8NTyg==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =-0.01 \[Omega]1=0.2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUl3c81d8fx2Wv7J19jWskSaXlvEUikozM7L1nJJUVvmQkKyJEbhGRnRwz
IlIkKyMiIolk5uf31308H+/zXq/z+jwe94jYeOrZk5ORkalTk5H9/zfrlg31
YbtM5e1H4zJqcyTU2iesbSR8HamFvE46vce7bxrChYX/Q7LVg9Pie8yUVPWC
fjAJaZsqBpDtcVZjnBCV8AN0SFfqw7vvJCS7ZBe/6/gIWYq6Po7d4y9M2f+2
P+chUVWv+jN7LPaE7tjmVgEi+8u+NTVLQm5n/N3/Cj1FPz8Zwe09ftk/kb+q
WoyC3QjWLHu86ao9uuxYihiq23jSZ0hIrfue+NrnctTr9cEn7hsJfU8/37Tq
XIF+uo0Vbk2T0F27HfOVrUo0JR4cY73HfVtOyb+EapGd+WQT2xQJXWsXlF8q
q0Oyz5KzzL+SEN/9/q5F1Xqk+dxbMXOShBosYhwXPr1GVe/TBLonSMhGGih+
OGJ057/Mkl/jJES+FfR+NbgRFZfb/aPY4/4JQ4HVc03IkGj5nXKMhAKLGWp/
f25GN3xgqm2EhC4kzVD/zmlBym+KH4UMkxB/YJPBsnMrYpts0RccIqGfVx/m
/VJoQ4/qu79mfiahRtWAX0tbbWhhzIVm7RMJJUnpKS+1vkE/zbmvSPWTkB3z
wbs/49rRewM/pPCRhI79oRlevNKBjgqbsu3vJSGaka+Si0JvEUVf1U5lNwkN
Nr72X/j+FpU6n2GT6iKhZ0/SW36UdSJLz3lVmw4SCr7ry/ojqAul/7NxvdpG
Qjo+Opbzqu8Q9zeF81zNJCRsLPV8jrEbcfj9DI5uIKHfZyi3vn/qRikKpzNK
60gola4uddbxPVpnOqJLX05CFQEXfHx5etHlib5kxeck9HD+OO9KcC8ab0rn
20cioTtXxRt9JnvR+0uY0jWPhDx62Rx/n/uArKeSbN0fkpCRKhmTz7MP6H4p
4ShFKglB1WLFMtNH1Ku1aS+ZQEJsDzvIlz9/RM2nDqhRh5DQFlPVU6/TfUhh
jep6VQAJTYc+1v2V04eU4wYEJjxIqMrxVvaScz/KZ8qRiDEjoUfDruc8e/pR
ifvd3F1dEoq+aLLwU+ETqv5T8mrwHAmZHlE8+XPrEzI8lx706CAJqT4RmXS3
GkBS9uqjocJ7/uZljl5sHUAH6vyNy9hI6N+/uU8LcZ9Rw43i2onVQjTr/TnY
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
FGtde71Qn+L/Ad7UWWQ=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =-0.01 \[Omega]1=2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Print",
 CellChangeTimes->{3.408947649460608*^9, 3.408947708414865*^9, 
  3.408947870777357*^9, 3.4089480225458965`*^9, 3.4089484320537586`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Vol Normale Underlying1=\"\>", "\[InvisibleSpace]", 
   "0.006073524559125654`", 
   "\[InvisibleSpace]", "\<\"Vol Normale Underlying2=\"\>", 
   "\[InvisibleSpace]", "0.006317455787366684`"}],
  SequenceForm[
  "Vol Normale Underlying1=", 0.006073524559125654, 
   "Vol Normale Underlying2=", 0.006317455787366684],
  Editable->False]], "Print",
 CellChangeTimes->{3.408947649460608*^9, 3.408947708414865*^9, 
  3.408947870777357*^9, 3.4089480225458965`*^9, 3.4089485634156556`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"479.1400000000001`", ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{InsetBox[
        GraphicsBox[{{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
HdRN/D/Nd7wW
            "]]}, 
          {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
onR4dcRKz3r79hOfE/3UziX+DzTIdRc=
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesOrigin->{0.02, 0},
         DisplayFunction:>$DisplayFunction,
         FormatType->TraditionalForm,
         PlotLabel->FormBox[
          "\"Implied BS vol: Underlying 1\"", TraditionalForm],
         PlotRange->{{0.01, 0.12}, {0, 0.3}},
         PlotRangeClipping->True,
         PlotRangePadding->{
           Scaled[0.02], Automatic}], {-1, -0.6180339887498948}, {
        Left, Bottom}, {2, 1.2360679774997896`}], {
        {GrayLevel[0], RectangleBox[{1.05, -0.05}, {1.85, 0.55}]}, 
        {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
         RectangleBox[{1, 0}, {1.8, 0.6000000000000001}], InsetBox[
          GraphicsBox[{{{InsetBox[
               GraphicsBox[
                {Hue[0.9060679774997897, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"Market\"\>", {1.21, 0.58}, {-1, 0}, Automatic, {1,
                0}]}, {InsetBox[
               GraphicsBox[
                {Hue[0.67, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"BiSuperHeston\"\>", {1.21, 1.74}, {-1, 0}, 
               Automatic, {1, 0}]}}, {}},
           AspectRatio->0.7500000000000001,
           FormatType->TraditionalForm,
           PlotRange->{{-0.1, 3.26}, {-0.1, 2.42}}], {1, 0}, {
          Left, Bottom}, {0.8, 0.6000000000000001}]}}},
      AspectRatio->Automatic,
      Background->None,
      ColorOutput->Automatic,
      ImageSize->Automatic,
      PlotRange->All], ",", 
     GraphicsBox[{InsetBox[
        GraphicsBox[{{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
HdRN/D/Nd7wW
            "]]}, 
          {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
onR4dcRKz3r79hOfE/3UziX+DzTIdRc=
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesOrigin->{0.02, 0},
         DisplayFunction:>$DisplayFunction,
         FormatType->TraditionalForm,
         PlotLabel->FormBox[
          "\"Implied BS vol: Underlying 1\"", TraditionalForm],
         PlotRange->{{0.01, 0.12}, {0, 0.3}},
         PlotRangeClipping->True,
         PlotRangePadding->{
           Scaled[0.02], Automatic}], {-1, -0.6180339887498948}, {
        Left, Bottom}, {2, 1.2360679774997896`}], {
        {GrayLevel[0], RectangleBox[{1.05, -0.05}, {1.85, 0.55}]}, 
        {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
         RectangleBox[{1, 0}, {1.8, 0.6000000000000001}], InsetBox[
          GraphicsBox[{{{InsetBox[
               GraphicsBox[
                {Hue[0.9060679774997897, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"Market\"\>", {1.21, 0.58}, {-1, 0}, Automatic, {1,
                0}]}, {InsetBox[
               GraphicsBox[
                {Hue[0.67, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"BiSuperHeston\"\>", {1.21, 1.74}, {-1, 0}, 
               Automatic, {1, 0}]}}, {}},
           AspectRatio->0.7500000000000001,
           FormatType->TraditionalForm,
           PlotRange->{{-0.1, 3.26}, {-0.1, 2.42}}], {1, 0}, {
          Left, Bottom}, {0.8, 0.6000000000000001}]}}},
      AspectRatio->Automatic,
      Background->None,
      ColorOutput->Automatic,
      ImageSize->Automatic,
      PlotRange->All], ",", 
     GraphicsBox[{InsetBox[
        GraphicsBox[{{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
            "]]}, 
          {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
/xrl
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesOrigin->{0, 0.002},
         DisplayFunction:>$DisplayFunction,
         FormatType->TraditionalForm,
         PlotLabel->FormBox[
          "\"Spread Implied Normal Vol:\"", TraditionalForm],
         PlotRange->{All, All},
         PlotRangeClipping->True,
         PlotRangePadding->{
          Automatic, Automatic}], {-1, -0.6180339887498948}, {
        Left, Bottom}, {2, 1.2360679774997896`}], {
        {GrayLevel[0], RectangleBox[{1.05, -0.05}, {1.85, 0.55}]}, 
        {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
         RectangleBox[{1, 0}, {1.8, 0.6000000000000001}], InsetBox[
          GraphicsBox[{{{InsetBox[
               GraphicsBox[
                {Hue[0.9060679774997897, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"Market\"\>", {1.21, 0.58}, {-1, 0}, Automatic, {1,
                0}]}, {InsetBox[
               GraphicsBox[
                {Hue[0.67, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"BiSuperHeston\"\>", {1.21, 1.74}, {-1, 0}, 
               Automatic, {1, 0}]}}, {}},
           AspectRatio->0.7500000000000001,
           FormatType->TraditionalForm,
           PlotRange->{{-0.1, 3.26}, {-0.1, 2.42}}], {1, 0}, {
          Left, Bottom}, {0.8, 0.6000000000000001}]}}},
      AspectRatio->Automatic,
      Background->None,
      ColorOutput->Automatic,
      ImageSize->{393., Automatic},
      PlotRange->All]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.408897613064292*^9, 3.4088976351428404`*^9}, {
   3.4088977001597137`*^9, 3.408897729800908*^9}, 3.408897766426611*^9, {
   3.4088978255527463`*^9, 3.4088978450374956`*^9}, 3.4088979052886524`*^9, {
   3.4088979376486483`*^9, 3.4088980509320736`*^9}, 3.4088980990111217`*^9, {
   3.4088981451682577`*^9, 3.4088981730125427`*^9}, {3.408898208231969*^9, 
   3.4088982206540823`*^9}, {3.4088982536390905`*^9, 3.4088983429376802`*^9}, 
   3.408898380860283*^9, 3.4089005437768106`*^9, 3.408900803859929*^9, 
   3.408901068505635*^9, 3.4089011816953077`*^9, 3.408901356058031*^9, 
   3.4089014085121627`*^9, 3.4089016250006943`*^9, 3.408902002679821*^9, 
   3.408902103338003*^9, 3.408941486922076*^9, 3.408943457319282*^9, 
   3.4089461528381233`*^9, 3.4089462011671762`*^9, 3.408946243292985*^9, {
   3.408946285575047*^9, 3.408946435062292*^9}, 3.408946686379617*^9, 
   3.408947007573284*^9, 3.408947238452717*^9, 3.4089473157823267`*^9, 
   3.4089475024577856`*^9, 3.4089476603983183`*^9, 3.4089478462456365`*^9, 
   3.4089478991841526`*^9, 3.4089480729374886`*^9, 3.4089485642594223`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Determinations des moments li\[EAcute]s au normal Heston et au BiSuperHeston\
\>", "Section",
 CellChangeTimes->{{3.409050379336972*^9, 3.4090504217752867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NormalHestonFondamentalTransform", "[", 
   RowBox[{
   "\[Rho]_", ",", "\[Lambda]v_", ",", "\[Theta]v_", ",", "\[Kappa]_", ",", 
    "V_", ",", "\[Omega]_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Zeta]", ",", "\[Psi]p", " ", ",", "\[Psi]m", ",", "A", ",", "B", ",", 
      "arg\[Zeta]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Zeta]", "=", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]v", "+", 
           RowBox[{
           "\[Rho]", " ", "\[Kappa]", " ", "\[ImaginaryI]", " ", 
            "\[Omega]"}]}], ")"}], "2"], "+", 
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], 
         RowBox[{"(", " ", 
          SuperscriptBox["\[Omega]", "2"], ")"}]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v", "+", 
          RowBox[{
          "\[Rho]", " ", "\[Kappa]", "  ", "\[ImaginaryI]", " ", 
           "\[Omega]"}]}], ")"}]}], "+", "\[Zeta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v", "+", 
         RowBox[{
         "\[Rho]", " ", "\[Kappa]", "  ", "\[ImaginaryI]", " ", 
          "\[Omega]"}]}], ")"}], "+", "\[Zeta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Theta]v", " ", "\[Lambda]v", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Tau]", " ", "\[Psi]p"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"\[Psi]m", "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Zeta]"}], " ", "\[Tau]"}]], " ", 
                 "\[Psi]p"}]}], 
               RowBox[{"2", "\[Zeta]"}]], "]"}]}]}], ")"}]}]}], 
        RowBox[{" ", 
         SuperscriptBox["\[Kappa]", "2"], "   "}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"B", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           SuperscriptBox["\[Omega]", "2"], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m", "+", 
        RowBox[{"\[Psi]p", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"A", "+", 
       RowBox[{"B", " ", "V"}]}]]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.3996227460377226`*^9, 3.3996227469908657`*^9}, {
  3.3997017930445323`*^9, 3.3997017935445423`*^9}, {3.4089494296822877`*^9, 
  3.4089494313854456`*^9}, {3.4089494671205063`*^9, 3.408949482495802*^9}, {
  3.408950035647047*^9, 3.4089500361939325`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LogNormalHestonFondamentalTransform", "[", 
   RowBox[{
   "\[Rho]_", ",", "\[Lambda]v_", ",", "\[Theta]v_", ",", "\[Kappa]_", ",", 
    "V_", ",", "\[Omega]_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Zeta]", ",", "\[Psi]p", " ", ",", "\[Psi]m", ",", "A", ",", "B", ",", 
      "arg\[Zeta]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Zeta]", "=", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]v", "+", 
           RowBox[{
           "\[Rho]", " ", "\[Kappa]", " ", "\[ImaginaryI]", " ", 
            "\[Omega]"}]}], ")"}], "2"], "+", 
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], 
         RowBox[{"(", " ", 
          SuperscriptBox["\[Omega]", "2"], ")"}]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v", "+", 
          RowBox[{
          "\[Rho]", " ", "\[Kappa]", "  ", "\[ImaginaryI]", " ", 
           "\[Omega]"}]}], ")"}]}], "+", "\[Zeta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v", "+", 
         RowBox[{
         "\[Rho]", " ", "\[Kappa]", "  ", "\[ImaginaryI]", " ", 
          "\[Omega]"}]}], ")"}], "+", "\[Zeta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Theta]v", " ", "\[Lambda]v", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Tau]", " ", "\[Psi]p"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"\[Psi]m", "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Zeta]"}], " ", "\[Tau]"}]], " ", 
                 "\[Psi]p"}]}], 
               RowBox[{"2", "\[Zeta]"}]], "]"}]}]}], ")"}]}]}], 
        RowBox[{" ", 
         SuperscriptBox["\[Kappa]", "2"], "   "}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"B", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           SuperscriptBox["\[Omega]", "2"], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m", "+", 
        RowBox[{"\[Psi]p", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"A", "+", 
      RowBox[{"B", " ", "V"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3996227460377226`*^9, 3.3996227469908657`*^9}, {
  3.3997017930445323`*^9, 3.3997017935445423`*^9}, {3.4089494296822877`*^9, 
  3.4089494313854456`*^9}, {3.4089494671205063`*^9, 3.408949482495802*^9}, {
  3.408950035647047*^9, 3.4089500361939325`*^9}, {3.408978861825499*^9, 
  3.4089788851696973`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"D2", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"LogNormalHestonFondamentalTransform", "[", 
      RowBox[{
      "\[Rho]", ",", "\[Lambda]v", ",", "\[Theta]v", ",", "\[Kappa]", ",", 
       "V", ",", "\[Omega]", ",", "\[Tau]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D2LogNormalHestonFondamentalTransform", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Rho]", ",", "\[Lambda]v", ",", "\[Theta]v", ",", "\[Kappa]", ",", 
       "V", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["\[ImaginaryI]", "2"]], "D2"}], "/.", " ", 
       RowBox[{"\[Omega]", "\[Rule]", "0"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408950684331376*^9, 3.4089506847220087`*^9}, {
  3.4089507841301675`*^9, 3.408950787755237*^9}, {3.408951799352784*^9, 
  3.4089518072123103`*^9}, {3.4089521423124943`*^9, 3.4089521569377747`*^9}, {
  3.4089522564396853`*^9, 3.408952258720979*^9}, {3.408978901201255*^9, 
  3.4089789067638617`*^9}, {3.408978996562461*^9, 3.408979007062662*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"D2LogNormalHestonFondamentalTransform", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Rho]", ",", "\[Lambda]v", ",", "\[Theta]v", ",", "\[Kappa]", ",", 
       "V", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{"D2LogNormalHestonFondamentalTransform", "[", 
        RowBox[{
        "\[Rho]", ",", "\[Lambda]v", ",", "\[Theta]v", ",", "\[Kappa]", ",", 
         "V", ",", "\[Tau]"}], "]"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.4089791617843833`*^9, 3.4089792426296854`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", "=", "0.5"}], ",", 
     RowBox[{"\[Lambda]v", "=", "0.15"}], ",", 
     RowBox[{"\[Theta]v", "=", "0.04"}], ",", 
     RowBox[{"\[Kappa]", "=", "0.2"}], ",", 
     RowBox[{"V", "=", "0.01"}], ",", 
     RowBox[{"\[Omega]", "=", "0"}], ",", 
     RowBox[{"\[Tau]", "=", "30"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"D2LogNormalHestonFondamentalTransform", "[", 
     RowBox[{
     "\[Rho]", ",", "\[Lambda]v", ",", "\[Theta]v", ",", "\[Kappa]", ",", "V",
       ",", "\[Tau]"}], "]"}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.408951875541747*^9, 3.408952001044157*^9}, {
   3.408952035997953*^9, 3.4089520675454335`*^9}, {3.408952219282722*^9, 
   3.4089522212983856`*^9}, {3.408952282143304*^9, 3.408952310284469*^9}, {
   3.4089789318737187`*^9, 3.408978954217898*^9}, {3.4089790411726923`*^9, 
   3.4089790416883273`*^9}, 3.408979076407744*^9}],

Cell[BoxData[
 RowBox[{"{", "1.0022217993076485`", "}"}]], "Output",
 CellChangeTimes->{{3.4089522225171595`*^9, 3.4089522522833557`*^9}, {
   3.408952297987358*^9, 3.408952311721997*^9}, {3.408978938483221*^9, 
   3.408978955592924*^9}, {3.408979026000526*^9, 3.4089790432977333`*^9}, 
   3.408979077970274*^9, 3.408979264864487*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"D2LogNormalHestonFondamentalTransform", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Rho]", ",", "\[Lambda]v", ",", "\[Theta]v", ",", "\[Kappa]", ",", 
       "V", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{"D2LogNormalHestonFondamentalTransform", "[", 
        RowBox[{
        "\[Rho]", ",", "\[Lambda]v", ",", "\[Theta]v", ",", "\[Kappa]", ",", 
         "V", ",", "\[Tau]"}], "]"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.4089791617843833`*^9, 3.4089792426296854`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiSuperLogNormalHestonFondamentalTransform", "[", 
   RowBox[{
   "\[Rho]1_", ",", "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", 
    ",", "V1_", ",", "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",",
     "\[Kappa]2_", ",", "V2_", ",", "\[Rho]3_", ",", "\[Lambda]v3_", ",", 
    "\[Theta]v3_", ",", "\[Kappa]3_", ",", "V3_", ",", "\[Alpha]2_", ",", 
    "\[Beta]2_", ",", "Z1_", ",", "Z2_", ",", "\[Tau]_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Zeta]1", ",", "\[Psi]p1", " ", ",", "\[Psi]m1", ",", "A1", ",", 
      "\[Zeta]2", ",", "\[Psi]p2", " ", ",", "\[Psi]m2", ",", "A2", ",", 
      "\[Zeta]3", ",", "\[Psi]p3", " ", ",", "\[Psi]m3", ",", "A3", ",", 
      "c"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Zeta]1", "=", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]v1", "+", 
           RowBox[{
           "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}], 
          ")"}], "2"], "+", 
        RowBox[{
         SuperscriptBox["\[Kappa]1", "2"], 
         RowBox[{"(", " ", 
          RowBox[{
           SuperscriptBox["Z1", "2"], "-", 
           RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p1", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v1", "+", 
          RowBox[{
          "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}], 
         ")"}]}], "+", "\[Zeta]1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m1", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v1", "+", 
         RowBox[{
         "\[Rho]1", " ", "\[Kappa]1", "  ", "\[ImaginaryI]", " ", "Z1"}]}], 
        ")"}], "+", "\[Zeta]1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A1", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            SuperscriptBox["Z1", "2"], "-", 
            RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m1", "+", 
        RowBox[{"\[Psi]p1", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Zeta]2", "=", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]v2", "+", 
           RowBox[{"\[Rho]2", " ", "\[Kappa]2", " ", "\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
              RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}], "2"], "+", 
        
        RowBox[{
         SuperscriptBox["\[Kappa]2", "2"], 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"Z1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
            SuperscriptBox["\[Alpha]2", "2"]}], "+", 
           RowBox[{
           "2", " ", "Z1", " ", "Z2", " ", "\[Alpha]2", " ", "\[Beta]2"}], 
           "+", 
           RowBox[{"Z2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
            SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p2", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v2", "+", 
          RowBox[{"\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
             RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}]}], "+", 
       "\[Zeta]2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m2", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v2", "+", 
         RowBox[{"\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
            RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}], "+", 
       "\[Zeta]2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A2", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"Z1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
             SuperscriptBox["\[Alpha]2", "2"]}], "+", 
            RowBox[{
            "2", " ", "Z1", " ", "Z2", " ", "\[Alpha]2", " ", "\[Beta]2"}], 
            "+", 
            RowBox[{"Z2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
             SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m2", "+", 
        RowBox[{"\[Psi]p2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Zeta]3", "=", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]v3", "+", 
           RowBox[{
           "\[Rho]3", " ", "\[Kappa]3", " ", "\[ImaginaryI]", " ", "Z2"}]}], 
          ")"}], "2"], "+", 
        RowBox[{
         SuperscriptBox["\[Kappa]3", "2"], 
         RowBox[{"(", " ", 
          RowBox[{
           SuperscriptBox["Z2", "2"], "-", 
           RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p3", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v3", "+", 
          RowBox[{
          "\[Rho]3", " ", "\[Kappa]3", "  ", "\[ImaginaryI]", " ", "Z2"}]}], 
         ")"}]}], "+", "\[Zeta]3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m3", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v3", "+", 
         RowBox[{
         "\[Rho]3", " ", "\[Kappa]3", "  ", "\[ImaginaryI]", " ", "Z2"}]}], 
        ")"}], "+", "\[Zeta]3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A3", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            SuperscriptBox["Z2", "2"], "-", 
            RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m3", "+", 
        RowBox[{"\[Psi]p3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[Theta]v1", " ", "\[Lambda]v1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Tau]", " ", "\[Psi]p1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               FractionBox[
                RowBox[{"\[Psi]m1", "+", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Zeta]1"}], " ", "\[Tau]"}]], " ", 
                  "\[Psi]p1"}]}], 
                RowBox[{"2", "\[Zeta]1"}]], "]"}]}]}], ")"}]}]}], 
         RowBox[{" ", 
          SuperscriptBox["\[Kappa]1", "2"], "   "}]]}], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Theta]v2", " ", "\[Lambda]v2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Tau]", " ", "\[Psi]p2"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"\[Psi]m2", "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Zeta]2"}], " ", "\[Tau]"}]], " ", 
                 "\[Psi]p2"}]}], 
               RowBox[{"2", "\[Zeta]2"}]], "]"}]}]}], ")"}]}]}], 
        RowBox[{" ", 
         SuperscriptBox["\[Kappa]2", "2"], "   "}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Theta]v3", " ", "\[Lambda]v3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Tau]", " ", "\[Psi]p3"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"\[Psi]m3", "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Zeta]3"}], " ", "\[Tau]"}]], " ", 
                 "\[Psi]p3"}]}], 
               RowBox[{"2", "\[Zeta]3"}]], "]"}]}]}], ")"}]}]}], 
        RowBox[{" ", 
         SuperscriptBox["\[Kappa]3", "2"], "   "}]]}]}], ";", 
     "\[IndentingNewLine]", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"c", "+", 
       RowBox[{"A1", " ", "V1"}], "+", 
       RowBox[{"A2", " ", "V2"}], "+", 
       RowBox[{"A3", " ", "V3"}]}]]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4089565787414217`*^9, 3.408956644633312*^9}, {
  3.4097428042914295`*^9, 3.409742825848429*^9}, {3.409742943401429*^9, 
  3.4097429471684294`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LogBiSuperLogNormalHestonFondamentalTransform", "[", 
   RowBox[{
   "\[Rho]1_", ",", "\[Lambda]v1_", ",", "\[Theta]v1_", ",", "\[Kappa]1_", 
    ",", "V1_", ",", "\[Rho]2_", ",", "\[Lambda]v2_", ",", "\[Theta]v2_", ",",
     "\[Kappa]2_", ",", "V2_", ",", "\[Rho]3_", ",", "\[Lambda]v3_", ",", 
    "\[Theta]v3_", ",", "\[Kappa]3_", ",", "V3_", ",", "\[Alpha]2_", ",", 
    "\[Beta]2_", ",", "Z1_", ",", "Z2_", ",", "\[Tau]_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Zeta]1", ",", "\[Psi]p1", " ", ",", "\[Psi]m1", ",", "A1", ",", 
      "\[Zeta]2", ",", "\[Psi]p2", " ", ",", "\[Psi]m2", ",", "A2", ",", 
      "\[Zeta]3", ",", "\[Psi]p3", " ", ",", "\[Psi]m3", ",", "A3", ",", 
      "c"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Zeta]1", "=", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]v1", "+", 
           RowBox[{
           "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}], 
          ")"}], "2"], "+", 
        RowBox[{
         SuperscriptBox["\[Kappa]1", "2"], 
         RowBox[{"(", " ", 
          RowBox[{
           SuperscriptBox["Z1", "2"], "-", 
           RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p1", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v1", "+", 
          RowBox[{
          "\[Rho]1", " ", "\[Kappa]1", " ", "\[ImaginaryI]", " ", "Z1"}]}], 
         ")"}]}], "+", "\[Zeta]1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m1", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v1", "+", 
         RowBox[{
         "\[Rho]1", " ", "\[Kappa]1", "  ", "\[ImaginaryI]", " ", "Z1"}]}], 
        ")"}], "+", "\[Zeta]1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A1", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            SuperscriptBox["Z1", "2"], "-", 
            RowBox[{"\[ImaginaryI]", " ", "Z1"}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m1", "+", 
        RowBox[{"\[Psi]p1", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]1"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Zeta]2", "=", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]v2", "+", 
           RowBox[{"\[Rho]2", " ", "\[Kappa]2", " ", "\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
              RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}], "2"], "+", 
        
        RowBox[{
         SuperscriptBox["\[Kappa]2", "2"], 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"Z1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
            SuperscriptBox["\[Alpha]2", "2"]}], "+", 
           RowBox[{
           "2", " ", "Z1", " ", "Z2", " ", "\[Alpha]2", " ", "\[Beta]2"}], 
           "+", 
           RowBox[{"Z2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
            SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p2", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v2", "+", 
          RowBox[{"\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
             RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}]}], "+", 
       "\[Zeta]2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m2", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v2", "+", 
         RowBox[{"\[Rho]2", " ", "\[Kappa]2", "  ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Z1", " ", "\[Alpha]2"}], "+", 
            RowBox[{"Z2", " ", "\[Beta]2"}]}], ")"}]}]}], ")"}], "+", 
       "\[Zeta]2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A2", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"Z1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "Z1"}], ")"}], " ", 
             SuperscriptBox["\[Alpha]2", "2"]}], "+", 
            RowBox[{
            "2", " ", "Z1", " ", "Z2", " ", "\[Alpha]2", " ", "\[Beta]2"}], 
            "+", 
            RowBox[{"Z2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "Z2"}], ")"}], " ", 
             SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m2", "+", 
        RowBox[{"\[Psi]p2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]2"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Zeta]3", "=", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Lambda]v3", "+", 
           RowBox[{
           "\[Rho]3", " ", "\[Kappa]3", " ", "\[ImaginaryI]", " ", "Z2"}]}], 
          ")"}], "2"], "+", 
        RowBox[{
         SuperscriptBox["\[Kappa]3", "2"], 
         RowBox[{"(", " ", 
          RowBox[{
           SuperscriptBox["Z2", "2"], "-", 
           RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Psi]p3", " ", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]v3", "+", 
          RowBox[{
          "\[Rho]3", " ", "\[Kappa]3", "  ", "\[ImaginaryI]", " ", "Z2"}]}], 
         ")"}]}], "+", "\[Zeta]3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]m3", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Lambda]v3", "+", 
         RowBox[{
         "\[Rho]3", " ", "\[Kappa]3", "  ", "\[ImaginaryI]", " ", "Z2"}]}], 
        ")"}], "+", "\[Zeta]3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A3", "=", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", " ", 
           RowBox[{
            SuperscriptBox["Z2", "2"], "-", 
            RowBox[{"\[ImaginaryI]", " ", "Z2"}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}], ")"}]}]}], 
       RowBox[{"\[Psi]m3", "+", 
        RowBox[{"\[Psi]p3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Zeta]3"}], "  ", "\[Tau]"}]]}]}]]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[Theta]v1", " ", "\[Lambda]v1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Tau]", " ", "\[Psi]p1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               FractionBox[
                RowBox[{"\[Psi]m1", "+", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[Zeta]1"}], " ", "\[Tau]"}]], " ", 
                  "\[Psi]p1"}]}], 
                RowBox[{"2", "\[Zeta]1"}]], "]"}]}]}], ")"}]}]}], 
         RowBox[{" ", 
          SuperscriptBox["\[Kappa]1", "2"], "   "}]]}], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Theta]v2", " ", "\[Lambda]v2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Tau]", " ", "\[Psi]p2"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"\[Psi]m2", "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Zeta]2"}], " ", "\[Tau]"}]], " ", 
                 "\[Psi]p2"}]}], 
               RowBox[{"2", "\[Zeta]2"}]], "]"}]}]}], ")"}]}]}], 
        RowBox[{" ", 
         SuperscriptBox["\[Kappa]2", "2"], "   "}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Theta]v3", " ", "\[Lambda]v3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Tau]", " ", "\[Psi]p3"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"\[Psi]m3", "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "\[Zeta]3"}], " ", "\[Tau]"}]], " ", 
                 "\[Psi]p3"}]}], 
               RowBox[{"2", "\[Zeta]3"}]], "]"}]}]}], ")"}]}]}], 
        RowBox[{" ", 
         SuperscriptBox["\[Kappa]3", "2"], "   "}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"c", "+", 
      RowBox[{"A1", " ", "V1"}], "+", 
      RowBox[{"A2", " ", "V2"}], "+", 
      RowBox[{"A3", " ", "V3"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4089565787414217`*^9, 3.408956644633312*^9}, {
  3.4089649079013386`*^9, 3.408964928057976*^9}, {3.409742844901429*^9, 
  3.409742882752429*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"D1X", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"LogBiSuperLogNormalHestonFondamentalTransform", "[", 
      RowBox[{
      "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",",
        "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
       "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
       "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", 
       "\[Beta]2", ",", "Z1", ",", "Z2", ",", "\[Tau]"}], "]"}], ",", "Z1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D1XBiSuperLogNormalHestonFondamentalTransform", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",",
        "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
       "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
       "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", 
       "\[Beta]2", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "\[ImaginaryI]"], "D1X"}], " ", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Z1", "\[Rule]", "0"}], ",", 
         RowBox[{"Z2", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408950626345888*^9, 3.408950673768674*^9}, {
   3.40895178347748*^9, 3.4089517838993626`*^9}, {3.408952128655982*^9, 
   3.408952135265484*^9}, {3.40895224495509*^9, 3.408952247908272*^9}, {
   3.4089567281505404`*^9, 3.408956792229896*^9}, {3.408960771525047*^9, 
   3.4089608252604537`*^9}, {3.4089608709957066`*^9, 3.4089608722613564`*^9}, 
   3.408964954745988*^9, {3.40981572465959*^9, 3.40981573485859*^9}, 
   3.4098157661945896`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"D1Y", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"LogBiSuperLogNormalHestonFondamentalTransform", "[", 
      RowBox[{
      "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",",
        "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
       "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
       "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", 
       "\[Beta]2", ",", "Z1", ",", "Z2", ",", "\[Tau]"}], "]"}], ",", "Z2"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D1YBiSuperLogNormalHestonFondamentalTransform", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",",
        "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
       "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
       "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", 
       "\[Beta]2", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "\[ImaginaryI]"], "D1Y"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Z1", "\[Rule]", "0"}], ",", 
         RowBox[{"Z2", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408950626345888*^9, 3.408950673768674*^9}, {
   3.40895178347748*^9, 3.4089517838993626`*^9}, {3.408952128655982*^9, 
   3.408952135265484*^9}, {3.40895224495509*^9, 3.408952247908272*^9}, {
   3.4089567281505404`*^9, 3.408956792229896*^9}, {3.408956923810547*^9, 
   3.4089569488735285`*^9}, 3.4089608434170523`*^9, {3.40896087533954*^9, 
   3.4089608766364403`*^9}, 3.4089649578397975`*^9, {3.40981575008259*^9, 
   3.40981577054659*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"D2XX", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"LogBiSuperLogNormalHestonFondamentalTransform", "[", 
      RowBox[{
      "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",",
        "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
       "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
       "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", 
       "\[Beta]2", ",", "Z1", ",", "Z2", ",", "\[Tau]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Z1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D2XXBiSuperLogNormalHestonFondamentalTransform", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",",
        "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
       "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
       "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", 
       "\[Beta]2", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["\[ImaginaryI]", "2"]], "D2XX"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Z1", "\[Rule]", "0"}], ",", 
         RowBox[{"Z2", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408950626345888*^9, 3.408950673768674*^9}, {
   3.40895178347748*^9, 3.4089517838993626`*^9}, {3.408952128655982*^9, 
   3.408952135265484*^9}, {3.40895224495509*^9, 3.408952247908272*^9}, {
   3.4089567281505404`*^9, 3.408956792229896*^9}, {3.408957135798992*^9, 
   3.4089571678464823`*^9}, {3.4089572562700553`*^9, 
   3.4089572565981865`*^9}, {3.408957309458576*^9, 3.4089573428967185`*^9}, 
   3.4089609161840744`*^9, 3.4089609830291076`*^9, 3.4089649620586286`*^9, {
   3.40981575189859*^9, 3.4098157740505896`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"D2YY", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"LogBiSuperLogNormalHestonFondamentalTransform", "[", 
      RowBox[{
      "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",",
        "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
       "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
       "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", 
       "\[Beta]2", ",", "Z1", ",", "Z2", ",", "\[Tau]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Z2", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D2YYBiSuperLogNormalHestonFondamentalTransform", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",",
        "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
       "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
       "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", 
       "\[Beta]2", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["\[ImaginaryI]", "2"]], "D2YY"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Z1", "\[Rule]", "0"}], ",", 
         RowBox[{"Z2", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408950626345888*^9, 3.408950673768674*^9}, {
   3.40895178347748*^9, 3.4089517838993626`*^9}, {3.408952128655982*^9, 
   3.408952135265484*^9}, {3.40895224495509*^9, 3.408952247908272*^9}, {
   3.4089567281505404`*^9, 3.408956792229896*^9}, {3.408956923810547*^9, 
   3.4089569488735285`*^9}, {3.408957139267809*^9, 3.4089571764872737`*^9}, {
   3.408957260332633*^9, 3.4089572606138887`*^9}, {3.4089573163649592`*^9, 
   3.408957346943671*^9}, 3.4089609199341464`*^9, 3.4089609805759354`*^9, 
   3.408964967964992*^9, {3.40981575328259*^9, 3.40981577580259*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"D2XY", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"LogBiSuperLogNormalHestonFondamentalTransform", "[", 
      RowBox[{
      "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",",
        "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
       "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
       "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", 
       "\[Beta]2", ",", "Z1", ",", "Z2", ",", "\[Tau]"}], "]"}], ",", "Z1", 
     ",", "Z2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D2XYBiSuperLogNormalHestonFondamentalTransform", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",",
        "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
       "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
       "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", ",", 
       "\[Beta]2", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["\[ImaginaryI]", "2"]], "D2XY"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Z1", "\[Rule]", "0"}], ",", 
         RowBox[{"Z2", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408950626345888*^9, 3.408950673768674*^9}, {
   3.40895178347748*^9, 3.4089517838993626`*^9}, {3.408952128655982*^9, 
   3.408952135265484*^9}, {3.40895224495509*^9, 3.408952247908272*^9}, {
   3.4089567281505404`*^9, 3.408956792229896*^9}, {3.408957135798992*^9, 
   3.4089571678464823`*^9}, {3.4089572562700553`*^9, 
   3.4089572823799314`*^9}, {3.4089573306152325`*^9, 
   3.4089573553032064`*^9}, {3.408957553072629*^9, 3.4089575602446413`*^9}, 
   3.408960922090438*^9, 3.408960977263372*^9, 3.4089649699650307`*^9, {
   3.40981575536259*^9, 3.40981577821059*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Projection du generateur de Bisuperheston sur les generateurs Normalheston\
\>", "Section",
 CellChangeTimes->{{3.4090504361818132`*^9, 3.4090504726512637`*^9}, 
   3.409051227775137*^9}],

Cell["le generateur", "Text",
 CellChangeTimes->{{3.408973733039528*^9, 3.4089737418209467`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dF", "=", 
    RowBox[{
     RowBox[{
      SqrtBox[
       SubscriptBox["v", "1"]], " ", "F", " ", 
      SubscriptBox["dW", "1"]}], "+", 
     RowBox[{"\[Alpha]2", 
      SqrtBox[
       SubscriptBox["v", "2"]], " ", "F", " ", 
      SubscriptBox["dW", "2"]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dG", "=", 
    RowBox[{
     RowBox[{
      SqrtBox[
       SubscriptBox["v", "3"]], " ", "G", " ", 
      SubscriptBox["dW", "3"]}], "+", 
     RowBox[{"\[Beta]2", 
      SqrtBox[
       SubscriptBox["v", "2"]], " ", "G", "  ", 
      SubscriptBox["dW", "2"]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["dv", "1"], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Lambda]", "1"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "-", 
       SubscriptBox["v", "1"]}], ")"}], "dt"}], "+", " ", 
    RowBox[{
     SubscriptBox["\[Nu]", "1"], 
     SqrtBox[
      SubscriptBox["v", "1"]], " ", 
     SubscriptBox["dW", 
      RowBox[{"v1", "\[IndentingNewLine]"}]]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["dv", "2"], "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Lambda]", "2"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "2"], "-", 
       SubscriptBox["v", "2"]}], ")"}], "dt"}], "+", 
    RowBox[{
     SubscriptBox["\[Nu]", "2"], 
     SqrtBox[
      SubscriptBox["v", "2"]], " ", 
     SubscriptBox["dW", 
      RowBox[{"v2", "\[IndentingNewLine]"}]]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["dv", "3"], "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Lambda]", "3"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "3"], "-", 
       SubscriptBox["v", "3"]}], ")"}], "dt"}], "+", 
    RowBox[{
     SubscriptBox["\[Nu]", "3"], 
     SqrtBox[
      SubscriptBox["v", "3"]], " ", 
     SubscriptBox["dW", 
      RowBox[{"v3", "\[IndentingNewLine]"}]]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["dW", "1"], 
    SubscriptBox["dW", "v1"]}], "=", 
   RowBox[{
    SubscriptBox[
     RowBox[{"\[Rho]", " "}], "1"], "dt"}]}], ";", 
  RowBox[{
   RowBox[{
    SubscriptBox["dW", "2"], 
    SubscriptBox["dW", "v2"]}], "=", 
   RowBox[{
    SubscriptBox["\[Rho]", "2"], " ", "dt"}]}], ";", 
  RowBox[{
   RowBox[{
    SubscriptBox["dW", "3"], 
    SubscriptBox["dW", "v3"]}], "=", 
   RowBox[{
    SubscriptBox["\[Rho]", "3"], " ", "dt"}]}], ";", "  ", 
  RowBox[{
   RowBox[{"les", " ", "autres"}], " ", "=", "0"}]}]}], "Text",
 CellChangeTimes->{{3.409742975881429*^9, 3.409742984273429*^9}, {
  3.40981744856559*^9, 3.4098174555155897`*^9}, {3.40981751031359*^9, 
  3.40981753176359*^9}, {3.40981887002559*^9, 3.40981887058559*^9}}],

Cell["S = F - G", "Text",
 CellChangeTimes->{{3.4089738280101013`*^9, 3.408973830369522*^9}}],

Cell[BoxData[
 RowBox[{"dS", "=", 
  RowBox[{
   RowBox[{
    SqrtBox[
     SubscriptBox["v", "2"]], 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"\[Alpha]2", " ", "F"}], "-", 
      RowBox[{"\[Beta]2", " ", "G"}]}], ")"}], " ", 
    SubscriptBox["dW", "2"]}], "+", 
   RowBox[{
    SqrtBox[
     SubscriptBox["v", "1"]], " ", "F", " ", 
    SubscriptBox["dW", "1"]}], "-", 
   RowBox[{
    SqrtBox[
     SubscriptBox["v", "3"]], " ", "G", " ", 
    SubscriptBox["dW", "3"]}]}]}]], "Text",
 CellChangeTimes->{{3.4089738342445965`*^9, 3.408973966997145*^9}, {
  3.4089741078279743`*^9, 3.408974110187394*^9}, {3.409743035615429*^9, 
  3.409743046407429*^9}, {3.40981718630659*^9, 3.40981718944159*^9}, {
  3.4098174815615897`*^9, 3.40981748900959*^9}}],

Cell["\<\
Le processus de vol est donc donn\[EAcute] par \
\>", "Text",
 CellChangeTimes->{{3.408973759946295*^9, 3.408973765243272*^9}, {
  3.4089740479205737`*^9, 3.408974070061624*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["V", "S"], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["v", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]2", " ", "F"}], "-", 
       RowBox[{"\[Beta]2", " ", "G"}]}], ")"}], "2"]}], "+", 
   RowBox[{
    SubscriptBox["v", "1"], 
    SuperscriptBox["F", "2"]}], "+", 
   RowBox[{
    SubscriptBox["v", "3"], 
    SuperscriptBox["G", "2"]}]}]}]], "Text",
 CellChangeTimes->{{3.4089740764054956`*^9, 3.408974167110362*^9}, {
   3.408974653072818*^9, 3.408974656901016*^9}, 3.4097430675104294`*^9, {
   3.40981719105859*^9, 3.40981719381659*^9}, {3.4098175513215895`*^9, 
   3.40981756025659*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derivation Symboliques", "Subtitle",
 CellChangeTimes->{{3.4098542565807967`*^9, 3.409854263579797*^9}},
 Background->RGBColor[1, 0, 1]],

Cell[CellGroupData[{

Cell["1) BiSuperheston", "Subsection",
 CellChangeTimes->{{3.409894983217603*^9, 3.4098949887876034`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cov", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "\[Rho]1", ",", "0", ",", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "\[Rho]2", ",", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "\[Rho]3"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Rho]1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Rho]2", ",", "0", ",", "0", ",", "1", ",", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\[Rho]3", ",", "0", ",", "0", ",", "1"}], 
      "}"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.409854089151797*^9, 3.409854246684797*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Diff", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"x", ",", "S1"}], "]"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SqrtBox["V1"], "S1"}], ",", 
      RowBox[{"\[Alpha]2", " ", 
       SqrtBox["V2"], "S1"}], ",", "0", ",", "0", ",", "0", ",", "0"}], 
     "}"}]}], "+", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"x", ",", "S2"}], "]"}], 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"\[Beta]2", " ", 
       SqrtBox["V2"], "S2"}], ",", 
      RowBox[{
       SqrtBox["V3"], " ", "S2"}], ",", "0", ",", "0", ",", "0"}], "}"}]}], 
   "+", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"x", ",", "V1"}], "]"}], 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", 
      RowBox[{"\[Kappa]1", " ", 
       SqrtBox["V1"]}], ",", "0", ",", "0"}], "}"}]}], "+", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"x", ",", "V2"}], "]"}], 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"\[Kappa]2", " ", 
       SqrtBox["V2"]}], ",", "0"}], "}"}]}], "+", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"x", ",", "V3"}], "]"}], 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"\[Kappa]3", " ", 
       SqrtBox["V3"]}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.409854316120797*^9, 3.409854351755797*^9}, {
  3.4098544072127967`*^9, 3.409854678750797*^9}, {3.4098952971276035`*^9, 
  3.4098953385916033`*^9}, {3.409895481119603*^9, 3.409895506534603*^9}, {
  3.4098955535916033`*^9, 3.4098955637996035`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VS", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Diff", "[", 
     RowBox[{"S1", "-", "S2"}], "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"Cov", ".", 
      RowBox[{"Diff", "[", 
       RowBox[{"S1", "-", "S2"}], "]"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.409854686801797*^9, 3.4098547561797967`*^9}, {
  3.409895352836603*^9, 3.4098953666366034`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["S1", "2"], " ", "V1"}], "+", 
  RowBox[{
   SuperscriptBox["S2", "2"], " ", "V3"}], "+", 
  RowBox[{"V2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"S1", " ", "\[Alpha]2"}], "-", 
      RowBox[{"S2", " ", "\[Beta]2"}]}], ")"}], "2"]}]}]], "Output",
 CellChangeTimes->{
  3.4098546951757965`*^9, {3.409854739914797*^9, 3.409854761000797*^9}, 
   3.409895388481603*^9, 3.409895513772603*^9, 3.4098955696246033`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VarVS", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Diff", "[", "VS", "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"Cov", ".", 
      RowBox[{"Diff", "[", "VS", "]"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4098547660437965`*^9, 3.409854789299797*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["S1", "2"], " ", "V1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "S1", " ", 
      RowBox[{"(", 
       RowBox[{"V1", "+", 
        RowBox[{"V2", " ", 
         SuperscriptBox["\[Alpha]2", "2"]}]}], ")"}]}], "-", 
     RowBox[{"2", " ", "S2", " ", "V2", " ", "\[Alpha]2", " ", "\[Beta]2"}]}],
     ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "S1", " ", "V1"}], "+", 
     RowBox[{"2", " ", "V2", " ", "\[Alpha]2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"S1", " ", "\[Alpha]2"}], "-", 
        RowBox[{"S2", " ", "\[Beta]2"}]}], ")"}]}], "+", 
     RowBox[{"S1", " ", "\[Kappa]1", " ", "\[Rho]1"}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["S1", "3"], " ", "V1", " ", "\[Kappa]1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "S2", " ", "V2", " ", "\[Alpha]2", " ", 
      "\[Beta]2", " ", "\[Rho]1"}], "+", 
     RowBox[{"S1", " ", 
      RowBox[{"(", 
       RowBox[{"\[Kappa]1", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"V1", "+", 
           RowBox[{"V2", " ", 
            SuperscriptBox["\[Alpha]2", "2"]}]}], ")"}], " ", "\[Rho]1"}]}], 
       ")"}]}]}], ")"}]}], "+", 
  RowBox[{"V2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"S1", " ", "\[Alpha]2"}], "-", 
      RowBox[{"S2", " ", "\[Beta]2"}]}], ")"}], "2"], " ", "\[Kappa]2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"S1", " ", "\[Alpha]2"}], "-", 
         RowBox[{"S2", " ", "\[Beta]2"}]}], ")"}], "2"], " ", "\[Kappa]2"}], 
     "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["S1", "2"], " ", "\[Alpha]2", " ", 
         RowBox[{"(", 
          RowBox[{"V1", "+", 
           RowBox[{"V2", " ", 
            SuperscriptBox["\[Alpha]2", "2"]}]}], ")"}]}], "-", 
        RowBox[{
        "2", " ", "S1", " ", "S2", " ", "V2", " ", "\[Alpha]2", " ", 
         "\[Beta]2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]2", "+", "\[Beta]2"}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["S2", "2"], " ", "\[Beta]2", " ", 
         RowBox[{"(", 
          RowBox[{"V3", "+", 
           RowBox[{"V2", " ", 
            SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}], ")"}], " ", 
      "\[Rho]2"}]}], ")"}]}], "+", 
  RowBox[{"V2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["S1", "2"], " ", "\[Alpha]2", " ", 
      RowBox[{"(", 
       RowBox[{"V1", "+", 
        RowBox[{"V2", " ", 
         SuperscriptBox["\[Alpha]2", "2"]}]}], ")"}]}], "-", 
     RowBox[{
     "2", " ", "S1", " ", "S2", " ", "V2", " ", "\[Alpha]2", " ", "\[Beta]2", 
      " ", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]2", "+", "\[Beta]2"}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["S2", "2"], " ", "\[Beta]2", " ", 
      RowBox[{"(", 
       RowBox[{"V3", "+", 
        RowBox[{"V2", " ", 
         SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "S1", " ", "S2", " ", "\[Alpha]2", " ", 
      "\[Beta]2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"V2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]2", "+", "\[Beta]2"}], ")"}]}], "+", 
        RowBox[{"\[Kappa]2", " ", "\[Rho]2"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["S1", "2"], " ", "\[Alpha]2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "V1"}], "+", 
        RowBox[{"\[Alpha]2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "V2", " ", "\[Alpha]2"}], "+", 
           RowBox[{"\[Kappa]2", " ", "\[Rho]2"}]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["S2", "2"], " ", "\[Beta]2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "V3"}], "+", 
        RowBox[{"\[Beta]2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "V2", " ", "\[Beta]2"}], "+", 
           RowBox[{"\[Kappa]2", " ", "\[Rho]2"}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["S2", "3"], " ", "V3", " ", "\[Kappa]3", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "S1", " ", "V2", " ", "\[Alpha]2", " ", 
      "\[Beta]2", " ", "\[Rho]3"}], "+", 
     RowBox[{"S2", " ", 
      RowBox[{"(", 
       RowBox[{"\[Kappa]3", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"V3", "+", 
           RowBox[{"V2", " ", 
            SuperscriptBox["\[Beta]2", "2"]}]}], ")"}], " ", "\[Rho]3"}]}], 
       ")"}]}]}], ")"}]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["S2", "2"], " ", "V3", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "S1"}], " ", "V2", " ", "\[Alpha]2", " ", "\[Beta]2"}], 
     "+", 
     RowBox[{"S2", " ", 
      RowBox[{"(", 
       RowBox[{"V3", "+", 
        RowBox[{"V2", " ", 
         SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "S1", " ", "V2", " ", "\[Alpha]2", " ", 
      "\[Beta]2"}], "+", 
     RowBox[{"S2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "V3"}], "+", 
        RowBox[{"2", " ", "V2", " ", 
         SuperscriptBox["\[Beta]2", "2"]}], "+", 
        RowBox[{"\[Kappa]3", " ", "\[Rho]3"}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.4098955823776035`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoVarSVS", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Diff", "[", "VS", "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"Cov", ".", 
      RowBox[{"Diff", "[", 
       RowBox[{"S1", "-", "S2"}], "]"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.409854964990797*^9, 3.409854993691797*^9}, {
  3.4098953750686035`*^9, 3.409895379396603*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   SuperscriptBox["S1", "2"], " ", "V1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"S1", " ", 
      RowBox[{"(", 
       RowBox[{"V1", "+", 
        RowBox[{"V2", " ", 
         SuperscriptBox["\[Alpha]2", "2"]}]}], ")"}]}], "-", 
     RowBox[{"S2", " ", "V2", " ", "\[Alpha]2", " ", "\[Beta]2"}]}], ")"}]}], 
  "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["S2", "2"], " ", "V3", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "S1"}], " ", "V2", " ", "\[Alpha]2", " ", "\[Beta]2"}], 
     "+", 
     RowBox[{"S2", " ", 
      RowBox[{"(", 
       RowBox[{"V3", "+", 
        RowBox[{"V2", " ", 
         SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"V2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"S1", " ", "\[Alpha]2"}], "-", 
     RowBox[{"S2", " ", "\[Beta]2"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["S1", "2"], " ", "\[Alpha]2", " ", 
      RowBox[{"(", 
       RowBox[{"V1", "+", 
        RowBox[{"V2", " ", 
         SuperscriptBox["\[Alpha]2", "2"]}]}], ")"}]}], "-", 
     RowBox[{
     "2", " ", "S1", " ", "S2", " ", "V2", " ", "\[Alpha]2", " ", "\[Beta]2", 
      " ", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]2", "+", "\[Beta]2"}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["S2", "2"], " ", "\[Beta]2", " ", 
      RowBox[{"(", 
       RowBox[{"V3", "+", 
        RowBox[{"V2", " ", 
         SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["S1", "3"], " ", "V1", " ", "\[Kappa]1", " ", "\[Rho]1"}], 
  "+", 
  RowBox[{"V2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"S1", " ", "\[Alpha]2"}], "-", 
      RowBox[{"S2", " ", "\[Beta]2"}]}], ")"}], "3"], " ", "\[Kappa]2", " ", 
   "\[Rho]2"}], "-", 
  RowBox[{
   SuperscriptBox["S2", "3"], " ", "V3", " ", "\[Kappa]3", " ", 
   "\[Rho]3"}]}]], "Output",
 CellChangeTimes->{3.4098549952117968`*^9, 3.4098953917876034`*^9, 
  3.4098955188916035`*^9, 3.409895584605603*^9}]
}, Open  ]],

Cell["\<\
Que l' on identifie avec les meme calculs fait avec normal heston :\
\>", "Text",
 CellChangeTimes->{{3.4098550768597965`*^9, 3.409855100075797*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["2) Normal Heston", "Subsection",
 CellChangeTimes->{{3.4098950100686035`*^9, 3.4098950172756033`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CovNH", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "\[Rho]"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Rho]", ",", "1"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.409854089151797*^9, 3.409854246684797*^9}, {
  3.409855174788797*^9, 3.409855198651797*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DiffNH", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"x", ",", "S"}], "]"}], 
    RowBox[{"{", 
     RowBox[{
      SqrtBox["v"], ",", "0"}], "}"}]}], "+", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"x", ",", "v"}], "]"}], 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"\[Nu]", 
       SqrtBox["v"]}]}], " ", "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.4098552137017965`*^9, 3.409855276644797*^9}, {
   3.4098553799967966`*^9, 3.4098553828927965`*^9}, 3.409856251214797*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VSNH", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"DiffNH", "[", "S", "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"CovNH", ".", 
      RowBox[{"DiffNH", "[", "S", "]"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.409854686801797*^9, 3.4098547561797967`*^9}, {
  3.4098552958367968`*^9, 3.409855323971797*^9}, {3.409855389283797*^9, 
  3.409855393235797*^9}}],

Cell[BoxData["v"], "Output",
 CellChangeTimes->{3.409855328440797*^9, 3.409855394464797*^9, 
  3.409856264479797*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VarVSNH", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"DiffNH", "[", "VSNH", "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"CovNH", ".", 
      RowBox[{"DiffNH", "[", "VSNH", "]"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4098553677487965`*^9, 3.4098553679637966`*^9}, {
  3.409855403763797*^9, 3.409855420651797*^9}}],

Cell[BoxData[
 RowBox[{"v", " ", 
  SuperscriptBox["\[Nu]", "2"]}]], "Output",
 CellChangeTimes->{3.409855429993797*^9, 3.409856269960797*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoVarSVS", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"DiffNH", "[", "VSNH", "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"CovNH", ".", 
      RowBox[{"DiffNH", "[", "S", "]"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.409855455315797*^9, 3.409855478835797*^9}}],

Cell[BoxData[
 RowBox[{"v", " ", "\[Nu]", " ", "\[Rho]"}]], "Output",
 CellChangeTimes->{3.409855482992797*^9, 3.4098562733597965`*^9}]
}, Open  ]],

Cell["ce qui permet d' extraire les parametres utiles :", "Text",
 CellChangeTimes->{{3.4098555021827965`*^9, 3.409855515571797*^9}}],

Cell["v = VSNH    ", "Text",
 CellChangeTimes->{{3.409855537315797*^9, 3.4098555781667967`*^9}, {
  3.409856285131797*^9, 3.4098562921797967`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Nu]", "2"], "=", 
  RowBox[{
   FractionBox["VarVSNH", "v"], "=", 
   FractionBox["VarVSNH", "VSNH"]}]}]], "Text",
 CellChangeTimes->{{3.4098563246197968`*^9, 3.409856334347797*^9}, {
  3.409856380403797*^9, 3.4098563920367966`*^9}}],

Cell[BoxData[
 RowBox[{"\[Rho]", "=", 
  RowBox[{
   FractionBox["CoVarSVS", 
    RowBox[{"v", " ", "\[Nu]"}]], "=", 
   FractionBox["CoVarSVS", "VarVSNH"]}]}]], "Text",
 CellChangeTimes->{{3.4098556083237967`*^9, 3.4098557094847965`*^9}, 
   3.409856302971797*^9, {3.409856359387797*^9, 3.409856416275797*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pricing rapide de spreadoption dans le bisuperheston", "Section",
 CellChangeTimes->{{3.409050553355938*^9, 3.4090505755126133`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SmileBiSuperHestonVanillaSpreadOption", "[", 
   RowBox[{
   "S1_", ",", "S2_", ",", " ", "\[Rho]1_", ",", "\[Lambda]v1_", ",", 
    "\[Theta]v1_", ",", "\[Kappa]1_", ",", "V1_", ",", "\[Rho]2_", ",", 
    "\[Lambda]v2_", ",", "\[Theta]v2_", ",", "\[Kappa]2_", ",", "V2_", ",", 
    "\[Rho]3_", ",", "\[Lambda]v3_", ",", "\[Theta]v3_", ",", "\[Kappa]3_", 
    ",", "V3_", ",", "\[Alpha]2_", ",", "\[Beta]2_", ",", "SpreadStrikes_", 
    ",", "\[Tau]_", ",", "printflag_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Z1", ",", "Z2", ",", "VarExpX", ",", "VarExpY", ",", "VarRealSpead", 
      ",", "\[Rho]projet\[EAcute]", ",", "\[Nu]projet\[EAcute]", ",", 
      "\[IndentingNewLine]", "\[Mu]X", ",", "\[Mu]Y", ",", "\[Mu]XX", ",", 
      "\[Mu]YY", ",", "\[Mu]XY", ",", "\[Mu]XXX", ",", "\[Mu]XXY", ",", 
      "\[Mu]XYY", ",", "\[Mu]YYY", ",", "\[Mu]XXXX", ",", "\[Mu]XXXY", ",", 
      "\[Mu]XXYY", ",", "\[Mu]XYYY", ",", "\[Mu]YYYY", ",", 
      "\[IndentingNewLine]", "\[Mu]1", ",", "\[Mu]2", ",", "\[Mu]3", ",", 
      "\[Mu]4", ",", "V0Generateur", ",", "\[Kappa]S", ",", "\[Rho]S", ",", 
      "\[Lambda]S", ",", "LTFactorS", ",", "TrueIniVarSpread", ",", "x", ",", 
      "prices", ",", "logcorrelT", ",", "\[Rho]model", ",", "VarVS", ",", 
      "CoVarSVS", ",", "VS"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Mu]X", ",", "\[Mu]Y"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Mu]XX", ",", "\[Mu]YY", ",", "\[Mu]XY"}], "}"}]}], "}"}], 
      "=", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D1XBiSuperLogNormalHestonFondamentalTransform", "[", 
           RowBox[{
           "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1",
             ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2",
             ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
            ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", 
            ",", "\[Beta]2", ",", "\[Tau]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"D1YBiSuperLogNormalHestonFondamentalTransform", "[", 
           RowBox[{
           "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1",
             ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2",
             ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
            ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", 
            ",", "\[Beta]2", ",", "\[Tau]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D2XXBiSuperLogNormalHestonFondamentalTransform", "[", 
           RowBox[{
           "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1",
             ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2",
             ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
            ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", 
            ",", "\[Beta]2", ",", "\[Tau]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"D2YYBiSuperLogNormalHestonFondamentalTransform", "[", 
           RowBox[{
           "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1",
             ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2",
             ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
            ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", 
            ",", "\[Beta]2", ",", "\[Tau]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"D2XYBiSuperLogNormalHestonFondamentalTransform", "[", 
           RowBox[{
           "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1",
             ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2",
             ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", 
            ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "\[Alpha]2", 
            ",", "\[Beta]2", ",", "\[Tau]"}], "]"}]}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"printflag", ",", "1"}], "]"}]}], " ", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<moments=\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Mu]X", ",", "\[Mu]Y"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Mu]XX", ",", "\[Mu]YY", ",", "\[Mu]XY"}], "}"}]}], 
          "}"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"logcorrelT", "=", 
      RowBox[{"\[Mu]XY", "/", 
       SqrtBox[
        RowBox[{"\[Mu]XX", " ", "\[Mu]YY", " "}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"printflag", ",", "1"}], "]"}]}], " ", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<logcorrelT=\>\"", ",", "logcorrelT"}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"VarVS", "=", 
      RowBox[{
       RowBox[{
        SuperscriptBox["S1", "2"], " ", "V1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "S1", " ", 
           RowBox[{"(", 
            RowBox[{"V1", "+", 
             RowBox[{"V2", " ", 
              SuperscriptBox["\[Alpha]2", "2"]}]}], ")"}]}], "-", 
          RowBox[{
          "2", " ", "S2", " ", "V2", " ", "\[Alpha]2", " ", "\[Beta]2"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "S1", " ", "V1"}], "+", 
          RowBox[{"2", " ", "V2", " ", "\[Alpha]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"S1", " ", "\[Alpha]2"}], "-", 
             RowBox[{"S2", " ", "\[Beta]2"}]}], ")"}]}], "+", 
          RowBox[{"S1", " ", "\[Kappa]1", " ", "\[Rho]1"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["S1", "3"], " ", "V1", " ", "\[Kappa]1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "S2", " ", "V2", " ", "\[Alpha]2", " ", 
           "\[Beta]2", " ", "\[Rho]1"}], "+", 
          RowBox[{"S1", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]1", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"V1", "+", 
                RowBox[{"V2", " ", 
                 SuperscriptBox["\[Alpha]2", "2"]}]}], ")"}], " ", 
              "\[Rho]1"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"V2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"S1", " ", "\[Alpha]2"}], "-", 
           RowBox[{"S2", " ", "\[Beta]2"}]}], ")"}], "2"], " ", "\[Kappa]2", 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"S1", " ", "\[Alpha]2"}], "-", 
              RowBox[{"S2", " ", "\[Beta]2"}]}], ")"}], "2"], " ", 
           "\[Kappa]2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["S1", "2"], " ", "\[Alpha]2", " ", 
              RowBox[{"(", 
               RowBox[{"V1", "+", 
                RowBox[{"V2", " ", 
                 SuperscriptBox["\[Alpha]2", "2"]}]}], ")"}]}], "-", 
             RowBox[{
             "2", " ", "S1", " ", "S2", " ", "V2", " ", "\[Alpha]2", " ", 
              "\[Beta]2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]2", "+", "\[Beta]2"}], ")"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["S2", "2"], " ", "\[Beta]2", " ", 
              RowBox[{"(", 
               RowBox[{"V3", "+", 
                RowBox[{"V2", " ", 
                 SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}], ")"}], " ", 
           "\[Rho]2"}]}], ")"}]}], "+", 
       RowBox[{"V2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["S1", "2"], " ", "\[Alpha]2", " ", 
           RowBox[{"(", 
            RowBox[{"V1", "+", 
             RowBox[{"V2", " ", 
              SuperscriptBox["\[Alpha]2", "2"]}]}], ")"}]}], "-", 
          RowBox[{
          "2", " ", "S1", " ", "S2", " ", "V2", " ", "\[Alpha]2", " ", 
           "\[Beta]2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]2", "+", "\[Beta]2"}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["S2", "2"], " ", "\[Beta]2", " ", 
           RowBox[{"(", 
            RowBox[{"V3", "+", 
             RowBox[{"V2", " ", 
              SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "S1", " ", "S2", " ", "\[Alpha]2", " ", 
           "\[Beta]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"V2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]2", "+", "\[Beta]2"}], ")"}]}], "+", 
             RowBox[{"\[Kappa]2", " ", "\[Rho]2"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["S1", "2"], " ", "\[Alpha]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "V1"}], "+", 
             RowBox[{"\[Alpha]2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "V2", " ", "\[Alpha]2"}], "+", 
                RowBox[{"\[Kappa]2", " ", "\[Rho]2"}]}], ")"}]}]}], ")"}]}], 
          "+", 
          RowBox[{
           SuperscriptBox["S2", "2"], " ", "\[Beta]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "V3"}], "+", 
             RowBox[{"\[Beta]2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "V2", " ", "\[Beta]2"}], "+", 
                RowBox[{"\[Kappa]2", " ", "\[Rho]2"}]}], ")"}]}]}], ")"}]}]}],
          ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["S2", "3"], " ", "V3", " ", "\[Kappa]3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "S1", " ", "V2", " ", "\[Alpha]2", " ", 
           "\[Beta]2", " ", "\[Rho]3"}], "+", 
          RowBox[{"S2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]3", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"V3", "+", 
                RowBox[{"V2", " ", 
                 SuperscriptBox["\[Beta]2", "2"]}]}], ")"}], " ", 
              "\[Rho]3"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["S2", "2"], " ", "V3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "S1"}], " ", "V2", " ", "\[Alpha]2", " ", 
           "\[Beta]2"}], "+", 
          RowBox[{"S2", " ", 
           RowBox[{"(", 
            RowBox[{"V3", "+", 
             RowBox[{"V2", " ", 
              SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "S1", " ", "V2", " ", "\[Alpha]2", " ", 
           "\[Beta]2"}], "+", 
          RowBox[{"S2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "V3"}], "+", 
             RowBox[{"2", " ", "V2", " ", 
              SuperscriptBox["\[Beta]2", "2"]}], "+", 
             RowBox[{"\[Kappa]3", " ", "\[Rho]3"}]}], ")"}]}]}], ")"}]}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"CoVarSVS", "=", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["S1", "2"], " ", "V1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"S1", " ", 
           RowBox[{"(", 
            RowBox[{"V1", "+", 
             RowBox[{"V2", " ", 
              SuperscriptBox["\[Alpha]2", "2"]}]}], ")"}]}], "-", 
          RowBox[{"S2", " ", "V2", " ", "\[Alpha]2", " ", "\[Beta]2"}]}], 
         ")"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["S2", "2"], " ", "V3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "S1"}], " ", "V2", " ", "\[Alpha]2", " ", 
           "\[Beta]2"}], "+", 
          RowBox[{"S2", " ", 
           RowBox[{"(", 
            RowBox[{"V3", "+", 
             RowBox[{"V2", " ", 
              SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"V2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"S1", " ", "\[Alpha]2"}], "-", 
          RowBox[{"S2", " ", "\[Beta]2"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["S1", "2"], " ", "\[Alpha]2", " ", 
           RowBox[{"(", 
            RowBox[{"V1", "+", 
             RowBox[{"V2", " ", 
              SuperscriptBox["\[Alpha]2", "2"]}]}], ")"}]}], "-", 
          RowBox[{
          "2", " ", "S1", " ", "S2", " ", "V2", " ", "\[Alpha]2", " ", 
           "\[Beta]2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]2", "+", "\[Beta]2"}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["S2", "2"], " ", "\[Beta]2", " ", 
           RowBox[{"(", 
            RowBox[{"V3", "+", 
             RowBox[{"V2", " ", 
              SuperscriptBox["\[Beta]2", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["S1", "3"], " ", "V1", " ", "\[Kappa]1", " ", 
        "\[Rho]1"}], "+", 
       RowBox[{"V2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"S1", " ", "\[Alpha]2"}], "-", 
           RowBox[{"S2", " ", "\[Beta]2"}]}], ")"}], "3"], " ", "\[Kappa]2", 
        " ", "\[Rho]2"}], "-", 
       RowBox[{
        SuperscriptBox["S2", "3"], " ", "V3", " ", "\[Kappa]3", " ", 
        "\[Rho]3"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"VS", "=", 
      RowBox[{
       RowBox[{
        SuperscriptBox["S1", "2"], " ", "V1"}], "+", 
       RowBox[{
        SuperscriptBox["S2", "2"], " ", "V3"}], "+", 
       RowBox[{"V2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"S1", " ", "\[Alpha]2"}], "-", 
           RowBox[{"S2", " ", "\[Beta]2"}]}], ")"}], "2"]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Rho]projet\[EAcute]", "=", 
      FractionBox["CoVarSVS", "VarVS"]}], ";", 
     RowBox[{"\[Nu]projet\[EAcute]", "=", 
      SqrtBox[
       FractionBox["VarVS", "VS"]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"VarExpX", "=", 
      RowBox[{"LogHestonNormalVariance", "[", 
       RowBox[{
       "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", 
        ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",",
         "\[Kappa]2", ",", 
        RowBox[{
         SqrtBox["\[Alpha]2"], "V2"}], ",", "S1", ",", "\[Tau]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"VarExpY", "=", 
      RowBox[{"LogHestonNormalVariance", "[", 
       RowBox[{
       "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", 
        ",", "V3", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",",
         "\[Kappa]2", ",", 
        RowBox[{
         SqrtBox["\[Beta]2"], "V2"}], ",", "S2", ",", "\[Tau]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"VarRealSpead", "=", 
      RowBox[{"VarExpX", "+", "VarExpY", "-", 
       RowBox[{"2", "logcorrelT", " ", 
        SqrtBox[
         RowBox[{"VarExpX", " ", "VarExpY"}]]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"printflag", ",", "1"}], "]"}]}], " ", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<VarRealSpead (Goal)=\>\"", ",", "VarRealSpead"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"LTFactorS", "=", "1.5"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]S", "=", "0.15"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"TrueIniVarSpread", "=", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Lambda]S", " ", "\[Tau]"}]], " ", "VarRealSpead", " ", 
        "\[Lambda]S"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "LTFactorS", "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Lambda]S", " ", "\[Tau]"}]], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"LTFactorS", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"\[Lambda]S", " ", "\[Tau]"}]}], ")"}]}]}], 
          ")"}]}]}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"printflag", ",", "1"}], "]"}]}], " ", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<TrueIniVarSpread=\>\"", ",", "TrueIniVarSpread"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"printflag", ",", "1"}], "]"}]}], " ", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<TrueIniVarSpread=\>\"", ",", "TrueIniVarSpread"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"printflag", ",", "1"}], "]"}]}], " ", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Normal Heston Parameters=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<S0\>\"", ",", 
              RowBox[{"S1", "-", "S2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<V0\>\"", ",", "TrueIniVarSpread"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]\>\"", ",", 
              RowBox[{"LTFactorS", " ", "TrueIniVarSpread"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v\>\"", ",", "\[Lambda]S"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]\>\"", ",", "\[Rho]S"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Nu]\>\"", ",", "\[Kappa]S"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]",
      
     RowBox[{"prices", "=", 
      RowBox[{"HestonNormalCallTrace", "[", 
       RowBox[{"\[Rho]S", ",", "\[Lambda]S", ",", 
        RowBox[{"LTFactorS", " ", "TrueIniVarSpread"}], ",", "\[Kappa]S", ",",
         "TrueIniVarSpread", ",", 
        RowBox[{"S1", "-", "S2"}], ",", "SpreadStrikes", ",", "\[Tau]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"printflag", ",", "1"}], "]"}]}], " ", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<prices=\>\"", ",", "prices"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "prices"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408956844934033*^9, 3.408956906575841*^9}, {
   3.408956964170697*^9, 3.4089569705301943`*^9}, {3.40895707187589*^9, 
   3.408957082407342*^9}, {3.4089573834287467`*^9, 3.4089574125855565`*^9}, 
   3.408957577963732*^9, {3.40895768152822*^9, 3.408957743748165*^9}, 
   3.4089578379374733`*^9, {3.4089584834654922`*^9, 3.408958494715708*^9}, {
   3.4089586011083755`*^9, 3.4089586077960043`*^9}, {3.4089587478768187`*^9, 
   3.408958753736306*^9}, {3.4089588763949113`*^9, 3.4089588824262767`*^9}, {
   3.4089589580058527`*^9, 3.4089589964597163`*^9}, {3.408960673288786*^9, 
   3.4089607017580824`*^9}, {3.408960889949196*^9, 3.4089608940117736`*^9}, {
   3.408961004826401*^9, 3.408961032795688*^9}, {3.4089630328965893`*^9, 
   3.4089630521782093`*^9}, {3.4089637330037813`*^9, 3.408963769926365*^9}, {
   3.408963860912487*^9, 3.408964063432*^9}, {3.408964171699704*^9, 
   3.408964228544545*^9}, {3.408965045544606*^9, 3.408965053185378*^9}, {
   3.408968319185584*^9, 3.4089683634051833`*^9}, {3.4089686005347357`*^9, 
   3.408968604331684*^9}, {3.4089686428167977`*^9, 3.408968651879472*^9}, {
   3.4089687218964415`*^9, 3.4089687220995703`*^9}, {3.408973269264999*^9, 
   3.408973279483945*^9}, {3.4089733271254845`*^9, 3.408973342594532*^9}, 
   3.408973413486518*^9, {3.4089776708182573`*^9, 3.4089778401965094`*^9}, {
   3.4089779902306395`*^9, 3.4089780974670734`*^9}, {3.408978134795915*^9, 
   3.4089781575932283`*^9}, {3.408978235297845*^9, 3.4089784010666523`*^9}, {
   3.4089784745524387`*^9, 3.408978811199527*^9}, {3.408979359069421*^9, 
   3.408979445805461*^9}, {3.4089794868843746`*^9, 3.4089795062753725`*^9}, 
   3.4089795407135334`*^9, {3.4089797138418574`*^9, 3.4089797677647676`*^9}, {
   3.408979817828229*^9, 3.408979908158088*^9}, {3.409049953828802*^9, 
   3.4090500277989726`*^9}, {3.409050069612275*^9, 3.4090501709267206`*^9}, {
   3.4090506829053*^9, 3.4090509313006945`*^9}, {3.4090510147397966`*^9, 
   3.409051042349702*^9}, {3.409053231688611*^9, 3.40905323345427*^9}, 
   3.4090534429739175`*^9, {3.4090534907873354`*^9, 3.409053516287825*^9}, {
   3.409054122658842*^9, 3.409054378882512*^9}, {3.409054451899539*^9, 
   3.4090545948085327`*^9}, {3.409054913486526*^9, 3.409054934361927*^9}, {
   3.4091638744984107`*^9, 3.409163875658411*^9}, {3.409163941042411*^9, 
   3.4091639424264107`*^9}, {3.409404103843276*^9, 3.409404114249792*^9}, {
   3.409404173173176*^9, 3.409404232596552*^9}, {3.4094042875194817`*^9, 
   3.4094043409580073`*^9}, {3.4094044764137335`*^9, 
   3.4094044903046246`*^9}, {3.4098173873455896`*^9, 3.40981742429059*^9}, {
   3.409895219925603*^9, 3.409895262428603*^9}, {3.409895429882603*^9, 
   3.409895465335603*^9}, {3.409895530451603*^9, 3.409895533286603*^9}, {
   3.409895600139603*^9, 3.4098956798676033`*^9}, {3.4098957178186035`*^9, 
   3.4098957307626033`*^9}, {3.409895792771603*^9, 3.409895813956603*^9}, {
   3.4098963059246035`*^9, 3.4098963140916033`*^9}, {3.409896352566603*^9, 
   3.409896355725603*^9}, 3.409896450524603*^9, {3.409896939014603*^9, 
   3.4098969842596035`*^9}, {3.4098970400196033`*^9, 3.409897052138603*^9}, {
   3.4098971478796034`*^9, 3.4098971499526033`*^9}, {3.409897286817603*^9, 
   3.409897328547603*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
     "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
     "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
     "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "Z1", ",", "Z2", ",", 
     "\[Tau]", ",", "S1", ",", "S2", ",", "SpreadStrikes"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]1", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v1", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v1", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]1", "=", "0.2"}], ";", 
    RowBox[{"V1", "=", "0.01"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Rho]2", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v2", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v2", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]2", "=", "0.2"}], ";", 
    RowBox[{"V2", "=", "0.01"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Rho]3", "=", 
     RowBox[{"-", "0.5"}]}], ";", 
    RowBox[{"\[Lambda]v3", "=", "0.15"}], ";", 
    RowBox[{"\[Theta]v3", "=", "0.05"}], ";", 
    RowBox[{"\[Kappa]3", "=", "0.2"}], ";", 
    RowBox[{"V3", "=", "0.01"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Tau]", "=", "10"}], ";", 
    RowBox[{"S1", "=", "0.05"}], ";", 
    RowBox[{"S2", "=", "0.045"}], ";", 
    RowBox[{"SpreadStrikes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.015"}], ",", 
       RowBox[{"-", "0.01"}], ",", 
       RowBox[{"-", "0.005"}], ",", 
       RowBox[{"-", "0.001"}], ",", "0", ",", "0.001", ",", "0.005", ",", 
       "0.01", ",", "0.015"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"SmileBiSuperHestonVanillaSpreadOption", "[", 
     RowBox[{
     "S1", ",", "S2", ",", " ", "\[Rho]1", ",", "\[Lambda]v1", ",", 
      "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", 
      "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", 
      "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",",
       "V3", ",", "SpreadStrikes", ",", "\[Tau]", ",", "0"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4090509579574566`*^9, 3.409051048474819*^9}, 
   3.4092249676013155`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"L=\"\>", "\[InvisibleSpace]", "260.8915707466747`", 
   "\[InvisibleSpace]", "\<\" \[Kappa]1=\"\>", "\[InvisibleSpace]", 
   "4.977381230435828`", "\[InvisibleSpace]", "\<\" S01=\"\>", 
   "\[InvisibleSpace]", "1.3044578537333746`", 
   "\[InvisibleSpace]", "\<\" k1=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.91337356120012`"}], ",", 
     RowBox[{"-", "2.608915707466747`"}], ",", 
     RowBox[{"-", "1.3044578537333735`"}], ",", 
     RowBox[{"-", "0.2608915707466747`"}], ",", "0", ",", 
     "0.2608915707466747`", ",", "1.3044578537333735`", ",", 
     "2.608915707466747`", ",", "3.91337356120012`"}], "}"}]}],
  SequenceForm[
  "L=", 260.8915707466747, " \[Kappa]1=", 4.977381230435828, " S01=", 
   1.3044578537333746`, 
   " k1=", {-3.91337356120012, -2.608915707466747, -1.3044578537333735`, \
-0.2608915707466747, 0, 0.2608915707466747, 1.3044578537333735`, 
    2.608915707466747, 3.91337356120012}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4092249699793153`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.014554997478340284`", ",", "0.011702904756040447`", ",", 
   "0.00822230709934326`", ",", "0.005248884683077986`", ",", 
   "0.004510104524684469`", ",", "0.003785556617965242`", ",", 
   "0.001345668786689664`", ",", "0.000318420735656886`", ",", 
   "0.00010664507242642516`"}], "}"}]], "Output",
 CellChangeTimes->{3.409051049677967*^9, 3.409164744431411*^9, 
  3.409224970007315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparaison pricing rapide / pricing fourier", "Subsection",
 CellChangeTimes->{{3.4092254127753153`*^9, 3.4092254392223153`*^9}, {
  3.4092262668943152`*^9, 3.409226267462315*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
      "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
      "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
      "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "Z1", ",", "Z2", ",", 
      "\[Tau]", ",", "S", ",", 
      RowBox[{"\[Alpha]1", "=", "1"}], ",", 
      RowBox[{"\[Beta]1", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}], ",", 
      RowBox[{"b", "=", "1"}], ",", "KList", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "printflag", ",", "prices", ",", "smile", ",", 
      "prices2", ",", "smile2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Rho]1", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v1", "=", "0.15"}], ";", 
     RowBox[{"\[Theta]v1", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]1", "=", "0.02"}], ";", 
     RowBox[{"V1", "=", "0.01"}], ";", 
     RowBox[{"\[Rho]2", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v2", "=", "0.15"}], ";", 
     RowBox[{"\[Theta]v2", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]2", "=", "0.02"}], ";", 
     RowBox[{"V2", "=", "0.01"}], ";", 
     RowBox[{"\[Rho]3", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v3", "=", "0.35"}], ";", 
     RowBox[{"\[Theta]v3", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]3", "=", "0.02"}], ";", 
     RowBox[{"V3", "=", "0.01"}], ";", 
     RowBox[{"\[Tau]", "=", "5"}], ";", 
     RowBox[{"Z1", "=", "0.1"}], ";", 
     RowBox[{"Z2", "=", "0.2"}], ";", 
     RowBox[{"\[Lambda]1", "=", "1.1"}], ";", 
     RowBox[{"\[Lambda]2", "=", "1.01"}], ";", 
     RowBox[{"S", "=", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.05"}], "}"}]}], ";", 
     RowBox[{"printflag", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4", ",", "6", ",", "8"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"KList", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.02"}], ",", 
        RowBox[{"-", "0.015"}], ",", 
        RowBox[{"-", "0.01"}], ",", 
        RowBox[{"-", "0.005"}], ",", 
        RowBox[{"-", "0.002"}], ",", 
        RowBox[{"-", "0.001"}], ",", 
        RowBox[{"-", "0.0005"}], ",", 
        RowBox[{"-", "0.0002"}], ",", 
        RowBox[{"-", "0.0001"}], ",", "0", ",", "0.0001", ",", "0.0002", ",", 
        "0.0005", ",", "0.001", ",", "0.002", ",", "0.005", ",", "0.0075", 
        ",", "0.01", ",", "0.015", ",", "0.02"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prices", "=", 
      RowBox[{"SmileBiSuperHestonVanillaSpreadotion", "[", 
       RowBox[{
       "S", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
        "KList", ",", "\[Tau]", ",", "\[IndentingNewLine]", "\[Rho]1", ",", 
        "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", 
        "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", 
        ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",",
         "\[Kappa]3", ",", "V3", ",", "\[IndentingNewLine]", "printflag"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prices2", "=", 
      RowBox[{"SmileBiSuperHestonVanillaSpreadOption", "[", 
       RowBox[{
        RowBox[{"S", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"S", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "\[Rho]1", ",", 
        "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", 
        "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", 
        ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",",
         "\[Kappa]3", ",", "V3", ",", "KList", ",", "\[Tau]", ",", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"smile", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"KList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"S", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"S", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"KList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"KList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"S", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"S", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"KList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices2", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<smile fourier=\>\"", ",", "smile"}], "]"}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<smile rapide=\>\"", ",", "smile2"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"g1", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"smile", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<ImpliednNormal Vol\>\""}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"g2", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"smile2", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<ImpliednNormal Vol\>\""}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"g1", ",", "g2"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4088573008524837`*^9, 3.408857524653656*^9}, {
   3.408857593264348*^9, 3.408857593936236*^9}, {3.4088576304056864`*^9, 
   3.4088577180479937`*^9}, {3.4088579406460176`*^9, 
   3.4088579635995836`*^9}, {3.4088580380385127`*^9, 
   3.4088580947583513`*^9}, {3.4088581676191254`*^9, 3.408858175041143*^9}, {
   3.408858209635557*^9, 3.4088582112605886`*^9}, {3.4088595422080173`*^9, 
   3.4088596282721696`*^9}, {3.408859659069636*^9, 3.408859700211051*^9}, {
   3.408859742008728*^9, 3.4088597739312162`*^9}, {3.4088598296510363`*^9, 
   3.4088598803707595`*^9}, {3.408859910386961*^9, 3.4088599120119925`*^9}, {
   3.408862520890207*^9, 3.408862705706255*^9}, {3.4088644251923933`*^9, 
   3.4088644315675163`*^9}, {3.4088644814278483`*^9, 
   3.4088644825841208`*^9}, {3.4088645223973846`*^9, 3.40886454192901*^9}, 
   3.408864646259138*^9, {3.4088730742022014`*^9, 3.408873187891884*^9}, {
   3.4088732184080954`*^9, 3.40887333455095*^9}, {3.4088736279315825`*^9, 
   3.408873674291848*^9}, {3.4088737740281377`*^9, 3.4088737983879805`*^9}, {
   3.408873940390707*^9, 3.4088739409375925`*^9}, {3.408874060471137*^9, 
   3.4088740618149133`*^9}, 3.408889602301113*^9, {3.4092256369953156`*^9, 
   3.409225794725315*^9}, {3.409226515461315*^9, 3.409226532277315*^9}, 
   3.409226932421315*^9, {3.4092271646533155`*^9, 3.4092271771173153`*^9}, {
   3.4092273521013155`*^9, 3.409227409781315*^9}, {3.409227583461315*^9, 
   3.409227586725315*^9}, {3.409227672765315*^9, 3.409227683373315*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.05`"},
        {"0.05`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V1=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V1\"\>", "0.01`"},
       {"\<\"\[Lambda]v1\"\>", "0.15`"},
       {"\<\"\[Theta]v1\"\>", "0.05`"},
       {"\<\"\[Kappa]1\"\>", "0.02`"},
       {"\<\"\[Rho]1\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V2=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V2\"\>", "0.01`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v2\"\>", "0.05`"},
       {"\<\"\[Kappa]2\"\>", "0.02`"},
       {"\<\"\[Rho]2\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V3=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V3\"\>", "0.01`"},
       {"\<\"\[Lambda]v2\"\>", "0.35`"},
       {"\<\"\[Theta]v3\"\>", "0.05`"},
       {"\<\"\[Kappa]3\"\>", "0.02`"},
       {"\<\"\[Rho]3\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" T=\"\>", 
   "\[InvisibleSpace]", "5"}],
  SequenceForm[" S=", 
   MatrixForm[{0.05, 0.05}], " Process V1=", 
   MatrixForm[{{"V1", 0.01}, {"\[Lambda]v1", 0.15}, {"\[Theta]v1", 0.05}, {
     "\[Kappa]1", 0.02}, {"\[Rho]1", -0.5}}], " Process V2=", 
   MatrixForm[{{"V2", 0.01}, {"\[Lambda]v2", 0.15}, {"\[Theta]v2", 0.05}, {
     "\[Kappa]2", 0.02}, {"\[Rho]2", -0.5}}], " Process V3=", 
   MatrixForm[{{"V3", 0.01}, {"\[Lambda]v2", 0.35}, {"\[Theta]v3", 0.05}, {
     "\[Kappa]3", 0.02}, {"\[Rho]3", -0.5}}], " T=", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227684982315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Inner Integration\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"LegendreNbMain\"\>", "50"},
       {"\<\"LegendreNbIncrement\"\>", "20"},
       {"\<\"IncrementNbMax\"\>", "10"},
       {"\<\"InitialTailFlag\"\>", "1"},
       {"\<\"InitialTailLegendreNb\"\>", "50"},
       {"\<\"PeriodMain\"\>", "10"},
       {"\<\"PeriodnIncrement\"\>", "5"},
       {"\<\"StoppingLevel\"\>", "1.`*^-6"},
       {"\<\"AbcisseMaxValue\"\>", "100"},
       {"\<\"InitialTailUpperLimit\"\>", "0.5`"},
       {"\<\"ExplosionMonitoringStartAbcisse\"\>", "20"},
       {"\<\"ExplosionMonitoringMaxLevel\"\>", "2"},
       {"\<\"lambda1\"\>", "1.1`"},
       {"\<\"lambda2\"\>", "1.01`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"Outer Integration\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"LegendreNbMain\"\>", "50"},
       {"\<\"LegendreNbIncrement\"\>", "20"},
       {"\<\"IncrementNbMax\"\>", "10"},
       {"\<\"InitialTailFlag\"\>", "1"},
       {"\<\"InitialTailLegendreNb\"\>", "50"},
       {"\<\"PeriodMain\"\>", "10"},
       {"\<\"PeriodnIncrement\"\>", "5.`"},
       {"\<\"StoppingLevel\"\>", "0.00001`"},
       {"\<\"AbcisseMaxValue\"\>", "100"},
       {"\<\"InitialTailUpperLimit\"\>", "0.5`"},
       {"\<\"GrowingControlStartAbcisse\"\>", "2"},
       {"\<\"GrowingControlMaxFactor\"\>", "0.1`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Inner Integration", 
   MatrixForm[{{"LegendreNbMain", 50}, {"LegendreNbIncrement", 20}, {
     "IncrementNbMax", 10}, {"InitialTailFlag", 1}, {
     "InitialTailLegendreNb", 50}, {"PeriodMain", 10}, {
     "PeriodnIncrement", 5}, {"StoppingLevel", 1.*^-6}, {
     "AbcisseMaxValue", 100}, {"InitialTailUpperLimit", 0.5}, {
     "ExplosionMonitoringStartAbcisse", 20}, {
     "ExplosionMonitoringMaxLevel", 2}, {"lambda1", 1.1}, {"lambda2", 1.01}}],
    "Outer Integration", 
   MatrixForm[{{"LegendreNbMain", 50}, {"LegendreNbIncrement", 20}, {
     "IncrementNbMax", 10}, {"InitialTailFlag", 1}, {
     "InitialTailLegendreNb", 50}, {"PeriodMain", 10}, {
     "PeriodnIncrement", 5.}, {"StoppingLevel", 0.00001}, {
     "AbcisseMaxValue", 100}, {"InitialTailUpperLimit", 0.5}, {
     "GrowingControlStartAbcisse", 2}, {"GrowingControlMaxFactor", 0.1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227685010315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"\<\"BiSuperHestonFondamentalTransform[\[Rho]1,\[Lambda]v1,\[Theta]\
v1,\[Kappa]1,V1,\[Rho]2,\[Lambda]v2,\[Theta]v2,\[Kappa]2,V2,\[Rho]3,\[Lambda]\
v3,\[Theta]v3,\[Kappa]3,V3,Z1,Z2,\[Tau]]=\"\>", "\[InvisibleSpace]", 
    "0.9961471820559346`"}], "\[InvisibleSpace]", "+", 
   RowBox[{"0.024075013346740927`", " ", "\[ImaginaryI]"}]}],
  SequenceForm[
  "BiSuperHestonFondamentalTransform[\[Rho]1,\[Lambda]v1,\[Theta]v1,\[Kappa]1,\
V1,\[Rho]2,\[Lambda]v2,\[Theta]v2,\[Kappa]2,V2,\[Rho]3,\[Lambda]v3,\[Theta]v3,\
\[Kappa]3,V3,Z1,Z2,\[Tau]]=", 
   Complex[0.9961471820559346, 0.024075013346740927`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227685041315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"integrand(0.1,0.1)=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "5.9199492562552685`", ",", "5.917622484279082`", ",", 
     "5.9156416796772975`", ",", "5.910362926207468`", ",", 
     "5.902597123055431`", ",", "5.888892774353828`", ",", 
     "5.854217196523416`", ",", "5.829098864965802`", ",", 
     "5.806037725978142`", ",", "5.764083931941804`", ",", 
     "5.726034647480333`"}], "}"}]}],
  SequenceForm[
  "integrand(0.1,0.1)=", {5.9199492562552685`, 5.917622484279082, 
   5.9156416796772975`, 5.910362926207468, 5.902597123055431, 
   5.888892774353828, 5.854217196523416, 5.829098864965802, 5.806037725978142,
    5.764083931941804, 5.726034647480333}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227685069315*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUV3c81e8XN7L33tx7XffKipLSuM8hKqvMEEkqkohKSyUjM5Gs7IxSKTNF
vp/PtUKUmShEyd4rIX7399d9vV/Pec55n/cZz+cSXS5anmVhYmJ6yMbE9P/f
tDsu7FpnUmi11uVTyX+0oLaDYGpLuIHeHGw7IMjAmx+wIAIhHB0q73fwXtIC
/tiyQu7uWMQq0nP8/bwWpNGjFNgIj5FWqe2duWktUJs582DTLQPpL0bIioxr
QR9/+sb61yy0cHR7DmFIC8hPuXRW13KR2ufoVOk+Lbiw39fzj8Jz9CLFLpf5
ixaUdA7kLB7IR2k/s652NWnBqodp75xbAYrsax14XKUFmcy94X8Mi9BZjRvN
pmVaYPDpodLy12L096rpntnnWjCadKhq0b0U+cKK/r1ULbh/5p/jwtobZKLB
IcH3QAs61s7FzSqUowXiX/tVTy24Wi+vOVNUgYoeb2a4OGqB9KPOpqkDlShP
0OlkjZEWuKgA64Qbjo6Q4v9cIWoBy9rNlsVbdEQd0XFu5NGCzgEbuUXDKpRS
7HhKbkkTrufzlM9/rUZvZb0ONNdqgnHsMPt8Zg0S33nWVfWlJsher7Kec69F
GS23c2NjNIF+4NrszFod4rfJGQ200wSO7z+pUwqNqPCh8GGXim3QTf/Pd3K0
EU2eDDytcX0bvHiaVDNR9BGNTARkaWtvgyOXjpwcP9CMrLx5PDmeaUACV0XC
iFsLmkg/6+F7XR2EUxtY5r62o4pqf16nVhVY4y977r2vA+VaDpwevKICQwHZ
5rOZHciCa6KVT1IFytzupM+4d6KC943VAce3wvEd2num176gv4tmBypaqfDk
Y4bPhEIPEq4JU/4aTobFpDcqP+73oK8c9iWZImQ46Nb0q/1vD9Jofix1I1UR
Jln/2FR0fEPUORLrvZck2L3/yJ7w0F5UsNFGtqQToLVgnYU68wO9zLm5fDRd
Cvw/qhlrnfyFrl19cqXBmhXyit5SXsb/Qsafe+dETjJDe5I+q1LzLxTwuPDs
bNcGIrvZVUrqDqFI0brDl8X/oI+swRpMIr/RVIih/dXjP5D4/u/CLR+G0YXf
06T/HJdwILvOHP43jMROVXAJ9q/g7jxzTdU7RtDs3bRdGsfW8coe9ntlmSPo
pXXTr544ZrrL1e1/0m6Oom2N/+T1VDnprwvCv1/QGEf57YPlmmRh+rjw+H3j
U+Mo68vgLqdmYTr1qjFNOW4cRdrYslf4iNAz9/E8+fV3HNlzX07qKhGlxzbe
dz1eN4Gcdu8UeCkqQf+sNiWxe2UC5U/aeZrnStB5YswaxVQnUYJMpOHAdkl6
8DF+tbaYSTRjphCYbSBFv/oreu6Q4xRaSRiU49CXoRcfnM1Sip5C2o9ubJqW
y9Bnnptbs1ZPoZulOziPqMvSz3kLvcWo02jPWQlpbx45ek6Hz7nU49PoaMvL
PeG+cvRBnXapm1HTSFdOp8isV45+/F/srZ0L0+icvOT55gx5eoLzgroIZQbN
36pzCViXp3fUWP2YtZtBwQpNcl9tFOimEaL6+dgM+ldo1XdiQ4EeNnVlIXxu
Bmn/MJD6QCHQXfLOt+8QnkUhq9eWXpgS6Bk8TUFChrPIIfZxt+MjAp2238/x
rtMsKhlNb91aSqD3eqnunLk2i7h2MjsadBDoNzO/8zk9nEWH1a52588S6JLt
kcPNL2bRWy2s6TQvkV7Gug/fWzuLZqpO/XKnEOnWOycTX/TNotJf5xdxGpH+
MMnUKExwDu3TTJF2Pk+ka35cJ/7ZOocyB/NT828T6Z/X8lfPHphDNjSLObNo
Iv2C+omOTsc55Ljh/dowg0jnPsmXf+DqHHo2cyc6/hWRnhfzX3Bx9By6py3h
iyqI9IPVnieIz+eQy2LyGcM6In1oQU4npnoO0Z40hD7/TKQHKX3m3/w+h640
mqt5dRHpJNs7I55Lc+hwjltNfC+RTg/ToPfyzyNBI6tB0iCR7lTRn2SiPI/e
vV/eJzlEpK9PPPCp0JtHv9vsC67/JtKT5ZDxVod5NMmpseMQA+8+OkNKujKP
LtqZD4X8ItK77massT+YRyJShzf3DBDpvsVHO32fzSO6UM2A63ciXXRoM3+I
Po8elPCz8X8h0ovFCu9ZfZtHPfkPOLQ/Eenmh5ydqhfmkWyTZlZvDZE+fV1w
lxbfAtI/1s/YbET6/Rd0gUzKAvKfHpetyyfSVXq9R/lhAS1u3N3Cx9CrgY9Y
ddt+Ae3u54kdYejphtoeT15aQNIFGQL2/kQ6U9ZyxffIBbSiW3ShxpNIT9oi
2/sxZwH5ltfofD/OuN/oKv+8awEtTR++RdYi0p3V7qOkmQWk9P3xsJM0kb7y
oMg5lHMReW7cTbZjIdKVrdezzu5ZRG9fSr9O/Uyg08uItdZWi2jJR/n5bDGB
bid16PeBC4voqYW5okQCgR7W/5BKSl9E76vxrBk7An30HDW/n3kJ3Vp13oVl
KdDvNpl++iS9hPAxltxX9gp0SY1L05U7ltDi19H6eH4F+uGFSs2Us0so5wBm
e+uSPP35bcs3to1LKOlQnGefohz9fOxtrDVmGd27Mq/Bt0uazrKU9QN/voyu
veEe/dUuRU+2bWAqqF5GGSquNz09pegfZUUORC0uoxNjzzIb0yXpqs/y6o3s
/qAa5jn71QVx+uT7jtZqhRUUcz3R9fclEbrX762/Sl//RQ8jLp5sUeekDzj1
cFY1/kXSTXLf3qlx0K26wzQ+Df1FAvg/SV41dvruppEbv6VX0diTkEBHtS10
1qJcQfHQVfTorO+dSB0metItIu3ayTUULfBq6yn+OZx7ufV00M01VDyod3PG
ZRq/ffFueHT8Ghq8tevaWOE47uLyo/NZ0xpyOq9ZFn/2F652OM2je9c6Sn/I
7JwxXotXiUg91hX8h5w+uJ58rPobaUc1YIaq/5CjhvXZToNR9JT9+pDFwX8o
saS7vd1iAt3/27Xt/K1/KPqe2iwhexYd+xH3IXn0H6pevvvmndEyarAzmHzK
uoGe454qT7L+oL3tC0Il8htItVQn6tXiCiLUWZ5ost5AaZ6hN4eD1tD4C8HF
NfoGOlPppXSXwgSOZLoUZ+8GMrWZ1oorY4KWtItI9M8GqrJ/Xb6mzwylMZ8j
1NQ3kYCkU1iBOQtQue8U7j68iQpS7HfMt7FAcpB6l8HpTXQWzhB8j7KC/9X7
xBOPN9HlrpvT6mgLzM/sPeReuonk7e/LOhVtgTPuExd8WzZR2OgauUaBDZQ0
lHo/sDDBvQ1iptIcG3ATg6k/djNB7l7zc3tdOaBh38NtdwyZ4G8w++17pRwQ
Ype+S86SCdK/7T0ZsMkBLDHvDjl4MEHr2R068ZGcQH9Zd3T1GhOIdxVbFDVz
wp36dtvHwUzwpp0YEsrNBasbk25f05hATf0Vj9ctLngnvXrx6gsmkPz0nfde
IRdc1eG4LvaWCZoe9AefHuQCbUvRu6U1TFCY/iGKT4Ab5j2JYVatTPCdhRIV
qssNheEaMfO9TMDn+W17lzM3eOXuTXo4xgS//NqvbQRzg1rV4UzNZSb4ef9T
KttTbpjotclrYWGGDWvxrXM13PBixaXQS4AZkM/usQ/93HBO1PsdnywzBCoX
Td1f5gaK5m16vjIzTIWmhBvx8MCQSUSDyU5mOMNvZ8EqxwNZbomt43rMcFpR
U6pKlQecg3K6w48wQ//NpYXwXTwgn1E0oOzADN0v07TOAg/0VmCj9W7MMEH6
duL4QR5I7mqadb3CDEwZ+TQfIx6wm+9eYQtgBqkrK+1FDCzOP8yUG8UMws2C
FuRDPNC5dYHTIJkZTNkMlNr0eCDWkEno11NmOHz5zCxdlwfMT/FJBZYwg2PR
kZB1DR7gvy1NJNKZQe+55+R9Ig80J1G30puZ4fHTfXZ+QjwQUaqtdbKHGSov
16u3bXDD4VY93Y3fzDD/W3kjcYwb2CeP6KXNM8PwKEdITxs31HI4Gu3bZIYl
Q5H8jLfcEKjobvGdhwXETt7yX0zmBkBX7W9KMvp0w1vnpx83VF6NcX+nxQLa
V64PFulww83YNB9bGgucGBf9kyfIDbtfv7ixbMwCTS9A8/QoF5T+rg3XPsMC
ne7NJaYPueASc/vDDm8WqBG5KB3rwgWacj8eX7rNAqsfJL990OKCV9Z/nxcm
sADN7uB/qh854YI3e/HRbBbATy18uPSIE1Tui1RMF7CADOPR6DrOCU9r1D+q
NbLAi38/HJSGOCB9u8t43hoLGH4OzCL/ZAfHIxfnD3GyQoTthZPpaewgff7W
6rAoK5xYf8oTZ8sOCU8SuJU0WMEn69IpxXo2eCDYpPLEmRW0pZ3MyQlboHyX
3JsjXqxg66A9IQdbYMjpIlr3YwXOHq7b1aOssPeViLVtIiuc7Wj8Y6TDCqNG
jrf5PrPCPu4S740aZjgQNNVyY+8WuP1it4aD1z+0siTgaynOBmlZBspfq2aR
opzL5qYiGyy171xVnJ9BRwxKw19psUFfQwy222Ua5cbapXOasUHtF3vi4qEJ
ZLntST0WxAbfCgf4L2v8Rq/ObZdWZcz51pTIRxfFOlB3dHBO9wYbSI0PEVZM
W9GWt10aIbzskLL1toyGVBM6zuZ3YJDKDpWsNVHSxnTEmVVzIdGJHRQHOGkD
y09wl+/WOGszO0j2MAnJa3zBuVMGPX162OEZDX47WX7Fi497yf4YZof+rZ++
rXn04KzfQm9UMHPAj9167F/v9OE53RU7fHZxwNiFt+eoMT9x06RDP/sNOEBm
n89R86u/8EXbzhhTSw7oahPo/HhsCDf8OjVF9eQAnant9Qnsw/jwF0JefxYH
BEWVbB8hjOEP4l8dMy3kgIj82KmF7jFcx2YPW8V/HKC5o/GNauQ4Htpp5RLf
zQEHNYQOS/ZP4JpxA4KswxxQi2WONN+ZxLutPHHvBQ6o3GqxJ19qClfuCJE1
5eeEMtfh1vn903hrrEhTuQwnHD1j//lk/TR+3TLzBnUrJwyet5hkMZnBG9vK
u1gMOGHeu/+YP2EWv/Tw4D1vC07ImCkyKrKfxaUtOnb0O3HCqNVwJFfMLH6+
dTKm/AYnWMgxd+1dnMWFY24gaihjb3rzCcuT5vCKo+zTcXGc8HMhgGWX2Rzu
IvAolSWLE0ziLwRG+s7hPC0KJt4FnICtcr0lpMzhpQ/y//ZVcoK+szD/+n9z
uOMR3TwTxlyY27HsU+yfw7fwfzhW/pUTrpae3JO6Nofnf7Jko/7mBN6xVUNP
8XncOupHSdw8J3Qrq/elaszj66YXXFiYuOBtvAimZTCP5/D+FfTm4wL1qvqh
7bbzuFnzPbxPmgs4muPDn7nN48uRwl4mylxw44KmQqLvPJ5ukiFbvpMLdm39
Zc4VMI8f5FFrohzggk8sNUzsEfP49Md3N+LMueD1rz7D+Jh5PCHCUJnFiQvu
cbmfx+PmcZpxe9dFDy5YrJ0eu58wjw9znbzXd50LDrz3u8jOwNGNEztMQrhA
eaOpQ/vRPL47/PrPd4+4gFf3ugzxwTw+cJjtIeUJFwxrKfp2hszjYZyxKO41
F6j+fLbL7vY8rtkgP81cydg7bocH3vjM492hL1MvNnLBdt5+wT+n5/G7h3ab
9HUx+GVwP1CynseVOer+Gg9xgYGbx34T/Xm89YNF3rs5Lpjt/qR4iaHX9ZD+
Y5RNLrjj7Ho6R3IeJxz0YIvj5YZvrlx7JpnmcZ+6YJeLVG5QP3lYcbhpDpcf
Osi+vIMbNHmukYoL5/AmFq4Xt4Ab1tYtDf48msOVIGou3J4bHC/oZgkcm8Pb
nY7GC7pyQ1y3vO2i9hzuf1tIN/ESN1wyZJP3FZ7Deyri7+ZEckNYGm7o1TiL
h/TYklWTuKHnUOSFlaxZfMeKVENRDje0RK1p6PvN4lE70wXw/7hBIU3Kcrfy
LK5X+DS9Z4Yb6Clyt63HpvHpz+f0nde5oSvOJ8IuYhpPmVIZHubkge5m+yMe
W6fxJZUC9UXGuyL8Sjd8i8sU/jz3bSW/NQ8k1QWZrWATuFBKw7cD73jgVe6s
nN6uURwrj7jzsZYHVi+4yF+uGsE9uk1JFm08wDLFN9BoPILXibW5O43zAOXD
bw+qwzB+I6Zn5bosLxg5LZe4XhnCB++Ni7++ywuLkt/fRiYM4EXevFaSRnxQ
aczZyr3Shjcni9x4dYwP+Psctq2ttuLDtdIZ+mf4IFzY7PKnzRZcWmrrxAV/
PjCS0pGjEJrx4CrDoKo3fCAA7yfzkmrx9AnT58dq+OC2ppqTZ001/k7MumWi
lQ8+bAQeerRAx6fcXWTEJ/nA37D75v7GCvyYsH/JeRI/qFH+y47TeYF77wvp
2dzGD1ZE2330tGw8wjVqM24/P7Cd0te/tj8ZxytSTHA7fvD+svtP/B8TXPn0
u18i0fxA2xFvtuPpM6QfhXM9T+UHp3E83f3sK+T49sM22gt+UCkpMZgLKkIP
eb74navjBzMN6be1q2VotWRO5L81ftDgdjlqkUJHov0rupZcAsA/onSCubUK
aXAyOY+IC4BJn/lpqX/V6LQjf77QdgFYt1jUPgN16E6IWPtTJADGHu+PRx77
gJIKZVf2mglAZa6rEuvZetS8RdXA9ZwAfGi5MdhzvhENa2w/v+YrAPGmFC0d
l4+IyV43JiZIAK50HO/ps2hCO18d6q1IF4AKmaPFYtKfULrNmSsCXwTgUFiO
2CFqK3rn75Gc81MAji0HqFkGt6KO55fourMCENzq4JHQx3h//IG9mE0QXlzU
le8LbkNCogaPb/EKgmv4Ma7x9jYk//yQ2iERQZhOPc9mKNeOdnccsewlMLCy
wbuNp+3I8Jzl76dUQYg6LarlMdyOLP/ZXPfREATJuARdPVIHOhlrz7NvpyB4
3fyVE3a8A12gnkhn3ycILrW8WUbRHehGpbNWm74glJW5lt+nd6AQizO1KUaC
0GfU2nh8ugM98fMY17QVhNcD+XOVqBNp0rlWQk8IwqKlgx7hVCeib8lj+3Fa
EK6N77F54t+JzI0OiuicFwT+IzNph1M60UDUECHKWxBSGkuq5Es7kXd7oMbQ
VUF4fsgrWe1jJ9oUJ+7be1sQTpyp2eHX14keOOBGsUGCkN+q2igy3YnkM0/Y
joULwrmDPLWba53o9dDaGYgRBEXjxvLDHF/Q/q3JlxITBEFsbMJ9ReALavbc
fXc6laFPmXalpPgX5FjcFWWYLQgFNDpWIvUFTS5fSUl9LgiFYso5HdJfkN9e
kecLBQz8+VlVIOOc+25RmXGZIFitGEQ1iX1BybVHa59UCkLo6dWUdwz/KlzT
bSvVgmDROZxhzYhfbnb/x9FGQWi09Xd9sd6JDseqTD1tEQSyR11X7Uwn6u5q
WP33RRA6pQNmXg90onMybpw2vYLwzdq/7nJLJ/pzkk08/6cg+AR1BshXdqKQ
nGxF1jFBYM5XdK542onEx/S0js8IQpvmeL5ldCd6qj5AK1oShLenWmvmfTvR
zkt3TDnXBeH66gbf0+OdyHqtwq2MUwjiD/hLX5HvREPI3pdPQAhyydO/cv91
oMvBfwLPiAlB0rOCCcnvHSiWTztdmCQEpcfyeeZiOhDJsv2lu7IQoMiNY57u
HagowbucriEETAItB+yhA7UqvOr02isECmERF16PtSP+7RSeJmshUIztpsSq
tqP0q7WSJAchaBfbk9uy0obU37tQbpwSgk3TJcme2jZkapChR/USgsFnl9xu
27ehiGOS14NChSBxWt740NVWJJ1Sdu9bFIP/Z8JZwt5W9PyH9SOtOCGwkVKf
27/RghrOPXz9I1MI+phSBy5ytSB2P+7feyuEoDI1iJdT4BMKzGBM+iSDj573
XsGxBmSu+c5HdYHhb1XEZeh0A5KvuvzQ5a8QyN7dst+kvx5V/BxvbWUThs6q
M1Fi7R/QvFLP0VfywgAq+Uxeb2uRS/4bM1dzYZCVb+zuC6Ejzf0+nmnHhOEN
/df0cRY62vikFtXpKAyJ/w56Vq5jKHkmu1nfXRh28oCEzWwlat8ea6IQKAx/
Xf8OOY++Q3rlXkbdJcIQxGf/yWFbEeI3VnEXqBAGjcyouhG9QtT77XfYQbow
mG+3dcp/9RpdX3dsKG0WBrk3ZX91BF+iQmRy6OFvYTiJ2Md+iOSgO63sbg0T
wnBL58+fqy5ZyPRUdcjmnDDs11rqLy/LRKOBuh88N4ThUJvva/3BZET4QDU0
lhCBD8vfircX3UfTx36dCZATgbdzlTvvvghBlSPpwe8URcDejCPuX+VdZMcl
XkvRFAFcrUD2R/kZFGO65QCrkQggjr+9Y2V3cac+3GXPURF4XFDEYT19D1fz
8gv0sREB1jDVdHGeSLwher7qxykRqEljPSt1MxZn6hiAypsisH5rgrKnKgUP
HsOe3AwQAb5mnVNChHSciymNRTdMBJTNvxy+sisTF1a3r30TLwJbxrk8TLyy
8MQDu5SupIrARU3f6vLb2bjscbGQ7dkisHbsUo76vRxcKbTtUEGhCEi7svrt
uvUUf5FWkOf5VgSOGkdWdns8wzVKo7jUMBEwR/XiCVZ5+O5Bo6a8JhE4VRB7
L4TnBW68t/pI1rAIeJdnSzjKv8I/W2QWOE+JwJcKtcXFlle41bk7ggqLIrBj
sFJyy83XuGP8nvYUZlFg/bFGrn5bgA+8lNxxnFMUjF7kFjYoFeJnq5cfSQqI
Qly9cxXPhULca6bYJl5WFLY/a/BomCrE59kellkpisIKxXnGemsRfk32ooSw
iij8fe5U4nKqCF/fbna9VVMUJB+Gz67FF+F3jVR7HuwShQGLVGXV+iKczZlr
jxlNFOTuWCmuLRbhEVdHknkMRaGU6dbEVYVinD+qbq3RRBROiXA0Pz9YjD/K
znYMsxSFSVVFs4zzxbhkRcB/B+1FIczkuNbpyGI8tfWkPJuzKHhuvLnE/LwY
J47s969xFQVZtzEUUlOMP/0nMxDgKQrnkwP+/vtWjKuIrgJcEQWRl7LbfGeK
8QKV7icbN0UhKfNZ6gpTCa6tV8byX4Ao2JVmU+MFSvB3tnGn/cJEQZHncq+t
TAm+z+tSrW60KBzc/2rCjFyCVwWbK63Ei4LuqN+zYJUS/GCKRkhZqigciti8
y6VRgn8s4h25ki0K54Yr2cYZ+EjD+KEdL0RBQE2kb4d6Cd7R35A3V8jQS/x9
3aJyCW639JSr8K0ovNh79NEeUgney3PvvBcmCgt1faoiUiW4M+l0k1qdKBwt
CLp3n68E/71bT22iSRRq24VySjeL8fNHFaKet4uC17f3CY8Z+U2f/Tfl1iMK
GiZtvkZ9xfjlW9+PUAZEQbPprnN7QzG+ElteMDQsCoaNuTf1i4txZrqvz6lF
UWCK1f0q6F+Mh3RZtSusicK/5aizkS7FOPeU1o5+ZjGo5OJ6q2RQjItKTy8e
FxCDc5013PPMxXiSZrONlLgYXKaWqkJ/ES536EXZV1kx0M46bzT8rginXHG9
bq0iBhJ+2tqX3Itw9T0/rDI0xSA/tQk7ol+EazPZbRvXEQO3SbfoMakiXP++
0bD/ATEws853DakrxJ1y1KxfOjLsO34ORAsU4gmd89tYosXAg/eaw4XZfDwt
2YPHLF4MfDWnhlmD8/Ec56HhxBQxCDyswnNOPB8vnvySpp4nBi1BraK/dr3E
P28p57GvEoPaPa3niy4+x9l2+o8ULIhBujxLuX51Ls679qd69a8Y7DSrdFc0
ycWFq7zTDZnE4ULB6+rhjhycYOZi851XHP7GkMwtfmfj+84a1rBTxEEstaH0
MFcWfiWeJ+OEnThYlwoJY9WpuJ9D8M08J3GQ4N9pnduXggcS/9ksnBGHRzm0
05N/k/GYV9O84T7ikHWA8HxC5zGeX9d2szRCHFDT5HxjbTw+tJR4jOc/cdga
CidHbj/As/R2XO6rEYe4wV0HDrTcx09GfY4u+Mjgl+0tT6NE4t/IbI1W3eLA
vvBPMOh3KN5mdWlv6oI4+MbWm0rmB+APMvjsvFbFwaHWYtxA/S5uOpF3BZgl
4LbDN70M99t4Q+CPV0P8EuB80bU27PU1HCsyJairSMDSGd5s4Vfu+K1/I/s2
NSUg5gpvjmjwGVzXKMi+bZcEGO/7dvnUpBNeOlAe62soAV01Z+KfFR7EXwhQ
2TBnCRDTizrqt98enXOoJsa4ScBizpFvTyedkdKzEzQXLwnY9H1GZVM4izJp
cdfYb0nAnT11JrpanijRk3n8SKIErKwUFN9lv4qsy1PZiekSIMplLLCOX0PC
bLsVF3IkIJDfdmnV4wZ6kOrlmFgsAVXibyUaU24h01GuG+7lEvB1zVkJV7iD
uLRz4/fSJSAgjXooJMEfBTd9//zjkwSQp2KHL2kEIH2JaxNFnRKgv5BgZ9cV
gDZdhDmDv0uARXRGQ/e1QHRz9bCe8pgEqNfNHRl6FoR2Hxw6sTrD0E+tD4vS
CUZLD/1vNi9LADNc7+THg5H31rIS7y2S8DLGofXbf/eQhq9Fqz6PJPx998j7
sHYImqBPTooKS0L8CxmFjpwQlMcbxjUiKQmB6h3uUQKhyNVOkVKuIAndR9KP
RFwJReQcTD+SIglyGYs7+zpC0c8Z+5Mn1CWhSNd/6rF6GDoRGpPEvFcSys2n
+p60hiHpDtU3HXqS4GkZeEtcOhx1y9e35R6WBMzheP4hp3CUcN5l+tpRSXD4
EjBsnBaOrMv+cRsfk4RQ9/3jO7+GI2GWx1TZE5JQv13unTxvBGox0zaYPi0J
ueakKJl9Eej+4xZn+nlJeGj0p0/fLQIZ/z5/O9ZHErYn7rV8GRWBDt5WzDe4
Lglbmh+Yd7+OQPpivd+W70hCsnjyvvSmCER7Fcf1/J4kDPE6rwkPRaA9hma7
He5LQpxmcozpSgTS6WNz43skCVFyjdKnOCPRdl8sHn8sCVQL2xZX0UikwXet
1ieTkQ/2efmybCRSyd22oPiMwceKOJZOiESU/aPErleSUBO3hXuDgUlfMs3D
Shn6BDvXPZOLRPKe9v573kvC1y9tkcXikUiaTfj1ZBWjPq9RizZvJBJP+9ib
3iAJbT+DNw02IpDwziAeixZJsBxTC/07GYH4P+3dw9olCeo3DRrOdUcgnrOL
5970SgL3n/1Sz+kRiPNffqLbL0Y+yWNVrbkRaEv82Q9S4wx/AQErS6ERiEld
fqlpVhJ+3Wvs12Dot17bpXjnjyTkTej7PzwQgVYcoy01NyThy/jljzvkItDi
4qGAn1ukYHRdP051MRxNksv7DwpLgU7xkPWl5HA0WunD91dSCoTeFZhNuoej
IWuVfS8VpCCI17hWaFc46g1OeSygLgXzpOP+JR/DUPPQbevuQ1JwuY38LKEn
FDXc0gmKOCIFkgaWUsVJoahWdKZon40UuEu8GJY9FooqDZwFnrhIQfQ32Sca
zSEoP0f/o/ttKVjfqchp9+weijrDAWvFUlBcI82TvjUIHRmKUZWXlwb19TBB
6TQ/1Kw61OlIlobal1V88es3kcnlXXdSVKQhzuT04A3Hm+gwS3+r5C5pWPkW
MFYndwPpE1SviphLwzWP4DuaeVfRTsc6OmegNOP7REJHacwHlWZLnj8UJg13
PnBKnD3mg7ZPeIiEPJAG+qC17UytN9K4KezKmiINnmx1fpKmF5Fy0kmejRJp
sPKssx6aP49kO//aLPyWhvf1fJlrX11QsozZptakNFAOXMa7fp1CUqcz87zn
peHqfE/vrgVnJD5/cG1qQxo8TJxTnHSdkKBgXOaohAx8pD0Zi9CxRQ9sR4yo
8jIQ3V909miYDeLL2LNwliwDgafyOiMHrRC3xqDhL00ZeP+1KyryhTliNdWY
6DOSgeSqjLUADUMU+CggTtZcBqjqYl9bjPUR0/fO/Q7HZIDjScDok0kaWnf3
i+l2kYFdxCcCLUs70HJow84OPxn4snCkihgxiF1pkfkhFCgDAu57/LlCxPAF
8Yth5mEyIJ3U/zRQi4zP5op9/xQnA3ZHtqb9VN+Bj9e43G14JQNStToJx9f0
cIWH3ecflMqAopfm204pA9za6YiN9XsZ8GArG/CmHsSxFV2VgQYZKNyyKpgo
aIwv1BWIPm2RAbmYbQLukya48iOlTY8uGXCrahiafGuGx6oLdf75JQO8wZmW
NtHmeP1qCPbfuAyMtscy9ooFvl6/nhc0JwMD33sSBRQtcVeX0dsCmzKg8614
y9dEKzxlm9O5L2yykGpw93PPQWu8db3DMoVXFhwcfXHXaWt8byJOpUrLQvSF
XrdA6jHc+8xO4SmCLHh/lpo9UH4Mf6r1cr2YKgu9F/V3LB2wxQWbE9poO2Xh
HvsVgYcGdrjhY97KLftkIfPHm4yiCjv8pmvg04/6svDhlHOzuoo9PsTk5XfM
XBbuZ3ab5i3Z41Kff52VtZWFE1tEZ/otjuNHUuzNf56QBbmAMGzw2XE86FzL
nrwzskAtY/b89Oc4/m6noZKXhywQFUx7MD0HfIrlvYD2JVn42pbE1XHPASe1
aq7+vS4Lj55tKlFrHXDbtKdDuL8sCEwpXO5ed8Dvn5dtuRciCw/Lf5hu0XTE
q3bFlptEyQLvrBGx4YQjvryFM0coThZwnkgPvRBHXLX99oOvybLQUMJbEPXc
EXfOWLie9kQWNIUKL32sd8TjL7ifPp3HsF+l7BMbdMQ/6v4w21ogCz1dHpGR
S474JrvN7pk3spC43a7LmO0Ert35kfSmUha2bdoHewuewN2fAJ9fjSy02h4a
l5I4gad7lf2Bj7KwWWZ+8IzUCbxjr9pP9jaGnneFKi8wzjm5spqbv8pCzDvM
3FzoBL6/S+JtbL8s6FZdHlHlOIFfyo56YvdbFt4vpe6X/euI53mz3peflAWW
Cf+R/SOOeN/+G1eH5mUhTGfQ9FWbIy7MM+P84q8skF3rc0PeOeKHu8+YeDPJ
Qb+gw5/fKY747dxvO3U45ODcs1+CI36OePElc8I6nxzgHQNhuXaO+Aj6wF0t
KgeMkanYt90Rl+XbtxQqIwe3wl5X1XM64iHPqB9FtspBGm/XHfIrB/z9lbTS
nm1y0FHCQVD1c8Bn9UQyMnTk4JNyqnv0QQf8eO/GZVUDOYhdTnn19ctxXEOo
S+7ASTmY+WE3Te6xx4ejhgPjz8rBSG1CxZXH9nga95+REQ85kJ+OiVe0s8d5
t0gW378uB+5sCuVjrXb4+LL9wa6HcrDBZRIrUWyL5/b2ebnXyoHX1TgeIX0b
XDbvNx69VR5ijCWDdrKY453kZfLPbfJwhxRUoeRwFI98wh6hrSMPirkukqj4
CL6aTLXu0Zdn8Fe/8v2UGd4d5T5KcpSHzj28hu8bjPFHl6cEyx7Iw+pLngG7
GkPcePafL2e8PPjGn1heoRriLJ7834+nMOz9JJxnowxwb9dtuZvP5OHSr/ws
IacD+BF7H12jKsa5e+HqHkE9nBstnepdkIcvgYtyu0J18et6ypxlq/KwT8ZW
5KLXbnz4gMPraGYFKE7xfPLHfhdefbhqVV9AAfQzFqMotJ34TcuoR89VFEBP
rlf4714tfNSarhukpQDieS+DKg5q4sdsF3447laAnRGBORL5Gvh2R3s1wYMM
+62NR3u2qOITZ5Xqrp5i+N+crKOTyfjxc3Ye5ucUIGdKlZ8eRMIbzkcKqVxU
AFpvwcDsBAHPuTh3ou+WAuz6eGAyr0AGd7zx3/KBJAUw2bPna5GuIP7RbzZV
LkMBhI/vuhotzIPvvqN44E+uAmx4K6Z5fGHDRYPCo1+UKAAXp+JQXsQfrPm+
jbJQiwJU0p+YWA6N0/ZEh30e/6IAhi4nO8PYl2l5D99fqe1VgDj6tesfbTdo
wQnEqmvjCvBThd+pUYoDzSdZu1nMMfiN3r35/gc3ck4J5VNdUYDbaUrDfvf4
kXzrstoMCwE8pcNzZt8JIxsLQSZHdgIYH6W45DiKovvtWzsauAhgcovzJfOc
GFrtdLyRJUgAxxfKiSGTkkjr2FVTAVEC3PuvzErCWhqd+xqtcEuCcf/r1kLF
VzKoq6e6zkaeAD/bV0UitOURn0NvUjWRAAeDBNWsTisgg94lj21KBOjrGVnc
o09Axf3KwlxqBFC8UG517CgRjZ3U/+27jQAcGq6rUs1ERBh0ePdzOwF8774p
va1PQg9+PXCq1CVAwnXmgmRZRVR3Jk9r634CDN5OGXtwVxGt/67akgAMf1VJ
xMf9imiH2/evLAaMeDfmBL7qkNH50cUXFw8x7su88HMNJ6Mn7vx3eo0Z9myP
tc92kVH3ONXC6AgBFLQt+OfklNChqeN/SDYEsPv+2I2apoTSRYM6/O0YuETP
TbRTCS3ufVnQ60AAr7Iz8jvYKcj4dEek7kkCKDUOxWfsoKDMiDW3BBcCPNIt
pPs6UtBykaLBwlkCSHiwXm+7S0FmPSYEc3cCsH9qvPY5k4JymK6s518ggHiL
nENYJQWtUlO7ubwJkBo8kiTdSUHmR2tLXS8T4NPTx3czRyjo6dXJmJqrBGDO
5d218w8FraeJehJuEsDM7VrJAgsVWdXtM7p9mwCFPvcql7mp6MXkGaVvdwlw
myPit50AFTGJRjHvCiZA0EJLpLYgFR3b+6bvUSijPxLYOrP5qCjfpa98NoIA
97/VPqNzUBFLBFuC2QMCvM/SKcnZoCC7IvVLLx4SgMWpzcV9noJed9sc4Ygn
gL/B9kHqLwpiY7qjciaJAOcmBMX+tlKQI/Upe1UKAXIKTTOW3lMYK+bzT7kM
AjQ/F+nZmUNBnFeXsZtZBFiMJrW3hVOQU5p8ytdcArw7Jnd08AIFldYevKb9
nADJw5v1fmYUxD3pZfUwn8E3/anrO1UKersH5zEpIYDq2pj65UElxO8yMvKs
jABnGosk5MuV0JlwgdotFQz++wye1T5QQoLdJ29hdAK4ETRzjmsrIdfNUDuZ
WgKITWpuv7JFCVVSCrWv1xPAezQ7t6+djNx9maa0PjPq4ZNYNXuejKqFn5zI
/U6ApRI7vt0RiuiK2U/a/WUCiP5sPkSJJ6Lu6jPMx9WIoEgyi6x+KI1m9b5J
395GBKNzaepcgtKIo+qoduZ2IsgHY72JD6SQDr7HbXg3EdpO8RxrvC+J4t4L
frpkSISvUjXh7NHi6GhpZVKkExH8td7K1bwRRq47the/PkWE950jl7JpwuhO
8bOmtjNE+CU1FBTWIITyC2M3JDyI0P7yY17AD0HE/ercmZxrRBCucPvHrMOP
PuSKav4XQwQV9iQz9RQO1E+OMBp4RISh42YbWAc7WsredGFNJIL6d954QQF2
RM4ajzdKI8LKYZ6DPA+2oMB0+tqX50SIXjp3euQVM0qW0xH7m0+E9X+rS1v+
MaGi1JcasoVESPwycWvLUSY0kJxwyqWMCMyNBgdd/vyj0RIv1E9XE4GX5U9B
5cwK7Zj4zwGhD0TIfBf+ya7yD80z3nZVu5EIqY4b6VUPlmmpj/TV/VqIELk1
v27aYJG2Gi35iKOXCCIC16TvT87QhAUe5Kv8IMLHy3oC7wanaFsfsH4w+0mE
mfjJ7Zo/J2h296dXHo0S4aUekVC/ZZT2JqzWibBEhFPuCtuzPw/Q8oybJENX
iOBz71em52wfLZm3vX1qjYF787bijt9od2N+HHzPQoJrrtvqF/07aJcth5lI
7CQIqa12PqHTSnMVnaoI4yLBUP1/PAtcH2mmSasaxwRJQDnx2p/52XsaOs48
VilCgvN/PwmzrxXQtstyZitKkGC6VLiNtTqWJpEpJjEnR4KwXu/a7O5C7Ocz
zc1IVRJwZTY6WQ01YV/cd5XPa5DgVfnI/Q7VVqxBlXbZfjsJll8pzdSbt2Ov
CkxGKLokSPytqf/1RBeW6WP5JGofCY61KZ9OPNiNxe6wd1hEJHia4HVgUuYb
dv2ta0vVQRI8/JR2KyeqD/O44RmubEyCs/PDk4UqPzCnvVcORJuRwHP+lWj7
8QHsAB7w1tGaBJEy/rzGTYOYTkCYT40tCW590utKu/oTUz4QrariQAIpk9Nf
o6V+Yfz1qRl/TpFAZWDZ/+/BIYw5PNve6SwJFCs5Iz+0DWGLxi9E6s6RQNXm
Rmiv9W9smLfok+oFEnx+rjV1tvU31vP5bWjsRRJIUBqFogyGseYYTO/vJRKY
a+WRbhUNY5hl3drJq4z8qpwVTkiMYDld7RfVb5MgbWC9M+XzCJaY1LM17i4J
Bq58uWZKGMUijg/8Wg1i1CM0pjXOYxS7JTuSdiqUBH3uky/TCkexi/1Ttg0R
JODMpEZGz4xiLpmLQtsekECAE8uIVR7DrF3WmuIfkmB4zKb+s8MYdojMErIe
x8hn9XuoR/gYtmeYE04nkYA76RNPTNEYpp4nsNqYwuiPK4XypzvHMMJ58VLN
DBI8LinbyjM/hgmryXklZpFgte+B5mvucYxtWlF5I5cEQi+dPvvIj2MrBSo/
zzwnAbFnZLuf+jg27qOV2pRPAltal8LMrnGsb8fuY9sLSZBM0xme2z+OtS7R
BB+XkGCeLnzmGRrHat4aftwsI4Fcny7LDsZ52Q3TYNcKEhxwpha/1RnH8vZa
0T79x+gvC9FJW7VxLOWf/cqOKhKMp6u82smI/wB3Lk6uJcHC1l7fS7zj2N0A
twvMDSTQNnA8vO3PGHb5gBflXBMJJHv3PLvfP4a5svkOfP5MAr3bhLgX1WOY
tELj17U2Rv5+PEYtuWPY591yLcpfSPBBdGXIKmQMC7T0+WDTTQJ7m3BkcWYM
07lQ91/gdxIs2sY1/UBj2Pg9qTcF/Yx++5yVICE1hqVneOb3DpKApBJ2WHB2
FGPvEEvRGSVBi9kj5ieJo1jFpHvs6QkS6Pdy2bueG8W82LHwmGkSbH2WtuvQ
rlGsS9f1+vgi4zxgnV7UMoLlZpbZpDMrwuP6KZ6LU8OYXQW3WdMWRXCOO+Zr
x+gv3k4ngxUORZD4ye2+eXkYu8LBscOSXxG+lTifbFn6jRl42QqyyyjCo92R
qaenhrChvSsfPbUV4cXIitrNip9Yko1pdfIuRRC25QHuSz8x04uZ5fV7FCHo
1DGyxdafWGnW4TyiniK87pdp0U4cxIK5Ht/7YqYIZv8+nkr2GcDIX3Vhv5si
CJnOWa1a9WKnL/m94U1WBPOZIQ/52g5MZ3v/m61pivCsllpqfqgD456HsoOZ
irCjzTC6pakdK/Rhf3v3qSJcaBWMbO5uw9a9H75bLFYEY5p/winWVqxFc/Gd
UJki7C7q8t2u2IJlzR4r1yhXhKphYZ0H+p8xI2/ZinO4IiTqljRTI5qxhIvP
3vc2KcJRl9HH4fsbMfdt3JV/PyvCbPvxcI5LDdi+mQuV4u2KkL3Q+1/K83rs
l9f2/8y7FcGmME1fiPQB0/T6D6sdUgQVgX+sJ3bXYI0XOqry/zH4eyjdrlx8
j6Wq6VQ3MpGB6XFmAFNVBeY9mVQ9zEqGq/rW/o6PyjHxC041BG4yqKoNEPcb
v8VcPMZq48TJoD/uUJ27WYztVDWtK5Iiw6Lep87itSKMc+J13WdZMhxtfLIa
8a8QKzh/5QOnIhnajq7b9ZBfY+vum/W3tpFhLz1JjrD5FGvZ6tLweDsZ/A0L
GygWuVjWWG1D2U4yBMhpGc6+ysaM3CMaZ/eSoWHxrLlNaCaWcE6s6cxhMmCp
oUEyF+Ixd+XrTQEmZLiuQqt98SYW2zf6rSn9CCOfE1WjzcIx2E+3zOZuazJw
pxjcD+QLwba5qX42PUWGzF15xrMDjli/u8LFV2fIUCnA45EiDLT7F0QE+c+R
YfJ1s3LWl7O0MZ81ixYvMnwv1jQiNfnRkq7MzG+7RIbW0nfMP34G0A5e+/Uo
xpcMXYHm3yfK79GybzV9sbhFBpVvUof5Vu7TLP3xq8X+ZNhz1T75gGYMjSmw
REIkiAwnAuqN69of0k6Epth3hpNhXcNuZPVXHI03InpVO4oMNwPtjZytEmgV
94NS4mPIwGX1bpdncSJNItaj71giGahNitJ9jC30Ie7knbfJDJzTXjrtnUK7
kmilIJlOBkLgKRG22FRaW+reUz05ZPCbD5pPzEun3c3YxrInjwx/G3imGcNN
08hSzE5+SYaY9MiGjAOZtMhnPL8dismwxczuq5nkE9qeF5v3Kt+QoXNkdiv/
jSe00fwFilw5A6+eu5zZ8YSWUDBSf7uSDH1rv7nVlbNohsXfz/XjjHpycw98
v5pFWyxt4UI1ZHjC132tE8+iZb2teZHxgVEPlbqx/azZNPOKtyZMH8kwdHO5
l6aXTdusfDnp/IkMdzhe3Pt3I5v2Gs+IqmolQ9hCY1bGq2yaY/UjDVInGXQG
8/yMe7Np3HWhLYFfyRB7a7iPxJ5DK6/38/71jQyKe/1kzFRzaOc+XhQy6CeD
/N5xzimTHJr4p9PFOYNkcDmdtKZ0LodW22JrxfabDAaZhxqk7+bQLrebLJ4d
JYOb65uqqUc5NNIXFP9hglHvyw5v6dk5tNavO3SoM2Rw77FYLC3Iod35Rv0a
Ok+GCCcL2sTbHJp6n8z10SUybLX50hlUmUPr/SEgZfSXDKQeB+/0/3JoET9Z
K56vM/Qtq9E7/j6Htvv3n+PcTEowOvRh7subHNrIyMTaeVYleNobk7ntVQ4t
YfxHahO7EpDfXfwd/CSHZjDVsV+NWwmYvDI+z8fm0OZn6vvv8ynBXarGYHxA
Du3J/Hv/KUEl4B1ekYzwzKGZLxUQjogqgVgBPjp+LIe28Se76rWEEngcNd/T
sT+Hlr+a6CIgw4i/+cHrBCmH5vAvktVbXgmiJYacsrfk0LiZ7ua0EpWA+M/X
ARvKpr1juWKopaQErUld6vXV2TQxTsfQeVUl2KKb9JWFUa9abnNlq21KUHmj
7ckZi2zaJT6DxpLtSjBnzbxVWDmb1iKsxuOrqwQuAf9l5bVm0WienmMp+5Tg
ye3Bye7cLNrr+tf11UgJrs0eeNN1I4v24JZWsOBBJfAp+I/vlnwWzXRY599L
SyUw773BT3J8QvtYrjfz00MJTmqXvE46n0Grc7btME9XgnKva2nlp5Jo2u+T
iq49UQINbeAPm0uk5Yh9i07PUYISMOCqDEikBX90NJ18oQTcaZs5IdkJNH1t
l7rQt0qQr2U7NTYVR6NzeL7FWpXg2fjCzvtPH9I0XV7H/+5Qgp705tl0vYe0
zMqZy7xflWDfK/e1l30xNH+fS5rH+5QgzrvFoVkyhkb7fu350pgSRGKXfnru
iqK9fx2YosZKAT43Q7JbQSiN3dRGOpGdAo2j5323roXQLMaoj5m5KZAoPq5G
NwqhjSh+SugSpIDsr9o312aCaSKPJWLvylNgx7OMs4dPBNKcdMYFJ4gU+LaF
9noCD6A976iMtlGiAMuNmDNeSgE0xh+yKBU1Cnx+cTdVZt6f5hGUH9apS4GA
18rv1oL9aGUEfw60nwIHGzQftV+7SWPGLEKeAwUuL9zZp+d9g5a4shx05xAF
2qLYVGt9rtFqPPX8lW0oUKu9umledpnGzyO6EWvH4NdPbvreeYlmnzd8658D
BW5UdN94ueJDm/kZebPdhQIbqTzGw0e9aTJ2Xb63vCmgm4YtJV09T3Ndylsc
vkyBgfqb65xs7rSiWL/LFtcY/hL9gZTmRjv0ieBDuUOBiYrubZ1jZ2ix5xdm
YgIogPkF3VFPP03r4/jgtRZMgTSq/tkiBxfaZX2PC62RFAjfEhjv8eskDfux
f2JPNAVEjom+H3l0gsZ1W/B8biwFJtlTggtsHGgZb9+43XzMyGfIPESY15bW
pMZ0mvyMAvmud66Z3DhCE//YPvjgBQWCXste2TJgTDvlluv89xUFhNmOJnGc
PUT788TY6XMpBeKSHE/T64Gmj+T6dr+jQGVCcRj98F5aVO+MQ/Z7CqR+tR3Y
v2cnTVEi3v56NQV+JN78jIIUaV6lbt0/6ygQZhAqe91GiFZuscfWrJER/1yY
novT5H9H7/+wJrVSgMdMM5P9uhLmx6xi3txHAfHu2f1G6vuwYQOebsogBci9
Ks8aWQAzD5s8GTDE0CNub/5ojx5GFii4qDNBAUvOlvdrxobYA8uYPzHTFIix
8kgc+H0QW4n38Z+Yo0BfDv1fpudhrFlWOzpzhQLB5Q6Hww1NMB1nMYm1NQqE
vjUMTUowxTKzl9NtNilglr9z2aLLDPNVKX/NzU6FCVx+oUrIHBvwTNY5y0WF
gd6M3Mkkc8y4yA/DeanwaYL9iJGkBSa/m/b5iggVeGlncU8mSyzMT+FYizgV
vhjvdUp3t8TmMab+rdJUUNzlldzeZIk5svw8GyxHhdo/krz7qVZYvWHNVD+B
Cu8MfaMEbllh28NzfHXJVFgYddP1+2iFpTbf+/eISgW53L3nC4WtMXZBt3vT
KlTYfiL8Xb+1NeZtdZjPSIMKJ4dNVrUfWmPfErbGZ2tRYYksrz9Yb40ZfOOW
29CmwoO/T/oF/1pjr+Umc+x2U0G2kP/4LNkGkzr1Sa1kLxWSL/2+8dLEBgvO
eV3Kh6igd+8jY5XZYNMj0fvO6VPh48+AoZMRNpidqk9ttSEV4mf4fuZn2WDV
XpamckZUKBSYGbtVZoOpFe/ovGZKhYvVgeN/6mywhCVRx/ajVJiUCeA3bLPB
mHSXf6lZUeH06cT/IrptMI9bXz1CjzH0fCafNv3dBuvC3y0M2lPhn+JUTDwD
A2uy374TDD1N9Cqzv9pgLw76sSY6U6HYsy5wX6sNJhrhGDl3mqFv84vwQEa8
O5/2i5i6UeGY0vd3iW9tsFFBhZSn56lQloz2pT21wSytmRSZvajQOidzryTW
BvsvcfCFgw8VLqDbJqt+Npjy9+rtZVeooDlbER3jYoPFyudUCF6nQtERrtS4
gzaYa67rx7o7VIjx+17owGGDtY4esiQEUmF4ifDZdsga26O29dvNe1S4jyIH
duDWmEDJxNi2+1SQP3D0wbKXNXZzudknIpoKgUvFHYIG1tiQ7uu/Q7GM+lzW
d70kYY29o3tzJT+mwvkdYake5VYYaYvlw8VUKhiWZ2FaYVbY/UM7pI5mUkE1
YFoj1cYKO/V5SXnLMyrQTYqVSyctMe7em4e9SqlQutf4rAq/JaZz7Tlf9Fsq
iOspv9/bbYGdEu5uL6igAkne2uDpEwvs3eGdJ+boVKAy8+zBtltgrm9mfK58
ooJHsaeL61FzrOrBmZSbw1R4GLS+fOevKTa59ZFzyhgVFLoGd1GDTTHJuiql
ykkqRPHbOf7mN8W81uQL/81TgXy6yGmIbILJnuupvbtJhdsBrk6PrI2w63pH
pkMklWF+/WOo8GdDLKf3VskzGWVGfaO/33c2xFquvbzeIK8Mi3fUHg0uGGCU
15ys3ErKcJ0H379HzgDrkK6RiNJi2JO2fPPx08c0FnfpPTJWBou2amfeLhp2
PNqVvdRMGd453PHVkaVh91TimzrNlWEs8aMEfmY/1us8byNuqww2ZzkHN9f3
YhGf8s8/Pq0Mx69E7XplrIv9fkqMy7ilDL02qfcSHbWxyeDBv6x3lYGy7Xrw
u/92YPMuT06eC1KG/Y+GP9GJOzAmBaKqVoQysBQErtye18KkEwnV1YnKELt8
cf/TC9swou8AlZqiDLeor1RLHTUw5f9VXOfxUH1vHMBpQ1lLpOxb7ix3BonM
nHooFVK+iqjIUpFKiywhSWVfs4aIQhtRIpkz2bIVsoS0S5RUtmQZ+c3vz/fr
3PM8n7Pc+3rd3TeiIzO14C8jJmevFZ2rJ6FstydXC8LKVVr1dlK5lqFKI18f
aoGbqwldInQtd+/hj9ZmpVpwLV+7MzpHk+uwOauisFwLysfTFxjXaHCPzSuG
+lTy93M8PXe5tDo3xEdRUaRFC9jtu9hPRpW50dYfLp1o0wK6toSGqZ4yN1E3
83tbpxasb55fQM4qcrN/KzxOe6sFDRduMf8zkOdyXBV20L7zxx1tdfIUZbk1
Ju+L44a1oKPPfcHMz5XcJrXrsn9+a8G26edGnOfS3O6P8l/wpBa035kOWxCz
nPsBv9uuOqMFpfsTEo0Cpbj96RmFIXNaYKQupnHYW5I7tlfeb9ciAvYSE4OZ
s6Lcab13Hx8JESDzIEImR24ZV0A6w2TVMgLKSPMmu60iXLFXa6Q+SxFgH3XJ
s6NpMVdr+5rbZ5QIGBI5I/Rj5B9maL4V61YloD2LGbJZhIfXL0r3ZGkSsKn8
6fxzw2m8uXL1pkV0AjQ0jpnoD45js8zeW25MAjpdinOVnEaxZUDa0mZdAl6M
9oeZ9f/EDgaru5IMCcjvTxcVf9CPD8v0smYQAdEJqz41WX/CxyeuZTsYETBg
mfEz2aIHnyuSO7F2OwGCW97Wj4hX4UQtuUXl1gQoiPlyVJ070AEHzfwvtgTo
LQrKmmC/QeqJumbiBwgIOrfu20zvB1QybxHn4kzAXLh1Ef1RPwrQ268bc5gA
s+ndZcbUQbTlmFvXEzcCiDDhmqrQ76izK1he/CS/P23HgpKRnyhDNO6ZwRkC
pFlVOwP+/UaHjK87u3jx63+YPHR/egRNFJTdfuJPQIn/xnmPpjHE+VJr/iWQ
AO+qlI2HssfRZbn2X2LBBCR1ldpqnJhAK64Mr3MJI2CXr/iZTf1/UO/T6e7o
SAIu/PWMZMRNopyRJf5PYgiozmt9JKfzF7lrSit+iSfgRM2s69amv0jngEqV
WBIB/03f/sGznUIz8eQhg1QCFqaMmV76MIWq61lCLukEZH1WtFHcP42sdG0s
nmQTsPtG2aMswxm0+qjLSN8tAvqM466LZM6gvsxTCWK3CaC7YbfY6Rl0t/P8
eoN7/Hw6ZN9Ji1l0ZmnkG+dCAo6ocvK+XZtFhpAaEF3Mz/tkRH39x1m0wDtX
6UkJARLyQ5kJCjzUdO9hdV8Z/35Y2NNY1jx09fOzw2IVBFCDSziHQ3hon2yz
sAGXf96s7XLmxTykatF7z7mKv7/VxYMqXTw0FDy4M7qW3/+e3n2lPzz08MnE
aFk9AW46Ji99xeeQ3y/BpL4mAmYWrYx3VJ1DxuoSBmItBAg7bqeIaM+hpfvk
3+q3ESBm+aDopuEcao8lAp07CfDqlCEcN82htOfrVaK7CYj5RISe4Nt5dnNt
WS8B1uLORdP85yna/7n2vSfAcmbJBW2dOTR2xGGp2GcCeNtZz0FjDj3NOFag
30/A+EYZSyvpORTc7mvpPMi//yKNQ7HzPGQmHDIeNUTA6kctTqqDPCS1MSG5
7CcB339ohGi/4KEezxsb+kYIMClKYPbf46EbdwreiU4Q4DD3c4tjOA+5fXx6
Qf8vAYYVJx43ufAQc2WDqvMM/74vFQrZxuKhKbPXz6PmCDi8rr51WoKHKoP6
3MoEKGB7Vr92Yd8sshzmFYoKUYA3qbHgZuAsWqW61Ep/KQWGd7dt8zWdRZ/2
yv5xEqOAnoWLvsbyWXSqRptVtoICB2fVuQHXZ1Bc2pF6J2UKWD37eVc3axr5
eAd7BqhRQHZKbMs6+2nkYJWplKJJgR0BR9tH5ab5/5ZdPi9pFOis/2jPi51C
jedMtPQ3UOCXeOvt5FN/0QI79XBRKwpohe8bXSX9B3nJ9pmVXaJAvv3+5Vmm
I+jA+NxkWwgFvNPqRP7/fm1plbs5HE4BQ8+y+Tz332h56H+zKnEUeL5p9cEp
k1+ocLLyXlQGBZBWnGaHyDD69jpL1PkxBWZs+p+2tQyi1uKKJwFPKJDoUDRc
azGISqO7D6VUUMDVb+KJbssAumwigV9WUSBle1xMcsdXpPI48IR+CwUKgtYI
vhv5gvYl2reIDlJg0cvlsvE+n5D8o6Vrjg1RwMyUyPu45BP62Fbm2viTAsev
NLK0mB/RIYnlgiETFJhattDNNug98oio050XpMIGE/HvPyx6EfOOZ5D9Yiok
92vuzot4g8brlZsrhKmw6ri28YoXPch3sf8RXwkqMLepOvyy6UbBQYxro/JU
WCNfuHPyWifakvXu6y5lKhy79GoicbwDCXHDdQrVqMA5+O3EA8sOFDX75YU7
hW+ihL5+ZTtK9k7990WfCidbhltUoluRbZKJuTGLCmMeSak07xa0pmQs5cZG
KswXSkhmHG5GN0Z3aNubUEFtaJpmu/cFunNc8FCXFRXMzIxWClyuR8cjC4vW
2VBhf6Bi4c/rdYi8u3/uqh0VOl0fLUzFz9HDwcfJuxyp8NwrOvWFWC3iOLs3
NpygQv3wuoitvytR4EVZmbWnqeCQDFqP1lUioxu1zlfOUgF9GAyy/cdFde8V
eUb+VMgR8nnTZcJBr2w7yIowKjTOtUe7by1DV32C/OWiqDD7dIenoUIpsk6m
N/jEUkH/1NrWWl4J6u0IdVqXzDek2di/fogyxtYVXr1GhQYH0yMyLcXooFTf
zEgGFbgEk/uxpQj172QnFtzk53f69nmqtQDlnfj+aVk+FZaLS/nMzN9DR6OS
6e53qXD3yXf39o130a/GkTrNYipcX7HEqmYwD01tyZ3O4lJBdvnFMKEPN1BA
Rdal2ioqvPF7cahZMwsJ6KSJfa+lglj4ywv0/AwkpBSrovOCCjFDiwbHB1JQ
RFL4PZsWKmg8O0V65CYhcdHLev5tVIiqOMJ+6JOAZKZ9TWu7qWBssXJT1r0Y
lHbSs+NbLxXSl/aYxFdFIIWBE/ZiH6hAWSefmTQbgtQ7nE/b9FPh8hZh2aGi
C0i3YMe1byNU0FtMs3o2YYtK1bapiU3wx3tPPNMXVkKGaUYF2n+pcGhXWGSB
5h5sHLq+ym+OCuKJ6sIj7R64bo5pniVAg/M9PoquW89i07PU1zULaRC2hCIw
+tMXWzopfxddSoOPK4Xj9duCcGf3ak9tMRr4futJlHwTjG13rpyzlqTBfsNL
jRMNl/FB1lKpLBkaaP49bOrvEob7ihel18jRQF1Oa98hiQh8RGte/Zs8DQIE
jzMGciOxx8oJA201GgRVGqqqJMXgschf1daaNCBzW0+K/I7FXgu+7/AjaKDL
Puk9kRaHp3y/dGXSaHC24NK/tXrxOOD3e8caBg2Wv3aTOVIXjwWO9AwN6tDg
Q8/UmomdV/Hld+1nRdfTQPzhZyGZ1qs4srE+zJpNg1PbH8cqliVgcahe7reJ
Bl+HrxmFKCXiq6WcjExjGlxyHhC9HJSIZehlmjUmNNhmqadu3ZuI024WFw1u
p0HNPpa7Hj0JK66+byi6gwYaCxO9Dp5LwtlxebXMXTSQjbmeKPosCasLZe+0
tqKBa7Nz29l/Sfj2+fSec9Y0sIqP/9Oin4xpE0nOmbY0wNcDYiyPJeMi97jh
6v000BHRGqVfS8brPkd4DzrQwHLYYWNaVTIu23tFQNSZP36w7Uh9fzI2bLkQ
wTxMA1bFBsbAghTM3eInbe3GX79e2DpN+RRsXHE289wxGkS9WjHymJmC67RP
amV60GBtV2tFNaTgzmV2lkx/GqhN1+mhvSn4y1dj3+pQGjxOImgZOvz5WS05
lEgaGC75FPpMKQXfsN3XfDWGBmNuy0uOiqTgeamBvzPxNEgwkJt5/jsZO7w4
reqSRANqka/9v/ZkjC/P7XiRSoPgDoUc1qNkLL8x3Ec3gwYH2QlWuXHJuLfo
xsuFN2mg+E9rbfLmZLzBnfb3WB4NmDcafI/IJeNUtScqnXdokITtrv8ZTsI2
ya3et4poUPuL49oVnYTb/f8pm3BpsOLO2p+STxOxtl6EeUEVf70147k7Lybi
uF8rvVc+p4GCcM8R9rZEvNOJ/uLrCxpceJCtGNOagJu2HvAKeUMDRtyx6pud
V3G11NPG+gn+/Wv2ev+oOg6rvDCZYEzRwFpBroxxIQ4HXW5TTJ2lQdW90bBk
Vhze+Pebp9sCOuSfXHag1C0WP30nqygiSYcHx/VX6e2Mxg/zvc6YUemgmmR5
d4leOJZyErz+kKQD+04gu+lxGD61Orp+tQ4dzrVLKabrh2Ey+pb8DwM6jC2u
9ErYGIrvnumoi9xKh9WdDTpz+67gHKS9ptmJDplyoW1XOy/i6p1LL80eooO9
gcMxk9MXcd/BL0OEGx1Cj38W2SpxEasFJz0N8aCDzU3ByQ27gvCtumk78KeD
o1AXYnLP49ru9iqPQDqs+u/71TbR87j/2z3i+kU6+IfHXVR1CMDqyxymp0Pp
YHsjV7lD2B/n7qpOfZTIz6Nwo90m0BfXOaYL9KXQYf3y3S8P9vnggdNn3STT
6fDz98VYMVMfrJmoaXAimw7L5vpkzRW9cV5PRLdmIb+fxR3BwUFPfNtpt0xa
PR3WeaZpaA2exA1naIENTXw/1yx+Pe+Bv11aPDDZTIf0JHYXU8EDa+WVPd7d
SYfdq17t4Bw+ju8MrbEW+0wHEcOI4w9pR3HT7ASH1U+H52m0tXZH3fCQaIu6
+yAdXieEKxnddcUURtBE3U866PbElqUbHMF3PfsTgmboYPkrdGbgigtuuoxn
C+fogOzPCyz64oyHkpJd3guQ8KqrnPJrszOmPtmuayhEQlaQquRvSSd8n3e/
fXwFCRYe85fF79vjl2IhhqqyJJBm6r5fsg7gYcWDOZarSaiUNp90TduPaUZS
ZwqUSYjXPJ227KYdLrjiJeVKJ4Gn6e94bd4aD7Ptg68wSUgez8/iEdb878OW
8Zu6JARoZO8ds9uD7zpLv/60gQShWbsl9CYrfHvTo9R9W0koWBGfq9a+C3+b
TBM5Z0rCKv3CeU+/nXhtYbBfyg4SqLzz73fTLHCevNWBTisSLJ1IG4H7ZvjW
9IjSzoMkZO5L83q3civuL+qJO+5MgrCTZ7nXYhOs5lYpGHmYBGn3CxFac5tx
Tlfsl/pjJLR3UXUoi4zx52ifPQMeJJSUNqiorjDCyiYHny86w8//p7j9CgE4
6xGZb+RLQsZr3dG2bjb+4C6zytGfBD3qR6AxWFhR9V9YYCAJIS53P0knbsAZ
cc3uFZdJUJmxfbDnynqcduI4qRfPr3cy5BQxx8S96nuydieSIGcm+lPqNAPL
vWNJnkkh4U/MzIjBPxpONVs2VnidBPUaja9xdlq4W3DcufkGCZF+/jeKNDWx
THlvx4+bJJgtJr+uFFbHSWvvPta6S4LAlOCH/MXKuPNDvOa2AhJ+VkpY3TOS
x9LJ51IOF5GgPFKyPTljFb66yPRcTikJ9g9LxC05Ujju8yBbvoYEom4obMna
Sc6r1NYCwzp+Hvmpq4Z7BzgSlmWKdo0kxHlGReRwbnFiuCECya0kREy+Ougn
Nc5u8fI4XdJOgqCEq+85Ux5bjG7T1/6aBCOjvAZW1AIUla5RK/GOhHthX1zK
apail1ZieuRHElxzLpZmJYujZUv/5O7oI6H6YW/WSQUpFOFbGxr+jYRFxuss
PQOlUSPj/lT+DxL2vV9woVBcBgkPJhyt+0UCJefB4OYIWRRq7WK+8A8Jgxvu
Jy7cuhrl7Hp34PAUCU7HQh83ZK9BHFNrj/pZEoxfBS3R+yaPuje3XCDmSYi5
z7ZbvFoRjaFt8ZELGKAJ4a9G9ZWQqEFlzs/FDHCffDpto6KM1upsKNklwoDE
KgPHs9eV0QFNavcKSQZIfp0RBX8VdHW1wky3DAOmYw7N/dBXRfXiEgoZCgw4
ASUOA69VEW+BIDiqM8B4KPZ+wF41pPN3zFmdygDhwO4P77hqSLjh6a91WxmQ
7KA01HheHX1IDfYzcWLAiv92W2CKOjK9eKSy2YMB1j8qDY6XqaGSo2ZLbAIY
sPFrvcJ1JTWkZEXu+BDOgGqBWPreY6oownD51SMpDFi2kFwTn62CKslFjymZ
DLirvU03dL0K+qM62f3rFgNcdoTXmDcoI8dlvQo+D/n5DS6o2DQqIb132XdC
mxmwIBjDJkV5NHyB3NbTwYANnyzikfEadEutol+rlwHivydtFF1XI+ljnUpN
AwzAo37yno9XoZmAheZLBJjQc/e+g/fJlairpfEauZAJ3LjOoN+50uihctw3
myVMCHNVL131aQVyr5UPyRdlwu09c0YbHZejN8vWV22XY4J7RWlu8FoJVGLP
kzgtz4RHuf845d1iKO5BtcM1JSb82Jt2aG28KNq+exfvuwYTKuQ/NfUoLUXq
uSvNlxNMEM1Neab2RxgJ/H17zZDGr3fMub+kQwg9SXPTj9Rhwi0HyPS6vxgl
DpMhj/SYUHT+U3Fg3iJ0auOfzrcGTDCb/tB/8c5CpNV38QxtExMWlW1/yWsU
RKlEekGzORPqqOUboz7z2Lu4YxkbdjHBU9L/RTmaZS/ZbRaVa8WEt3KXP628
P832Cph2P2/HBJfRlSFn8CSbJvXfvu8HmCB8JTT53ME/7P7c26bWjkzolvF1
xlITbKvWvVp0VyZMtJWdnLk1yhY59ED2mjsTWoagZOzyCLtyaonQYg8m1PjE
KlkM/GIzVEu/vjvLhO13LraGjwyxM80P15b4M2Gs3jaxw3GQLeolfTMqmAnK
Y4qzIYx+tl9mzcVD4fx8BdVmxtaf2d/rzziy45gwJ1Cs+ynpPdt2VGWTdAoT
YsP36WWueMOuW92mMHydCUF1P4R/y7xmr9sSxKu5xYS/drI/OAlt7JwTjLfp
95jw4LBdsMPcS7Zkyodyz4dMyLUU1LNJq2dfqIxONS9nwsLjxg9zhqrZQ+8r
E6efMqFc9c5a7/dVbJvZ8bh8Dr+/Dd5T/qaSTVu/L3xhJROEzp/7uvotZvfc
0/SrqGPC1qH7Fbv/lrI3N9p5H21ggkFFn4bDkcfswoGoM7JNTFhVle97qf8R
+4rKuLtnMxPMyV217qLFbJ2UZ/upnUy4I2vOCP6Xz75eMrb3zWsm2M6H0HaW
5bKF2zX2hHYz4XIbxXIy9Cb7o2jUji+9TJga+fpg4btMdlSwLUr/zIQIdTg3
6xnHHjgxqrjsN39+NmOGbPHi/BepvqZ8hL8/Tm/b1l0K5HBu75V1HWPCK9tA
RHW5xEn4giVq/jDBI9BMWXVhJAfsIgT8efzzyGosvDORwEnbotY3JKIN7Rc4
f+99zOBYrLHObVLXBp4BneHByeak9pOV+zW1QTHvzQZUm83pLxB+O7xWG2oi
/SyyGrI5AcCRlKBqg3dZ9rmy+mzO/cNqAbu1teEvVeGDzs1sztKiUat3SBtO
+eldu/HjBqd+S4zALxtt8EjY+P7hYAbHyKN+v1S4NpTrv2JPHIrnZMk7q7/8
ow3BBenbDBzcOeo1+ck79+sAa3PzXb8QXU4cvZrSztWBjT1qtwmuMPvI+KK2
RoouAC8n8rbGLMu5eEw5PFYXujV7G1YdesNqaBK+xOHp8us1+1o65bOOb/4c
18g3871+oMK+fJYkpzyzi28zg1KbYat8lm2B+9MRvp+rHbgQuyWfNRj7clR9
ThdulJre+rE2n7XEOs4xmu8coZb+mV95rM0fZTc6/NMFrVesK2cC81gDe0fM
j/Ete0+Tes4njxXxqsHOl+/cuIKUi6fyWO1V57yu8i1OX1yT4pzHcr719n4d
35LKsrZvtuaxgo5mrWHM68JWuXcaxRJ5LPU+H4LN9xpDb6FO4TxWwz5LfVO+
J5dH3pkSzGNJ7hDc7cJ3EC+Tvm0il5VFukSk8N2o3kSZ7sllGeezUm/xPfAr
YTGlPZc1oCSdV8z3ZueW6wde5LJIqedVL/gOiJFaXI9zWe3h11t7+K5Ise34
V5rL8l7g/f4r391DUfYGRbms1f47f4zxfbPX4qbnnVwWd1xzep7v5JeGt4py
cln/A6A3hqA=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0 \[Omega]1=0\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0 \[Omega]1=0.2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUlXc8Vu8bx+2RPbL3w0PSksg692U2KKNIkqQyIyNShJAkOysre2WvzHOs
SlmFpPKlMiMhe5Sf31/P6/P6XPd9Ptf7us5zxK1vGd+goqCgcKaloPj/b6qv
Nd2R68nYQ2+a9mffClF7v5j+BbG7qOpeHb/lrt55jQeKiT1Gb599Z30xWohY
Y2rK9gzFoPpiB3f/kUKU2hwuSiv2DKk/01z7b7gQyc1fj9ixfY4CaOxl274U
ov9Y0/5tf8pET0QY7h8aKkSSuYyKm1s56JdzLJL4WIhuqns4rYkWIPbCpcyk
D4WocuBb9rJWEdKIKKxN6C5Em476w4u2paiyjMOd720hSqccfrymU44WITpH
sL0QaXdHS61+qkCTRWM06Xghmk480bJsX4VESVeks2sLUdj1vxZLW9VobEzn
IbmiEPVv2cUuiNahizlM8DyrEHm+ETk8X16Ptl3VNqOTC5HA04HOOa1GRO+r
92IrphBZywL1rC2Bnn09d3u/fyGi2rrXu+zTjLwk+xnmPArRwDcT4WWdFvTH
CEUIORYiryKmuj+fWlH7GxHNhnOF6HTMJN2f9DaUbnhbSOpEIRLyajm/aN+O
iLQS+KNciJq17izMb71CfnOh1YXChShmnzE23/4ayZ9MXY5kLUTX2Q6E/Q5/
g5R+fLzU9a8A0X/9IT0n+hZVXdGMVf+vAA01N3n8mn6LkoJ9ihw7C1BhbmLb
bPk7lLXo7jNWW4DOup29MqPVhdrtsukzowuQmNm+4p/M3WiJX8j7u08B+qNO
szX9sRtZXvXls7AtQPGM9fFTtr2oyUwwZUm5AFXdOe3mzvceJVS+ec0gUYBS
ZpT4l3zeI/jLmXuKsQA5v+e0/aPzAR3qCQnHPuYjzpQOqsVPfSg7e/RCoHU+
2mKtKXBR60ezbRF9QVr5aPxBluFCej8yu5qgH03KRzW2vmnz9gPo5FPdgPpv
ecj8qILK762PKEHWO2nobB7SyhX/7mQ1iBQZC/sapfOQHD9byFz7IDK4YfYs
dCcX/fv38+Ov8E8oji3bpO9FLsp499x1VvQzOvf7XGf6ag5aTqyWHQ37jP54
cjtotuYgXdvOsb6Nz8jRoLXSM2x3D6nXTOr7vyDa+cWdQKEcdFz9rMrjR8Po
9ZVQn1LZbPSE6fqSz/Iw8ojuXLk2k4VGPt8tcrn6H0rj0mN4lJ+FgjxzRMxU
R5CCdAAno1gWel+6TSU9P4ruOcUJxW1lIE7EaMly8BuyOVT306QkA6mSY1Ue
Xf+GnpvTg/2VDBSxXLB078M3hI79DPJpTEcK0R9vWL/4jg75cO5Itqchv3dy
p49cGUOSeRdPcFcmovzyl+QXcWNIfNP1h8j3BNSXqEkt1TWG6orv1mUzJSBJ
W7NGPuVxZDPepSxtGofeUQcdpOCaQGs+jNwnWqIRj/pXzt7Xk2ixaARXngpE
IGkzf/LvJGqdfFhKPfgA2TMtdrYenULkLUWPDh8/1PiZ7mFN+hQye32Twmnd
E1l7yq+l3ptGyb1MVz66m6CS0sdfbx6cQZP5JrHkdT9ihnMm7PTVGfRHk67w
JAogpD1PYzKxM8iE0cQ7OTiISFdjyhjbmEEyTUULEuKPiZi3YTbmr2aRhIuz
iYxGNOE5Frl4wmIOmQcOrDfMJhHPmToDOXQW0Izj2Wfit/IITN3bwt9yATm7
2VAqsuUTw877j83fWUB38U4+7tJ8gq/vyWRX4QIK82SW+TtXQEQn6p8KYV9E
J+WP+R+wLSICpXpYd74uIgWfKwd408oIiQu+U04ri6iIdcg77GcZ0RxysHmY
9Q/qIzPpBiqUE9uzEa71Gn/QbIsxx3BHOeFRYTDgkfcHbQQEnA2dqSBs0Ydn
v9yW0NmJ/QI2zNUEReZq/dcnS2jagjmxTa+aSKQRGn6XvYSCFPJLToZWEx1v
bUQKBpdQfKN0QCVNDSFzfjvzhsoyUuYXDHX/XUM014i3nz+3jE59KD7tQX5J
mPGfmNC6uYySb6e9dL/8kggZiZaWSFtGRfaBmHHHS2LaTrpohHIFednTuzFF
1xL+nfrd3QIrKDnTPNG2uZbgO+j2u/HoCvq2eDv+2e9a4uRS4+HkGyvoSXO3
jNOJOuKbyQ+jUN8VlPiSZYvWrY7wqqV3v5uwgigf75O4llxHFNw3rr7wdgUV
KRZMXpypIzS/3RnU/bGCOM/Wes+y1RNfNFPXjm2toJSYNZMjCvXEHoZpZe4D
qyh+XOrrO696ItOB5RK17iqSpNA5wfusnlDplvf5Y7mKzh4Y9masrSccYu7j
76NWkQXFx8kPi/UE1UrmKFGwihy2btRkMDcQSRc6KEpbV9GN6NQHe8gNhHz9
nHja11WU+Xn0EiPWQLwT4tIKX15Fca0xHsnnGwhrv+PXfVjWkPbgPSHcvoHY
/H75oSN5DYk2cTc6328gYrQDc83RGlKznf2vMLKB2J+X/+aU2RoK/TizzyW9
gWhn7Jk+7rqGCn1LbRpLGwiLm0uMMqFr6Lhi393wpgZiuYdvP2/WGsLTD9t9
f9tAhB3B9Oka11CZqLxpzUADIRl7zWllYA1dP8QYsmekgWhcDYkYn1tD2UcX
rw5PNBDnL5aU9tOto8ZCOzvZXw3Er4b+962i60i4xhaWFhqIIJGNxfLj6+g9
y9PSY8sNhNADEa4Mo3WkcMwxZWGlgaga01KIclhHmcxerKTVBkJf197EL3Ad
uRe4HOzarR/Pj/B0TllH5NtXdGcXGwgfpqqEy9XrKPdpa4vfXAPB7fy5Vr9n
HZ0Nyz/weKqBKH7/77Pq1DpSlX97nP5bA6F7VHJLlmIDfelOqtwYbCBG4k4J
CfBvoEa/a1FWXQ2E57qzOqP8BhL/pTum2txAsF6KtVw/vYFo+A1/PKloIHKb
6vymrm2gx7F3JgyzGghMbDR90GcDdX/KsXkS00AMBtC0vorbQCEz5ZRq/g2E
88S+saqSDfTxnMXtazcbiG+Wnxla3m4gNY3YZjGTBuLcUMjB7vENtJK9D+dQ
ayCOd07dnRDYRGnPPn2LpWkgXmgnPF88tom6nNmDZCfrCRFc99Vfw01ENkgc
2HxVT1CX57DzPNpEp+u9Pc/71xOesiaKEpmbiMtzqOaHeT0xnUVjcbBpE01t
MQRUH60neuKv5ekubaJB+RuPFb7VEYk+4tidK1vIN/9w17JkHbFn9f21wHtb
KFDrdCzVn1ri/i3/x5FxWyjvVDqVa1MtYW09OpDXuYX8THw4HhjUEnInUx2H
lLaReq56zbzVSyKtRT963Hgb1aze1AoUf0lwqG7XLDhtIxaTcu60bzXE6oFL
VIzZ27v/Lyp1fuY1RAsX/zNl9r/o6xv3oHj1akIhvAPX2f8X3Rm3TKNbqiJy
6bzGjXT/IleebKaDeVVE2MbgIQefv+hMSLlTE1MVYToa+zppelfHFS+lva4g
ZgrZl7ea/yGySo11L2MZsUc8SHr0OAV4UzBOO2xlER1q0Yd8dShA/L8naoIo
iwg2S1MSNqaAUxWJn/UDMgmqqNoTlxwpYEBRu8aJPoPY/PfL9lMqBYxksVJ7
CqUQs8Mm+b1UlFDkc+7k6WNRROG6dZkzGyV8uOFdWX07nLDjdqllEaIEfoVa
Tnf/UGJcL7RD7xgl6M3cDcpMDSKG6/HpN7aUMB29eOjVT1eiK1F6X3MXJYjt
SMa/dfdGoVUKR658pgSazE7GBz7+6OR7DeV/E5SwmLYQe1AlELXTW5xS26EE
lvK+a5s5IajRM8q+9ggVRCWOfWFPjUbF5zcKyuKpoPRNJVd+fDK66UJXYZBF
BZ8ZQp1aXqUg2TCu+t+lVHDYJnedZjEV5bYdeCf3lgooj6qqfhNOR2ny1jP5
W1QgN/V9gdkwE0Wwd8pmWFGDsFlu9T69XFSnJFx91pka6mU2XvW/zUXjlrfQ
tjc1/BFjpinWyUOqxVznLyRQw81/yy3vFfKRzcCNEZocaniilLPKkp+PYrZe
2lVUUIPBYmTbFb4CNH3K4j5LDzUcdntuKLtQgLhdS+gbvlLDreL+B4kXChFK
pIix+0kN5UqvDtA1FqL4yezcNhoamLzUktnj/QJpBc713lWlgTZOSa6SwSLk
XIjMpU/RgPGvO82lUsUo6UP0+IApDcQfyFRNcC1GC6KKG4fcaEBxveEMB0UJ
EjoREvifHw2YPJhIyNAsQSecv7A8CaeBsKasvVwBJSit0VdiMp8GNHW73yau
laC3Y++LntbQAGWHxI3iA6VoeQ9JSaOdBqz6BrazrEqRmLxHy+8PNKAdMRx/
P6oU6V18o5cySgMz8rVhqk2lyNOff/DUHA3MlzSHjk6Wosw8R6u1TRqILKh/
U01Xhrp7mmayGWhBZdZyxYWvDK2vsHkY89BC4IXotEyZMkQStt7ZIdGCKoOv
qr5SGTqrXfW4+AgtlA11Ot7SLkP3HOm4LyFaWHstu8piWIZyYszSGM7QQuLU
f2/2mZeh93WFMjXmtLDOorHcbl2Gtr9tV1yzowUr5dNV3+3LkDSDgTqHJy2E
TdPZBNwqQ8aHMt7ggbTgeGNvWIF7GfI1XTK6GU0L/EcEui96lqGC+zrD/M9p
ISvlyFLcnTI0kJ1g86aIFqIqLs9a7WqKrp8Lt+tpYSt6ob3JowztX1L1luig
hWSdpbJStzJkKhBB+/4jLRToPqZUcS5DARrfIu+P0YIsYbjPyq4MFdvJC+xf
pAWXPKJe6moZGooMyh76RwsM/923jTArQzQvBw8GM9PBd5PGndSzZejQiEzd
UQE6IAU9djXTKkPmtN5a36XpQJCV1NGiWIaC5bq7I47Rge+69v6RXZ7l50TN
1LTowNrCc6ScvwwxZLbdTLCkA33q0qfi86Xo6Nu9a9o36YA8jgmefluKLBds
H/y5SwceP6ydaTNKUTXGHH8mjg76KBrbzE+Vom83LMW2MunAIbTkCoNAKWIO
LyvML6MD6dT8tVvTJcj663mCuosOWjhGZeN9S9Ce5O9Orp/pIIJ5s+/2iRJU
Ye4sNDpJB1vWChmnWUsQ9ZdHd+sp6cG2/9MrmvhilD1Uf9RViR44acTvf44o
QvqJJ36MaNNDwMeUkviTRWj5wkCUvjE97GX1J6VTFCGdT3Nz0k70YPRuVbPd
8QWa/CiWP5JJD9fc6T3CDhWiiLhiU/0yeri1/6TK5HABUjRRoa1voocQaa+R
yZAC9GjgnHXcED1InC/nZPovH8n0BwvpszKAyEbRP8k7ecjh/a+oursMoPVq
//Inn2zEGXUXST9iAI21nfq9Atmo3oDud2wsAzDvLy6pqslCTL2iei6lDPDj
ZhCD9u9MVNRtTCs9wQDubCl0Uxcy0O93tXdjDRnBL9PTckk9Bbm+CrK+Jb0H
lFgmvh/cG4lExnXpVo/ugcO/BxnH8sJRJxVjoQ/sgX+6949/UAtDUhC++Pji
HkgVbSW1OT1Gn+vj/LOf7AEvEUb5mt+BSKMsN+3z/B6gb+r8sETpjn732Gla
be8Btwzdts4gF5Q8Jzs5ycAEEgXPfBqFb6IV2dIDy+JMQFnJreXnZo0Kcl42
sp5ngpKUBm+6Wys4R3LHF61aJrjGlZkM0q4EXhfq+66dCWKvq7o+kHAnHIf0
JYw+MMFiej99P7cH8WrvB3vLGSZ4YyVvd3XEi7gb9XndS4gZXtmPvqqn9CfI
pckpOzLMMKynXkF88Sf6uy9D8DFmuLNR8o6r9AFxgOnHo6dnmaH8isH3+FOB
xPeHMzwl/szwojNkJVMnmIjILqpXCGeGDj3H6ZfrwYRqm7NlwzNmiH3Jtk6d
94iIo1jK6ahghrxbar3YSgihKVp9yoBghiOO83cPxD0m5tXvzH3sZAbtPh7a
c4dDiVPeWwpj48yQdnJ/4QmzJ8Tqs6Yh+8Vdn9btisDEEyKr1s9n4S8z/Puw
KLPfKYz4u0Ld/peHBZKopni4boUThdyvbYNILBB5hcZqcTqcuHA0hInpMAtc
SfWiFrKMIMpdmM/xnWKB5oIpbXuVSKIrietusSkL2GJlltyFkcRku8Bzzess
ECdxu1pmTxRBMS/+6pMrC/jfdT0WqxZFCPDvm73pxwKx/2UsGd6MIhS0DnNQ
hbOA6mi257VnUYSBk5JSQhILdFEwBr9viyKCWnQCW6pZQLH7QXYPezSRNqtf
YNrGAszJXfccjkYTtXvP986+Z4He3D32nueiiT50acV/hAV040xs1l2iiTl7
a0GeXyzAeWtf5uqTaIIh1l7jxQYLUGC/Au5kRxMSuIst0LMC/tst+0F9NKE2
fSf8IzcraL8NHBTsiSZMOf0qHSRY4U6WqeCZ0WjCRS34884hVrAW5soV+h1N
hNqE78Sqs0Ir95nP0ZvRRHZUrJSsHiuwxfrpVNHEEER9sh5hxgpfbgbnPWGO
Ib6MZ7qet2EF71c8U6KcMcQya2HCT3dWiGxR3Ht3bwzBqlze5PuAFSzCqxye
88QQMtdqx7giWSH3b4pu8q6vGU4wFqSwwqv1cjmP3fMWL18fwgpZwXD8W9sx
lhjC83u3Sf9LVlgxqBuYoI0hopk+etu9YgURhvETEdvRRNGx4Yy/fazwrj9J
8vhiNPH6ytibmG+sYEwvHvlrLJr49nhmTvo3K9BIqL+pGogmNisXuZq2WEGq
qJKc1BZNcI+sKxszsoFxUJtoblk0cZCBwmqKhw1merNUfyRHEyfl6YN9JNlg
tYGa3+xhNHHNgrWIQ54N7NTDHDicognf4L19uYgNMumur/DuziuxTGhd9Qwb
3BisjvRQiia6aPZr29ixgWsSnnB5K4qYPCjvsOXBBo11jRtbX3b36aJyVFQg
G0jtGzPkr4sijhWfGK5PY4PeYAr1DZcoIs3k+m22j2xw58ys8UB6JFHr55iU
/YMNDMWL6I+fjiT6C9yalRfYQGy2S0VtMYKg8QO6Clp24NlIfXHneARxvP+s
8bAYO6j9NedeLg4jMrwdZw5fYAfaSH2uVN3HxOFmxvVHl9nhwNo9QbmvIUQz
TT7t6DV2IBYmHuDOIcS38HGxcBd2eGOUpLD/6SNCJP3yhZ+P2eFgzexAd99D
IqndoD2jkR1+VGQ7sasEEDEsCmmcEhzgMh4Uep7Fk5Aw7nthL8MBn17wUDgf
8CDK413qmg9ywD2cdKb77G3ivWjxgLMqB2jOYZwv4twIVnkyU+d5Doh/Njfd
7+hMhJryeQU+4oCvFQ3y19KuEgLJNQ+/hHPA9Uu+ZQW8VkTB6PmnR2I5oD96
bZRy/2Wiwy66ZDR91/8zXxiMXSDovPdMqNZzAJypVdWqOUEEPN82Wv7FAUK/
xX6dntJAhodrXfcvcYCiSmJP3HNdJNLiHm29wQH2C7JJlJp6qP7HzPv3tJyw
taORdVbCGP2R+mxQLMIJPaN/TZPTzFFzTeytcUlOUNgX5GmdYYEiThhGCu7n
hIRRV6rWREska/+m57ESJyz9NzMeK38VWRdVn7Ex5IT2e50+VPXX0WF1V6dU
U05415d86E74DfSvWy58wIIT3P6KCO27ZIOS5rO6NO13fa2u4FMTtsjO/8qv
u7c4QTfXg6oxww4pcggyl3twwp3pnGJ3M3vUJx+jJxrACcV1NmItVQ4ove2M
o2kIJxQe7X5+xdwROZ9nfBIewQkCo9u15zcd0R5P/3dbSZzAfWNd23yfE9Ko
cz41VLlb/6xLKE77FmI9LWvPVs8JECY/lNt0Cw1/mQjRbeYEh1T/vhw+F+S1
bdFR1cUJbbLaiyq73y/dcL7p2T5OEImt5mKocUHcIgP0pM+c4FQsEHV0wgWV
Ib0T0ROc0Kw00tio6op839PZdsxyAu/OBz/yNVekf7U1eGeRE/SzlnC6EFck
8Od+ruI6J3SFeG5fK3RF0wHKr53+cYKdv8609jtXVMO1MpFNwwW/n4Ralk25
oqDsMtrhPVywwaRkU0zlhoyP3ZTi4uCCNb+wQ1qCbkjstbTOaV4u+M6Qy3n3
iBv6bTp2/YEwF2gOUkWY6rihxqm0oFoSF3zI5dAZM3VDoV7m2fP7uODFo6Z/
ZBs3ZMbI004+zAVFG1tZ+9zdEDnpw9hlRS6ozbHAlu67oWXZcOo4NS4oeJW0
+iTYDbU2nCR1aXLtfo8Pc22HuaEofRot6lNcYJk3u6oX7YYs/yOsVQy4gOJo
sGjQUzck5+wd4GrCBY9GMcniXb35TzEz/xIXyA56VPXu1ndE/mkZvcoFxWp6
8cvhbiherOQ7jx0XRMVCjmSIG7pebk951pkLLn4bfm/n74bkNaXEH97mgvG2
c4LvPN0QRf83aLzHBYrFhxKNHN1Q0E88494DLmjnUJbts3BDjBSpVMohXHBj
Xu2Oqr4biuDxvrYWwQWXHgYYPVN2Q5wHLrZXx3HB4/C+5DVJN5SgpSR1O4UL
MlYiT1izuiEh873B8llcYJQ7aDyx4oqkHn04UVq2y+vsYtV1whUVppbmO73k
Arp/9Ep3M1zRwapwRjl8N++5RMfBB67o+PdTnfmdXFAe13wnWd0VNa5Jy9n2
cUEpZpsoyO+KNFjpwqU+cwH3/pOb3Esu6LRq69nMSS64nSv7LyvTBfUYpZda
ze3yUMI+GHm5oHN2vuyiy7v9WkVqF+i7IIs4lb5kSm4o2PGT2jN2CznPV5jE
CXEDWe9llre5M3qalWURYswNFL+ExfvnHBBf/YMm3YvccAQJqV+/64BS3l8R
obXiBoZ/TVJ11A4o96/gtwdO3EAqUPtLvdce1V6IveYdwg2OMBFpK2eLhpke
Ojjj3KDCacD+CV1D5Ns2Xudl98LYp//McmdM0QGV0XPPD+8Fl9rG8yJMpkiB
wuzQjOJeKP6epCB2wARphp2a9NPaC0kuiRHMnueQZbbc+RcWe8FVYmjUU9gQ
xQ/8OUQVuRdCnZ5sFKVrodQkR6YzcXtBu+a1ioaEJsq2Gp9MSN4LtwfHrnXk
A6r49TH1QP5esHzQrEcfqop6aOqYLrbshUcFB7Mfex1GtMf8pkqX9kKILoOZ
6htmgnlrrXVzYy8oZJESrdN4Cc4WlzQdCh4gNwclK5uIEWJnrE2+MvNAZltU
xYDAPkLthk4bHZkHXuZ8/cT8SoHQ2o+nGcnxgNinCRq1akXi9KLivRR5HnCO
LS30f3acMLsvc0Qe8cDlCxvvTmJqxO04pueXzXggzk8mNsxHg/C+FHQv35IH
yvJr5Hh1NIkA8b8mS9d5gDlThL2JXouIKv7N/NiVByIGL0be8tYmEtxtp/vv
8EAPmV00RE6HSFP+1ibiywMeSlpf+j/pEEWvPtyrCuWBdxm6siThE0Tlk9Om
O1E8sMfgzVmllyeIeqO2I6cTeKBZZ77mud5JouO/qunRLB4wqw/XjL12iujN
OtAuW8gDND1HRY5NnSIG7XOfe5TxgJF2Xu65G6eJ8ZUEU6YmHticcLQ6bqRH
ZGocdf+vjQcMMrJ9ODv0iCvhPZGl73hgtlF2X8lxfULos33Rgw88kOUfflEo
S5/4Ikn79twQD+QGPn3iTH+GSHRJn5Aa3e3Pc66l5sYZwrRRlWp9ggfsYuZ9
6fEzxIdzbqopSzywGre1zHr5LBHxnMXMeZMH2h/3Us5lnSX0Z/NvAyUvXKQP
k5eYOEvsUdKO5mTgBYymWLlNzIDoCBgtHmflhbXeS7ITpgZEcM+9dzV7ecHv
qr176iMDQkuAZypEiBe2tM9/oaw0IChsyqkvkXhButjcU+azAYGX64sdkOWF
NM1nL6Q3DQifv1NqO4d54WCkIBcTkyGhfCrw4gclXhit63V4yGNIrMaKeGZh
vKBWPu4eIWpIVH2ri/HQ4QXzoyd+HCEbEm5yJqUn9Hnh8I9HQd6yhsQhr4VO
/nO8oNgQp3FHzpD41fZkevYiL9B6+PMc2dWFbNK0uBUvpPzV5K7eZ0jYXWoV
j7LlBQEs/jKblCEhlXcZs3bmBY8rXZL6IobEjz/r5goevLA3p6rgzl5DIh2L
vUPnwwsd/CFKaXsMCcvQQ7FDAbwAhrhO4pYBITT4rqzw8W7eQKtIwRED4ou4
TbdPFC+E+ZayjjYaEAlOlDNnE3hhUcI4fCvBgDhfl0InnsYL/s2cQ49vGRCc
tMdJS9m88J+jdEOmlgERkeJskVDBCyVn71p/+r47n2nGu/Z1vMCR9ilZsugs
waiQE6fazAsZFyYMr7ifJYI6v/aMdvMC02Sm/c76GUKT985s+QAvBJk3VsS9
PEPsWHMyBH3lhUtvOdS83c8Q9zZPasj85IX6+4bPY8f0CZd9NZUuNHxAPeWd
nZKnRxz0MHqvycQHr9jTy06d0yNmm3/94ubkg18cnQLUf08TNmYkcp0oH/Q+
fCS1evo0cflRVCKl6u75HyWPzvafJE5PONyPceWDVO6Pe4PzdQjd+6QibS8+
4Mw2f8ijoUNo7h3+surLB6QuyscMn7UJFZ0zxy+F8YGcQovJBXptQjbn0BIp
jw8CjELr717RJJhuLNtVD/OBj56DP8aLEQx/ixJsx/jg6Jm+8AYtdYIm7sZr
/hk++H6WXnLCRY3Ybh8k+a7xQWGzGCmzW4X4JVk3osvJDx+MuD9bPFUiusbv
nx86wQ+tbNe7gqyPEB0+ioGhZ/nhuvUBK4Xsw0Q793y5mgk/0Mdh+0p6DxGN
2lZsGdb8wGuaxnptRo4oytZ8Z3+fH5q6hjtun5Mm8tW21gWD+OH0S30d1g0p
InugUronlB+qCoriL2dJEik0Ug/lE/nh+bOpa7foJIjw6/SwVbF7/9cO9np2
ASJ0m3AuruMHZWMJMHnBSwTHeqVeaeaHYsUfTfaGewnf9p+bbd38EDGnrna5
np1wluyqDpvmB7Fkutp9ohSEQ2PQODbPDzfz7/fgFOu4zXl1rsUVfkhzmshy
HZnHLYNKXEyoBXbndermhFIsfnY8ar+IiADQ87Ef+Tq4jXXtHx+wkBQA5bti
966kUSI9dyXfZFkByHj3RGyniQadpBp5z6ckAGpTj59db9uDNMX2e3IZCkDa
AE8J3TInarb1FTU2FQCrfTcZPwA3QqUfOqIsBCD53vll2aC9SA3zEmS1F4B5
+pxPjb950TGLV80MAQKwPqGVNXheCFVl8TmcCBGA0o+XfGIvCCP5WUeu4AgB
6B9+K3/BSAQdvMdpQ50sAMXxbaECe8VQUcsNNs0MAQicDvRpCBJD+xnrav3z
BCBUfDKcdkEMySReYfpXKQAhR+7eIurEUe5oRZVavQDsG/6hoMMngaSk6Sy9
mwWg6ZXhv+duEkiipqhsvUsA9nffKaQWJKH0vzsXlfoFIElPrEHSnoREdc5R
e34WAIWu91J6lSQkNLBhsjSxm7/Hnu6rqiRKEjyzc+SXACyQjR9a3pNE/NfS
813+7Na7ZjkIVkuixMIlo9J1ATh6r+a46C9JxPNHd2vunwAE5Jx8fkdUCsUq
J2XL0QpCB/HWS95ACnE9mDvjyCQIblEVby57S6GYDlgr4BCE3CvjlfTZUoid
PTZ9mlcQKNI4QrC3UijiwtQpaRFB2NN5qJR9VgqxPFdZuiEpCDw9f8rDGMko
bDI8JVtWEOK/GCm0SJLRnoPfdcYOC8JPJp6lRjUyCvFQmBdXEoS8LreWCCMy
omt6lGilLgg3sfxgnWtkFETzVeO5liDUpJaqLriSEbX+wdn/TglC9fDidOp9
Mgp4+iBWyFAQcFeG7MvBZETxdUD9kqkgvHkcEo6FkZGvhMzUMwtBwJ4P9RhE
ktG2vXfUkPVuvgj2xPRdfa+8R5nXXhCSsHFhCCejjXXxMZNbgnBlMjFBPYSM
vMAjLNZDELK3adTz/clo9VHHsX5vQQj9nqQd6UlGt3sFRzkCBIHjlO93Sgcy
WuK5FWIYIgijTtkabJfIyM2y9UhkhCD08u08eX2KjBZy9n7tjhWE2/cqRhQV
ych5zi6IOVkQaL+anLklRkZzCo0H9DIEwUMOjfoykNFMm7V/R7Eg2C/Ral3p
k0Ki0UMOEVWCkMA52vqiXAqdtzxrcr5BEIo7FSyqI6QQvq4s+61DEJTbR0pO
a0qhpVel3Lm9u/4V46AtPikk81Rqx3FQELpjLfMq5yRRzAGOgbWx3f4+LIcF
REuiN5vBeNOMIBx54XWqyUoSbb/Zzg9cFASj3/NaJw5KIhvr6ftsO4JQ5yfM
HdlOQqoJhLS0gBB8GtwY6BmVQC7Xj3HOiQmBhsd9ixtZEij3yIvtCmkhUEx5
5t13QwKxd8V/wI4JQVOMkpHLlDgap3D2NjUUglX38cSbo2IozEGo92GwEMzn
RB11sBRGLUoxdXrhQnCwqNLSoUcIrdIwZHPECgGEVtaMqgshq+dLXqkZQvDe
5NWDUEFBpDDwTqK6UQhi3IXu2g7wof/U73qO/xEC1/mK38RZbsTJNG9VuLH7
vEOdnIbNXOjk0HU9Fwph+Pr9pVayPBeqcDMU22YRBq30N+RMfk4UnCf9jmuf
MOjEGjlLTLKhgxyDwlpXhMH5Qh+R2USPJsMnA+JuCMNkU9Jzx490KHXP2tSU
ozA0fnh85P08LWKm4asI8xIGFhpN/Uw5GjSzelF3MFoYWjpMqIk3FCjT3eGF
TKIwUJZ7lt2f3cEuLtxj904TBp9MqzGHM/+wjp/JX0RfCMOC01EfI9IWljP8
n7N9uzA89uYuneJbwSwu/u5veCcMBWkul5ZzljDuwX/HWT8IQ9sHPzkz5T9Y
QK8odeV/wkCVGtofOvkbs2q9mrC9Kgyhd2jycbtxjA+5bZ/9KwxFHAJKL35+
x3obAq5mUItA5lr/Q+n5EQyrztqvyy4C4VnPx2pvf8SE8ieIyH0iQNn3ws2t
thgbkFyV/HFIBL6YuGZc/XMff5JBF6qgKAIz2kKPmo9W4JtJ0uc/a4oA2etg
AOvHDnwo3H5awkIELNd5NGhXv+BRe+6d8bAWgdcZT9NtzEfwE49CK97YiYCi
iIUxU/83vMb/hc9NDxHAlzSuMWyO4U/d59hrIkSgWunU0/6XP/HTC389GOJE
wK6S5UE/4yxO5cT61TxZBHRULM9rGf7CXWwO5ezkicAzxeJr0/W/cZkxtMe4
RASajdM8zEfn8dErhreyq0QgUiif+pLPAn72oqvyqRYR8JVlzDF5uIjTDT5I
S34jAoNRXC/bKP/gTcYx1L+7d+8Xe7Y07fUHl9Ov7I75IgK9fxLS0i4s4eMd
bfIT30QgxuNxhDGxhCfrDCQoTYlAe+BSFo3EMr4HrVwdXhKBfBb+D0VDy7iX
hgxDzaYI1Ov1vkw8uoJPal0qiaQUhYff+pe3Q1bw87oR5+0ZREHX2G5wcWgF
bz3ZsqnJJgpXz0mPRpJW8cN6y+lCPKKQqNnVPG+3iqedkT6xKiQKdy33XpAt
WMWZDc3nekmi8HS8OdNsfBW/Zxz+tEBWFFhUc9qfCqzh0+eblQOPiIKP5vj6
st4abnphadTiuCjEzijHxHmt4e0XycGKSBQ+CdmsRKSv4fIWF+XYdUWhga0i
drNtDU+3DOv7qS8K9TtRs4s/1nDWq4RX27ndehuLexF/13Cfa39EUs1FAdL2
t/7kWsdnb0i98rwqCkOrr0GYvI6b25k5GtqJArt8zU1NhXW8w+EJh+wtUQi+
4FDuhq3jik74S2pPUaB5F+D4Rnsdz761ePk/H1H4F39g4uKJdZzTTZLmZaAo
nP6caaylu477375QGBUqChtMDT0pGuv4b89QQ4doURjVSr/gp7yOW9xtWtVK
FIValqRO6oPr+DvvhRTh56KQ+WVpQlN0HT/uS9JayxGFhbd/VU1Y1vFcf9Of
74tEoSZZWuXc+hrOHfg4srBSFATSjombfFvDAx42Hguq3817PZLa/dUavvBo
/uvlFlHQ28xrbc9bwy1DJQKUOkSB08uP2frRGt4VZiLD0SsKzxPVL1pfX8NV
IkN6Zj6KQghpYnoYW8Pzoxtutw+LwpMJ0ZZpnjU8KF685c7MLr9nhUfYmlfx
P4nnbY0WRcFmmPW5afQqbpX8iGX/uiisyThvhVit4iLvV+XmqcQgTUFEn3Zj
BTcxYqewoBODFpXzq3dbV/Cwvn39HYxiIHpEZ/1g6Aq+OWBxN5NdDNwiY08X
ca/gg59bX5mIiIHMF4bLJL5lnOXScGKruBhU9nRtdH5cwrWHVxwPSYnBl18X
441ilvCKERlORjkx2H57cb8awxIeMRZh2agsBn8bgfbOz0X8xJz5moSJGASO
5lhfFp3H07gD+/3MxMC6hkm/IuQ3vqz6onT4khh8fcYeU7c4h6eHbtnGW4tB
F/2bT6jtF74pnTLE6CIG5tHSCsU2M3iR9X91C6Fi0LhyBAm1TOBUobTxZyLE
oG1pg5R3aAI3Kz/gVhgtBtf/8x0Vez6O01L4yl5PFIPZ01npgg/GcMtUkeRP
OWLwTjT42Avj7zj70BUfvFkMJrQUC9tvfsFtdh6ZCbaLQWfZZqme+2e8kVym
4PVGDATzYrRY7w/h9h4Uc0d6xCDArnrBO2kQb+XMuJzzVQwaTMz9Nf/14Xwq
b5WpRsWAkW3uxopoH+58dXHvlR9iEO0m0aus8wEXLNPo4fspBrcZaqXJx3rx
22d+YGGrYlB6XP2Q9o8O/N3tPYI/N8Qg09D7FpXVG1wsRX5N568YWD2xjj04
8Qrvngko3aEWh3Nu2++GadtwcghJzJ1DHLzXyL9OaDTgPqV6273c4vDI6/r7
L5W1eN+g+5Acnzi0C4fdw47V4H5S7VGTIuIQpj9Dc/p6OT7Uep3SXE4cFI5p
MoWNpeMLGl8E7h8SB591ByWVpWc4fYuBQrq8OMyQrP9jN4rBFQkV28nj4nAk
ZcainMYJj21g73bTEYf1ze+tg/cSsCKV4Mm4k+LAqX0i7/W7VKytbmunVk8c
rsTR8G2vZGB/Xk7K7xiJg9eKX+/ChzzMoKox8YmlOGhkfz1Url6O2RyVryi5
Kg65r+Mp7O5UYL4VeZ0frovDY4fUBevcSqyoLOYfr6M4XOvOkn4xXo21H2Lg
U3UWB13OnJdqyzXY15L7RyxdxeHWctt00sZLbE+x3fXsO+IgFLDw9vRkHSYh
N3L/zT1xGC46ozPeXY8pvziXMHN/t79Pl39+ftGA2RVg7w4HicNZipntm3pN
mL9M1di5R+JgPeH09jwLjiXk7fvrGSoO/OUfHQ68xrHXOdyHm6J2nzc1cyyb
tRkbkQw99e2pOAxJijnPXm7GVrJ2rKkTdvMlIsG1/GaMmeThQ04Sh4ydr45f
5psxycyZuFOp4vDCniYpX74FUxO3Kr2ZLg7+2mbTt11bsHPpHzsis8Th+5cD
z42LWrCAtOatjwXiQH283D2SpxVLElbcu1EkDqSNdam9uq1YecqLg0Jl4rAk
1XZ9w7UV6xAUP4kqd+dzo+6mQVIr9i0p/qp1jTiYPs1wkSVasXV+Zu+HdeLQ
WUuVkPqtFWN79iA2v1Ec7mZ+XWv414qR+daKOwlx6P/lkJTI34ZhCTff/G4V
hzvXGNx1j7Rhpjw/vnG8FoeeCLarQzptmFPchU2Ft+IweuKr3NULbVgQdzeX
WZc4TO3re7h0ow1Leap5wLtXHBiqAikyXduwKs5a3bS+XV5LH7n97rVhndEH
rFo+ioPoYy2hVP827Ad71t3xIXHQ6d9nyBrUhm1G8j2lHxYHHjHpjvFdzckW
USQ7Kg4qz0O85APbsH0R1K/P/NjltfTmMKNfGwYsd0ddJnb5H+ZLuufVhpmF
/V5/Oi0O7JRUiom32rBbTNc5X86KQ+tX1svu19uw4NDP+7/83t3fjQB14d38
aYwGOn8Xd/fnu9SX3BNtWHVIu6XYijhwX+ZnFFdsw/JPd/I9Wt/NP3x36ptY
G5bE3Nc3tyUOg7VlFy4ztmHhPUNh53d2eY2c5H4x34r5R43qNlBJQC2fWuxI
fyvmbjxJIUEnAVqj6YzMNa2YDfdcfQijBBDqTlYn4lsx/cTNg6bsEmA4ELt9
zKgVQ+aUPxu5JKDr+dFyNrlWTF6IIYvEKwFT2ABJm7YV403fy7soLAH1Fifn
6CpbsB95h3ee7JcAjyDztcm/zdhHe6W6PwclgJf6c/iT7masYz/mflFeAoIq
pS15Upqx4lK9KbKyBLwNsIsTUWzGvF7a9LboSsA29XDYWQLHWN+kPF+7KgG/
+7910Mg2YJSPsy5a3pAA1q6ghfbKemz5dCHXKzsJ0LzVE8SgXo997nn5KOaW
BHBXhoi7na3Dsgf7bh24LwHNapGcvLdeYiqTDHAtUQKsjA2zdl5WYgfy2Tbf
JkuAoJFHLo9WJSbmwFN1+LkELGfZbfb0VGC0v0ky/3IkwNf1yfqF6XLs/QrG
/qxSAm7kZNKKSJVhNrQe33p6JMByrPK/nZQCTED07aetD7v3EZXFe0bzsZ7j
wr0yHyXA5f4HZjVSPqZ481VTwFcJaN/mOK1ckYvR9e9NVpyWgPLQTMvw2Sys
/pd9zLVZCdDtywpuRlmYMx3+OOq3BFhcDjG4GJ+JDSrbeM0sS8CSn43ah9MZ
WE56jUkaJQkuzd0Kf5GZipnV7znTSUMCa8N9JfZuKRjzgKX2Oj0JglMcHh4+
kYzdpqc/asxKggqVB+aTO4mYtvMFdjpBEtz2kg6UKYnFxlXX3zkpkOC/6e7r
pZuPsUQT/dYkJRL4Wfz3zkc1BNO/lV73RoUEe45fE5YODsaqMk/mi2uQoH2p
V/fr8UAsiPHZw49nSHBEsHQft+Q97DhpzofKiATG8dc0heEO9ktN4/ah8yTw
mlnXHnC+jZ13+Wn92JwEAid20s/SO2OSn5RB3ZYEicRfJRO+89jQQriSgwMJ
VFHV26vxOljYnh8HE5xI4MtZKJxzRAhbVg8VXnQngS7HdTcpKgM8/8IIt8gd
EpTmR75+jV/ALVzlmfXukSASp+3Jq7+Ct2d/2cz23+Ux2H9b2ssW98IP/vkQ
SIKTpq2eE3sdcbmhgJ//gkkgb9RWfivWGY9l2j9kFk6CvbE0Ix+T3PBrbt7V
zEkkYG3o184J9cIV5Ueq96WSgGrtqsv54bv4nj9Qo5tOgtRY3XRCzBsvc6V7
6Z9LgvFz5KH8gPt44BH7l6kFJDgdsJYen+6Lmy52vqwv2uXvcnFEtMIP33aJ
rl2uIIHa82MhbkP+eO/h5VqOGhJMa6WnnDR4gGcumNYdrCOBxnhRgkXzA/yU
i1C9HUGCmWLGoyXRAbjQYb/6h60kcHbULyT9CcAX5r/XZ74iwb7ug6W6ZwLx
+Ft5DcOdJHhDzB2hWQ7E7Q/tadzoIcEdO76PH1EQrjZ/s5GnjwSZo66n24KD
cPbS3sajH0lgUOw2MNURhI85yzcZDpFg9qVDlCXdQ7zmYFyT01cS6DAMumui
h3jo77Wm0JFd/p/enSpxf4hfLjHH876TgC/Qv6wx6yF+2LkJbx8nQavIPE9I
70Oc+qAY8X2KBFsHHtXLrj3EB+cCiH8zJJDBKHNwgWC8oHiCEPxNgu4F7cLL
KsG4j9PJ5uOLu/shbmsjbhqMGxx40WyyTAKHVlyV5ByMS8yxtLitkUCYnd3I
JyAYXy1yaYncJAFnfXekztNg/O3N/paiv7vzzbiVmZAejKfIKba+pZAEk1cj
f0ILg3GXX4mtk9SSIE6zmq9UHoxrFW21UtNLwjNd3oLqqmCc56Zlm9geSYip
HogRqg7Gf+5vaVNnkYS1p8VEYEUw3jhLajdnl4QQmxENquJgPPJFcPsdLkmo
WtIaK8kOxq0df7bH8khC/ytDyfRnwfix/fqvyvkloaWTW/XXk2CcYbbkVY+Q
JISXmXIWeAfjw4Ucr2dFJaH+MX7yl10wXupw+zUDSRKoAjgOd54LxgNkP72W
IksCMPt2masF46Yzym8090mCg+l6f6lEML5tv/PG55AkvLazcN2afoj37rPu
eCYvCekK5Cn+tw/xzJ/tHTXHdvuj+hF8Ju8hfso+9O2CqiRU8uBRYPkQF9o3
95YF7fqeo6ZSSg/xhWmDd7KaklCzFvLPnvUhHm+3t/P6SUlgdLwjZ14bhNvL
eHU+0JME6XXWIJknu/s0/aUz7awkBG90XkmxCMJ/2KZ3DZ2XhK/i517XbAXi
h2z39+hflYR9gaV+7nKB+Ii96K3i65JQxO5KHbIYgIfd5GJntZMEnPLGvsTq
APyn65ZRr7MkcIh31fxRCcCzfDo/GvlIAhemEHhT7QHOG+P4n2mCJHy+dNd+
0sAXfx17xfdlkiScNHMyCOi4j99OOCfKlyYJbQf8nyzAffxDiurVz9m7vi+d
/vMjPviTPKaJSxWSQCNy83AK9z18p/HFL6tuSWiY6nrou+iBlxDPw1veS4Jt
qY2Mr4sHbtH69KDEgCRsmpb4OS3cxuveeLuMfZEEjQqrUP0ld9y9T2/5xrQk
7LnxMFiHzg2fmprdcqCWAuWDLy/e6ruJx8+MpnTSSYHngGpt45ojrj3Xry63
RwqoqvPrt0Qd8Yw/DX5z7FJAqTRKdr9rj1/6+4TaRUQKvvmKtAka2eC9nHJM
HspSoLgzN5OZYIVjTk4/k9Wk4FFD8KN/S1fwkjclb1qRFIQV4YGncEs8wudI
ELuuFLDRtXlFXrPA9ScV/74wloK/5r2/AxYu4I3g9bXPRApsojK4vb+b4nLJ
dXUbZlIQ65bdOfHJBGcyVPM8cUUK/vPsEF8bOIe/q9OY/+EoBer/hkdk2Axx
Fe7AbsZbUsD70NWywuQsXujc/uKwmxRQ3yk1c07Qxx+TTtj5ekmBQNQSb6by
KfxkuP53/odScDfn2hu3VU28diqcgBApSHPk0zzoq4FLa/am2j6Rgq2kMfZg
NsDp1ozMq6Ol4EF0UT+WqoK/srrQb5gmBT7XD6eOeB7GFRoSy+9kSEFfzdor
EQU5PHvvl8i0bClY8xrYZ58qjQe9s9D/VSgFdNJPnpQVC+PLkmmyXCVSMDZd
e5Vbfy9+zW+UQaVcCiK+9av8M9uDaypYv3r0UgpO7HX3KAz8oV4RkZVVUi8F
bZieWcQVakzi5/iDj01SQDbVPLL2nh2jTLPFSO1SIFj4D/2wEMGa6Z1e4u+l
wPDe9Tm9S/uxw9YlcRP9UvDpA3+YlthBLL1x3p35kxRMPx35znbjMObn6nbY
/D8p8CsQ1YYpeex3ZyXrg29SkGz/8TPFXgXMkrzyK29MChY/Xjp9WPEYhn29
U7DyUwrK1ybR4DklrORY3SOhOand98nP5q3hcUw4avOG1oIUzFxkTZXUVMa2
te9LRK9KQevlSTIjtSp28zlOUbshBb+42sOZ+1Wx4Y2dkZFtKTjb3yV6M1EN
aygJSJajJkNtFEfIIRoMo9M3EUigI0P13dsPYmsxzOin9DPKPWQwySjKi7+K
sJTgTd6bLGSg1TLf9ttB2BSpO36QnQwT4byT+qcAk295vleDmwxufOfPx4cD
dt/SLfYFLxl6KtmONHcB1rGlzcUjSIZOP37K33QaGNcz3hh/ETKoBMOYppoG
Zqk4wz4rTgYFhy/h329qYAX9jZEmUmSQ3uem/ytRA1t2iWRtliGD3PfUv0HN
GhhitQ6XlSPDdtUme/eYBhb6QoE57hAZdj6deThBpYl9PEn/ZEeeDEfa3k7+
FtbExCY/MzooksG/3vMM4zFNzDGwKGRAmQyXE5ounT+pidWI+dEjdTIE0HGr
z1/QxChxo+ACIEOH4tvs9WuamP4lSVpubTJEkf90RdzUxBLWVwN9T5CBOuG2
R6+rJvYj7i3Vz9NkuN19aOyTuyZ24GjKg3NnyfBOTXO03U0T83rvTIEbkeHN
cceaCmdNrM1Jw0/GhAzyQ4+ON9lqYqxM3P9izMhgJitbu3NZE7uYP+nz9xIZ
ZH+f2hNnpIll69Rt2V4hw6k5luAETU1s/seTe33Wu+eVi2nEj2hiKv6WG2o2
ZGCxs/1+erffh8JHvPLsyXBM+OnGAXpN7H099RqHExlSqVuLfvzWwATNBj18
XMjA67Ux7D+ggdms5C9Puu/ylNv5LVqrgZXHeLsb3dnluVr7bvCZBnaiW8yV
7EuGcQXgmLiggcU4LM1HPSBD/f3BUVsFDew/+tfOW0FkcF75BRfZNDB3Tceb
75+QQYQqH31uBgwfVZ9Vidzl65fmGpkAGON9doecGDKYmjlaUTsB9vxlte29
Z7v7lH/Z15kbsE45imuSeWS4lr5Acb8Ew3je9X2PKCRD6eztUzl6GHbVNsdq
o5gMFItaby5OqWNrGacte6rI8Dmnim9UQB0j8cZd9Golw9eF4ypuHqqYN6Ws
Ydd/ZEhKUdboYz2OTWozDZG/k0F7QbmFL0sJMwz5deXBOBlOVx8zclJSwiTZ
Sm8pzpLhU+OJyUArRaxLSCEyfZ0MESX2nYI1CpjIcaznNpc00Ht+v9N07wgW
4i1q2ssjDcfmKmKf8hzB/uAUI/sEpOHZgTgDrcrD2BudtrkRMWkYIwSjM0YO
YS7nTrKcOigNdzcmNaYm5LBWZ2N94VPSUJmbYMZ6SRqTqzg6cEdfGuIV9Hup
qshY/Aq3RZ+BNBxYKlEyYyNjjj6fHB+ZSoO7j46xcrckxh1q8WTxmjQ0lds8
U7eRwHy71bn0baUhySG4O7dPHJtmF03OddjVHfiXxxriWFPC98JLrtLwpehR
TDNZDLPJsXn3ylcaFjOLuYeFhbD30yeMxQKkgcbn3oczIoKYity+L/ceSoM1
y9zxQpIAxlY5+/NQmDR0JHy9xa7Oh9U2uzAmPdvNf7fWYK6AG5OgMY5eTpEG
fcZWUe4PXFjYiaP8BunSYO/189fCNid2tWdFhiZPGk6WxQrlW3Nge4bvnXSu
kgbhCJzu11tmTPFOAUvkS2kY+NyRdvMuE3aVc6ivtH6Xp8+fzcjDe7Dak8cu
LzZLQyb5ygeXanrMpnre9Xa3NDjOaD+14qXGYgxFlOLeS8PLwMjzzZRUWNOs
/nZ1vzTU/qN7ILREgXFLFAavfZaG5dxLTd8H/qq3RFxPvjcpDerOvxv5jFfV
f+17apX8Uxpy/QTM86OX1fletUg1/pKG6Zxm45b//qg7b4mU/f0jDUtRr15l
HZtXT4o/4yGyusuLOiRngOeX+qsjPipoQxqUq2qJZLaf6kJ2n9v9d6SBSrc3
10l3TP0kNUNoBpUMbBn+bKgN/KbunqZo0EorAyY1h9yPlXxVfzfw9DM1swxM
M3t5n7z/Qd1L4+zvYD4ZuOQ/yLRuF9GUPexTmScoA9XxNpcTyqqaeu+88OoQ
kYEKcb3Dkfdbm8glDNR7pGTg7U/fXxrL75uMTil1yMrIQJIHeTM8caDJZ/xG
uN5+GWhi5/UP4h9q6hdo4w0/IgOffK3S9KpGmv5VLw4XK8iAm2C+QtvUtyZZ
I7HMHiUZuPyMZ0P0xo8m/0f35dgxGfDKste9d3iiqUiiaPGwhgwY8yqflPab
bPrU9KXGSFsGUt5Nhf/Bp5oOLitpPD0tAxlTt6RUuGaazCNt6KrOyIDkhzL/
KzKzTQ9l4zoHDGXgR9BpmZVDv5qGrf6Y8FyQgZNDlR/qeH83MWyLCSqZywBS
aHsTuv676WiCwbcLl2WA6krpDFv3fFNod5HDs2u7/v8qNu94qr8/jtNEhFSy
Z9z7udPIvB/eUXYqkozKSrK+RaShFJEZsjfJChVC3GPv0aJIVEIKCVeDht/9
/fl8nMc55/l+nfM453z++LiI7NYoXkDVbm9pda4E0FRdWFriXETj63m+j5wh
gNep4yqyVouIN1uj7rcnAVyvRerN5i0iDa3T18TPEiBxkv7HZ3YROb9K3If7
EiCwI7hujLqEYs62cZ/wJ4BUp4nVQa8lVLeF9fTqRQLcdueWmS1YQlMFMgnZ
VwggHW44P/B2Cc2FjK+sDyLAvj2pPbwCLLTklHvSLZgA7V7Bett0WWgFHNv7
QgkQu3m0eOsZFuKQkiEpRRDgyCykk2JYaNPfD7GJ0QQQXG35GVfOQnxvc36s
xBKgdaHq05keFtr+xMH+RAIBDL5mvBoZZyHRZOmWlmQCsDwNA7Z8ZyEZvw+K
iukEoDqudslsWEYEy5zoyCwC1Kl1cunzLyOqkgPrWy4BnJJXG+/sXEZ7+KVt
jtwjQFlZUYO66DJifH3fUFtEgJP9RyQs2KzXmy0vUUqAgWOV+EbhZWRcfDLi
+gMCjLeE9PoILKNDYVILUxUE2JF3C9VvWkbWp95bmVQTAKsNO8qxykIn9LPr
y58QoIV9yTjMsJCLzEkZIcT23565ZXWIhTzWJMMuNBGA+/uKylwLC/mMvZt7
20oA055gySP3WSigPssCOgnQJpqfYR7HQqEXJCW5nxLgbfYtHY+jLBRt9S7Y
6wUBeGx3Pmjdw0IJKllfXgyy876065CYEAvlfpN4nPaWAFz3GhMoXUuoqH9M
dO0dAaoe3bERyVlC5fczg5w/EkBBdTbB1X8JMU9LmJG/EECjme9NkOQSat0/
9ih2jp2XzcltlxYWUY9cpvD3bwTQ0gRFSvMiGnovPoF+EOCZnWzrtpOLaMla
/NLBDUTQf+2w9CtmARGMxIp8pIhwkp8Ym5/xFSUQRDY8sSJCov3Yka1Wn5D9
CYXCiWNEsH5bvTgyM4XkE1RMttoT4c15/yt7r0+hqrUDsc5ORJDba6ez8eEk
Gnx9Q3zrf0S43j8+5bFzAgndnFN1vkUEX7d3Jb58H9BI3cpQdCQRJBUCjcIc
36O8hU2Xa2PY89vy9kPJO6RsL9PMl0gEIf9bx6X1xpCFytEDtblEcBrckmUe
NYLixxtP8dUTYTLLvik45hWyFe7n0mggAi+BZ4f5yiCSPTBy36mZCCxesdc+
roOoonZ5saaTCD8L+r/3Gg6gl7eJV50GiZASxal/X+EFSmtXk4keIsKc3pyF
Vv5z5PRbv61mhAjFz3c9EJN/jpZcT/DwjRPhEt/3d0lWT5Ggzp2kmq9EuJx/
20W4sAcN++ZoflwgQvnDy8k1Hd0op7hslHeZ7ZfHY9Q104XoO7pknVaJUNbj
93kXdKJDc3/KeTdjkCpxV+i8ZBvaJctjoc6DQUL5q8Vkh1b0wVr4uyMfBqoJ
mkffF7Sgs61K2jVCGPy30fVdqW4zik1z7XSUxmCTy2UDLj2ELvjf8L0ih0Gx
lQRTlZeJTlhkSSUrYIDNxVffHatDZJ7XF/rIGAjffbFjLrEWdV/cT1DXxOAJ
4aLxbZsq9NDKcfAwA4NAg5kwLbtKlKIUGOSpi4HzdVmPM84VyPVL1XDufgyW
G4ytFkIfonU28uG8FhjUSMkMfqKVoC+qsEfRCoNSxg170aQi9FzAfnzvMQzG
RsWc+zYXouyuO5oXTmAQlrL77TRvPgrNfzAV54hB0wuHmG/Zecg7qDeu1AWD
3TKzByvwXMTQWD8z7o6B/13FBHOlTCS3XSrpjxcGlB/ydkslaYhnQUtP+BwG
X856r0VopKDhQp80swsY7Dnx6LdkzB3kJ/zRpCYYA4vRPTpSSqHInvX3x4tQ
DHa0fj1PPHgD7XsmcncuHAPNMxs3ZEoGom1hh3/LxGIwqz8Y79PnhVacvAoZ
dzBIUVfeGmPlgD7ohFtaJ2EQW7jZXPyDFir/0XQ/KgODKh/LmB7iKTzx5ah1
YTYGzanY0oPjZ/Er5b/Wt+RhcEvARlvqqx9u6kq3/1mEgehkgWeEchCurGfG
ta0Ug0f2a1JCRTdwUUm3KvIDDJKWvylcXH8T//wqm9fpMQbqObXNFt7h+LNH
9bVXatn7YUeJ1J+rkXh19JBLcj0GtdHi9vMXovGQ/fyorxkDoww5q+vxsbiH
DOnMdBsG5U/Wiez2isMt/hrsWNeFwWSiVeM2PB6XeXzVS/0pBi/sa2qm0B2c
Ky5NxOIFBvHvTLys/kvAFzyr2z0HMTgmJtPLfqviQ0Yvz4UNYcBj/d7xzuNE
vEF+XiJvhO0r7FM1ZZKE3+Pg6WGOYZDDx6dhN5SER43u9h/6gIEM6cgRFbtk
3Dbh+FPeabYvsbJyvUkKLl7JI+Yxg8Hc06RRnYYU/P2LmtPdXzHIvJF8+iIx
Fc9bcKlSXGTnF3j88t/IVNyFfxtn6DIGbU0Pngp9SsUVqI0HJn+y95c4vWS9
Rhr+xcwzTe83Bj0uhjPbbqThpR4i0zn/MEB5upyhbWm4d0SHyhonCS4IR6xk
r6Xh9GLfoOMbSZD1jBqQp5KOszql++u5SJD41Lmx3yEdr/7ULyLKS4INJcaP
HMLS8YCNl10D+Enw50nvy5TCdFxLnlD5ehsJNvXnmlc0p+N/9V6tqe4kAUf2
uV/Tr9LxJscbZndESHBTfush38l0/EYQLXVRnASZ316GRH1Nxzc3hCuXy5FA
QrGnXW8hHY/6PdHrjpGgfHetT8X7dNxcNG5XN4UE15Mbq8ufp+OCmjqnFJVI
QHviK/sfSscHrWcf3VQlQcbZdmG5gnQ8yT/l34Q6CepH1Dt+RaTjxxL3m+pp
s+tJWaBKeKbjYlVLyTk6JBjmf0VgGqfj715mT/7bSwJv+0oXDvl0PGfRTOn4
fhKoNPqdE/qdhjsJrAbWG5FgYO/JJolnabg8rbBHxIwElPhDxQY5aXixJ6fL
awsSUIPL9aO00nDPyPKHqkdJ7Puy1mxpfRpOLbH7G29DAlZrVSF3bypeMf04
6aADOw87z/oBi1Sc6eTe3eVFAt2BCFMLsxT8+bEBav0tEhA0e3mG1hLxX/vu
rWQ3kGBKtHame0McfqU+O7itmQSeaxLb2+ticQ7lNL4vbSTgvn/6M++5WHyz
1G0Z5V4SxDYUfjREt/GdKwHGbUPsvN9om4YHRuMqZWapnxdIkBy1Kobo4Xi1
nKEc3zIJyho9gstLb+FaaXvLlH6SoLT3jsZP4i1cL0yt+dJfEvh7KywVE8Lw
Q47SX3h5yEAYLdPUUr+Je+9Y1lCSI8PpvvCZpxnX8aXI+RYrBTKwUqr6Q+jX
cb91X8wuEcnQlths+qw9CL/ybcyhlUYGX6H7niYz1/DI7s5bVgwyvBzcOFrd
f+X/f/ptu6RLBkSqGg7cegWPr2ZmZOmRIeVRMbeXxWU87e6jh9NGZGiN/VlW
N3ERLwpMH75oRYai580P6kkXcPJyolPWMTJsXSMKnb3pjz90j51rsSOzv6f2
HaZ/9MNrrG9y8DqRwUpD8Udj/nm8Q+k/QpY3GdSHF7CrB3xwk6IzFS3nyDAc
m/vie8M5vF/ShTF9ngzj4wGcJirn8MEtNofol8kwYv5Oy1P+LD4xpRfQEkaG
syHrV1IOeuJ62U/zsEgyXHqSuVpn4oHnHLPtj48hwy5cV4/bzB0/0XtO1jmR
DDtqq+OGHdzwkYc5fevvkkG6ve/mj+cuuKY7+adHARnaQ++pKf12xlPkamUG
i8lwuVCqYB5zxo8mPfPPf0iGjiAjRlqaI/7y8j/p/Q1kKDMltqWcPY4r7Ykw
LWsmg6JZzajHLns8dn6H/452MsTIlbpPdtvi5o6U3qleMoRcu0TZaXwMLxN9
8v3AMzKoes8NXthpjfMO7pOufkkGt6HEyWdzVniPgb1f6BsyrDcU2lpdaYkT
OT5nz4+Sob6iXGr+rgV+64lvz9EP7PXV0Es4m3EYNyBHSilOk2Fq8RWntelB
vEWwrrtzmQyfvXiFXhOMcJne/cu0X2RYqklZ7A0xwINCXkim/CZD1N7WE63z
+3Cdn5993dZRwJM7Lvjy7F488+H5rOcbKbA5fSw/JxDwP2c4ujW4KaC/sfuU
tKYOXjcqLMktQIE3a+XKemsauEjSXaNzQhQwXBf71y5UDQ84SPN9s5MCPUVx
U7Xyqrhai0FXsQQFCsuCJP4Z0/CKQj8fExIFvmys7PgTJ4kLOnJmVlApIOCj
JZphI4yfFY3uFFWmwEGsUZLiJYBTo/PFZzUowHpwNy/w+iwj2oBuaMmgQHA5
w1xedoo5t1Z/rl6XAnt3Tdjs/sKBSnwGOiINKCB8qPk35ZAQ4iafXGQZs8fn
ETOXOrkLuU3NiNkfoMByRtaQspIEUji27hz5CAW0xMPPDG2TQzcFY9ITrCkQ
enpmI9q9G032iHT8saWA41RgVJKEIsrDlcT6HSkgsnKxwq4RQy3mPMG/Xdh5
MQWNjQ6S0ceTEzNENwqsyz4sfKiHguRuJNaFelPAyP/Kya16dLTvjrfs43MU
mDC9uLj5Ix255BtGTJynQKyR738oQAnld6zYwGUK+LlneV2KVEZtQy+bva+y
/bSm/fm4VNDk5/vEzOsUeP96NsT3igrasBoS1xvCrm9J+tX8ZxUkv+XEykoY
BZYecOg1HVBF+8TVHQmRFBDkKjZQvK+KXCgC3UdjKKBpcnudE+ceFKLzhX4z
jgJi7oZ42aE96N7BlpTKBApw5Rx335e6B306d95NIJ0CnwAfw4XVkEKCgoZX
LgXSNff+5Q9UQ67Vw5t7Cilwqi+c7NanhgqGI4YUyikwGMy17cMmdaQo8c3/
Qx0FFCxtpNX01VGRo+XOtE62j3j3qhuujggFNY8tBymw3/CYbPWaGiqeEbPi
G6dAzudgTcs7amiG96m8+zQFdrb9zmOYqyGMFrTc8ZUCivycrtc41JD7YeU2
uWUKnHY1qVor2YNKfCfvBK2y15+/7UKC+R40k5jkPMZBBfXUPa83z6kiUq2R
itZmKnyc6qsQDlFFpX9KX7KEqHDfxkaqp0AFld30EzxNocIoQfGkcacSIi/v
Y91VoYKr3Q55zQNKqMRp+6sPmlQ4PSSkxXhJR0W6lSm2BlSwbXyFTTymofyV
BSnzk1So+Pv4QOZ7Epp8OBzr6UQF6ctNn9pcSUjOrYkz8hQV1qVz/4iYx1De
69sTnR5UuPF0zE6eA0PZldTCvQFUKNtzcqCTTEBpXp7UPXFUsImIUh6vlEcj
8keyLROowC3cZZltLI9ERrUFfJKpsPt30FTIBzmUYrJlqTyTCkdU8qKHBeVQ
omLJY0IJFbbLD8/zBsugwXdxCoZlVMhK73A4LyuDtiddTD71kN1/ZChKslUa
xW8wvphXTQUD0coiPS5pFDs+zRBvpcLhqAee7/UlEP+hGkmbbirgDoJ6PF/F
UExDKEfSMypIhQwoReeIoqj03W38o1RQCk9wDlLYhcKsnE3Xf6dC5ULEW4VS
IZR3cNT+1C8q/FN2bfwmLoSYxlbenb+pEOC5cio+dhtawg3jItfRwONT/KRp
kCCyVyANCQnQQGpJ9Ws+Jz+KF5VYHdpJA2tdrRxrWT7UuZVfIkOCBsbl3JQ3
1luQ8s8lJ3kSDcL/zubsXduM3GYnb35WosH3L3d3i5/dhDLfvy4q1aBB1Uy9
dDlrA+LqqptXNaCBACPKuZO+DukwSwVXzGgQ1GoSocI+T3wfZqkiSxqcKtHv
1ndZY75LuXFpvyMN3HQLGtM/rTK3R5/P5HajwY6CVuuJwV9M4+uuTf3eNLhN
93Ppfv+DWXXGZNPRKzSYP6z0VNGQxZw5ziCKBtNAR/C52c3cRaaUBdXsXTgN
6AO2p822LzAjtLbFuybT4LGa3jXs6gyzibrhMZZFA9FW3VyDmWnmd9kfQ/P5
NJD+nH/I7doUExP+vFpxn92eujpdqz3BdNgyInGhggYGB4u4vCXGmYlrvaD9
hAZxxgnozv53zB4Wcl5rpMFbW637agkjzD2jucVh/TQo7d/ep7YwwJy7RjUc
HqDBnw/qj80JL5j5cvWThBEaJHK0oQKZfqZ9p+GNix9okJp00nPYvIu53WNQ
qucTDZR5P5QUDbQy+7Y6ItGvNKjO6Q87Y93IDKn4auvBosET299Xr9+rYa5e
WW+6iYMOAimqgVk/7jI/33P1SeOkQ5+H5s4zGenM10+7U6nr6WCQ+p0WnHGb
WSEd+/noJjqEHCdp3z18kZFjzOKf3UwH+ezxXd8exDJifI6qX+Omg5YTRfh5
UhrDvU08tJCXDg1eItdZ4QWMY1+vlWlvpYNliZiwyXAJw2DnxOAzfjpspev7
ty+VM2TdiuV+baODeb3VOVnjSsabLWrNRiJ0qC7dvxF7+YRRm+amHqlMh9CK
AZyp2sZIIaaX9ZvSofN15aMm+3bGMsvgXvABOiTZROY2m7UzDjYsZWgepMPj
1etXLDTbGZssTaLuWdDh7Qmt86+52hl+V1bcA23Y9Wf9V7xys41h8cyaQDlN
h+Fn7dELu1oZvH7b70bdoAOWWy/+93kDw023KU0vhA6ms3brBiwbGK3cnvG/
brLnz33OmfgaMS5ltV53CacDp+u8tf4ok/Gl08eBEcvO5yox6cVMHaND9IXE
XCYdfMtFM/x31zCuNUWnmD6hQ36uc6v6mYeMmbGmhJU69ng7WMpePA8ZR3+z
YguZbP/xTxf+2TxgkNVsw9c30YEWc+L4tbkyxvB9hUv1HXSYFhs1TFe+z1BO
brQjDdJBgl/TS0i/gPHJa1Fyyzc6bDi6NeBxXQbjgJjVvR55JYjhsdvP4gth
7PXutBMMVwKUtaVDrXW4PlvcSb7vuxL4SMieflKsy5RvLUwyt1MGDtXb8/5l
ssxYSgv2skEZytR0xSq//ax3ZW140Y2pgL/lT73DfWH1To+WpMNvq8CgKt1Z
vKZEu6uHK5j5RwUuXZrsOuQQo+2pPx7bzWbxv6KOPrYx2gLMJ1mv2bxUQnyb
cCRG+1iZe90Cm0so0edHjWK0p2/3Lcr/VYGugHQtf6UY7U1WsQ7RbH62oLVx
cF2Mtv57YZ0T/1SgpqNZUqMgWvuT9YKpB5s9s0Ne+OVEa0c877IJYPMd0gaX
qrRo7ZfNF/3i2Tz6dFlR9Xa0tlP+29IONg/8qyPqBERrB53JFqOtsftLtm68
YhKtLf/xApHB5i1yOqWd+6K1u2wPqRuz+d4lR6XtutHaAmacls5sDv7PbuiB
SrR2NtU5IpnNvW0qsYvi0dp6hdop+Wze386F7RNm+0ltL3jE5swDq7nJgtHa
VMH25l42dzbMkfZuYvuFZz4bZvNQSA+ezBGt7b/Of2yKzRPhVynzq1HaopfN
Z5fYnKj0c3X/9yjtBpbCyhqbE0ZkC7K+RWn/DxfTsY0=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0 \[Omega]1=2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.4092276861903152`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{0., 0.20220316084402945`}, {0.3333333333333333, 
     0.17531896736580976`}, {0.6666666666666666, 0.12128137150288607`}, {1., 
     0.07485425415810695}, {1.3333333333333333`, 0.04489956504990464}, {
     1.6666666666666667`, 0.02746665817842453}, {2., 0.017491767156462435`}, {
     2.3333333333333335`, 0.011605163556612855`}, {2.6666666666666665`, 
     0.007930931393785846}, {3., 0.005496199423481589}, {3.3333333333333335`, 
     0.003807072343988041}, {3.6666666666666665`, 0.0026068421618207546`}, {
     4., 0.0017512645315911537`}, {4.333333333333333, 
     0.0011486818807141309`}, {4.666666666666667, 0.0007334034497509757}, {5.,
      0.00045491559674332366`}, {5.333333333333333, 
     0.00027377918452813174`}, {5.666666666666667, 0.00015976361831366388`}, {
     6., 0.00009042355119781681}, {6.333333333333333, 
     0.000049689907927123056`}, {6.666666666666667, 
     0.000026528953406634363`}, {7., 0.00001373628222828142}, {
     7.333333333333333, 6.863872336322711*^-6}, {7.666666666666667, 
     3.295349874295075*^-6}, {8., 1.5285537107337474`*^-6}, {
     8.333333333333334, 7.02406630302531*^-7}, {8.666666666666666, 
     3.308926796775892*^-7}, {9., 1.5933123550698958`*^-7}, {
     9.333333333333334, 7.239883609883998*^-8}, {9.666666666666666, 
     2.632332556107169*^-8}, {10., 4.6156542248317754`*^-9}, {
     10.333333333333334`, -2.4775400530034834`*^-9}, {
     10.666666666666666`, -2.7478604118774907`*^-9}, {
     11., -1.2870597069592188`*^-9}, {
     11.333333333333334`, -2.3992900550915534`*^-10}, {11.666666666666666`, 
     1.136091002867978*^-10}, {12., 1.1155204981981114`*^-10}, {
     12.333333333333334`, 3.9996699613006625`*^-11}, {12.666666666666666`, 
     5.428367237316097*^-13}, {13., -7.256992610631483*^-12}, {
     13.333333333333334`, -4.024628085047231*^-12}, {
     13.666666666666666`, -8.594706150923611*^-13}, {14., 
     2.4083269274786557`*^-13}, {14.333333333333334`, 
     2.710735389441892*^-13}, {14.666666666666666`, 
     1.0270645467585986`*^-13}, {15., 1.0884332906403884`*^-14}, {
     15.333333333333334`, -9.883133095373249*^-15}, {
     15.666666666666666`, -6.622739275160795*^-15}, {
     16., -1.9671552675125932`*^-15}, {
     16.333333333333332`, -9.371771683949851*^-17}, {16.666666666666668`, 
     2.092013425463716*^-16}, {17., 1.1514646882376355`*^-16}, {
     17.333333333333332`, 3.118215651176367*^-17}, {17.666666666666668`, 
     1.750178984444852*^-18}, {18., -2.6637492807108606`*^-18}, {
     18.333333333333332`, -1.468098699159433*^-18}, {
     18.666666666666668`, -4.197644483604886*^-19}, {
     19., -4.966438140012361*^-20}, {19.333333333333332`, 
     1.783170861702529*^-20}, {19.666666666666668`, 
     1.3032506489165953`*^-20}, {20., 4.403672434500521*^-21}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"2nd Inverse Fourier:\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227688329315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum pre-initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.19295813895786632`", ",", "0.19210801449366977`", ",", 
     "0.19126391921764796`", ",", "0.1887528968315358`", ",", 
     "0.18462756492425117`", ",", "0.17658326568632374`", ",", 
     "0.15403161061604673`", ",", "0.1370076244405437`", ",", 
     "0.12154730551277113`", ",", "0.09507431847213421`", ",", 
     "0.0739755898662149`"}], "}"}]}],
  SequenceForm[
  " sum pre-initiale=", {0.19295813895786632`, 0.19210801449366977`, 
   0.19126391921764796`, 0.1887528968315358, 0.18462756492425117`, 
   0.17658326568632374`, 0.15403161061604673`, 0.1370076244405437, 
   0.12154730551277113`, 0.09507431847213421, 0.0739755898662149}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227712357315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.2077196227197171`", ",", "0.20670700118851462`", ",", 
     "0.2057013923079048`", ",", "0.20271174898216132`", ",", 
     "0.19780854634959372`", ",", "0.18828337562611772`", ",", 
     "0.16188676124465703`", ",", "0.14231660684591`", ",", 
     "0.12485084335291077`", ",", "0.09569786226504245`", ",", 
     "0.07320116093766586`"}], "}"}]}],
  SequenceForm[
  " sum initiale=", {0.2077196227197171, 0.20670700118851462`, 
   0.2057013923079048, 0.20271174898216132`, 0.19780854634959372`, 
   0.18828337562611772`, 0.16188676124465703`, 0.14231660684591, 
   0.12485084335291077`, 0.09569786226504245, 0.07320116093766586}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227737876315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"k={\"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "15.`", 
   "\[InvisibleSpace]", "\<\"}  increment initial=\"\>", "\[InvisibleSpace]", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.7521760395485012`*^-9"}], ",", 
     RowBox[{"-", "1.760654197098488`*^-9"}], ",", 
     RowBox[{"-", "1.7675908303574823`*^-9"}], ",", 
     RowBox[{"-", "1.7824063218138483`*^-9"}], ",", 
     RowBox[{"-", "1.7937326683081587`*^-9"}], ",", 
     RowBox[{"-", "1.7861659533247274`*^-9"}], ",", 
     RowBox[{"-", "1.654904605722083`*^-9"}], ",", 
     RowBox[{"-", "1.5001696457758865`*^-9"}], ",", 
     RowBox[{"-", "1.336423683719981`*^-9"}], ",", 
     RowBox[{"-", "1.0191399460856881`*^-9"}], ",", 
     RowBox[{"-", "7.335575016680844`*^-10"}]}], "}"}]}],
  SequenceForm[
  "k={", 10, ",", 15., 
   "}  increment initial=", {-1.7521760395485012`*^-9, \
-1.760654197098488*^-9, -1.7675908303574823`*^-9, -1.7824063218138483`*^-9, \
-1.7937326683081587`*^-9, -1.7861659533247274`*^-9, -1.654904605722083*^-9, \
-1.5001696457758865`*^-9, -1.336423683719981*^-9, -1.0191399460856881`*^-9, \
-7.335575016680844*^-10}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.4092277481883154`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"raison=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"increment<=\[Epsilon] :          -9\\n1.75218 10\"\>", ",", 
     "Null", ",", "Null", ",", "Null"}], "}"}]}],
  SequenceForm[
  "raison=", {
   "increment<=\[Epsilon] :          -9\n1.75218 10", Null, Null, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227748218315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Sum finale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.2077196227197171`", ",", "0.20670700118851462`", ",", 
     "0.2057013923079048`", ",", "0.20271174898216132`", ",", 
     "0.19780854634959372`", ",", "0.18828337562611772`", ",", 
     "0.16188676124465703`", ",", "0.14231660684591`", ",", 
     "0.12485084335291077`", ",", "0.09569786226504245`", ",", 
     "0.07320116093766586`"}], "}"}]}],
  SequenceForm[
  " Sum finale=", {0.2077196227197171, 0.20670700118851462`, 
   0.2057013923079048, 0.20271174898216132`, 0.19780854634959372`, 
   0.18828337562611772`, 0.16188676124465703`, 0.14231660684591, 
   0.12485084335291077`, 0.09569786226504245, 0.07320116093766586}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227748250315*^9}],

Cell[BoxData["\<\"Fin partie positive\"\>"], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227748284315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"\<\"BiSuperHestonFondamentalTransform[\[Rho]1,\[Lambda]v1,\[Theta]\
v1,\[Kappa]1,V1,\[Rho]2,\[Lambda]v2,\[Theta]v2,\[Kappa]2,V2,\[Rho]3,\[Lambda]\
v3,\[Theta]v3,\[Kappa]3,V3,Z1,Z2,\[Tau]]=\"\>", "\[InvisibleSpace]", 
    "0.9961471820559346`"}], "\[InvisibleSpace]", "+", 
   RowBox[{"0.024075013346740927`", " ", "\[ImaginaryI]"}]}],
  SequenceForm[
  "BiSuperHestonFondamentalTransform[\[Rho]1,\[Lambda]v1,\[Theta]v1,\[Kappa]1,\
V1,\[Rho]2,\[Lambda]v2,\[Theta]v2,\[Kappa]2,V2,\[Rho]3,\[Lambda]v3,\[Theta]v3,\
\[Kappa]3,V3,Z1,Z2,\[Tau]]=", 
   Complex[0.9961471820559346, 0.024075013346740927`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227748319315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"integrand(0.1,0.1)=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "5.51227968352364`", ",", "5.5487024865559365`", ",", 
     "5.588855946097475`", ",", "5.634955351612529`", ",", 
     "5.6681202630258545`", ",", "5.681221760857143`", ",", 
     "5.6886431439970275`", ",", "5.693685605110923`", ",", 
     "5.695576862955877`"}], "}"}]}],
  SequenceForm[
  "integrand(0.1,0.1)=", {5.51227968352364, 5.5487024865559365`, 
   5.588855946097475, 5.634955351612529, 5.6681202630258545`, 
   5.681221760857143, 5.6886431439970275`, 5.693685605110923, 
   5.695576862955877}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.4092277483533154`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
eHWrC/DU4tcDTnQty0iNZGiRScJTJ66RsgfpV5BZeUn+9og09UGDSVOT2AqK
TUo2l/5A06eq52zZnhXUuFojuttdmnpsqUw95coKYvaa5JZYlqK+9zMrsKxb
QSyK6N/NUUmq/q87XUeGV1BQQ4BBb4oktU8/bW3f1gr6ENId7nFaksrBNqEt
oLKKjCMIiXZFElTnaD9KS+QqSixz7b/oJk5lWHk1hL1fRfV87Wy3RMWpyZa1
dDmVq4gScIefq1KMWi/BbxC2vIpaX/ndW+YWoyq9fVdjdG4NicSzZ2GJItTp
r+0tldLrKGBTzfaFlyDV9bfiyJdPG4icW1fHC1zUXxd72SrqNtA/fjPFu8a7
qOY9T1WbRjcQpZy15ulZTuqBhnGf32KbSDx1dIHOhZ3KmPcGJxS0iZZiC64p
JTBTE+8RyHcubSFmi7Wb2mzbGMdqi33A3S30YW/DvIXSJubn9iA4Im4LMRlS
Y2pNae+n3VDH24YtRGeiku/4ehlTPpZ2vWf/Nhr2vDVj2TOFVfCLJmnj/qJj
sTnuPuaxaG9YLcVQ6S+6YdzoIHUeQ5ks3qOnj/xFx3/0+sS+a0ShG11qzvf+
Ipv44naSYD86OxRbnTzxF8n617g/aJ5EtecOT2cy/kMu1xOXiFXTSKdtifez
1D80b5SU4/5pDuG/m9k0WPxDb9ku8wnlLqKpLNzyFvUfehPLbRMquo6s5aii
bAP/EIHve5e1wwb6keaGBNb+Ic6kOyuN7zbRl8jmEGWVHVQd9czaQOovun87
lGCTtINWXzHfGRygg8U5naNOX3aQ3/Nt3QFHenBw+uPi9WMHNVRKh7rM0QNR
lThQzUAHTDcC/VWXGYCD8Jg0dIAOHN97E7+0M0GtbpSavyEd4Fgn6jx1mOHJ
ufT9kmZ0UNV5wkzkBTMwRBYfvXCdDtx0AjdxtixA/fD91OYdWr49JRcuf2UB
/5o2y6THdBBSESUTw88Km/+mHbvT6KDTuKk7sZQVisU23W5n0UFWsWGQCzsb
3NZi9RYsosU/OyRJOMMGizcIT81b6KC7K7ZLbYQNcoNVIxdp57LKoBJDiezg
+kYnMWqSDtaW/POaHNjhz8CZdz8Y6EHu2HEutj52yFq3y3XloYfwkScXmHEc
cE3AvZhLgh6sLv37Na/PAfLqftRsBXro5KyJaPLkgFHjkFrjffQwr7PwPP05
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
8/3uf5ujmP8DeKvLtg==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =-0.02 \[Omega]1=0\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUV3c8lt8btjOy937NV5JUUqTn3EJmgyiVEQ0zIRlpGmkY2aKEKKSMrErv
sXcI37JJ9l4h8+f31/O5Pve8rvuc85wjYXPD+CoNFRUVGwMV1f+/r+7ZMOy7
Ek8kfmKPlGsaxxWtJMNzJG9UTG22m/J9HG9VUfxIpCcog69d4X7tOGYLL8hm
bg9HhP91aqeycfyqJFicnvQChf/9cS6gaBwrzFwJ2bJ9jZ5sPZZueD+Oe9gS
Ntd/JaMPb6uSNF6OY+m3TCqra6koI+XkqZEn49jp6K3ry+LpSNDBcJ7iPo4/
tfWnLGpmojtjUlF15uN41dGwe842C72VPxK489g4TqTufrKsnYOy3hWbB0qP
Y63vYTJLv3JRmq/x9FG6cTwaq1O6aJ+HbGI6zQ78HsNBVzbMF9byUbwD94bD
1zHcumYXOSv+GWn811yVZTuGParFlGZyvqA0y5GNCtUxLBTRVj+lWYwuKKw9
V2AawzbyQDthi1GWwftK+sRRTLN2u2nxTgn643cj8KHtKG7rNxVd1C5FFm5u
g5cVRrFXJsvn+V9l6KXOLdebH0ewfvgww3xiOZI0P4UzHUewiFepyZx9BRrp
bB+4IjuCSzQ9Z2fWKtErjSdBTpHDeEfXAHlKvBZ95i1PSz4zhNtLvt2aHK1F
iga7leI2BnHG29jyiZw6RHKNMTBMHcQn3U5ajWs2oCtU/Wdopv/gaKYv0SO2
TSiSrPM76+oA5npZQzP3qwW1hF+lY5vqwWtsBeku6q2I78SlGTHqHjz48M3p
2cRW9PQN7Y0Bzm5cYHsvYca+DXG0u9zv3tWJLxxQVpte+w9drB+b2q3yEyfV
vXadEO9AyZOCIfTv6/FibL58X1AH6uH9pytgVIuP29b/afnXgTweGCgwL1Th
Sdpl0y+tnWi19JBFzO4yfPjoSbUngd1I62GC3O2pbNyctU5DnulDLP5H5atf
FSAuxGTJqtiPjprKBU9GfUVHZCPVAq/0o6Di420Dx0tQyGL6wu0f/Ugj075a
5WglUg7776rN+99Iw4LukZFIE7pfp6C/z+oPChA59F+JcgdKyymUfR/1B4ke
l7pWZd2JWmKP0co0/EGveEtOpAZ1IWlbs2IB1UHEZ7Hi6tbVg+po/RWpuIcQ
9zOnxX8Kv9HiOBvLbb0htGlYtHnw828k2vJiZOH+EDrMbxQ0rDmAXBKzEkcm
h9D65dpSJ5M/iO9oF1dT1TC6RXpfGHJpCIH0tRndjWGk8CU6Zrp3CNmzzNWX
HRhBrhpcs+cuDqPiDoaAgsQRVOh3mJPv5Aiy8di//Or2KLot19y3LDiGgiy+
tfLnjKLfy+FR5wPHUL6WbnbYyCj6GWZKsZ8fQ4zclvYBJmPoJl+30vXScfQx
60mXk+I4avt1I2FZYxKNc40H6VuPo3cW35T/RE0isoc+IRc5juLDZByejkyi
RHWWpD//xpHlL/2qeb8p1P3a0bhUYQL5rPRzpjVOIUHaBtrXVhNIq1ZOh5p/
GoXXBl27UDmBYj5JOD5NnEaNClP8h1cmENOvEY/s39OI5fmJWt7dk2i38sF3
10gzyP8sm8KP55NIybbQ1S16BpV8du75WD6J5ugXd5d8n0EbIk0hQUuTyMLl
pYwO9Szy+BM6p2M+hSyHG21O7Z9Fucdnk2VCp9D2wkyd0p1FM+mnTWjLptCd
jhyt45azSIE1h/734hRqzNMQNXObRXYunIUU8jSSZHumIBkwi1JaXe1eXphG
/ioDz99Ez6LfKi2Ct4OnkVyk95Out7NILG5//bmSaXQl6qJHbf4surARfufg
wjSK4bdudyqfRdGXFvZwy86g6weljSqbZlFr+Zm+WbMZNBs+k9zSOYs4yHnP
G5/NoByhjOzIwVlk+JTnWCZlBpUdw3dZpmbR4yn3hSdzM+jrd1rFQ4uzyCbN
oeUA1yw6LBJDL7A6i6g6hd4n755FGiyldh83Z9Frlno/Tu3tPpwaulap5xBx
1Mf8wTbPMcFemk3aOdTtvPvgjOcsWsirSSqim0O3E7tYLcNmET1LT/zubSzQ
8my4IWMWNagWLpyjmUMFtOr4SMUsinrKWE9szSKTg5MxGT2ziF/Q0ub3dv35
ay9dBJdnEYvhoIDG31kUFmuo95hjDi1Kkp2spmeRUt26xPKuOcR3s2n56PAs
alzLXL2qOYc+7bC41ds9i5z2WLS2mc+hmPKer8daZhGzFWumpsccmq9Owk5V
syjt+Tf/3NDtvt9Nhll+nkXHy65bSKTPIbWiN5eE3s8iP5lGtq2uOUSK4zv8
7+kskjx3b+T63znUpIblJLxnUcljxZJutnl0t21pUOTaLFqfCHH9ojGP+EZF
vsSpz6I4UaS/6+I8WtwYCpOU3db11IxkrPu2PZec+4RtFt3KPdV269080vZ4
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

       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =-0.02 \[Omega]1=0.2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
O4WJol/V+bdSyGD0xA57vkeQiG3vOZyTRobanRtwC20BIqhoYU1tJhn+cBU4
FTL5CdPjTIffuWQQqRnnvkNZT4x8ShNwLifDwNmejEO2a4n3T6ueBz0nA128
ssXEm5t4drvDNb6KDOtf3bj/LnINEWIohL+tIcNmlSdvbVpXEbLll09ptpCB
d1Eojyyzgq+7myRh0UaGwrYnbWti/uDTXs9ee30kg91fxVcnhJZwQmFSJrOL
40/h+c4r8r9xu/tHWgSGycD3JEgmr2gGly7lkzo5RoZdf60NZvdO49/aKk40
TnDq5an3+NszgbsKbVwVOk+GgJT0haHsEVyJ/nLf99+cfimWCYPiED5q5pWk
94cMr/NL8jWfDeCnI+pV/62icN4/qy7IbenFmY/PXj2ylgJnZJ4vzqZ34nMN
299VraMAf+CHbxKmn/ALawOPXxCiwPUnHy4srG7Cr19lJM5IU8Ax0vnW6efp
yCCtZ9B8OwXueHbeSzB4hniJmypF8hQot3KMfdBdg279GWj2JFOA70PIQmxG
C9oveXdLI40CQcbrm7fYtCORnTpuOzAKOKTbtk7of0Jx5xP+DmhSYPv32grZ
5i5kE2toqreLAnrJrn0BJ74iqbLZ+HQdCoyJO5Wajn1D6TNm2BFDChyz/P0v
y6IfOQsvXaraQwHtC1KL6mcGkAIjp0nCjAKTxbewxSvf0WOvVa6fLSgg8tTW
bN2VIeQVWVSsZk2B9nDlnW9PDSN6nv1KjC0Fkn8EnSk5OIJKhsvjzJ0oEBxx
5EDb4ijy43EZKHShQNOLidzLxBjSVBRmCpygwDZe2QeaAeOI7ezZ+OYUBU7n
z/kWt/1Al6+Jb97hQ4HhVKtNfWcmkG76K+cbfhTYpBHb/pd7EnG/9Hky4E8B
haXrZXB3EtV/3bqsG0gB0v0U9a9iUyh8uXlP+mUKdCkJ6fBFTyFTqYDYv9co
kB5xNvryqmnUavOBXhVOgfisQ67B7tMoxv9qoMQtCngs30nUi5tGVnG0N/5R
FMCHzBzNqqfRlvIusc8xFJj6uO3Li6Fp1PUh7JhaHAWYmM2nh+tnUMqsWlFM
IgV2ttI+y5FmkKNI/9J0CgW+rP7DY244g+SYUcbm6RTY03wT4OgM+r6fdb/w
IQU+lfnybvCbQY9Ojf7Hn0OBhb5bke9DZ5DHrTiaZx4nL7Wnc5LjZhA1X//i
m0IK2An9+xb+cAZNNk7XKz2lgOWNTa6FhTOoeCRV9EYZBVqmyQLbymfQWV5T
p4EKCghIbbGbezGDNJQWCnSrKLCydeDCbvYMWjDIXkwjKOD5Iom1hcNBVWnB
r2oosFaId+E9Zz2XSpLg6CtOnr71NYZx9gvJvR8v+IYC3t4f35s/mUG826Jk
VZo5+ntiBjVzZlBE7M186xYKSD6ZyDJPnUEbBELUA9s4+VYcd3t0dwbFXL/8
Mu0jJ8/twzqmITNo8+KFva86KJDpSnDvOzeDks6c/TDSxZkvm18mla4zSGbo
1BHBXgrkH150ybCYQekO7sNYHwUerjU/Jrx7Bil8cPax/k6BQIFvopvIMyh3
75E/F4cp4LVjpwAuyvGr+vCNtDEKXJrrT9q0PI1UC80SR6Y533XWXBFonEbP
5I3lBecp8CbSXutV4TTSTtItxH5z1o+HHXC8O430wjRqLq5Q4PM7/mdnrKbR
gWPbRwX4qKDOEGMEZE2hjx2SZzFBKvRT3l/NPTqFbPZvWrESpkLJw7OJFuJT
yHEXn0jaZiroiVWau4dMotOb5rUweSrcut0g/MJ8As1GTtZaKVFh3tdUrO/f
D3Ru9ajZRRIVUnl4CMknP1DQ1FenOgYV9i+JGPPw/0CRjQ3hViwqvP8vk+dy
5RjKvZT8JcCK8z+L9+JD7hE0MKh3oTaMCr/fDHVYJvQjvbSWTHIkFT4osg+K
on6UbmP3LuYOFQ6+vMXj0t+Hjjb7yLnEUoHlf4C7nd6HuorT3655SIW/YlXb
T6R9Q+2Bf7cbElRwzdEdNT3VhTD1CNPCGiqYvI8iVbV0oujJTec3vaYC9cS1
+kWsE+0/RmsebKZCkKxw+spKB2oycjgX2kkFwS+jk08LPqFakcrGhnkqtAr5
Vq+caEOyzYbzjAUq/LtzrdxxpBVdDWnbmvCHCi38HdZ1nq1I5/fIWffVNJDZ
saVh23gLquwR37pemAaytPw6J6NmJBH3cI+PKA1CyttZyiea0AVzxtnOzTSo
3mpJHYpsRBq1Rm8ey9CAKs3FVu9rQCU553xNKDQosToS86DyFRI5tiq1hE4D
hnDkdPxSHfKWvN0gqUIDJltI+qhOHaLfzpIe16JBi2aBlXpbDcrz/VAfaUQD
eodhX5ARgdZTHWfm9tLgN/f0wbRVOHIfHJNy2EcDpSvFPN/qqpCSzWof6qH/
67u0+syRFygTYVLvjtHAe/x1fWN/Gardzxf8x5UGm9cek7syVIr6HQfGSO40
uHFmfeLgVAmSvx5bGXqaBk7Lj5qDRZ+irPpFWwikwbLWB4qDVj561dFec/oy
DWjqo7+p8Y/R95F8Uuo1Guwt5zp8gCsXKfAfXVwMo0E/e6Vt9UwWyjavTSi9
T4N1s82D/tEPUL1TMld/PA2yZOQrosaT0ZCPn7twMqeem+Zx4raJSOm+ktap
DBpoVvOr23veR0bZ/9KSs2ggYhg3Gi4Yg44/+8LblEODpwR5/6aQKPToS0SH
UhENFnoGk3qrQlH9qMtuq6ec/iUsWkbcvI6Gllg5wWU0WDmzUfzQVBDaITN1
/r9KGhTY8r21eeuJco9Zbk5qoEGi/yJJLvMU/saXevlNE0fP38WGD2bn8JHg
tUO/3tHg1JeabSbRgbjyo4pyy480EIz21tN9EYzvqYiWud5Bg3FvO7WCm6G4
+xuPG8VdNMisfsbmhpv44zEpK8E+GhjT4jLCnO7gTX/m2bu+08Dx4Ov5Trdo
fEygRcFzmAb2+q0N7lF3cTLj6nz9BEdfa7e118t7uAnYOvycpkHKje93jtTf
xz0PqrySn+f003XyBNTG4nlnv9+7ukSDJMtI23eJ8XhTCP6naIUG3DTzjVPn
EvCx2DiXr1x00BgozJkxTsQpz/eoavPSoXhUO+1aSxJu1iib7M5HB/8aqYBr
wcm4V9fS6nhBOtxvOCllzEjBC5YL2udE6fBsqcRslVcq/lYwVFtOnA55afkz
ziup+I+tjpkHJOnAk54a7hr6ABdgavFdkaHDhrKwAW3eNJyqK+JbuJ0OLsFa
cpJX03Azi7HObnk6+FVefao+k4Z7udTp8u2gg76lrqITLR0vvHFO5ASNDr27
0PJ8ZDr+g3Xk+g0mHdqFbZQo5ek4dd5g7qEqHV56PZWQ7k7HT+ZTXWs16PBa
IkWsdyUdz3MW+/TfTjqEnYlYFSaTgY9JLBv+Y9Hhx4SwP1U7Aye1DTyTAQ7z
z1UMWGbg7uHNO1j6dDg6u7O0xjMDz91dmmBnRIc9tYe4uy9n4CO/ktYH7KWD
7Ha9Of3oDHxH0fWL8WZ0SMmv9RNOy8CPu3mOl5tz/JC6Tz6Un4E/krZw+GhB
B8v8Mhe58gxcMVJWR8SWDnbbxv89rsnAsxant+13pEN5xiHrXa8zcHn36lWR
bpz1X1uPuFVn4JmfowYaTtKB9q6Au6Q0A++77X9o6DQd9O4ViETlZeDbDR1f
c/vSYR/t2e5HnPOdlo005M/RoWfrVg/eexl4Wik9R/cCpx+k15K1IRl4r+fm
LU6BdIjtKro/6JeBb5X7G375Mh26X6U0XXXJwI90Di6mXKMDyBa5Zh7IwFOi
33lWhdBh8vGaahtWBt5jXN7dGUaH6lMnpp4qZeBS/1LMFiLokOOzUFUllIEn
nfKiq9+lQ03O4PfNvel4l8KhNMv7dOCmOntcr0vHJXp2CfvG00FGoqqnPScd
TzDhny1KpcMX+Q8dlqfS8dgdeeXKeXTYqbWsBF1p+Mfeu0rGhXRY22QztBKb
hovFBcS7FXP6e+Tsf6wDaXgM996AzGecvPBN+kVXP8Cj+4ZZ0nV0wG3vehTH
pOKtCe8LtevpEDFi9DHVIBUXOlCx1baRk+/PW/oe/kzB7xChXHHv6fApQKSZ
ZZWC30pWfCXUQ4fhswW9RwSS8TArF9M1P+ng1kmo/Xc8Ac8073FwW6CD91u/
ZGG+BJy91+p0wx86tFVVZKkVxuOzyPhu5GoGbDe8V3JrLg53UKJ0iAozYICQ
uvj5Wiyu8nvWWYHCgNZnz8U5NzV838xJv1A6A+pXUf0nrWJw9/HvN0YwBjx5
F2O5++9dPPXb59wCLQa4JYRMvjxwF1/3pnJSzYgBezNkeT79icJ7E65fNDzG
gAce54VKliLwxZg/kTmuDKiRsCnd7hyBi932S13vzgDv9ozjls038b3Xjle/
O80A89+y3VsehuNlHiY81kEMUDynmxrvHoq/d6kTf36FAT80Hkel9t7Ax46w
SJLBDPAX9mwIsb6Bb7Ogm/XeZICrtErkX9MQPEJ7Y8zxeAZEOY3X1ey7jmer
RT58k8SAlKz9tb/ar+HVdO5y8gMGWBybHha1u4b/lPvVMZnFgGPp6gXcp6/i
TvxdMv4lHL2/nk/ssb2Eq/dkPA57xwD7VDmF+zz+uDDdfeFJKwNGO23RqM15
/McVuvGXDwzgMrh30aboHJ4lX/VduYsBgoF/Mk47++FiJz9uaxpiwPnQ2m2t
kz74NDvp9OwoAyTZj/btt/XB3244hktOMODgyKfUsnpvPKRkwu7kHAPm24ui
dh06gy8FrTHl4WJCmY/UHkzxJD6Sfdw3aRUT9HOnL2/d4Yl/bmlMpK9hwgM1
vu7jdA+8ZHv0iDUPEzTyVXmazU7gnq+kQ3MEmHCvzoSk3OCC20xcKdy1gQkd
XKMFGrPOuNHmgY/vhZhQyG1/UlbOGZdzfyy/sJEJLQ26USbRTngnv0bNHgkm
rFfK7NTfY4/XqyWO9EgyIVPX9lzMiC1edmRZyEeaCbtMHrXdu2uDRz+pPZq4
jQmyXD+KKStW+B5L8+VRRSbEmtoiGc2DuEZQifzlHUwQEuP6e1riAK6Qvcl0
I4kJI60t23t59uNcv7sTtalMCDe+93muey/+PMldM1KFCZSX9ITrqnr4o7rm
o9vUmPCGUqQo7gX4/R/00FJ1JriKyDdtc0W4t87Pj91aTPh6qGDSp0kDP3rC
ZvmMNhN2y2vWf3uoiptFV8lzs5jQW27px4xj4sr913ypuzn+tG4U1QlTxDfz
DyZWAxNWFc9uMf69DedW21NzSI8JRteMDQxYm/D/bmwQvmTIBGU/5TnVc03s
BFJy4TtTJlgsxlHvLMui+Tmj7OB9TMiJcszVCVdC5sRsyk5zJjS9C7BYP0RG
PJYmt7ItmFD35oGd0B0MOcv8CrY/xIQANDTFClRFxHBGoIg1E7ZIn+UJt1RH
54IWPS/ZMuGbwY5ovwYt1GqU7axqzwRrd9VHwq7aiCpy0G7UgQkL85yHxMQu
9D07d6+VE8ffO3iRZpMOAu9DuvzOTDjDv2Pg1wZAydpcO2tcmLBzPG3DnmJA
Fu8PK9NOMKHgm0Ufo0sXFSWu2T7gztlfYPuguoseWu/6RDzRkwnVU6010d/1
kCvdXsjci+NHsO78uaP6qHqBh3ftaU6epHdKSLbpI+m6kr+VZ5iQO/Vtophl
gC7cPvrL24fTz6iDB05lGCCG3LPBHj8mOFr//CZz2BBF/Dj2NeY8EzpPvPY7
m2uIhp4JftpzgQnqpIvuT+cMkd61F2//BjChYplmwrPTCD0wdXtVFsgESdur
79MuGCGr/9il268wIfhqtovlsBESOCf28NZ1JujFJ6wl6Rqj0QZfJ1Y0EyZb
JBRNZoxRvWSbzI9UJpDtYxLPlxqjS0+UBW0yOP548V2OCjVGagZXl+uyOHlZ
rPSqMDdG4186xhm5TNiw/6FPvZAxyjzF6E7OZ0LYX0W5iAYjZLs6rIn3CRPS
9wmPvPY3QsLxvS/OlnDyJaa8T1XWCF2pvp1g+oIJee1ywbbOhsj6z1x0DpsJ
2ifrI3VXDBBVw+7mmmomuFXRL6+/b4C+5CtdrKrnzLdFXZ5RhT5SiX9pT/nI
mafMQF/Up4uGTs1s5Z9iApYo/nKvMgsdjFSQejHNhHHDod+lxbsQO/ew+IlZ
JvRsUQ58snMXujeAC9X9ZIKqmZlg2D5tBLYRXIHLTLDasrP60yUtlGQg3z+2
HgOXXIzqvE4drXW27k3gx+AwKaSI9EANeV+52WUkiIGx1OGyVepqyLhyqj1T
GAOmjH3GTzdVNM9g19mJY3BuiK/K/hOG9klZZTcpYGA5ZlVm1klDCd/p1fZK
GAhdW7ehTJ2Gvheu6/6xA4Mh/cmLrPtUFARsYSEKxrlPxNeVHqagAjf5IEsM
A43xfXl6C8pogb4S910Fg+2iC25VbsrIYOHz03NqGHxf0I489GkH6o6IGI7X
xKDttsX6gUolxFc8Y9GDMDgua/1cN00BWQc0nzq1G4OaL89Mo2UUUKZedvhf
wEBUUWp2KlUe7fxkQ2w3wED/7xabjiw55L70kuRmggHJ3p403bQdNRjc4Zq0
xiCsusbn4Jgk2rjBXeqKDQaJBl/XDSpKoqMduhrCdhjkX7GUUXCTQL88fp5U
OYLBUkHG3quT4kgpyqHjvAsGxaLPQ/Mom5CvjcYsrxsG1a9iJu4HiyFCVlgw
8TgGBmf3Tvb2iiKrsjq9Kg8M2q/R+T3TNqKQTnLRvzMY+CuF++obC6PWTO7G
aB8M/GyVZ+V9hZC0V++A7FkMNtD4n/Tab0Clf+9KGJzHYP9+ZVl7XQHUL78Y
Eh6EQdPaaGmmxTpEn2hPk7iMgUzAw12Brrzo4rOCyrwrGOwuCszcHcSDNu51
mn57HYPA3aOe/VXcSPd0g73ITQzeqO3/bRWwCi19GTV6FYHBfOhJ8b4sLlSm
L6DifwuDNKlJL42CfywliYPrvkZhgGxTQk7HLLMEXnWV5cZhMCHrtpDd+4tV
T19Js0/AwO1ZEEk18ifrSuK2yA1JGPzQf0uL0Z1nzZ52PeaXisHfEs2HPM0z
rC8Sk4KQhQGr7/pB8/gxVkyI8OJsNgY9ifs0dYJHWKZTKt+zczAQ4bZH41eG
WMQr/0r+fAy6+z28t+b1sy4wkrKJAgwu5b87++vzfywsiR3tU4SBXbV/rJNS
LyvrzKoTHU859Ut2WE97d7COdslbRJRicF6kW69a9yNL3NAIoXIMrJ16oqro
bawIyUjRh885fh7PeOdWXs/yfi1WffolBndGpBR3qNxmkZma+bI1nLyGq5Id
rOPZA0m2cR9rMTAJqjYeHi5kW3s/8NKux6DicXfsXeFqtnB39eGJBgw+awkf
o0m+YjcaDuilN2Kw+Zoj+fRiA5slpSzB8w6DC+u/yoih9+wn015TJ1sxaKRb
VPbNtLPl6p++bvvAmTfPm6vZS5/Yscm/kjU7OP4N71qaZ39hr/PZ5ZvahYHY
2jUkY1Y3e1Lq9VaPPgxKrdNrA69+Y3+s39+sNoJB9tuRuf0+fexKny/+XFMY
4DoknSW8n50m7azw9icGDhVcWhNPB9j9UyFHbiurQP5HUR+/kAG2Ql1O3H57
FWjpEw+1Ku5m+wpT1r88oQKFznt7+Aq/sF8eKQpk+KkAbfRuXVPdJ7ZAPjaZ
dlUFYnwHF9et/sC2WyhzEr6tAnmFNh9ee7eycw21PlxNVIFRtd+K3eS37J8x
VYYz2SpglPzhIzbYwH6wzH/oSo4KTEFpV7BrA3vPcQdnwcec/VUjnqUO1rNT
dq5cJhWowNOGw16KE6/Zev/pPD9WogI+1/LWOYu8YkfTasntBEf/spbzXEE1
O1fLfv31ahWoi1oQub67mv1Sf34Yq1WBrJKHqjy5L9mTtkrZd1+rgIQUf0LC
WoJtGhqx7eBbFTAcOHaTb7KSzfPNQqy1UwUmM7bob/MqZ8uMjc9e6VaB2CWR
I07NZWy1nyFtjK8qMBAlvGaGVsZ24a+4E/WfCuwWvazesVzCrtaUWm8+rAIu
56nFUdXF7MDogZV38xy9UjP/nhQ8ZsckB/Vc+qUCBiKSkszmXHbeo01VtAUV
6Jw6rr00mcPpsPGF239UQEGJmiJu9IitMZo/a7ZaFcRnJ7lIzIfsaV2/4WYh
VfiP67PZjrpk9vE57rZGsioMmr+231wXzj6aZ9DiQFWFD07h2uAUxrY+FtI8
RVMFAXt1wdu8oWyj92vqN2GqUO/ZcaD6bDBbKX911TFNVRBMEBfccPESe9CZ
K3tRXxUWLCpeSmWdZLu2/7lAOqIKYfWGNWrIgeX8dHb7zShVeEp9QnFcfZ71
pmldMHtZFXikv/zGKjxYXvp90Y0cPsR/IflHqQdLmP3iwWcOBxhfcMsp9mDZ
FHpWTnPYTvOrl0yeB2s46u2MwooqKEUIm/KnerB4rKKdbnPY922d5eR1D5b+
N3Gdo39Vwey1Jl/7fg/W0OFp05Mctjq1LemuqQcrovWN7QUOcx3ztzi4x4PV
XhNwLobD9/yes9p0PVjOWd0F9RzW+bp7sV3Ng3XVI02K8U8V7qy33N4r6cFS
6PcnsTgccatSJ13cg/XG7oDmXg4HRUeHOotx9JutsnThsGd9fcywoAcrje4S
Ec9hD22RtDkuD5Zezq6ELA4H7s7kq1hxZw1tE3v0lMNr/LemX1xyZ9FFXtc0
c3iV4+a9q+fdWe03U99/4fDlqWKH+ml31vnV578OcljirF9SxIQ7SzJw//gs
h8NMvFebj7mziDmlxX8cftVSel902J31P2VdIyM=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =-0.02 \[Omega]1=2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.4092277512073154`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{0., 0.09379373974657368}, {0.3333333333333333, 
     0.07869760194439002}, {0.6666666666666666, 0.04912310974564252}, {1., 
     0.025198367932682493`}, {1.3333333333333333`, 0.011379368825794822`}, {
     1.6666666666666667`, 0.004692037373901281}, {2., 
     0.0018325037701704718`}, {2.3333333333333335`, 0.0007457584581597523}, {
     2.6666666666666665`, 0.00038457775889191165`}, {3., 
     0.0002776403703578442}, {3.3333333333333335`, 0.00023805107024504717`}, {
     3.6666666666666665`, 0.00020505013623191987`}, {4., 
     0.00016699614567608403`}, {4.333333333333333, 0.00012728332908257993`}, {
     4.666666666666667, 0.00009111589740891032}, {5., 
     0.00006160650682287975}, {5.333333333333333, 0.000039534987784233346`}, {
     5.666666666666667, 0.000024173261703465702`}, {6., 
     0.000014132107461556722`}, {6.333333333333333, 7.928695695527077*^-6}, {
     6.666666666666667, 4.282087662345791*^-6}, {7., 
     2.2242162512981704`*^-6}, {7.333333333333333, 1.1005474577367429`*^-6}, {
     7.666666666666667, 5.093934179025626*^-7}, {8., 
     2.1861522212808775`*^-7}, {8.333333333333334, 9.264639917194434*^-8}, {
     8.666666666666666, 4.776684082893332*^-8}, {9., 3.323429329002974*^-8}, {
     9.333333333333334, 2.405186853020134*^-8}, {9.666666666666666, 
     1.363638713269606*^-8}, {10., 4.1830952011183175`*^-9}, {
     10.333333333333334`, -1.3871109433093985`*^-9}, {
     10.666666666666666`, -2.817568624403718*^-9}, {
     11., -1.9075301158201373`*^-9}, {
     11.333333333333334`, -6.008449640627744*^-10}, {11.666666666666666`, 
     1.4017931158049798`*^-10}, {12., 2.8240976516953*^-10}, {
     12.333333333333334`, 1.5595680619388517`*^-10}, {12.666666666666666`, 
     2.4057686928789502`*^-11}, {13., -2.908999503379377*^-11}, {
     13.333333333333334`, -2.6599382808686543`*^-11}, {
     13.666666666666666`, -9.697097388833489*^-12}, {14., 
     8.469957471751539*^-13}, {14.333333333333334`, 
     3.1724364869254554`*^-12}, {14.666666666666666`, 
     1.8736141382213965`*^-12}, {15., 4.1900449382997894`*^-13}, {
     15.333333333333334`, -1.9352962635044431`*^-13}, {
     15.666666666666666`, -2.2771978993585085`*^-13}, {
     16., -1.0160411550800373`*^-13}, {
     16.333333333333332`, -1.2977615432377432`*^-14}, {16.666666666666668`, 
     1.4477894289746085`*^-14}, {17., 1.207641145085488*^-14}, {
     17.333333333333332`, 4.591842310774136*^-15}, {17.666666666666668`, 
     4.007521214148999*^-16}, {18., -6.754715373845958*^-16}, {
     18.333333333333332`, -5.026887861136082*^-16}, {
     18.666666666666668`, -1.8430712801485276`*^-16}, {
     19., -2.0483180507476762`*^-17}, {19.333333333333332`, 
     2.1016047634883527`*^-17}, {19.666666666666668`, 
     1.6638309430223296`*^-17}, {20., 6.571760190641675*^-18}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"2nd Inverse Fourier:\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.4092277560973153`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum pre-initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.07234861402552556`", ",", "0.09218033098407681`", ",", 
     "0.11702776358949457`", ",", "0.14766032096037846`", ",", 
     "0.1690575223594494`", ",", "0.17671022506823406`", ",", 
     "0.18063505653802386`", ",", "0.18302154583849517`", ",", 
     "0.18382231248840888`"}], "}"}]}],
  SequenceForm[
  " sum pre-initiale=", {0.07234861402552556, 0.09218033098407681, 
   0.11702776358949457`, 0.14766032096037846`, 0.1690575223594494, 
   0.17671022506823406`, 0.18063505653802386`, 0.18302154583849517`, 
   0.18382231248840888`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.4092277784053154`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.07340408248815561`", ",", "0.09463319685227747`", ",", 
     "0.12187941513070022`", ",", "0.15645122639612935`", ",", 
     "0.18121570083465086`", ",", "0.19018695031791874`", ",", 
     "0.19480994870340254`", ",", "0.19762799109942614`", ",", 
     "0.1985747323011095`"}], "}"}]}],
  SequenceForm[
  " sum initiale=", {0.07340408248815561, 0.09463319685227747, 
   0.12187941513070022`, 0.15645122639612935`, 0.18121570083465086`, 
   0.19018695031791874`, 0.19480994870340254`, 0.19762799109942614`, 
   0.1985747323011095}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227800980315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"k={\"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "15.`", 
   "\[InvisibleSpace]", "\<\"}  increment initial=\"\>", "\[InvisibleSpace]", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5770384330251914`*^-9"}], ",", 
     RowBox[{"-", "1.9846215342306513`*^-9"}], ",", 
     RowBox[{"-", "2.4217253110251726`*^-9"}], ",", 
     RowBox[{"-", "2.8128396548205314`*^-9"}], ",", 
     RowBox[{"-", "2.9155426957361313`*^-9"}], ",", 
     RowBox[{"-", "2.891788829946424`*^-9"}], ",", 
     RowBox[{"-", "2.860842740783553`*^-9"}], ",", 
     RowBox[{"-", "2.8341316333830463`*^-9"}], ",", 
     RowBox[{"-", "2.823646550059024`*^-9"}]}], "}"}]}],
  SequenceForm[
  "k={", 10, ",", 15., 
   "}  increment initial=", {-1.5770384330251914`*^-9, \
-1.9846215342306513`*^-9, -2.4217253110251726`*^-9, -2.8128396548205314`*^-9, \
-2.9155426957361313`*^-9, -2.891788829946424*^-9, -2.860842740783553*^-9, \
-2.8341316333830463`*^-9, -2.823646550059024*^-9}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.4092278100943155`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"raison=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"increment<=\[Epsilon] :          -9\\n1.57704 10\"\>", ",", 
     "Null", ",", "Null", ",", "Null"}], "}"}]}],
  SequenceForm[
  "raison=", {
   "increment<=\[Epsilon] :          -9\n1.57704 10", Null, Null, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227810132315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Sum finale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.07340408248815561`", ",", "0.09463319685227747`", ",", 
     "0.12187941513070022`", ",", "0.15645122639612935`", ",", 
     "0.18121570083465086`", ",", "0.19018695031791874`", ",", 
     "0.19480994870340254`", ",", "0.19762799109942614`", ",", 
     "0.1985747323011095`"}], "}"}]}],
  SequenceForm[
  " Sum finale=", {0.07340408248815561, 0.09463319685227747, 
   0.12187941513070022`, 0.15645122639612935`, 0.18121570083465086`, 
   0.19018695031791874`, 0.19480994870340254`, 0.19762799109942614`, 
   0.1985747323011095}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.4092278101743155`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"moments=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.10929774739760484`", ",", "0.13243595618168386`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
      "0.22239907380407414`", ",", "0.26887351012553273`", ",", 
       "0.11119953690203706`"}], "}"}]}], "}"}]}],
  SequenceForm[
  "moments=", {{0.10929774739760484`, 0.13243595618168386`}, {
    0.22239907380407414`, 0.26887351012553273`, 0.11119953690203706`}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227810208315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"VarSpread (Goal)=\"\>", "\[InvisibleSpace]", 
   "0.0001344367550627664`"}],
  SequenceForm["VarSpread (Goal)=", 0.0001344367550627664],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.4092278102423153`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"V0Generateur=\"\>", "\[InvisibleSpace]", 
   "0.00005000000000000001`"}],
  SequenceForm["V0Generateur=", 0.00005000000000000001],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227810279315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"VarSpread (initial)  obtenu dans le normal Heston a partir du \
V0Generateur =\"\>", "\[InvisibleSpace]", "0.0002870610921235024`"}],
  SequenceForm[
  "VarSpread (initial)  obtenu dans le normal Heston a partir du V0Generateur \
=", 0.0002870610921235024],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.4092278103203154`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"TrueIniVarSpread=\"\>", "\[InvisibleSpace]", 
   "0.000023416053019983566`"}],
  SequenceForm["TrueIniVarSpread=", 0.000023416053019983566`],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227810357315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Normal Heston Parameters=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"S0\"\>", "0.`"},
       {"\<\"V0\"\>", "0.000023416053019983566`"},
       {"\<\"\[Theta]\"\>", "0.00003512407952997535`"},
       {"\<\"\[Lambda]v\"\>", "0.15`"},
       {"\<\"\[Rho]\"\>", "0.`"},
       {"\<\"\[Nu]\"\>", "0.002`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Normal Heston Parameters=", 
   MatrixForm[{{"S0", 0.}, {"V0", 0.000023416053019983566`}, {
     "\[Theta]", 0.00003512407952997535}, {"\[Lambda]v", 0.15}, {
     "\[Rho]", 0.}, {"\[Nu]", 0.002}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.4092278103913155`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"L=\"\>", "\[InvisibleSpace]", "206.65368485020036`", 
   "\[InvisibleSpace]", "\<\" \[Kappa]1=\"\>", "\[InvisibleSpace]", 
   "0.4133073697004007`", "\[InvisibleSpace]", "\<\" S01=\"\>", 
   "\[InvisibleSpace]", "0.`", "\[InvisibleSpace]", "\<\" k1=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.133073697004007`"}], ",", 
     RowBox[{"-", "3.0998052727530054`"}], ",", 
     RowBox[{"-", "2.0665368485020035`"}], ",", 
     RowBox[{"-", "1.0332684242510017`"}], ",", 
     RowBox[{"-", "0.4133073697004007`"}], ",", 
     RowBox[{"-", "0.20665368485020036`"}], ",", 
     RowBox[{"-", "0.10332684242510018`"}], ",", 
     RowBox[{"-", "0.041330736970040076`"}], ",", 
     RowBox[{"-", "0.020665368485020038`"}], ",", "0", ",", 
     "0.020665368485020038`", ",", "0.041330736970040076`", ",", 
     "0.10332684242510018`", ",", "0.20665368485020036`", ",", 
     "0.4133073697004007`", ",", "1.0332684242510017`", ",", 
     "1.5499026363765027`", ",", "2.0665368485020035`", ",", 
     "3.0998052727530054`", ",", "4.133073697004007`"}], "}"}]}],
  SequenceForm[
  "L=", 206.65368485020036`, " \[Kappa]1=", 0.4133073697004007, " S01=", 0., 
   " k1=", {-4.133073697004007, -3.0998052727530054`, -2.0665368485020035`, \
-1.0332684242510017`, -0.4133073697004007, -0.20665368485020036`, \
-0.10332684242510018`, -0.041330736970040076`, -0.020665368485020038`, 0, 
    0.020665368485020038`, 0.041330736970040076`, 0.10332684242510018`, 
    0.20665368485020036`, 0.4133073697004007, 1.0332684242510017`, 
    1.5499026363765027`, 2.0665368485020035`, 3.0998052727530054`, 
    4.133073697004007}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227810428315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"prices=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.020232091962764376`", ",", "0.015557535964466301`", ",", 
     "0.011234709202550234`", ",", "0.00749212258749417`", ",", 
     "0.00561949094657529`", ",", "0.005065281200829877`", ",", 
     "0.0048016895885052814`", ",", "0.004647881116830759`", ",", 
     "0.004597336948617917`", ",", "0.004547155553610401`", ",", 
     "0.004497336948617917`", ",", "0.004447881116830758`", ",", 
     "0.004301689588505283`", ",", "0.004065281200829877`", ",", 
     "0.0036194909465752908`", ",", "0.00249212258749417`", ",", 
     "0.0017757342224748807`", ",", "0.0012347092025502332`", ",", 
     "0.0005575359644662945`", ",", "0.0002320919627643773`"}], "}"}]}],
  SequenceForm[
  "prices=", {0.020232091962764376`, 0.015557535964466301`, 
   0.011234709202550234`, 0.00749212258749417, 0.00561949094657529, 
   0.005065281200829877, 0.0048016895885052814`, 0.004647881116830759, 
   0.004597336948617917, 0.004547155553610401, 0.004497336948617917, 
   0.004447881116830758, 0.004301689588505283, 0.004065281200829877, 
   0.0036194909465752908`, 0.00249212258749417, 0.0017757342224748807`, 
   0.0012347092025502332`, 0.0005575359644662945, 0.0002320919627643773}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227810468315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"smile fourier=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.02`"}], ",", "0.012251318689389433`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.015`"}], ",", "0.011946289219320587`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01`"}], ",", "0.01168077489805055`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.005`"}], ",", "0.011470159516712163`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.002`"}], ",", "0.011377176609072148`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.001`"}], ",", "0.011352491153703228`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0005`"}], ",", "0.011341386935415707`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0002`"}], ",", "0.011335126411873273`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0001`"}], ",", "0.011333106990422824`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.011796487614934209`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0001`", ",", "0.011794945528445787`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0002`", ",", "0.011793632092928297`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0005`", ",", "0.011790217512224487`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.001`", ",", "0.011785648525916938`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.002`", ",", "0.01177975267626071`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.005`", ",", "0.011784608180433281`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0075`", ",", "0.011812967109242895`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0.011862152629203912`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.015`", ",", "0.012017011358393231`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0.012236270494799506`"}], "}"}]}], "}"}]}],
  SequenceForm[
  "smile fourier=", {{-0.02, 0.012251318689389433`}, {-0.015, 
    0.011946289219320587`}, {-0.01, 0.01168077489805055}, {-0.005, 
    0.011470159516712163`}, {-0.002, 0.011377176609072148`}, {-0.001, 
    0.011352491153703228`}, {-0.0005, 0.011341386935415707`}, {-0.0002, 
    0.011335126411873273`}, {-0.0001, 0.011333106990422824`}, {
    0, 0.011796487614934209`}, {0.0001, 0.011794945528445787`}, {0.0002, 
    0.011793632092928297`}, {0.0005, 0.011790217512224487`}, {0.001, 
    0.011785648525916938`}, {0.002, 0.01177975267626071}, {0.005, 
    0.011784608180433281`}, {0.0075, 0.011812967109242895`}, {0.01, 
    0.011862152629203912`}, {0.015, 0.012017011358393231`}, {0.02, 
    0.012236270494799506`}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.4092278105023155`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"smile rapide=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.02`"}], ",", "0.00534018848756638`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.015`"}], ",", "0.0052431039142144835`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01`"}], ",", "0.005165659779999026`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.005`"}], ",", "0.005115043622491234`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.002`"}], ",", "0.005100213534175833`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.001`"}], ",", "0.0050980695070451994`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0005`"}], ",", "0.005097532485296163`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0002`"}], ",", "0.0050973820462053895`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0001`"}], ",", "0.005097360552297565`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.005097353387516268`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0001`", ",", "0.005097360552297563`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0002`", ",", "0.005097382046205388`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0005`", ",", "0.005097532485296164`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.001`", ",", "0.0050980695070451994`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.002`", ",", "0.005100213534175833`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.005`", ",", "0.005115043622491234`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0075`", ",", "0.005136561050159776`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0.005165659779999023`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.015`", ",", "0.005243103914214467`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0.0053401884875663875`"}], "}"}]}], "}"}]}],
  SequenceForm[
  "smile rapide=", {{-0.02, 0.00534018848756638}, {-0.015, 
    0.0052431039142144835`}, {-0.01, 0.005165659779999026}, {-0.005, 
    0.005115043622491234}, {-0.002, 0.005100213534175833}, {-0.001, 
    0.0050980695070451994`}, {-0.0005, 0.005097532485296163}, {-0.0002, 
    0.0050973820462053895`}, {-0.0001, 0.005097360552297565}, {
    0, 0.005097353387516268}, {0.0001, 0.005097360552297563}, {0.0002, 
    0.005097382046205388}, {0.0005, 0.005097532485296164}, {0.001, 
    0.0050980695070451994`}, {0.002, 0.005100213534175833}, {0.005, 
    0.005115043622491234}, {0.0075, 0.005136561050159776}, {0.01, 
    0.005165659779999023}, {0.015, 0.005243103914214467}, {0.02, 
    0.0053401884875663875`}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409225926510315*^9, 3.409226557054315*^9, 
  3.409226934672315*^9, 3.4092271786153154`*^9, 3.4092274118543153`*^9, 
  3.4092275901503153`*^9, 3.409227810531315*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"125.16000000000001`", ",", 
   GraphicsBox[{{{}, {}, 
      {Hue[0.67, 0.6, 0.6], 
       LineBox[{{-0.02, 0.012251318689389433`}, {-0.015, 
        0.011946289219320587`}, {-0.01, 0.01168077489805055}, {-0.005, 
        0.011470159516712163`}, {-0.002, 0.011377176609072148`}, {-0.001, 
        0.011352491153703228`}, {-0.0005, 0.011341386935415707`}, {-0.0002, 
        0.011335126411873273`}, {-0.0001, 0.011333106990422824`}, {0., 
        0.011796487614934209`}, {0.0001, 0.011794945528445787`}, {0.0002, 
        0.011793632092928297`}, {0.0005, 0.011790217512224487`}, {0.001, 
        0.011785648525916938`}, {0.002, 0.01177975267626071}, {0.005, 
        0.011784608180433281`}, {0.0075, 0.011812967109242895`}, {0.01, 
        0.011862152629203912`}, {0.015, 0.012017011358393231`}, {0.02, 
        0.012236270494799506`}}]}}, {{}, {}, 
      {Hue[0.67, 0.6, 0.6], 
       LineBox[{{-0.02, 0.00534018848756638}, {-0.015, 
        0.0052431039142144835`}, {-0.01, 0.005165659779999026}, {-0.005, 
        0.005115043622491234}, {-0.002, 0.005100213534175833}, {-0.001, 
        0.0050980695070451994`}, {-0.0005, 0.005097532485296163}, {-0.0002, 
        0.0050973820462053895`}, {-0.0001, 0.005097360552297565}, {0., 
        0.005097353387516268}, {0.0001, 0.005097360552297563}, {0.0002, 
        0.005097382046205388}, {0.0005, 0.005097532485296164}, {0.001, 
        0.0050980695070451994`}, {0.002, 0.005100213534175833}, {0.005, 
        0.005115043622491234}, {0.0075, 0.005136561050159776}, {0.01, 
        0.005165659779999023}, {0.015, 0.005243103914214467}, {0.02, 
        0.0053401884875663875`}}]}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0.0114},
    PlotLabel->FormBox["\"ImpliednNormal Vol\"", TraditionalForm],
    PlotRange->{{-0.02, 0.02}, {0.011333106990422824`, 
     0.012251318689389433`}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{3.409226069166315*^9, 3.409226701392315*^9, 
  3.409227078503315*^9, 3.4092272907923155`*^9, 3.4092275238613153`*^9, 
  3.409227667401315*^9, 3.4092278105713153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", 
      "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", 
      "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", 
      "\[Theta]v3", ",", "\[Kappa]3", ",", "V3", ",", "Z1", ",", "Z2", ",", 
      "\[Tau]", ",", "S", ",", 
      RowBox[{"\[Alpha]1", "=", "1"}], ",", 
      RowBox[{"\[Beta]1", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}], ",", 
      RowBox[{"b", "=", "1"}], ",", "KList", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "printflag", ",", "prices", ",", "smile", ",", 
      "prices2", ",", "smile2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Rho]1", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v1", "=", "0.15"}], ";", 
     RowBox[{"\[Theta]v1", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]1", "=", "0.02"}], ";", 
     RowBox[{"V1", "=", "0.01"}], ";", 
     RowBox[{"\[Rho]2", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v2", "=", "0.15"}], ";", 
     RowBox[{"\[Theta]v2", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]2", "=", "0.02"}], ";", 
     RowBox[{"V2", "=", "0.01"}], ";", 
     RowBox[{"\[Rho]3", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Lambda]v3", "=", "0.35"}], ";", 
     RowBox[{"\[Theta]v3", "=", "0.05"}], ";", 
     RowBox[{"\[Kappa]3", "=", "0.02"}], ";", 
     RowBox[{"V3", "=", "0.01"}], ";", 
     RowBox[{"\[Tau]", "=", "5"}], ";", 
     RowBox[{"Z1", "=", "0.1"}], ";", 
     RowBox[{"Z2", "=", "0.2"}], ";", 
     RowBox[{"\[Lambda]1", "=", "1.1"}], ";", 
     RowBox[{"\[Lambda]2", "=", "1.01"}], ";", 
     RowBox[{"S", "=", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", "0.05"}], "}"}]}], ";", 
     RowBox[{"printflag", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "8"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"KList", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.02"}], ",", 
        RowBox[{"-", "0.015"}], ",", 
        RowBox[{"-", "0.01"}], ",", 
        RowBox[{"-", "0.005"}], ",", 
        RowBox[{"-", "0.002"}], ",", 
        RowBox[{"-", "0.001"}], ",", 
        RowBox[{"-", "0.0005"}], ",", 
        RowBox[{"-", "0.0002"}], ",", 
        RowBox[{"-", "0.0001"}], ",", "0", ",", "0.0001", ",", "0.0002", ",", 
        "0.0005", ",", "0.001", ",", "0.002", ",", "0.005", ",", "0.0075", 
        ",", "0.01", ",", "0.015", ",", "0.02"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prices", "=", 
      RowBox[{"SmileBiSuperHestonVanillaSpreadotion", "[", 
       RowBox[{
       "S", ",", "\[Alpha]1", ",", "\[Beta]1", ",", "a", ",", "b", ",", 
        "KList", ",", "\[Tau]", ",", "\[IndentingNewLine]", "\[Rho]1", ",", 
        "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", 
        "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", 
        ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",",
         "\[Kappa]3", ",", "V3", ",", "\[IndentingNewLine]", "printflag"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prices2", "=", 
      RowBox[{"SmileBiSuperHestonVanillaSpreadOption", "[", 
       RowBox[{
        RowBox[{"S", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"S", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "\[Rho]1", ",", 
        "\[Lambda]v1", ",", "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", 
        "\[Rho]2", ",", "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", 
        ",", "V2", ",", "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",",
         "\[Kappa]3", ",", "V3", ",", "KList", ",", "\[Tau]", ",", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"smile", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"KList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"S", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"S", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"KList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"KList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"S", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"S", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"KList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices2", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "KList", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<smile fourier=\>\"", ",", "smile"}], "]"}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<smile rapide=\>\"", ",", "smile2"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"g1", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"smile", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<ImpliednNormal Vol\>\""}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"g2", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"smile2", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<ImpliednNormal Vol\>\""}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"g1", ",", "g2", ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4088573008524837`*^9, 3.408857524653656*^9}, {
   3.408857593264348*^9, 3.408857593936236*^9}, {3.4088576304056864`*^9, 
   3.4088577180479937`*^9}, {3.4088579406460176`*^9, 
   3.4088579635995836`*^9}, {3.4088580380385127`*^9, 
   3.4088580947583513`*^9}, {3.4088581676191254`*^9, 3.408858175041143*^9}, {
   3.408858209635557*^9, 3.4088582112605886`*^9}, {3.4088595422080173`*^9, 
   3.4088596282721696`*^9}, {3.408859659069636*^9, 3.408859700211051*^9}, {
   3.408859742008728*^9, 3.4088597739312162`*^9}, {3.4088598296510363`*^9, 
   3.4088598803707595`*^9}, {3.408859910386961*^9, 3.4088599120119925`*^9}, {
   3.408862520890207*^9, 3.408862705706255*^9}, {3.4088644251923933`*^9, 
   3.4088644315675163`*^9}, {3.4088644814278483`*^9, 
   3.4088644825841208`*^9}, {3.4088645223973846`*^9, 3.40886454192901*^9}, 
   3.408864646259138*^9, {3.4088730742022014`*^9, 3.408873187891884*^9}, {
   3.4088732184080954`*^9, 3.40887333455095*^9}, {3.4088736279315825`*^9, 
   3.408873674291848*^9}, {3.4088737740281377`*^9, 3.4088737983879805`*^9}, {
   3.408873940390707*^9, 3.4088739409375925`*^9}, {3.408874060471137*^9, 
   3.4088740618149133`*^9}, 3.408889602301113*^9, {3.4092256369953156`*^9, 
   3.409225794725315*^9}, {3.409226515461315*^9, 3.409226532277315*^9}, 
   3.409226932421315*^9, {3.4092271646533155`*^9, 3.4092271771173153`*^9}, {
   3.4092273521013155`*^9, 3.409227409781315*^9}, {3.409227583461315*^9, 
   3.409227586725315*^9}, {3.409227672765315*^9, 3.409227683373315*^9}, {
   3.409228378781315*^9, 3.409228381021315*^9}, {3.409230587270315*^9, 
   3.409230601590315*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.05`"},
        {"0.05`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V1=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V1\"\>", "0.01`"},
       {"\<\"\[Lambda]v1\"\>", "0.15`"},
       {"\<\"\[Theta]v1\"\>", "0.05`"},
       {"\<\"\[Kappa]1\"\>", "0.02`"},
       {"\<\"\[Rho]1\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V2=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V2\"\>", "0.01`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v2\"\>", "0.05`"},
       {"\<\"\[Kappa]2\"\>", "0.02`"},
       {"\<\"\[Rho]2\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V3=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V3\"\>", "0.01`"},
       {"\<\"\[Lambda]v2\"\>", "0.35`"},
       {"\<\"\[Theta]v3\"\>", "0.05`"},
       {"\<\"\[Kappa]3\"\>", "0.02`"},
       {"\<\"\[Rho]3\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" T=\"\>", 
   "\[InvisibleSpace]", "5"}],
  SequenceForm[" S=", 
   MatrixForm[{0.05, 0.05}], " Process V1=", 
   MatrixForm[{{"V1", 0.01}, {"\[Lambda]v1", 0.15}, {"\[Theta]v1", 0.05}, {
     "\[Kappa]1", 0.02}, {"\[Rho]1", -0.5}}], " Process V2=", 
   MatrixForm[{{"V2", 0.01}, {"\[Lambda]v2", 0.15}, {"\[Theta]v2", 0.05}, {
     "\[Kappa]2", 0.02}, {"\[Rho]2", -0.5}}], " Process V3=", 
   MatrixForm[{{"V3", 0.01}, {"\[Lambda]v2", 0.35}, {"\[Theta]v3", 0.05}, {
     "\[Kappa]3", 0.02}, {"\[Rho]3", -0.5}}], " T=", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230833713315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Inner Integration\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"LegendreNbMain\"\>", "50"},
       {"\<\"LegendreNbIncrement\"\>", "20"},
       {"\<\"IncrementNbMax\"\>", "10"},
       {"\<\"InitialTailFlag\"\>", "1"},
       {"\<\"InitialTailLegendreNb\"\>", "50"},
       {"\<\"PeriodMain\"\>", "10"},
       {"\<\"PeriodnIncrement\"\>", "5"},
       {"\<\"StoppingLevel\"\>", "1.`*^-6"},
       {"\<\"AbcisseMaxValue\"\>", "100"},
       {"\<\"InitialTailUpperLimit\"\>", "0.5`"},
       {"\<\"ExplosionMonitoringStartAbcisse\"\>", "20"},
       {"\<\"ExplosionMonitoringMaxLevel\"\>", "2"},
       {"\<\"lambda1\"\>", "1.1`"},
       {"\<\"lambda2\"\>", "1.01`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"Outer Integration\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"LegendreNbMain\"\>", "50"},
       {"\<\"LegendreNbIncrement\"\>", "20"},
       {"\<\"IncrementNbMax\"\>", "10"},
       {"\<\"InitialTailFlag\"\>", "1"},
       {"\<\"InitialTailLegendreNb\"\>", "50"},
       {"\<\"PeriodMain\"\>", "10"},
       {"\<\"PeriodnIncrement\"\>", "5.`"},
       {"\<\"StoppingLevel\"\>", "0.00001`"},
       {"\<\"AbcisseMaxValue\"\>", "100"},
       {"\<\"InitialTailUpperLimit\"\>", "0.5`"},
       {"\<\"GrowingControlStartAbcisse\"\>", "2"},
       {"\<\"GrowingControlMaxFactor\"\>", "0.1`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Inner Integration", 
   MatrixForm[{{"LegendreNbMain", 50}, {"LegendreNbIncrement", 20}, {
     "IncrementNbMax", 10}, {"InitialTailFlag", 1}, {
     "InitialTailLegendreNb", 50}, {"PeriodMain", 10}, {
     "PeriodnIncrement", 5}, {"StoppingLevel", 1.*^-6}, {
     "AbcisseMaxValue", 100}, {"InitialTailUpperLimit", 0.5}, {
     "ExplosionMonitoringStartAbcisse", 20}, {
     "ExplosionMonitoringMaxLevel", 2}, {"lambda1", 1.1}, {"lambda2", 1.01}}],
    "Outer Integration", 
   MatrixForm[{{"LegendreNbMain", 50}, {"LegendreNbIncrement", 20}, {
     "IncrementNbMax", 10}, {"InitialTailFlag", 1}, {
     "InitialTailLegendreNb", 50}, {"PeriodMain", 10}, {
     "PeriodnIncrement", 5.}, {"StoppingLevel", 0.00001}, {
     "AbcisseMaxValue", 100}, {"InitialTailUpperLimit", 0.5}, {
     "GrowingControlStartAbcisse", 2}, {"GrowingControlMaxFactor", 0.1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.4092308337163153`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum pre-initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.19295813895786632`", ",", "0.19210801449366977`", ",", 
     "0.19126391921764796`", ",", "0.1887528968315358`", ",", 
     "0.18462756492425117`", ",", "0.17658326568632374`", ",", 
     "0.15403161061604673`", ",", "0.1370076244405437`", ",", 
     "0.12154730551277113`", ",", "0.09507431847213421`", ",", 
     "0.0739755898662149`"}], "}"}]}],
  SequenceForm[
  " sum pre-initiale=", {0.19295813895786632`, 0.19210801449366977`, 
   0.19126391921764796`, 0.1887528968315358, 0.18462756492425117`, 
   0.17658326568632374`, 0.15403161061604673`, 0.1370076244405437, 
   0.12154730551277113`, 0.09507431847213421, 0.0739755898662149}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230857862315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.2077196227197171`", ",", "0.20670700118851462`", ",", 
     "0.2057013923079048`", ",", "0.20271174898216132`", ",", 
     "0.19780854634959372`", ",", "0.18828337562611772`", ",", 
     "0.16188676124465703`", ",", "0.14231660684591`", ",", 
     "0.12485084335291077`", ",", "0.09569786226504245`", ",", 
     "0.07320116093766586`"}], "}"}]}],
  SequenceForm[
  " sum initiale=", {0.2077196227197171, 0.20670700118851462`, 
   0.2057013923079048, 0.20271174898216132`, 0.19780854634959372`, 
   0.18828337562611772`, 0.16188676124465703`, 0.14231660684591, 
   0.12485084335291077`, 0.09569786226504245, 0.07320116093766586}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230883515315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"k={\"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "15.`", 
   "\[InvisibleSpace]", "\<\"}  increment initial=\"\>", "\[InvisibleSpace]", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.7521760395485012`*^-9"}], ",", 
     RowBox[{"-", "1.760654197098488`*^-9"}], ",", 
     RowBox[{"-", "1.7675908303574823`*^-9"}], ",", 
     RowBox[{"-", "1.7824063218138483`*^-9"}], ",", 
     RowBox[{"-", "1.7937326683081587`*^-9"}], ",", 
     RowBox[{"-", "1.7861659533247274`*^-9"}], ",", 
     RowBox[{"-", "1.654904605722083`*^-9"}], ",", 
     RowBox[{"-", "1.5001696457758865`*^-9"}], ",", 
     RowBox[{"-", "1.336423683719981`*^-9"}], ",", 
     RowBox[{"-", "1.0191399460856881`*^-9"}], ",", 
     RowBox[{"-", "7.335575016680844`*^-10"}]}], "}"}]}],
  SequenceForm[
  "k={", 10, ",", 15., 
   "}  increment initial=", {-1.7521760395485012`*^-9, \
-1.760654197098488*^-9, -1.7675908303574823`*^-9, -1.7824063218138483`*^-9, \
-1.7937326683081587`*^-9, -1.7861659533247274`*^-9, -1.654904605722083*^-9, \
-1.5001696457758865`*^-9, -1.336423683719981*^-9, -1.0191399460856881`*^-9, \
-7.335575016680844*^-10}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.4092308938773155`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"raison=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"increment<=\[Epsilon] :          -9\\n1.75218 10\"\>", ",", 
     "Null", ",", "Null", ",", "Null"}], "}"}]}],
  SequenceForm[
  "raison=", {
   "increment<=\[Epsilon] :          -9\n1.75218 10", Null, Null, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230893901315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Sum finale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.2077196227197171`", ",", "0.20670700118851462`", ",", 
     "0.2057013923079048`", ",", "0.20271174898216132`", ",", 
     "0.19780854634959372`", ",", "0.18828337562611772`", ",", 
     "0.16188676124465703`", ",", "0.14231660684591`", ",", 
     "0.12485084335291077`", ",", "0.09569786226504245`", ",", 
     "0.07320116093766586`"}], "}"}]}],
  SequenceForm[
  " Sum finale=", {0.2077196227197171, 0.20670700118851462`, 
   0.2057013923079048, 0.20271174898216132`, 0.19780854634959372`, 
   0.18828337562611772`, 0.16188676124465703`, 0.14231660684591, 
   0.12485084335291077`, 0.09569786226504245, 0.07320116093766586}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.4092308939313154`*^9}],

Cell[BoxData["\<\"Fin partie positive\"\>"], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230893960315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum pre-initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.07234861402552556`", ",", "0.09218033098407681`", ",", 
     "0.11702776358949457`", ",", "0.14766032096037846`", ",", 
     "0.1690575223594494`", ",", "0.17671022506823406`", ",", 
     "0.18063505653802386`", ",", "0.18302154583849517`", ",", 
     "0.18382231248840888`"}], "}"}]}],
  SequenceForm[
  " sum pre-initiale=", {0.07234861402552556, 0.09218033098407681, 
   0.11702776358949457`, 0.14766032096037846`, 0.1690575223594494, 
   0.17671022506823406`, 0.18063505653802386`, 0.18302154583849517`, 
   0.18382231248840888`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230916298315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" sum initiale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.07340408248815561`", ",", "0.09463319685227747`", ",", 
     "0.12187941513070022`", ",", "0.15645122639612935`", ",", 
     "0.18121570083465086`", ",", "0.19018695031791874`", ",", 
     "0.19480994870340254`", ",", "0.19762799109942614`", ",", 
     "0.1985747323011095`"}], "}"}]}],
  SequenceForm[
  " sum initiale=", {0.07340408248815561, 0.09463319685227747, 
   0.12187941513070022`, 0.15645122639612935`, 0.18121570083465086`, 
   0.19018695031791874`, 0.19480994870340254`, 0.19762799109942614`, 
   0.1985747323011095}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.4092309389713154`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"k={\"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "15.`", 
   "\[InvisibleSpace]", "\<\"}  increment initial=\"\>", "\[InvisibleSpace]", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5770384330251914`*^-9"}], ",", 
     RowBox[{"-", "1.9846215342306513`*^-9"}], ",", 
     RowBox[{"-", "2.4217253110251726`*^-9"}], ",", 
     RowBox[{"-", "2.8128396548205314`*^-9"}], ",", 
     RowBox[{"-", "2.9155426957361313`*^-9"}], ",", 
     RowBox[{"-", "2.891788829946424`*^-9"}], ",", 
     RowBox[{"-", "2.860842740783553`*^-9"}], ",", 
     RowBox[{"-", "2.8341316333830463`*^-9"}], ",", 
     RowBox[{"-", "2.823646550059024`*^-9"}]}], "}"}]}],
  SequenceForm[
  "k={", 10, ",", 15., 
   "}  increment initial=", {-1.5770384330251914`*^-9, \
-1.9846215342306513`*^-9, -2.4217253110251726`*^-9, -2.8128396548205314`*^-9, \
-2.9155426957361313`*^-9, -2.891788829946424*^-9, -2.860842740783553*^-9, \
-2.8341316333830463`*^-9, -2.823646550059024*^-9}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230948112315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"raison=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"increment<=\[Epsilon] :          -9\\n1.57704 10\"\>", ",", 
     "Null", ",", "Null", ",", "Null"}], "}"}]}],
  SequenceForm[
  "raison=", {
   "increment<=\[Epsilon] :          -9\n1.57704 10", Null, Null, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230948133315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Sum finale=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.07340408248815561`", ",", "0.09463319685227747`", ",", 
     "0.12187941513070022`", ",", "0.15645122639612935`", ",", 
     "0.18121570083465086`", ",", "0.19018695031791874`", ",", 
     "0.19480994870340254`", ",", "0.19762799109942614`", ",", 
     "0.1985747323011095`"}], "}"}]}],
  SequenceForm[
  " Sum finale=", {0.07340408248815561, 0.09463319685227747, 
   0.12187941513070022`, 0.15645122639612935`, 0.18121570083465086`, 
   0.19018695031791874`, 0.19480994870340254`, 0.19762799109942614`, 
   0.1985747323011095}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230948159315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"moments=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.10929774739760484`", ",", "0.13243595618168386`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
      "0.22239907380407414`", ",", "0.26887351012553273`", ",", 
       "0.11119953690203706`"}], "}"}]}], "}"}]}],
  SequenceForm[
  "moments=", {{0.10929774739760484`, 0.13243595618168386`}, {
    0.22239907380407414`, 0.26887351012553273`, 0.11119953690203706`}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.4092309481953154`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"VarSpread (Goal)=\"\>", "\[InvisibleSpace]", 
   "0.0001344367550627664`"}],
  SequenceForm["VarSpread (Goal)=", 0.0001344367550627664],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.4092309482213154`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"V0Generateur=\"\>", "\[InvisibleSpace]", 
   "0.00005000000000000001`"}],
  SequenceForm["V0Generateur=", 0.00005000000000000001],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.4092309482523155`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"VarSpread (initial)  obtenu dans le normal Heston a partir du \
V0Generateur =\"\>", "\[InvisibleSpace]", "0.0002870610921235024`"}],
  SequenceForm[
  "VarSpread (initial)  obtenu dans le normal Heston a partir du V0Generateur \
=", 0.0002870610921235024],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.4092309482853155`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"TrueIniVarSpread=\"\>", "\[InvisibleSpace]", 
   "0.00010000000000000002`"}],
  SequenceForm["TrueIniVarSpread=", 0.00010000000000000002`],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.4092309483153152`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Normal Heston Parameters=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"S0\"\>", "0.`"},
       {"\<\"V0\"\>", "0.00010000000000000002`"},
       {"\<\"\[Theta]\"\>", "0.00015000000000000001`"},
       {"\<\"\[Lambda]v\"\>", "0.15`"},
       {"\<\"\[Rho]\"\>", "0.`"},
       {"\<\"\[Nu]\"\>", "0.002`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Normal Heston Parameters=", 
   MatrixForm[{{"S0", 0.}, {"V0", 0.00010000000000000002`}, {
     "\[Theta]", 0.00015000000000000001`}, {"\[Lambda]v", 0.15}, {
     "\[Rho]", 0.}, {"\[Nu]", 0.002}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230948343315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"L=\"\>", "\[InvisibleSpace]", "99.99999999999999`", 
   "\[InvisibleSpace]", "\<\" \[Kappa]1=\"\>", "\[InvisibleSpace]", 
   "0.19999999999999998`", "\[InvisibleSpace]", "\<\" S01=\"\>", 
   "\[InvisibleSpace]", "0.`", "\[InvisibleSpace]", "\<\" k1=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9999999999999998`"}], ",", 
     RowBox[{"-", "1.4999999999999998`"}], ",", 
     RowBox[{"-", "0.9999999999999999`"}], ",", 
     RowBox[{"-", "0.49999999999999994`"}], ",", 
     RowBox[{"-", "0.19999999999999998`"}], ",", 
     RowBox[{"-", "0.09999999999999999`"}], ",", 
     RowBox[{"-", "0.049999999999999996`"}], ",", 
     RowBox[{"-", "0.019999999999999997`"}], ",", 
     RowBox[{"-", "0.009999999999999998`"}], ",", "0", ",", 
     "0.009999999999999998`", ",", "0.019999999999999997`", ",", 
     "0.049999999999999996`", ",", "0.09999999999999999`", ",", 
     "0.19999999999999998`", ",", "0.49999999999999994`", ",", 
     "0.7499999999999999`", ",", "0.9999999999999999`", ",", 
     "1.4999999999999998`", ",", "1.9999999999999998`"}], "}"}]}],
  SequenceForm[
  "L=", 99.99999999999999, " \[Kappa]1=", 0.19999999999999998`, " S01=", 0., 
   " k1=", {-1.9999999999999998`, -1.4999999999999998`, -0.9999999999999999, \
-0.49999999999999994`, -0.19999999999999998`, -0.09999999999999999, \
-0.049999999999999996`, -0.019999999999999997`, -0.009999999999999998, 0, 
    0.009999999999999998, 0.019999999999999997`, 0.049999999999999996`, 
    0.09999999999999999, 0.19999999999999998`, 0.49999999999999994`, 
    0.7499999999999999, 0.9999999999999999, 1.4999999999999998`, 
    1.9999999999999998`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.4092309483773155`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"prices=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.022700244618332675`", ",", "0.018854105735355443`", ",", 
     "0.015350432843890073`", ",", "0.012230167340180181`", ",", 
     "0.010553963463795947`", ",", "0.010028699444086799`", ",", 
     "0.00977237982708916`", ",", "0.009620610075222401`", ",", 
     "0.009570357244271578`", ",", "0.00952027296677375`", ",", 
     "0.009470357244271583`", ",", "0.009420610075222404`", ",", 
     "0.009272379827089162`", ",", "0.009028699444086798`", ",", 
     "0.008553963463795949`", ",", "0.007230167340180186`", ",", 
     "0.006240309909234247`", ",", "0.005350432843890081`", ",", 
     "0.0038541057353554562`", ",", "0.0027002446183326933`"}], "}"}]}],
  SequenceForm[
  "prices=", {0.022700244618332675`, 0.018854105735355443`, 
   0.015350432843890073`, 0.012230167340180181`, 0.010553963463795947`, 
   0.010028699444086799`, 0.00977237982708916, 0.009620610075222401, 
   0.009570357244271578, 0.00952027296677375, 0.009470357244271583, 
   0.009420610075222404, 0.009272379827089162, 0.009028699444086798, 
   0.008553963463795949, 0.007230167340180186, 0.006240309909234247, 
   0.005350432843890081, 0.0038541057353554562`, 0.0027002446183326933`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230948418315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"smile fourier=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.02`"}], ",", "0.012251318689389433`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.015`"}], ",", "0.011946289219320587`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01`"}], ",", "0.01168077489805055`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.005`"}], ",", "0.011470159516712163`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.002`"}], ",", "0.011377176609072148`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.001`"}], ",", "0.011352491153703228`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0005`"}], ",", "0.011341386935415707`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0002`"}], ",", "0.011335126411873273`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0001`"}], ",", "0.011333106990422824`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.011796487614934209`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0001`", ",", "0.011794945528445787`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0002`", ",", "0.011793632092928297`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0005`", ",", "0.011790217512224487`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.001`", ",", "0.011785648525916938`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.002`", ",", "0.01177975267626071`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.005`", ",", "0.011784608180433281`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0075`", ",", "0.011812967109242895`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0.011862152629203912`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.015`", ",", "0.012017011358393231`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0.012236270494799506`"}], "}"}]}], "}"}]}],
  SequenceForm[
  "smile fourier=", {{-0.02, 0.012251318689389433`}, {-0.015, 
    0.011946289219320587`}, {-0.01, 0.01168077489805055}, {-0.005, 
    0.011470159516712163`}, {-0.002, 0.011377176609072148`}, {-0.001, 
    0.011352491153703228`}, {-0.0005, 0.011341386935415707`}, {-0.0002, 
    0.011335126411873273`}, {-0.0001, 0.011333106990422824`}, {
    0, 0.011796487614934209`}, {0.0001, 0.011794945528445787`}, {0.0002, 
    0.011793632092928297`}, {0.0005, 0.011790217512224487`}, {0.001, 
    0.011785648525916938`}, {0.002, 0.01177975267626071}, {0.005, 
    0.011784608180433281`}, {0.0075, 0.011812967109242895`}, {0.01, 
    0.011862152629203912`}, {0.015, 0.012017011358393231`}, {0.02, 
    0.012236270494799506`}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230948447315*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"smile rapide=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.02`"}], ",", "0.010702840279885464`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.015`"}], ",", "0.010689517019411897`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01`"}], ",", "0.01067992663895055`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.005`"}], ",", "0.010674142402681788`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.002`"}], ",", "0.010672518742830282`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.001`"}], ",", "0.010672286645275631`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0005`"}], ",", "0.010672228615171626`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0002`"}], ",", "0.010672212366333126`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0001`"}], ",", "0.01067221004505543`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.010672209271295502`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0001`", ",", "0.010672210045055433`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0002`", ",", "0.010672212366333129`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0005`", ",", "0.010672228615171628`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.001`", ",", "0.010672286645275631`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.002`", ",", "0.010672518742830284`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.005`", ",", "0.010674142402681795`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0075`", ",", "0.010676555257204028`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0.010679926638950558`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.015`", ",", "0.010689517019411912`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", "0.010702840279885491`"}], "}"}]}], "}"}]}],
  SequenceForm[
  "smile rapide=", {{-0.02, 0.010702840279885464`}, {-0.015, 
    0.010689517019411897`}, {-0.01, 0.01067992663895055}, {-0.005, 
    0.010674142402681788`}, {-0.002, 0.010672518742830282`}, {-0.001, 
    0.010672286645275631`}, {-0.0005, 0.010672228615171626`}, {-0.0002, 
    0.010672212366333126`}, {-0.0001, 0.01067221004505543}, {
    0, 0.010672209271295502`}, {0.0001, 0.010672210045055433`}, {0.0002, 
    0.010672212366333129`}, {0.0005, 0.010672228615171628`}, {0.001, 
    0.010672286645275631`}, {0.002, 0.010672518742830284`}, {0.005, 
    0.010674142402681795`}, {0.0075, 0.010676555257204028`}, {0.01, 
    0.010679926638950558`}, {0.015, 0.010689517019411912`}, {0.02, 
    0.010702840279885491`}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.409228391840315*^9, 3.4092305374073153`*^9, 
  3.4092306441013155`*^9, 3.409230948480315*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"114.47300000000003`", ",", 
   GraphicsBox[{{{}, {}, 
      {Hue[0.67, 0.6, 0.6], 
       LineBox[{{-0.02, 0.012251318689389433`}, {-0.015, 
        0.011946289219320587`}, {-0.01, 0.01168077489805055}, {-0.005, 
        0.011470159516712163`}, {-0.002, 0.011377176609072148`}, {-0.001, 
        0.011352491153703228`}, {-0.0005, 0.011341386935415707`}, {-0.0002, 
        0.011335126411873273`}, {-0.0001, 0.011333106990422824`}, {0., 
        0.011796487614934209`}, {0.0001, 0.011794945528445787`}, {0.0002, 
        0.011793632092928297`}, {0.0005, 0.011790217512224487`}, {0.001, 
        0.011785648525916938`}, {0.002, 0.01177975267626071}, {0.005, 
        0.011784608180433281`}, {0.0075, 0.011812967109242895`}, {0.01, 
        0.011862152629203912`}, {0.015, 0.012017011358393231`}, {0.02, 
        0.012236270494799506`}}]}}, {{}, {}, 
      {Hue[0.67, 0.6, 0.6], 
       LineBox[{{-0.02, 0.010702840279885464`}, {-0.015, 
        0.010689517019411897`}, {-0.01, 0.01067992663895055}, {-0.005, 
        0.010674142402681788`}, {-0.002, 0.010672518742830282`}, {-0.001, 
        0.010672286645275631`}, {-0.0005, 0.010672228615171626`}, {-0.0002, 
        0.010672212366333126`}, {-0.0001, 0.01067221004505543}, {0., 
        0.010672209271295502`}, {0.0001, 0.010672210045055433`}, {0.0002, 
        0.010672212366333129`}, {0.0005, 0.010672228615171628`}, {0.001, 
        0.010672286645275631`}, {0.002, 0.010672518742830284`}, {0.005, 
        0.010674142402681795`}, {0.0075, 0.010676555257204028`}, {0.01, 
        0.010679926638950558`}, {0.015, 0.010689517019411912`}, {0.02, 
        0.010702840279885491`}}]}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0.0114},
    PlotLabel->FormBox["\"ImpliednNormal Vol\"", TraditionalForm],
    PlotRange->All,
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{3.4092285059533153`*^9, 3.409230576829315*^9, 
  3.409230759244315*^9, 3.409230948517315*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Pricing rapide packag\[EAcute] des spreadoption\
\>", "Section",
 CellChangeTimes->{{3.409053039809927*^9, 3.409053068138596*^9}, {
  3.409053125780328*^9, 3.4090531553590207`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PackagedSmileBiSuperHestonVanillaSpreadoptionRapide", "[", 
   RowBox[{
   "S1_", ",", "S2_", ",", "SpreadStrikes_", ",", "\[Tau]_", ",", 
    "\[IndentingNewLine]", "VolS1_", ",", "VolS2_", ",", "Correl12_", ",", 
    "\[Rho]S1_", ",", "\[Rho]S2_", ",", "\[Rho]S3_", ",", "\[Kappa]S1_", ",", 
    "\[Kappa]S2_", ",", "\[Kappa]S3_", ",", "\[Lambda]1_", ",", "\[Lambda]2_",
     ",", "\[Lambda]3_", ",", "LTVarianceFactor1_", ",", "LTVarianceFactor2_",
     ",", "LTVarianceFactor3_", ",", "\[IndentingNewLine]", "printflag_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "S", ",", "\[Rho]1", ",", "\[Lambda]v1", ",", "\[Theta]v1", ",", 
      "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", "\[Lambda]v2", ",", 
      "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", "\[Rho]3", ",", 
      "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", ",", "V3"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S", "=", 
      RowBox[{"{", 
       RowBox[{"S1", ",", "S2"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V2", "=", 
      RowBox[{
       SqrtBox["VolS1"], 
       SqrtBox["VolS2"], " ", "Correl12"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V1", "=", 
      RowBox[{"VolS1", "-", "V2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V3", "=", 
      RowBox[{"VolS2", "-", "V2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]1", "=", "\[Kappa]S1"}], ";", 
     RowBox[{"\[Kappa]2", "=", "\[Kappa]S2"}], ";", 
     RowBox[{"\[Kappa]3", "=", "\[Kappa]S3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]1", "=", "\[Rho]S1"}], ";", 
     RowBox[{"\[Rho]2", "=", "\[Rho]S2"}], ";", 
     RowBox[{"\[Rho]3", "=", "\[Rho]S3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]v1", "=", 
      RowBox[{"V1", " ", "LTVarianceFactor1"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Theta]v2", "=", 
      RowBox[{"V2", " ", "LTVarianceFactor2"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Theta]v3", "=", 
      RowBox[{"V3", " ", "LTVarianceFactor3"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Lambda]v1", "=", "\[Lambda]1"}], ";", 
     RowBox[{"\[Lambda]v2", "=", "\[Lambda]2"}], ";", 
     RowBox[{"\[Lambda]v3", "=", "\[Lambda]3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"printflag", ",", "1"}], "]"}]}], "  ", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\< S=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"S1", ",", "S2"}], "}"}], " ", "//", " ", "MatrixForm"}], 
         ",", "\[IndentingNewLine]", "\"\< Process V1=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<V1\>\"", ",", "V1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v1\>\"", ",", "\[Lambda]v1"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]v1\>\"", ",", "\[Theta]v1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Kappa]1\>\"", ",", "\[Kappa]1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]1\>\"", ",", "\[Rho]1"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
         "\"\< Process V2=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<V2\>\"", ",", "V2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v2\>\"", ",", "\[Lambda]v2"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]v2\>\"", ",", "\[Theta]v2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Kappa]2\>\"", ",", "\[Kappa]2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]2\>\"", ",", "\[Rho]2"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}], ",", "\[IndentingNewLine]", 
         "\"\< Process V3=\>\"", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<V3\>\"", ",", "V3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Lambda]v2\>\"", ",", "\[Lambda]v3"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"\"\<\[Theta]v3\>\"", ",", "\[Theta]v3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Kappa]3\>\"", ",", "\[Kappa]3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Rho]3\>\"", ",", "\[Rho]3"}], "}"}]}], "}"}], " ",
           "//", "MatrixForm"}], ",", "\[IndentingNewLine]", "\"\< T=\>\"", 
         ",", "\[Tau]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"SmileBiSuperHestonVanillaSpreadOption", "[", 
      RowBox[{
      "S1", ",", "S2", ",", " ", "\[Rho]1", ",", "\[Lambda]v1", ",", 
       "\[Theta]v1", ",", "\[Kappa]1", ",", "V1", ",", "\[Rho]2", ",", 
       "\[Lambda]v2", ",", "\[Theta]v2", ",", "\[Kappa]2", ",", "V2", ",", 
       "\[Rho]3", ",", "\[Lambda]v3", ",", "\[Theta]v3", ",", "\[Kappa]3", 
       ",", "V3", ",", "SpreadStrikes", ",", "\[Tau]", ",", "printflag"}], 
      "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.408885200544726*^9, 3.408885345797515*^9}, {
   3.4088857337737136`*^9, 3.408885740289464*^9}, {3.4088857759932747`*^9, 
   3.408885804462571*^9}, {3.4088867180582366`*^9, 3.40888677629373*^9}, {
   3.4088890347120905`*^9, 3.408889110369793*^9}, {3.4088891486205273`*^9, 
   3.408889229700209*^9}, {3.4088893464212003`*^9, 3.408889365905949*^9}, {
   3.4088894015472584`*^9, 3.408889457767088*^9}, {3.408889492752135*^9, 
   3.4088895324091463`*^9}, {3.408889566112918*^9, 3.4088895685660906`*^9}, 
   3.408889610535646*^9, {3.408897146367831*^9, 3.4088972015720162`*^9}, 
   3.4088992087043023`*^9, {3.4088992513144956`*^9, 3.408899254564558*^9}, {
   3.408946602284253*^9, 3.408946623847167*^9}, {3.408946667207374*^9, 
   3.408946675895041*^9}, {3.4089471374507775`*^9, 3.408947145794688*^9}, {
   3.408947281250414*^9, 3.4089472865161395`*^9}, {3.4089475599901404`*^9, 
   3.4089475615839205`*^9}, {3.408947683289383*^9, 3.4089476883363543`*^9}, {
   3.408947837901726*^9, 3.4089478401361437`*^9}, {3.408947975732497*^9, 
   3.4089479774669056`*^9}, {3.4090531955004168`*^9, 
   3.4090532249697323`*^9}, {3.409053302846227*^9, 3.4090534061138353`*^9}, {
   3.4090540374072056`*^9, 3.409054044376089*^9}, {3.4091641877424107`*^9, 
   3.409164207262411*^9}, {3.4091642433734107`*^9, 3.409164353482411*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S1", ",", "S2", ",", 
      RowBox[{"\[Alpha]1", "=", "1"}], ",", 
      RowBox[{"\[Beta]1", "=", "1"}], ",", 
      RowBox[{"a", "=", "1"}], ",", 
      RowBox[{"b", "=", "1"}], ",", "spreadstrikes", ",", 
      RowBox[{"\[Tau]", "=", "5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"VolS1", "=", "0.0175"}], ",", 
      RowBox[{"VolS2", "=", "0.0175"}], ",", 
      RowBox[{"Correl12", "=", "0.9707"}], ",", 
      RowBox[{"\[Rho]S1", "=", 
       RowBox[{"-", "0.8"}]}], ",", 
      RowBox[{"\[Rho]S2", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Rho]S3", "=", 
       RowBox[{"-", "0.02"}]}], ",", 
      RowBox[{"\[Kappa]S1", "=", "0.0039"}], ",", 
      RowBox[{"\[Kappa]S2", "=", "0.17"}], ",", 
      RowBox[{"\[Kappa]S3", "=", "0.0047"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]1", "=", "0.15"}], ",", 
      RowBox[{"\[Lambda]2", "=", "0.15"}], ",", 
      RowBox[{"\[Lambda]3", "=", "0.15"}], ",", 
      RowBox[{"LTVarianceFactor1", "=", "1.5"}], ",", 
      RowBox[{"LTVarianceFactor2", "=", "1.5"}], ",", 
      RowBox[{"LTVarianceFactor3", "=", "1.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"printflag", "=", 
       RowBox[{"{", "0", "}"}]}], ",", "\[IndentingNewLine]", "strikes", ",", 
      "prices1", ",", "smile1", ",", "prices2", ",", "smile2", ",", "inter1", 
      ",", "inter2", ",", "smileMarket1", ",", "smileMarket2", ",", 
      "\[IndentingNewLine]", "interMarket1", ",", "interMarket2", ",", 
      "spreadprices", ",", "spreadsmile", ",", "interspread", ",", 
      "VolNormal1", ",", "VolNormal2", ",", "spreadMarket", ",", 
      "interspreadMarket", ",", "\[IndentingNewLine]", 
      RowBox[{"tenor1", "=", "\"\<cms5\>\""}], ",", 
      RowBox[{"tenor2", "=", "\"\<cms10\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S1", "=", 
      RowBox[{
       RowBox[{"MarketCMSForward", "[", 
        RowBox[{"\[Tau]", ",", "tenor1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"S2", "=", 
      RowBox[{
       RowBox[{"MarketCMSForward", "[", 
        RowBox[{"\[Tau]", ",", "tenor2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"strikes", "=", 
      RowBox[{"{", 
       RowBox[{
       "0.01", ",", "0.0125", ",", "0.015", ",", "0.0175", ",", "0.02", ",", 
        "0.021", ",", "0.022", ",", "0.023", ",", "0.024", ",", "0.0245", ",",
         "0.025", ",", "0.0255", ",", "0.026", ",", "0.0265", ",", "0.027", 
        ",", "0.028", ",", "0.029", ",", "0.03", ",", "0.031", ",", "0.032", 
        ",", "0.033", ",", "0.034", ",", "0.035", ",", "0.036", ",", "0.037", 
        ",", "0.038", ",", "0.039", ",", "0.04", ",", "0.045", ",", "0.048", 
        ",", "0.05", ",", "0.055", ",", "0.058", ",", "0.06", ",", "0.062", 
        ",", "0.065", ",", "0.07", ",", "0.075", ",", "0.08", ",", "0.085", 
        ",", "0.09", ",", "0.095", ",", "0.1", ",", "0.11", ",", "0.12"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"spreadstrikes", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", 
        RowBox[{"-", "0.005"}], ",", 
        RowBox[{"-", "0.002"}], ",", 
        RowBox[{"-", "0.001"}], ",", 
        RowBox[{"-", "0.0005"}], ",", "0", ",", "0.0005", ",", "0.001", ",", 
        "0.002", ",", "0.005", ",", "0.0075", ",", "0.01", ",", "0.015"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prices1", "=", 
      RowBox[{"PackagedSmileBiSuperHestonUnderlyingOption1", "[", 
       RowBox[{
       "S1", ",", "S2", ",", "\[Alpha]1", ",", "a", ",", "strikes", ",", 
        "\[Tau]", ",", "\[IndentingNewLine]", "VolS1", ",", "VolS2", ",", 
        "Correl12", ",", "\[Rho]S1", ",", "\[Rho]S2", ",", "\[Rho]S3", ",", 
        "\[Kappa]S1", ",", "\[Kappa]S2", ",", "\[Kappa]S3", ",", "\[Lambda]1",
         ",", "\[Lambda]2", ",", "\[Lambda]3", ",", "LTVarianceFactor1", ",", 
        "LTVarianceFactor2", ",", "LTVarianceFactor3", ",", 
        "\[IndentingNewLine]", "printflag"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S1", ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices1", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prices2", "=", 
      RowBox[{"PackagedSmileBiSuperHestonUnderlyingOption2", "[", 
       RowBox[{
       "S1", ",", "S2", ",", "\[Alpha]1", ",", "a", ",", "strikes", ",", 
        "\[Tau]", ",", "\[IndentingNewLine]", "VolS1", ",", "VolS2", ",", 
        "Correl12", ",", "\[Rho]S1", ",", "\[Rho]S2", ",", "\[Rho]S3", ",", 
        "\[Kappa]S1", ",", "\[Kappa]S2", ",", "\[Kappa]S3", ",", "\[Lambda]1",
         ",", "\[Lambda]2", ",", "\[Lambda]3", ",", "LTVarianceFactor1", ",", 
        "LTVarianceFactor2", ",", "LTVarianceFactor3", ",", 
        "\[IndentingNewLine]", "printflag"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S1", ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices1", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S2", ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"prices2", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inter1", "=", 
      RowBox[{"Interpolation", "[", "smile1", "]"}]}], ";", 
     RowBox[{"inter2", "=", 
      RowBox[{"Interpolation", "[", "smile2", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smileMarket1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"MarketCMSOptionVol", "[", 
            RowBox[{
             RowBox[{"strikes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", "tenor1"}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smileMarket2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"MarketCMSOptionVol", "[", 
            RowBox[{
             RowBox[{"strikes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", "tenor2"}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"interMarket1", "=", 
      RowBox[{"Interpolation", "[", "smileMarket1", "]"}]}], ";", 
     RowBox[{"interMarket2", "=", 
      RowBox[{"Interpolation", "[", "smileMarket2", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"spreadprices", "=", 
      RowBox[{"PackagedSmileBiSuperHestonVanillaSpreadoptionRapide", "[", 
       RowBox[{
       "S1", ",", "S2", ",", "spreadstrikes", ",", "\[Tau]", ",", 
        "\[IndentingNewLine]", "VolS1", ",", "VolS2", ",", "Correl12", ",", 
        "\[Rho]S1", ",", "\[Rho]S2", ",", "\[Rho]S3", ",", "\[Kappa]S1", ",", 
        "\[Kappa]S2", ",", "\[Kappa]S3", ",", "\[Lambda]1", ",", "\[Lambda]2",
         ",", "\[Lambda]3", ",", "LTVarianceFactor1", ",", 
        "LTVarianceFactor2", ",", "LTVarianceFactor3", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4", ",", "9"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"spreadsmile", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"spreadstrikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{"S1", "-", "S2"}], ",", 
            RowBox[{"spreadstrikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"spreadprices", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "spreadstrikes", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"interspread", "=", 
      RowBox[{"Interpolation", "[", "spreadsmile", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"VolNormal1", "=", 
      RowBox[{
       RowBox[{"inter1", "[", "S1", "]"}], " ", "S1"}]}], ";", 
     RowBox[{"VolNormal2", "=", 
      RowBox[{
       RowBox[{"inter2", "[", "S2", "]"}], " ", "S2"}]}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Vol Normale Underlying1=\>\"", ",", "VolNormal1", ",", 
       "\"\<Vol Normale Underlying2=\>\"", ",", "VolNormal2"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"spreadMarket", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"spreadstrikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"MarketCMSSpreadOptionNormalVol", "[", 
            RowBox[{
             RowBox[{"spreadstrikes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", "tenor1", 
             ",", "tenor2"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "spreadstrikes", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"interspreadMarket", "=", 
      RowBox[{"Interpolation", "[", "spreadMarket", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<spreadMarket=\>\"", ",", "spreadMarket"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"inter1", "[", "x", "]"}], ",", 
           RowBox[{"interMarket1", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"strikes", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Last", "[", "strikes", "]"}]}], "}"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Implied BS vol: Underlying 1\>\""}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLegend", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<BiSuperHeston\>\"", ",", "\"\<Market\>\""}], "}"}]}], 
         ",", 
         RowBox[{"LegendPosition", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.3"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"inter1", "[", "x", "]"}], ",", 
           RowBox[{"interMarket1", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"strikes", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Last", "[", "strikes", "]"}]}], "}"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Implied BS vol: Underlying 2\>\""}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLegend", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<BiSuperHeston\>\"", ",", "\"\<Market\>\""}], "}"}]}], 
         ",", 
         RowBox[{"LegendPosition", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.3"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"interspread", "[", "x", "]"}], ",", 
           RowBox[{"interspreadMarket", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"spreadstrikes", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Last", "[", "spreadstrikes", "]"}]}], "}"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Spread Implied Normal Vol:\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLegend", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<BiSuperHeston\>\"", ",", "\"\<Market\>\""}], "}"}]}], 
         ",", 
         RowBox[{"LegendPosition", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}]}]}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.4057762003884954`*^9, 3.4057762025760374`*^9}, 
   3.405776255905186*^9, 3.405776416377017*^9, {3.4057800166648912`*^9, 
   3.4057800478217397`*^9}, {3.4057804365948286`*^9, 
   3.4057804765330954`*^9}, {3.405780805461286*^9, 3.405780852274685*^9}, {
   3.405780886540968*^9, 3.405780890916052*^9}, {3.4057809307761917`*^9, 
   3.40578097858961*^9}, {3.4057810164653373`*^9, 3.405781039372027*^9}, {
   3.4057810767477446`*^9, 3.4057810779040165`*^9}, {3.4057811268424563`*^9, 
   3.405781323018098*^9}, {3.405782231113658*^9, 3.405782274176985*^9}, 
   3.405782619449239*^9, {3.4057826743877935`*^9, 3.4057826899974685`*^9}, {
   3.4057830666922007`*^9, 3.405783080770596*^9}, {3.405784231730194*^9, 
   3.4057842850280924`*^9}, {3.4057843588576345`*^9, 
   3.4057844294839907`*^9}, {3.405784469937893*^9, 3.405784493453969*^9}, {
   3.405784536564172*^9, 3.405784565455352*^9}, 3.405784639222393*^9, 
   3.405784935024947*^9, 3.405785043355152*^9, 3.4057851172315702`*^9, 
   3.4057854921762695`*^9, {3.4057856229131546`*^9, 3.4057856243819323`*^9}, {
   3.4057858318390408`*^9, 3.4057858558707523`*^9}, {3.405785917590687*^9, 
   3.405785956138302*^9}, {3.405786069874861*^9, 3.405786093844071*^9}, {
   3.4057861330323234`*^9, 3.4057862199558673`*^9}, {3.4057862719724913`*^9, 
   3.4057863361612234`*^9}, {3.4057865187272286`*^9, 3.405786547821537*^9}, {
   3.4057866082133217`*^9, 3.405786663495633*^9}, {3.4057882781360083`*^9, 
   3.4057882864799185`*^9}, {3.4057907817465773`*^9, 3.405790790449869*^9}, {
   3.4057908885455027`*^9, 3.4057908910143003`*^9}, {3.4057918203133917`*^9, 
   3.40579182125091*^9}, {3.405792185414152*^9, 3.405792211727157*^9}, 
   3.4057925336552134`*^9, 3.4057925855468345`*^9, {3.4057926925020127`*^9, 
   3.405792696111457*^9}, {3.405792752003155*^9, 3.4057927525187902`*^9}, {
   3.405941648091896*^9, 3.4059418314547915`*^9}, {3.405941926097234*^9, 
   3.405941940191254*^9}, {3.4059421299761477`*^9, 3.4059423046513767`*^9}, {
   3.405942483217305*^9, 3.4059424945300226`*^9}, {3.4059425429215765`*^9, 
   3.405942548671687*^9}, {3.405942651751791*^9, 3.4059427327377205`*^9}, {
   3.405942763988321*^9, 3.405942777801086*^9}, {3.4059443173462696`*^9, 
   3.405944558569651*^9}, {3.4059452030664005`*^9, 3.4059452053164434`*^9}, {
   3.405945361663195*^9, 3.4059456457623997`*^9}, {3.4059456851694064`*^9, 
   3.4059456922945433`*^9}, {3.405945957877767*^9, 3.4059459877533407`*^9}, {
   3.4059461661005154`*^9, 3.4059461689755707`*^9}, {3.4059463494790363`*^9, 
   3.405946350947814*^9}, {3.4059464969037414`*^9, 3.405946497685006*^9}, {
   3.405946601061991*^9, 3.405946605015192*^9}, 3.405946671563345*^9, {
   3.4059467461741524`*^9, 3.405946751314876*^9}, {3.405946800222065*^9, 
   3.4059468100347533`*^9}, {3.4059469260369806`*^9, 3.405946934334015*^9}, {
   3.405947047414311*^9, 3.4059470504612446`*^9}, {3.4059471719167013`*^9, 
   3.405947182010645*^9}, {3.4059494736483936`*^9, 3.405949480851657*^9}, 
   3.405949636042137*^9, 3.405949755060047*^9, 3.4059499185944366`*^9, {
   3.4059501806463428`*^9, 3.4059501943966064`*^9}, {3.4059503280710487`*^9, 
   3.4059503324461327`*^9}, {3.405950473995725*^9, 3.4059504837771626`*^9}, {
   3.4059506665306716`*^9, 3.4059506669525547`*^9}, {3.405950768938888*^9, 
   3.4059507691107664`*^9}, {3.40889406187111*^9, 3.4088940924185715`*^9}, 
   3.4088964601202803`*^9, {3.408896496386602*^9, 3.408896662342913*^9}, 
   3.4088967955329704`*^9, {3.408897325261891*^9, 3.4088976278458257`*^9}, {
   3.408897679815573*^9, 3.4088977197225895`*^9}, {3.408897751691953*^9, 
   3.4088977521763377`*^9}, {3.4088978373810987`*^9, 
   3.4088978378029814`*^9}, {3.4088978937415557`*^9, 3.408898045072586*^9}, {
   3.4088980877296553`*^9, 3.4088980926985006`*^9}, {3.408898136324338*^9, 
   3.408898167106179*^9}, {3.408898198325528*^9, 3.4088982149352226`*^9}, {
   3.4088982451389275`*^9, 3.4088983371250687`*^9}, {3.408898367719406*^9, 
   3.408898374860168*^9}, {3.4088988638226805`*^9, 3.4088989240738373`*^9}, 
   3.4088994916784854`*^9, {3.408899621759108*^9, 3.408899814637811*^9}, {
   3.4089000055164757`*^9, 3.4089001585662894`*^9}, {3.4089002016296163`*^9, 
   3.4089003984146442`*^9}, 3.4089006887483435`*^9, 3.4089009583316445`*^9, 
   3.4089011092564173`*^9, 3.408901256759249*^9, {3.4089013426046476`*^9, 
   3.4089013458390846`*^9}, 3.4089020594934115`*^9, 3.408941273871111*^9, 
   3.4089431852828093`*^9, {3.408946138369096*^9, 3.408946163900836*^9}, {
   3.4089462137455425`*^9, 3.408946231495884*^9}, {3.4089462735435658`*^9, 
   3.4089464438280854`*^9}, {3.408946720786528*^9, 3.408946721583418*^9}, {
   3.4090535519603853`*^9, 3.409053556851104*^9}, 3.4090560742588124`*^9, 
   3.40905613091615*^9, {3.409056177167038*^9, 3.4090561958236465`*^9}, {
   3.409064943632226*^9, 3.409064943772854*^9}, 3.409065085806831*^9, 
   3.4091639109854107`*^9, {3.409163983911411*^9, 3.4091640569594107`*^9}, {
   3.409164390673411*^9, 3.409164520457411*^9}, {3.409165374944411*^9, 
   3.409165406120411*^9}, {3.4091654488954105`*^9, 3.4091654545904107`*^9}, {
   3.409165525528411*^9, 3.409165540344411*^9}, {3.409165630519411*^9, 
   3.4091656310834107`*^9}, {3.4091658855464106`*^9, 3.409165940323411*^9}, {
   3.409166043463411*^9, 3.409166045224411*^9}, {3.4091661492084107`*^9, 
   3.4091661527354107`*^9}, {3.4091663356954107`*^9, 
   3.4091663651194105`*^9}, {3.409166419128411*^9, 3.409166432127411*^9}, 
   3.4093158891175613`*^9, {3.4093159223994503`*^9, 3.40931593357154*^9}, {
   3.4093159704628735`*^9, 3.409315976900497*^9}, {3.409316011838668*^9, 
   3.4093160757930207`*^9}, {3.409316110309308*^9, 3.40931628071883*^9}, {
   3.4093163124381895`*^9, 3.409316312625693*^9}, {3.409316410502572*^9, 
   3.4093164109869566`*^9}, {3.409408795606035*^9, 3.409408819356491*^9}, {
   3.40940885107585*^9, 3.4094088515289836`*^9}, {3.4094104010743594`*^9, 
   3.4094104028712687`*^9}, {3.4094108324576416`*^9, 
   3.4094108722240305`*^9}, {3.4094109085841036`*^9, 3.409410909084113*^9}, {
   3.409413995940254*^9, 3.4094140684885225`*^9}, {3.4094141022547956`*^9, 
   3.409414120645774*^9}, {3.409414171896758*^9, 3.4094141963347273`*^9}, {
   3.4094142351635976`*^9, 3.4094142788206854`*^9}, {3.409414318118315*^9, 
   3.4094143504783115`*^9}, {3.4094143866665063`*^9, 
   3.4094143896509385`*^9}, {3.4094144244484816`*^9, 3.409414452433394*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.04818389411495181`"},
        {"0.050081170606599515`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V1=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V1\"\>", "0.0005127499999999993`"},
       {"\<\"\[Lambda]v1\"\>", "0.15`"},
       {"\<\"\[Theta]v1\"\>", "0.000769124999999999`"},
       {"\<\"\[Kappa]1\"\>", "0.0039`"},
       {"\<\"\[Rho]1\"\>", 
        RowBox[{"-", "0.8`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V2=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V2\"\>", "0.016987250000000002`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v2\"\>", "0.025480875000000004`"},
       {"\<\"\[Kappa]2\"\>", "0.17`"},
       {"\<\"\[Rho]2\"\>", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Process V3=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"V3\"\>", "0.0005127499999999993`"},
       {"\<\"\[Lambda]v2\"\>", "0.15`"},
       {"\<\"\[Theta]v3\"\>", "0.000769124999999999`"},
       {"\<\"\[Kappa]3\"\>", "0.0047`"},
       {"\<\"\[Rho]3\"\>", 
        RowBox[{"-", "0.02`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" T=\"\>", 
   "\[InvisibleSpace]", "5"}],
  SequenceForm[" S=", 
   MatrixForm[{0.04818389411495181, 0.050081170606599515`}], " Process V1=", 
   MatrixForm[{{"V1", 0.0005127499999999993}, {"\[Lambda]v1", 0.15}, {
     "\[Theta]v1", 0.000769124999999999}, {"\[Kappa]1", 0.0039}, {
     "\[Rho]1", -0.8}}], " Process V2=", 
   MatrixForm[{{"V2", 0.016987250000000002`}, {"\[Lambda]v2", 0.15}, {
     "\[Theta]v2", 0.025480875000000004`}, {"\[Kappa]2", 0.17}, {
     "\[Rho]2", -0.5}}], " Process V3=", 
   MatrixForm[{{"V3", 0.0005127499999999993}, {"\[Lambda]v2", 0.15}, {
     "\[Theta]v3", 0.000769124999999999}, {"\[Kappa]3", 0.0047}, {
     "\[Rho]3", -0.02}}], " T=", 5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.409417810466617*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"moments=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.05023569112161298`", ",", "0.050235691121612976`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
      "0.11962607889434945`", ",", "0.11960907857616292`", ",", 
       "0.1166646622335836`"}], "}"}]}], "}"}]}],
  SequenceForm[
  "moments=", {{0.05023569112161298, 0.050235691121612976`}, {
    0.11962607889434945`, 0.11960907857616292`, 0.1166646622335836}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.4094178105134926`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"VarSpread (Approx of the goal)=\"\>", "\[InvisibleSpace]", 
   "2.8513429494024317`*^-6"}],
  SequenceForm["VarSpread (Approx of the goal)=", 2.8513429494024317`*^-6],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.4094178105603685`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"logcorrelT=\"\>", "\[InvisibleSpace]", "0.9753136935362288`", 
   "\[InvisibleSpace]", "\<\" / \[Rho]initial=\"\>", "\[InvisibleSpace]", 
   "0.9707000000000001`"}],
  SequenceForm[
  "logcorrelT=", 0.9753136935362288, " / \[Rho]initial=", 0.9707000000000001],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.4094178105916195`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"VarRealSpead (Goal)=\"\>", "\[InvisibleSpace]", 
   "0.000010055277402255163`"}],
  SequenceForm["VarRealSpead (Goal)=", 0.000010055277402255163`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.409417810997877*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"V0Generateur=\"\>", "\[InvisibleSpace]", 
   "2.5376340366143685`*^-6"}],
  SequenceForm["V0Generateur=", 2.5376340366143685`*^-6],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.409417811013502*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"VarSpread (initial)  obtenu dans le normal Heston a partir du \
V0Generateur =\"\>", "\[InvisibleSpace]", "0.000014569119959205852`"}],
  SequenceForm[
  "VarSpread (initial)  obtenu dans le normal Heston a partir du V0Generateur \
=", 0.000014569119959205852`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.409417811013502*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"TrueIniVarSpread=\"\>", "\[InvisibleSpace]", 
   "1.7514176734771628`*^-6"}],
  SequenceForm["TrueIniVarSpread=", 1.7514176734771628`*^-6],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.409417811029128*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Normal Heston Parameters=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"S0\"\>", 
        RowBox[{"-", "0.001897276491647705`"}]},
       {"\<\"V0\"\>", "1.7514176734771628`*^-6"},
       {"\<\"\[Theta]\"\>", "2.627126510215744`*^-6"},
       {"\<\"\[Lambda]v\"\>", "0.15`"},
       {"\<\"\[Rho]\"\>", 
        RowBox[{"-", "0.3111126017239525`"}]},
       {"\<\"\[Nu]\"\>", "0.00042553871125669394`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Normal Heston Parameters=", 
   MatrixForm[{{"S0", -0.001897276491647705}, {
     "V0", 1.7514176734771628`*^-6}, {"\[Theta]", 2.627126510215744*^-6}, {
     "\[Lambda]v", 0.15}, {"\[Rho]", -0.3111126017239525}, {
     "\[Nu]", 0.00042553871125669394`}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.409417811044753*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"L=\"\>", "\[InvisibleSpace]", "755.6229432346672`", 
   "\[InvisibleSpace]", "\<\" \[Kappa]a=\"\>", "\[InvisibleSpace]", 
   "0.3215468134600703`", "\[InvisibleSpace]", "\<\" S0a=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "1.4336256467487825`"}], "\[InvisibleSpace]", "\<\" ka=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.556229432346672`"}], ",", 
     RowBox[{"-", "3.778114716173336`"}], ",", 
     RowBox[{"-", "1.5112458864693346`"}], ",", 
     RowBox[{"-", "0.7556229432346673`"}], ",", 
     RowBox[{"-", "0.37781147161733364`"}], ",", "0", ",", 
     "0.37781147161733364`", ",", "0.7556229432346673`", ",", 
     "1.5112458864693346`", ",", "3.778114716173336`", ",", 
     "5.667172074260004`", ",", "7.556229432346672`", ",", 
     "11.334344148520008`"}], "}"}]}],
  SequenceForm[
  "L=", 755.6229432346672, " \[Kappa]a=", 0.3215468134600703, 
   " S0a=", -1.4336256467487825`, 
   " ka=", {-7.556229432346672, -3.778114716173336, -1.5112458864693346`, \
-0.7556229432346673, -0.37781147161733364`, 0, 0.37781147161733364`, 
    0.7556229432346673, 1.5112458864693346`, 3.778114716173336, 
    5.667172074260004, 7.556229432346672, 11.334344148520008`}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.4094178110760036`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"prices=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00811676568039903`", ",", "0.0034062791466349146`", ",", 
     "0.0013055415711600827`", ",", "0.0008410754087379731`", ",", 
     "0.0006570508556775852`", ",", "0.0005035644057563774`", ",", 
     "0.0003783795216160247`", ",", "0.0002786203135253356`", ",", 
     "0.00014203238227245422`", ",", "0.000011617899087186395`", ",", 
     "8.852999731872192`*^-7", ",", "4.752171949285627`*^-8", ",", 
     "6.408739037464443`*^-11"}], "}"}]}],
  SequenceForm[
  "prices=", {0.00811676568039903, 0.0034062791466349146`, 
   0.0013055415711600827`, 0.0008410754087379731, 0.0006570508556775852, 
   0.0005035644057563774, 0.0003783795216160247, 0.0002786203135253356, 
   0.00014203238227245422`, 0.000011617899087186395`, 8.852999731872192*^-7, 
   4.752171949285627*^-8, 6.408739037464443*^-11}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.409417811091629*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Vol Normale Underlying1=\"\>", "\[InvisibleSpace]", 
   "0.005728493563190314`", 
   "\[InvisibleSpace]", "\<\"Vol Normale Underlying2=\"\>", 
   "\[InvisibleSpace]", "0.005951863337006553`"}],
  SequenceForm[
  "Vol Normale Underlying1=", 0.005728493563190314, 
   "Vol Normale Underlying2=", 0.005951863337006553],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.4094178111228795`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"spreadMarket=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01`"}], ",", "0.0015704098360614866`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.005`"}], ",", "0.0014703278688491892`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.002`"}], ",", "0.0014007304917999829`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.001`"}], ",", "0.0013839331147507763`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0005`"}], ",", "0.0013767318032753793`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"0", ",", "0.0013703278688491892`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0005`", ",", "0.0013647127868821266`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.001`", ",", "0.0013598957377019686`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.002`", ",", "0.001352660983603955`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.005`", ",", "0.001350245901636892`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0075`", ",", "0.001360245901636892`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", "0.001390245901636892`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.015`", ",", "0.0014602459016368919`"}], "}"}]}], "}"}]}],
  SequenceForm[
  "spreadMarket=", {{-0.01, 0.0015704098360614866`}, {-0.005, 
    0.0014703278688491892`}, {-0.002, 0.0014007304917999829`}, {-0.001, 
    0.0013839331147507763`}, {-0.0005, 0.0013767318032753793`}, {
    0, 0.0013703278688491892`}, {0.0005, 0.0013647127868821266`}, {0.001, 
    0.0013598957377019686`}, {0.002, 0.001352660983603955}, {0.005, 
    0.001350245901636892}, {0.0075, 0.001360245901636892}, {0.01, 
    0.001390245901636892}, {0.015, 0.0014602459016368919`}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4091660483814106`*^9, 3.4091661572774105`*^9, {3.409166344125411*^9, 
   3.4091663678464108`*^9}, {3.409166421970411*^9, 3.409166434495411*^9}, 
   3.409224995231315*^9, 3.409315854241892*^9, 3.4093158963051996`*^9, 
   3.4093159391185217`*^9, 3.409315982978739*^9, {3.40931601821379*^9, 
   3.409316081418129*^9}, {3.4093161163406744`*^9, 3.4093162317960157`*^9}, {
   3.40931626196847*^9, 3.409316287515836*^9}, 3.409316318469555*^9, 
   3.409316417393329*^9, 3.409404369786686*^9, 3.409404510055004*^9, 
   3.4094087622460194`*^9, {3.409408801434272*^9, 3.4094088256534867`*^9}, 
   3.4094088575290985`*^9, 3.4094104087932577`*^9, {3.4094108390515184`*^9, 
   3.4094108775678825`*^9}, 3.4094109142873383`*^9, 3.4094110723372474`*^9, 
   3.409413714762981*^9, {3.4094140018934937`*^9, 3.409414073738623*^9}, {
   3.409414107473646*^9, 3.409414125833373*^9}, {3.40941417930315*^9, 
   3.4094142016785793`*^9}, {3.4094142440700183`*^9, 3.409414284602047*^9}, {
   3.4094143343373766`*^9, 3.4094143561034193`*^9}, 3.4094143957448053`*^9, {
   3.4094144307454777`*^9, 3.40941445769912*^9}, 3.409415107930354*^9, {
   3.4094177944038086`*^9, 3.409417811138505*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.155999999999996`", ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{InsetBox[
        GraphicsBox[{{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
            "]]}, 
          {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
onR4dcRKz3r79hOfE/3UziX+DzTIdRc=
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesOrigin->{0.02, 0},
         DisplayFunction:>$DisplayFunction,
         FormatType->TraditionalForm,
         PlotLabel->FormBox[
          "\"Implied BS vol: Underlying 1\"", TraditionalForm],
         PlotRange->{{0.01, 0.12}, {0, 0.3}},
         PlotRangeClipping->True,
         PlotRangePadding->{
           Scaled[0.02], Automatic}], {-1, -0.6180339887498948}, {
        Left, Bottom}, {2, 1.2360679774997896`}], {
        {GrayLevel[0], RectangleBox[{1.05, -0.05}, {1.85, 0.55}]}, 
        {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
         RectangleBox[{1, 0}, {1.8, 0.6000000000000001}], InsetBox[
          GraphicsBox[{{{InsetBox[
               GraphicsBox[
                {Hue[0.9060679774997897, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"Market\"\>", {1.21, 0.58}, {-1, 0}, Automatic, {1,
                0}]}, {InsetBox[
               GraphicsBox[
                {Hue[0.67, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"BiSuperHeston\"\>", {1.21, 1.74}, {-1, 0}, 
               Automatic, {1, 0}]}}, {}},
           AspectRatio->0.7500000000000001,
           FormatType->TraditionalForm,
           PlotRange->{{-0.1, 3.26}, {-0.1, 2.42}}], {1, 0}, {
          Left, Bottom}, {0.8, 0.6000000000000001}]}}},
      AspectRatio->Automatic,
      Background->None,
      ColorOutput->Automatic,
      ImageSize->Automatic,
      PlotRange->All,
      ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzdGmtsFEV4uL29awvIyx/ERFOjEn8piX/406TGCISktTwtIthHaorWtgJG
KK8WSnkVqFTEsy3lVYstSHmUAilSWkmtIhcqNZQSa1EsGuqDhpgGkvFmZndm
dnZ2b+/BI15yt3PfN/O95/u+nd2k9CXZWe+lL1mYmR4/ZVF6fvbCzMXxk/MW
BUDKMABAY+A7PR6gMQwMtZ9GACFEyBAvT6GLC5FQMEABmFxghL4YoWH0jxv9
uOgy4DVg9bF+5SYaybg0YvwCfSpepNCRIJRXvlKxYvIaAT2JL24DKUrHBBYZ
M5h8KmdCVZzAmVIVpWaEZfKrzHqqAaGP3ZxFdIqiC8LXP6hSLBYegtZiqJph
ydH1vFxFJZiRgtpAtj084dhAtoWTHono54wkimzWPSz/h6t7mD6TJUrFmTGt
ojUCUzjiqVmDZXwuxiRp0+2ItZjGtQnMHkJCVx3yZGtTyDS7IhaPLomI1mwC
eJq4FnLq07ELUjlMeGI2j2wdpGi3iI5klcLPjIiBwqPBLGKICRJUrAQWE2UY
zx4bfAsHwFNL7WYI1ErtFodLbawx1mSbkeU2VSQ8Rr7vPCGmAF74R5ekYMBR
ZPnowcGhlLbW3sLqXReq15e0uM7m5R4D6s4tpW0ItLRmvz/Rf/HGxJ6rt8Ci
qMqDHfEY2RSIRW1RYfPggsnl35dkVrVU5lY3HCioce0+XlIPhh+v+XAfArX5
3q3qWjW/sic/tQrOSCjrfX3254eXF5xCkqaeab6GpcyJvpQjiJTTfmi/1ls8
Z/vgR1NWQV/C+2eP5e6obimp9RZe2HUSKLXNhXsRqL0huyyQoAITQFz/Zylr
fi9PLv6jKKkU5iSsu547w+dflr4XSZx9pKELKT5+YOBOluNwFtK0IazjMEqd
3Pdtd7fvjS1D219ehgw48dbVXzV/e9A48cbFnvzOuhYkduuXOR/7azO2Enlj
/ymbuvrfNa8U3c1LXN9TNHdHx6q391dWbTiZX1/XiWR9vq/vL7DAgYWD13VZ
UJLbEPf4OwO32+uyywdLpxTu3VN85Aki+6Sbl39O6W3tLO6oaKo/sqLmUk3a
1l8qZq7TZL+z6dXVcG3C8r8Lpm5CbkKRsrtqXSOSf2rHN9cndV2+CeZET3Zs
ck3ipf79zX9WTFt5aXnabmSjZ/AEZGgQs7F1ZyNyw5n6PF9vxZwNSGQk8d1P
Ej+YcPP6AC58EyGgJToawmG7as1R/O3+ge8OZW3r3jy3fLNvR3vM0NA90lY7
5moEmxOq1sGg6Oo8kFZ6NXduNcoquFt5ySkTVWQCOLWhSUXgRsHQvW/exvOL
3zkU399/O4lNhdoHvAB1a6jiHmOtk1sYcRU/7cqJjq6q+duOrljahJJlcmg8
RAcRGJCXJcIdadVXPmvTet+nHSlOuFkYVRWMyl/t8x1Qkn/6uuu3spQNWSeO
doHpEQgRVuEDyrxzp69QRCRG8ErsH6REovT+VlvTZTDzvvA1RTnejtjusyQM
R2OGJG6gRgky2hSm7RUcRfw8CGl/b5iK5HGoC9ncHhFs9KVBLaQSquNEF5kd
x+DfkVSbEK5EbiIPpcfhFWYeijapKssCinEE3IfXFjTeqE5ZgyW38A9RxBtc
YMEJOgGFeULmZGu5LTOLuUPQUhlq5n70vbkt9VrzRYQn91luXh0YaAk8uJwq
aEi19EbsLkUCU6Xz3aLOtvnNaADuOADVn3NFOV/gdozEgJ0LXdT4Liuh3RLJ
jd6iNBxnRlk5x8T9mRkHO+vSNuPmjcpsuZUE8WOM4uN/HgnMaQoQ0xmEhuOP
otOVXx0+VbCLqyH2uUyhIw+VeWREsmCqqEVFLThuvGQNZiQp3faUhoKRv/wH
M0oVW0uE2DEwhLbDs7sazvM1xDI4olQnY+4N3WVOd65W9KpyVFzIDq4sDkJZ
LxYJmxCantQHYEVHPFgAqjTOWEGcJyHxLNTneUViKyTTn4NUMgrziAsZ7zTK
exSLe0k6wcmSq5+mLgenGi8dKZSOxlKWh9MlsOH419S9YV7jIMVB7gOobMR5
PNy6KgaHmUqMTIcMCSzORgeNEQzcR8FAGkXfgDHRL4HpsnuD6mr0sdCOhaQo
1zPpPRinNQtP7hgaQq0a4J3gEbD0n0pHHjoZ+yjGKg2xuzbxjJ/YQyfAp2kD
X52r6czcYj6dabr59sip6xuA90zTiSseiI70FDQ0OpGIaw5PCA1NkGWjLaDF
qyK6Slaz7R5IBUltzECOD5uCrhXvmTmRrJ4MWQaMBRknothYhky1f1js8BkW
x9ncUBrdzvuVCw152Ag3pVyYiWlMDBALbR1pInsSqOPEWwVZSFiFjvickvF3
5l9iy/sTI8HDVUbD4WkMXaAHBxgLKTsxMIBqDgg0HoUG0XW0LP06deb/wemK
M2EiMTEHo87HWYGUTbOrsZdt/B39zC+cn2LB2DEusX1YWdI6n8sPwYWXmAyi
BX1hJAxX2TEVXPai6AzLB/ciQ+0jvBci67Xs0q5lhRVOwJ01PsB5Hpc3hRbG
M/hC5jb9Knu3QxHm82u4TjDIzddIiQ7DJTDZ2zlWmwR9H5fArNOS7F7BCIuV
wMYR2INSUI4b+zAVFQ4oNJVHCJvcSMxLsTgYWfrCMT+GYr3G7YJHcRTLRjKB
Y0MTWHbTbjN9JbrgB4gkY8rf6gHD/gPBqUNN\
\>"]], ",", 
     GraphicsBox[{InsetBox[
        GraphicsBox[{{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
            "]]}, 
          {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
onR4dcRKz3r79hOfE/3UziX+DzTIdRc=
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesOrigin->{0.02, 0},
         DisplayFunction:>$DisplayFunction,
         FormatType->TraditionalForm,
         PlotLabel->FormBox[
          "\"Implied BS vol: Underlying 2\"", TraditionalForm],
         PlotRange->{{0.01, 0.12}, {0, 0.3}},
         PlotRangeClipping->True,
         PlotRangePadding->{
           Scaled[0.02], Automatic}], {-1, -0.6180339887498948}, {
        Left, Bottom}, {2, 1.2360679774997896`}], {
        {GrayLevel[0], RectangleBox[{1.05, -0.05}, {1.85, 0.55}]}, 
        {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
         RectangleBox[{1, 0}, {1.8, 0.6000000000000001}], InsetBox[
          GraphicsBox[{{{InsetBox[
               GraphicsBox[
                {Hue[0.9060679774997897, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"Market\"\>", {1.21, 0.58}, {-1, 0}, Automatic, {1,
                0}]}, {InsetBox[
               GraphicsBox[
                {Hue[0.67, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"BiSuperHeston\"\>", {1.21, 1.74}, {-1, 0}, 
               Automatic, {1, 0}]}}, {}},
           AspectRatio->0.7500000000000001,
           FormatType->TraditionalForm,
           PlotRange->{{-0.1, 3.26}, {-0.1, 2.42}}], {1, 0}, {
          Left, Bottom}, {0.8, 0.6000000000000001}]}}},
      AspectRatio->Automatic,
      Background->None,
      ColorOutput->Automatic,
      ImageSize->Automatic,
      PlotRange->All,
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
2rh/AchOgfY=\
\>"]], ",", 
     GraphicsBox[{InsetBox[
        GraphicsBox[{{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV13k4VdsbB3BkSoWrNHGQTLcSSYMhbzJEKRT7HDIc83Cc0RCROclwGvQT
0sAlSlfpIlROpEIlCZFShBwkYyXh9/pjP/v5PPt51lp77b3W+10b3JlHvIQE
BASEBPHCu+h+tZ09J+J5EX/Ev15e5wj6UvPrP4TE87ru1Us1r3UExru2hXZO
PC+6rVhTGN3uc6rhpX88704+yTJgtSMUJPY5VTjG80ScmhcMVjqCRWNu3Fn9
eN5CYE9I53JHSDqk+GbP7zgeZySge7mAI0jarQ3ICovjsTvnNCgDDuBAic++
4x7Lo27pCN1Z7ACaxfrJe11ieOspWl7hYQ4QuOug1TeXaN7381vnb5s5wC9m
kdRIWiSPTK1bfX6FAyissl8yzY3gbbx3Iiu8kwINNyaGy1xO8ObIWpLncyjg
cN00rHh3KG/D1p9f6DQKzBlujru6K4Tn9dp8skmPAmr1IrHmy4J4Wa5FioYi
FPD4ETTXv4TDK5mqYP2vjQzxyRmkR6IsXnlCwV9/F5LBToHqlfGQxjv2sqvi
fCgZ6mkVifllPryhpTyJP4fIsD/91/+UKR48cSmxOBllMpBIJp0kBRfeoajn
3MgZAv5kfg1tVSR4tiZ/vdVoJ6A7535H2+AB3oskW5G2ewTU2yRZnAzcwZN0
Jr3/fJGA+4G7cj2MNoOcNXX823ECSEWPrLeLWYCx8+Wb+q4ETLU9b+Dst4D5
S715/S4ENAq0mNw7bQGnPvzVdg4dQgzs2iZuCTuV9Vq/OhPQJCilpLX0ACyd
VTic4URANIU6tmmZFTArh7YvcSRgIjbG4ryYDTA2ZPYJ2BNgr63CT1xmB0Gu
Yk+yDxLQIfpezXmrHYSJ58hYox0/nvXcZmsH2u/ycgTR1KTZT53pdrBEViDS
5wABAX0t7ZuU7SHAOVN7pyUBsRkxdS93E/DviZmYT+YEFAt8uibtTQHVe7G/
3fYRsO3dxY99iRQYm/3HWB5d+u8BucoiCgz1d9S3GxNQ6Vie7jZOgfsNFy5Z
oetKU1PvRTgAX65rp8FeArp8DcPt0hxB2pQao2JEgPibTCLjsRP8w7Cmqevj
eJ0T5Ek9ThC6L6z1mx4BRXxOb46gM/BFZUJK0YeFrBhF+5yh8FqO+z70xe3z
p6rrnKGvtqSHiuPekO5e1lfvApfdj4UX7iTgyr+ySRm+VEjLCpFy307As8ll
396HUkH+uY28FnpUT8iGdIYKplk7XP/oELD32ahs7k0qqPWuOn0J3df9PKdo
iAraFT0uzdsI2CR9orI6wA2oJzlbrLQJKOd0D/ax3EEngKoZoElAoewdblu0
O8go2bbuRWdWROk+O+cOEapfimXREfNK0QV33cGU1jPP20KASZLHGv8xd5B4
LSSxBt2cM2j2nekBiY4VjU2bCBhqnsidYXiCYha/z1ODgA+BTyyGIj0h/vzh
WUC/Wn1x9D3XEzRXiJnJoe867dB/WOwJee98OS3qBBwfPP4mctQTTucX6Zqg
hQXmFpYwvGB34gr7rWoEKGqJOUvSvWFt7J6pTSoEZOtomzhEesOWiq6upej1
Ox3+zjvrDUEyCQuDGwlYtadoWu+eN/DrJ34XoCUOWnO9fnqD15G2Gg30D+9L
vIcxPlAcJZa6Q5mAIP/H+WJpPnDx+OT2tehxOj/5SJ4PtA5Wrp7dQMBIkAFl
8JkP3HjZcLYG3Rv7aWzlcl/ILr5qbYtuuqquTEv3hXdxXksilAiwyrURLy/w
hS9n473d0Q35YaMClb5A97cSsUTX3X5Rld7lC2ZKjdOr0VVVzKO1Sn4gmqeW
W6ZIwI32+/Hrivyg5b/bqvMKBKi8/+zv+dAPyGp9xoPonI9Lbe+88oOYhxcy
W9DZfcdIZmN+IMa3mC1AX5hYKGPt8Idecu1pe3SkpMXX5zx/6NbVqX1AIuBL
QMpfw6/9ISeF03ALbfGi2UDysz9wf9oIZ6FlEh3O2QnQ4Nr3j6vC0PmCNL2e
vTS4+3T8uh5agnrHQ9iWBu0rP5huQjOqJ1PV3WiQZW4jL4feHR7RS4+hQfm+
l15z8gS8nEpN/l1DA2LihXsdetvRljJSCw3iaqtzy9HpJas/7+2lwRML9dU3
0VTGNd3TQgGgS7W+xEVPfr37caVJAEyuKRNyQq/vequlWRcAt9JywgXQUXpr
HW1aA6BFomZ8Wg7XwyWn+MC+AJh+r3l5GF1s199RKUwHPqP/9Du0cdOPGHMz
OmTXnqovQd/YYnDbz54OFS4NHYVoieSo9hQvOpiqmstfR7fuF9/89hQdfNb3
GJ5F+9asa3V9RodvgkQfE/1K0WU+tp0OuYflub5onchcjRsDdNC/JEZzQ8/q
bz45IsqAVmGT6qNoaiazQGoNA3QUuLqH0HU//3ujo84ALfmpj+ZobqmhWth+
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
/g==
            "]]}, 
          {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwd13k0VW0bBnBEk5JEphChJDKV2Z1kKDLbnELIPJxjJjNHSKgoUUpkKmUo
c2WXvEplyPRKZAjFayhJg+m7fX+d9Vvr7LP2efbz7Pu6hB1opk5MDAwMuowM
DGuf63XFDw+HxJIGFyKrm+oooLJtha8/MJZ0bbY+HIqm/tu92uMbSx5v1tA/
iO5xOd/8zj2WlNlWp5heS4HChFHrmlOxZMDnA7vP1FBA700u/ZJKLPn3wLLZ
QCUFEk8KvVf/Syen1DhpSWUUqOf6Vam0QCdn/3FlUEDPDbTekJ+jk77am6U+
llLgFDXCUWKSTrZKD1jtQ0teGvjF2UcnX/XZrz57SIF37TcFp2rp5L87hx70
3KcAmzmP541zdNKbJ6y8Po8CQsx9zzUC6OSWxqRoE7RMxU2uz950cqAobPjz
XQqYcQqRkq508kTYe5MN6IwuMY5nBJ28PCD3Vy+HAsIW8jWD8nSyc8/3jOpb
FFAgDJnFZmJI3UtH4rXSKUCxis0qdYgh6Q4mM8JxFCiThaFbtjEkt8tGm7vn
KbCR9e+epFMxJK9yVYAouuoZrdjVNIZcyMjPF4ulAOee03XCR2PI2cu3mUVj
KNA6LdubJhxDVhaZjbFHUECLPrgjeCiaTC7JcnwQQAGpEpWLR2yjye9vVL//
OEsBP0V9g2nbKFKoa7l0UJ0Cv2nF26bSIkg33VuvFdgpIMhpse5nShh5b5ph
s/yIFTQXzP1XaRtCMo9evePz0Aood46dK1EKJv0buFPPB1nBspok/bZiILl7
5tDdTcesQPw1S4wOqz/52yZ5NHWzFZxd8F8eW+dLHjhb5FTfYQmxFzMEnq33
Jk+wS48oZluCuaCdU8ZTD/Kx3N/L4+6W8NqjJiG/0oUUlsvr91W3BN3039dE
rM6S7QmQ3bvNEgQEtD4ICNqSb7vzHr0eJ2Ap80twlxBBevkF3Hv7koBPOdW9
3V9PkCYaaZl+OQS8Nk7UC/c7RE72j7m/iiWg2k8x96yGJKxwMl2ycyNAoPiZ
kfwGPSgUYTOUMiVgvvtVs6+uHuh8Knk6YELAG4YOrUfxenCX3mGbgg4kxhVl
Nx4HjcG76t+MCWhl3Lb74KYTcHlPsFOVEQFRVnbf9rMagKGUrK3BSQLmYqL1
rmwwhsf3FRdu6xFgISM6kcBqDkvBEp2fgIDe9X3iNtLmQJxmS0xHnxq45Chr
Yg734zPDDdF2iYuDH9LNYQ8tj4/UIMBztKNnv4gFJBllHLirTkBMRnTjOyUC
/mywLAtUJaCEYTCb3Rmfw5iYir4iAbL/Xh0YTbCCror8uM3oiocn+GuLrSDd
4sO2N4cJqD1VlW7/3QrUntj0Hkc3ViQnPwqjwNHpcU2DQwR8dFULNU87BT9v
UYKs5QnY+D6TyHhuDX1kJfX+Qbxfm7hdAsPW8IAI5gtAF0/4juQw2oConOwi
oA2ZDKjFR23Aljv+dI80AVflV87XN9rAEfWW6yxo4XSHytHXtiC2iX3V6wAB
tx5yJWa42kGEQm+iswQBTT9Yp/uC7WB4I1uPInpGmclY4IIdJIlqE5vQR5pm
uHLv2QFras3PB/sIGP30Kqd40g6WvjwrW9hLwH72kNp6T3tgS73EfVWcgCrf
T19HvR1gxaf6/sIeAoq4SlO6oxygiKH2TBs6syZSoemyA1yvqtItQoet7I4q
LHMArdHCslNorcSz3O7fHCDnlPv4CxEC2nO+as/SzoK4ac1wpjABk+1zuX+o
jjBu/4zXW4iAfr+XepMRjuBRMCpthG7ZeXWmL8URNvhyBEmjy6wPqTwtcYSQ
yZg704IEBH0Neh8x4wgS/s8tqWhmhuXVdVQnsL2wYHlOgAChgxts2Lyc4UFZ
Wk4lPwFZcjJalAhn8D3I3ZeB5jtMkci75AyuWhWGYWhO9eKfyo+cgexQm9JC
b9Y3SnH65Qw84mm/u/kIWHC+Tj6NdgFPy3KCBe3v/jx/Q5oLfO5aNZ7iJeC7
18RF0zwX+BVHje9ET/mrWn1tcoEOmZKiXPRIzOC3HVtcwUyu4akWuvX2XhGP
dFcIysuUvMJDgEGu8caqQlfw5xb4Gopuzj83w1DrCqG2r4ac0Y0P3talf3SF
8+ypceroujqaWcNuN6DfZM2b5iagoKc6lrfYDURYpsQpaNG+IXfHp24Q6shW
oIvOGdhkUtriBvqKtvaH0VmjpwW0v7mB9GB8Eic6dW610vuQO6y2slV27iQg
gk3vyyvSHRrHdY1s0J89k7b/1+YOTr/SQozRem/bVdmG3MG/7GSfFpojgXLZ
nMEDjP1ZFSXR+YweysNHPEC9pNZpiQvX0670LLOJB8R6hSl8R1PrfyTvtfcA
0bhSxXG0UmjYiFe0B4zyu35sR7+bT77494UHZB87kFGEljXrqBTo8IAx5dDN
2ej08p1DR0Y8gKasXn4NbUfNVohn8oSmUv4sOvrHl7KBHVqeUDGq/8UebaXz
c4OimSeYXldbpqCf5inLnTrrCcIsd3VN0XH2DXF36J7wwr3jnBaa72PnQalG
T9BtbjTbh45U5jll3OUJGc89t4qgR69bx/qNesI60eRFfnSJ+VhvLbMXZMcr
BbCjdzyWWDfA6QWbFRoZWNHB26lSDGJesD6/+TkLWrN1IVpH2wv2SGl9WuTE
53dA9YGbhRdEfqtW/YXefDGyJ8nJC4bbC1vm0F26GyU7z3uBpObflEm0coGB
xcI1LzAMt6kfR99mvhLJW+AF09LqIp/Rri94u840eQGHvl98P7pFyHYlpscL
Ou3fJHxAy0Xk7isY94JYnez6HnR6/7hp84IXHDOa29eFXlSRDJ9aTwWZjpev
3qPtMmmF27ip4CTGebMN3fjr8Xu5vVRgyP6c24KWIH4vWihSQeia3OBbdEqF
mvg5XSoM2jAav0H/4Ig2zrKkgq2R8c/XaCuff0JIFyrUkkJtr9DP2jbljwRR
YSuL90ATWkTasI0lgQrBAZq71xyflPpnXwYVeFyuXv8HPTXZs8egiAobZdy0
1mx8nN+QVkMFV/Hne9ZcWXgmOPU1FSzuZCqtucB5aWRbHxWSMyIS15wulnky
+T8qaJZx8P3/90cP1WxepgKXBfFlzcF3O0QS2Ghwb/743Nr9uTrQkll20yB7
aVqlGU0R3vI7RpYGN/uOvlj7fyeGihwYtGigsaR3/h1aJVu7JdycBvvbGOJb
0ZK2I4qLTjRgeuHe1I7eJRCZGxxEA1eI1+pEb+nn37qQQIPlamKlG718oybI
7wYNHDM+LPSiZygWI9+KaQCG7FJrz/MTz5wB9RkNZHQX7wyin6dLirgN0WCg
ZlbzC7rc4nXS+HcafNryl/of2iTx0WI5ozeEn6r7MIs+etzI+eAOb9idaev6
B11XdIt/ht8bXJ20klbW9sfGqfYHot7QOzw4vQ73655XCar7D3tDZY6m+zZ0
lvi/375q4PefbzjPheaMEyso1PWGN9rxA2vngVm7gV2M4g3iqhW6EujxhsUx
oTBvWGp5z6CLthU5cfNTrDdMCNE2GaH/jc4wvpXsDde1m40s0a+PHHrCl+0N
ZEPlNVf0vXrqZa4Gb/gTHbo+BS0i+Ey764033KexLl9H3whnXUzt9Abp26dl
c9GJakVO7GPeIO+vYVaN9qwbVmHd6AMLjHxho2vnl1fmWzO7D8z/qLb7hrY+
F5GfwOsDPWm89LX31Uklfvb1kj7wNk0imgvfZ9JV5mMMhj6gmprgcAL9vfzV
pYU0H9gelFtHoluB7pyU5QOU81Gybej7LRrqIvk+MNs29fkT2nGicvJklQ/8
rfFZXEH37s7Tzu/1AVl5pZ+a+P6tvxS1aCbgC6HJHJyd6JsCah0TYr6gwMhy
bBwdXPyrKFLaF1ilkkr/oGVfUYli8AUmg1PKwjgP8lasy5kcfOGfVQYeP3Si
l7JLeYEvfF3XySiC88ZlcV5dt9QXVjM1/1NCH7tQxjlQjdc76rMbo5fz9jZs
bPaFejm5rZFo734uAbv/fOHpDquOQTShP9fBJuMHvPfOJD7A+Sf/4eG9PCU/
CBF8JPUKze7iFqWi6QfXtAq2jKCbY4aknE39YEY1IJwH56laXWvCM38/+Fe9
dn8Cmlcv8YxZuB9UXhAtzkMvdGsfnjjvB4deKri8QJd9f/qZ87ofsN3WTl1E
J0cG193P9oNhNl1G3l0EuG9VuHKkyA9ObJktPozWuTnr0lPmB8wr6qnm6D0S
xRqetX7Qpq9Q4YvWXP7jPVkbANZFIbb7MH/0us5eyGwIAIF/op8ooqldo7l6
bwPgdrOThi76RnFbV0F/AMzn8lc5o+cp+UpnVwMgXucOrRBdVGXM0H8sEIZb
+ARlMN9oiOjwXjwZCDyWYp810d3JqnIqRCCcPeDWZoZmchJ3zHAJBP2uHwLB
6NM7ll6ZJwbC/OvAaw1oNu/CSy1tgaDXcITxDOanvI9ZRWG9gaCyzHnMD62q
m/pCcjgQ0r5GlMajXQXDf1yYC4RrE+4M5egX70wtdbiCwOkYSzKLKOYTiRVB
8lQQdH0wdqxC942Yl5SNBUGTa+ldRcx3o4uWE2+ngyA8ZYRmhJ7hPC365WcQ
rN/73t4FzaRrf0NgfTB0X9hbfR29v9grLlE8GPZuuCfxFx3qF2fr6BIM/c4R
6k2YH3cx17DxTARD5BQ1KxTzprjAk+Py34PhQJH90Qy0zOH6WMM/wVBxR4e9
En3MtfFv7KZzkCUsLTqL9nrXPv5d4hxcNDsr7bQfz8PVifq37udg38rYRytJ
As6I8dMip86B0R097jNSeN48L771mT8Hk8f2yEeh1SoW9zounYPND6ODctC8
Wv1DeltCIDRuS8goutPulinHgRBIvyrl6ol5WjdL6HC+RwiEvD/8i475++AO
0eU3kyGw5CFv0SGL8/TUVcqzuRAw7u3L+Y3ekstcVfo3BI4t8/MKyREwITNG
vbo5FEoPlsR7ou8aFgzZ7A8FVq8x502Y/7kT9zV+cwuFzGUlNX0FAlYZpC7u
nAiFnZxHq2exP1QEN2+o+h4K7Tz35YSwb7h+c4q1+BsK+jblI4bo9sHb4VdZ
w0Bmam6oBJ1bz+7NIR0GRuzXrXywx+iEzZuz+YXBy/HNugwqBCT9eiK4fjkM
PPz6K3Ww7xyhWd3MZwmH9fdDZsLQP8fnubXZwqHQwsH2Mdq2R2p7rFA45Jme
Hd2NfUmmMnsd09Fw2NcRdXEF3elL/7ocFw4y1u+tGo9gHpo58egnewQoaDGf
DzmG82PHT2NG3ghgEdd8/BjtrpQ9u0U4AsxiZndMo+tifhwQlY0Ar8kxTztt
3O/cWYWmJhFQeVIw8rgOzo8j01mlVyLg5qZReTHse41O11WfZEZAqy1xxR49
lajZ15QTAanKRiJrfVCt+xr3p/IIaGngHeQ+TsCAm0bqlo4IIAs4H8qdIEAw
7VK8G0ckmAu3esQa4PrUKIsH8EUCcaUioQ1NHfjcGCUSCS9lpHr5sG/W71Vi
ypCLhLu6NLZH6DNPh8KaTCNh4QO1e8SQgDtjsr570iIht4K/+iT22e273Etm
NkUBm50Utx6B80mne6s+WxRIdPpL3kFH+RzxKuSIgvnbHkG/0TNNOw/Y8UfB
2IOxynuW2I99Xt57fyAK9DKimtko2Edf7cqvMIqCZps/0p9PY//1bbsZci0K
TCQU2Cvscf2bFS6sF44G29k6rlkvAljFK/NzxWLAeinvS00c7g/Dj7MiYnRQ
/enaJI793TQqHnRVYkFNr+FjPYl5xG6ifVbtPDCqvssrGcD9p/feRc0iDnr8
+jj2rmI/W7E94OUaDwfVXI6n7raEZftcORG3BAjO1nJuB0sIaPXQCI28ANrT
Eiv69pZwdmLyohU9Ea4FNpi8iLSET+3bNvDFXIQWL8YPAVmWsPNFXXxkehKs
rFRb9NdaQuMZ/hNuGcmwf/JlmlqnJRzcwMTxqzQFKttqv7BMWYLVvHA4T1kK
7Fj6/XAjOmpY86symrYq6c+Kbn8SXR+GxkHGsB3t683owVSeAsz3bXl2oSs+
MDRufZQCx4d+a8uhlR+sBohWpIBwJmuGLdohU2hYG/378D/W9ujEODBwQZfm
+Qo7ovvsIkXuo/tmiu67ocO4VlsPVqbAhCL9qT+6PmJlr2pVCmz3mBlIRI97
CKZZo5WmRnOS0WwUjZVwdLlym9Nl9Bn5iK7na1aKnL6GZvi6HKVTnQIVzw2W
7qD3dQtMuaAlbg+Td9EmDeqWF9B7ddzpBejcrHCpd+j+eWLzA/SbC7cyptHC
i3UtJei5wGfrttWkAOtbjivlaD7HAaoM2sHR1rwCrWWy/MEEPd10i7sa/T9E
/xrl
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesOrigin->{0, 0.00135},
         DisplayFunction:>$DisplayFunction,
         FormatType->TraditionalForm,
         PlotLabel->FormBox[
          "\"Spread Implied Normal Vol:\"", TraditionalForm],
         PlotRange->{All, All},
         PlotRangeClipping->True,
         PlotRangePadding->{
          Automatic, Automatic}], {-1, -0.6180339887498948}, {
        Left, Bottom}, {2, 1.2360679774997896`}], {
        {GrayLevel[0], RectangleBox[{1.05, -0.05}, {1.85, 0.55}]}, 
        {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
         RectangleBox[{1, 0}, {1.8, 0.6000000000000001}], InsetBox[
          GraphicsBox[{{{InsetBox[
               GraphicsBox[
                {Hue[0.9060679774997897, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"Market\"\>", {1.21, 0.58}, {-1, 0}, Automatic, {1,
                0}]}, {InsetBox[
               GraphicsBox[
                {Hue[0.67, 0.6, 0.6], 
                 LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
               Left, Bottom}, {1, 1}], 
              InsetBox["\<\"BiSuperHeston\"\>", {1.21, 1.74}, {-1, 0}, 
               Automatic, {1, 0}]}}, {}},
           AspectRatio->0.7500000000000001,
           FormatType->TraditionalForm,
           PlotRange->{{-0.1, 3.26}, {-0.1, 2.42}}], {1, 0}, {
          Left, Bottom}, {0.8, 0.6000000000000001}]}}},
      AspectRatio->Automatic,
      Background->None,
      ColorOutput->Automatic,
      ImageSize->Automatic,
      PlotRange->All,
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
/QsPzlSi\
\>"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4094139553769755`*^9, {3.409414003440398*^9, 3.4094140751917763`*^9}, {
   3.409414108926799*^9, 3.4094141272552757`*^9}, {3.409414180756303*^9, 
   3.409414203116107*^9}, {3.409414245507546*^9, 3.4094142860395746`*^9}, {
   3.4094143357436533`*^9, 3.409414357525322*^9}, 3.409414397182333*^9, {
   3.4094144323548837`*^9, 3.409414459277275*^9}, 3.4094151094147577`*^9, {
   3.409417795669458*^9, 3.409417812044772*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1153, 925},
WindowMargins->{{Automatic, 11}, {2, Automatic}},
ShowSelection->True,
FrontEndVersion->"6.0 for Microsoft Windows (32-bit) (May 21, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[568, 21, 173, 4, 31, "Input",
 InitializationCell->True],
Cell[744, 27, 225, 5, 31, "Input",
 InitializationCell->True],
Cell[972, 34, 342, 7, 31, "Input",
 InitializationCell->True],
Cell[1317, 43, 257, 5, 31, "Input",
 InitializationCell->True],
Cell[1577, 50, 380, 7, 31, "Input",
 InitializationCell->True],
Cell[1960, 59, 86, 1, 47, "Input"],
Cell[2049, 62, 114, 2, 27, "DisplayFormulaNumbered"],
Cell[2166, 66, 2336, 83, 134, "DisplayFormulaNumbered"],
Cell[4505, 151, 325, 6, 31, "Input"],
Cell[4833, 159, 219, 6, 31, "Input"],
Cell[5055, 167, 151, 2, 31, "Input"],
Cell[5209, 171, 1219, 41, 45, "Input"],
Cell[6431, 214, 92, 1, 31, "Input"],
Cell[6526, 217, 131, 2, 47, "Input"],
Cell[6660, 221, 4775, 133, 63, "Text"],
Cell[11438, 356, 236, 3, 31, "Input"],
Cell[11677, 361, 423, 11, 43, "Text"],
Cell[12103, 374, 1394, 39, 44, "Text"],
Cell[13500, 415, 30, 0, 29, "Text"],
Cell[13533, 417, 4709, 148, 71, "Text"],
Cell[18245, 567, 98, 1, 31, "Input"],
Cell[18346, 570, 4658, 145, 71, "Text"],
Cell[CellGroupData[{
Cell[23029, 719, 362, 10, 31, "Input"],
Cell[23394, 731, 498, 8, 21, "Message"],
Cell[23895, 741, 380, 9, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24312, 755, 929, 21, 50, "Input"],
Cell[25244, 778, 1787, 55, 62, "Output"]
}, Open  ]],
Cell[27046, 836, 751, 23, 61, "Text"],
Cell[27800, 861, 31, 0, 29, "Text"],
Cell[27834, 863, 457, 14, 29, "Text"],
Cell[28294, 879, 3715, 111, 63, "Text"],
Cell[32012, 992, 148, 3, 29, "Text"],
Cell[32163, 997, 2297, 66, 78, "Text"],
Cell[34463, 1065, 177, 4, 31, "Input"],
Cell[34643, 1071, 51, 0, 29, "Text"],
Cell[34697, 1073, 551, 18, 29, "Text"],
Cell[35251, 1093, 241, 4, 31, "Input"],
Cell[35495, 1099, 3223, 98, 75, "Text"],
Cell[38721, 1199, 388, 10, 29, "Text"],
Cell[39112, 1211, 3551, 104, 125, "Text"],
Cell[42666, 1317, 525, 15, 31, "Input"],
Cell[CellGroupData[{
Cell[43216, 1336, 159, 4, 44, "Subsubtitle"],
Cell[43378, 1342, 478, 13, 29, "Text"],
Cell[43859, 1357, 221, 8, 45, "Text"],
Cell[44083, 1367, 20, 0, 29, "Text"],
Cell[44106, 1369, 1142, 38, 87, "Text"],
Cell[45251, 1409, 801, 25, 32, "Text"],
Cell[46055, 1436, 105, 3, 31, "Text"],
Cell[46163, 1441, 1010, 33, 73, "Text"],
Cell[47176, 1476, 1369, 44, 50, "Text"],
Cell[48548, 1522, 1290, 42, 46, "Text"],
Cell[49841, 1566, 486, 15, 46, "Text"],
Cell[50330, 1583, 457, 15, 49, "Input"],
Cell[50790, 1600, 851, 27, 46, "Text"],
Cell[51644, 1629, 20, 0, 29, "Text"],
Cell[51667, 1631, 479, 16, 48, "Text"],
Cell[52149, 1649, 680, 20, 29, "Text"],
Cell[52832, 1671, 219, 6, 44, "Text"],
Cell[53054, 1679, 1932, 64, 72, "Text"],
Cell[54989, 1745, 25, 0, 29, "Text"],
Cell[55017, 1747, 537, 17, 29, "Text"],
Cell[55557, 1766, 630, 20, 38, "Text"],
Cell[56190, 1788, 1770, 57, 95, "Input"],
Cell[57963, 1847, 854, 28, 52, "Text"],
Cell[58820, 1877, 49, 0, 29, "Text"],
Cell[58872, 1879, 2491, 79, 69, "Text"],
Cell[61366, 1960, 2493, 79, 69, "Text"],
Cell[63862, 2041, 778, 23, 45, "Text"],
Cell[CellGroupData[{
Cell[64665, 2068, 934, 30, 53, "Input"],
Cell[65602, 2100, 867, 24, 52, "Output"]
}, Open  ]],
Cell[66484, 2127, 178, 4, 31, "Input"],
Cell[66665, 2133, 696, 19, 60, "Input"],
Cell[CellGroupData[{
Cell[67386, 2156, 1113, 32, 52, "Input"],
Cell[68502, 2190, 652, 17, 52, "Output"]
}, Open  ]],
Cell[69169, 2210, 20, 0, 29, "Text"],
Cell[69192, 2212, 3517, 108, 80, "Text"],
Cell[72712, 2322, 7094, 187, 445, "Input",
 InitializationCell->True],
Cell[79809, 2511, 155, 2, 47, "Input"],
Cell[CellGroupData[{
Cell[79989, 2517, 577, 15, 46, "Input"],
Cell[80569, 2534, 1280, 38, 57, "Output"]
}, Open  ]],
Cell[81864, 2575, 703, 21, 53, "Input"],
Cell[CellGroupData[{
Cell[82592, 2600, 362, 10, 31, "Input"],
Cell[82957, 2612, 498, 8, 21, "Message"],
Cell[83458, 2622, 380, 9, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83875, 2636, 945, 21, 50, "Input"],
Cell[84823, 2659, 1787, 55, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86647, 2719, 452, 11, 31, "Input"],
Cell[87102, 2732, 487, 13, 62, "Output"]
}, Open  ]],
Cell[87604, 2748, 168, 3, 31, "Input"],
Cell[87775, 2753, 621, 17, 62, "Input",
 InitializationCell->True],
Cell[88399, 2772, 1196, 25, 54, "Input",
 InitializationCell->True],
Cell[89598, 2799, 1982, 40, 86, "Input",
 InitializationCell->True],
Cell[91583, 2841, 2857, 53, 106, "Input",
 InitializationCell->True],
Cell[94443, 2896, 2820, 51, 106, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[97288, 2951, 2906, 57, 132, "Input"],
Cell[100197, 3010, 581, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100815, 3026, 1866, 44, 72, "Input"],
Cell[102684, 3072, 7437, 127, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110158, 3204, 2028, 45, 92, "Input"],
Cell[112189, 3251, 2075, 39, 126, "Output"]
}, Open  ]],
Cell[114279, 3293, 1813, 43, 72, "Input"],
Cell[CellGroupData[{
Cell[116117, 3340, 1813, 43, 72, "Input"],
Cell[117933, 3385, 3489, 62, 131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121459, 3452, 2461, 51, 92, "Input"],
Cell[123923, 3505, 5492, 95, 127, "Output"]
}, Open  ]],
Cell[129430, 3603, 179, 3, 47, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129646, 3611, 211, 3, 28, "Subsubtitle"],
Cell[129860, 3616, 3940, 137, 224, "DisplayFormulaNumbered"],
Cell[133803, 3755, 98, 1, 29, "Text"],
Cell[133904, 3758, 852, 30, 54, "Text"],
Cell[134759, 3790, 854, 30, 54, "Text"],
Cell[135616, 3822, 642, 22, 54, "Text"],
Cell[136261, 3846, 631, 21, 58, "Input"],
Cell[136895, 3869, 426, 14, 31, "Input"],
Cell[137324, 3885, 127, 2, 31, "Input"],
Cell[137454, 3889, 6252, 186, 112, "Input"],
Cell[143709, 4077, 377, 7, 31, "Input"],
Cell[144089, 4086, 422, 9, 31, "Input"],
Cell[144514, 4097, 131, 2, 47, "Input"],
Cell[144648, 4101, 8130, 222, 129, "Text"],
Cell[152781, 4325, 368, 6, 31, "Input"],
Cell[153152, 4333, 579, 15, 43, "Text"],
Cell[153734, 4350, 1776, 48, 44, "Text"],
Cell[155513, 4400, 959, 26, 47, "Input"],
Cell[156475, 4428, 30, 0, 29, "Text"],
Cell[156508, 4430, 9755, 289, 151, "Text"],
Cell[166266, 4721, 98, 1, 31, "Input"],
Cell[166367, 4724, 9514, 286, 151, "Text"],
Cell[175884, 5012, 613, 17, 52, "Input"],
Cell[176500, 5031, 110, 2, 31, "Input"],
Cell[176613, 5035, 236, 7, 31, "Input"],
Cell[176852, 5044, 97, 1, 31, "Input"],
Cell[176952, 5047, 8997, 268, 143, "Text"],
Cell[185952, 5317, 125, 2, 31, "Input"],
Cell[186080, 5321, 573, 14, 31, "Input"],
Cell[186656, 5337, 7896, 332, 159, "Input"],
Cell[194555, 5671, 121, 2, 29, "Text"],
Cell[194679, 5675, 518, 12, 31, "Input"],
Cell[195200, 5689, 1101, 45, 51, "Input"],
Cell[196304, 5736, 1193, 45, 52, "Input"],
Cell[197500, 5783, 2545, 83, 52, "Input"],
Cell[200048, 5868, 1319, 47, 52, "Input"],
Cell[201370, 5917, 425, 11, 31, "Input"],
Cell[201798, 5930, 205, 4, 31, "Input"],
Cell[202006, 5936, 1267, 44, 52, "Input"],
Cell[203276, 5982, 2803, 94, 52, "Input"],
Cell[206082, 6078, 1343, 45, 52, "Input"],
Cell[207428, 6125, 252, 4, 31, "Input"],
Cell[207683, 6131, 259, 4, 31, "Input"],
Cell[207945, 6137, 2092, 65, 52, "Text"],
Cell[210040, 6204, 2090, 65, 52, "Text"],
Cell[212133, 6271, 251, 5, 52, "Input"],
Cell[212387, 6278, 2319, 67, 94, "Input"],
Cell[CellGroupData[{
Cell[214731, 6349, 1001, 35, 50, "Input"],
Cell[215735, 6386, 670, 19, 45, "Output"]
}, Open  ]],
Cell[216420, 6408, 377, 12, 45, "Input"],
Cell[216800, 6422, 2034, 57, 65, "Input"],
Cell[218837, 6481, 1746, 50, 75, "Text"],
Cell[220586, 6533, 1624, 48, 56, "Input"],
Cell[222213, 6583, 486, 15, 46, "Text"],
Cell[222702, 6600, 872, 27, 47, "Input"],
Cell[223577, 6629, 115, 2, 31, "Input"],
Cell[223695, 6633, 555, 18, 49, "Input"],
Cell[224253, 6653, 564, 14, 45, "Input"],
Cell[224820, 6669, 649, 20, 53, "Input"],
Cell[225472, 6691, 121, 2, 31, "Input"],
Cell[225596, 6695, 500, 16, 29, "Text"],
Cell[226099, 6713, 761, 22, 38, "Text"],
Cell[226863, 6737, 98, 1, 31, "Input"],
Cell[226964, 6740, 4020, 119, 118, "Input"],
Cell[230987, 6861, 275, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[231287, 6870, 3461, 99, 53, "Input"],
Cell[234751, 6971, 3049, 86, 140, "Output"]
}, Open  ]],
Cell[237815, 7060, 11477, 294, 596, "Input",
 InitializationCell->True],
Cell[249295, 7356, 15207, 379, 684, "Input",
 InitializationCell->True],
Cell[264505, 7737, 15268, 380, 684, "Input",
 InitializationCell->True],
Cell[279776, 8119, 11296, 291, 596, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[291097, 8414, 2021, 42, 92, "Input"],
Cell[293121, 8458, 209, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293367, 8466, 2380, 51, 92, "Input"],
Cell[295750, 8519, 153225, 2501, 307, 77621, 1259, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[449024, 11026, 597, 17, 57, "Subtitle"],
Cell[449624, 11045, 125, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[449774, 11050, 101, 1, 28, "Subsubtitle"],
Cell[449878, 11053, 18633, 355, 661, "Input",
 InitializationCell->True],
Cell[468514, 11410, 21532, 412, 764, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[490071, 11826, 3848, 77, 172, "Input"],
Cell[493922, 11905, 515, 12, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494474, 11922, 3490, 73, 152, "Input"],
Cell[497967, 11997, 603849, 9853, 733, 232573, 3765, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1101865, 21856, 117, 1, 28, "Subsubtitle"],
Cell[1101985, 21859, 30554, 579, 1231, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1132576, 22443, 205, 4, 28, "Subsubtitle"],
Cell[1132784, 22449, 5195, 82, 172, "Input",
 InitializationCell->True],
Cell[1137982, 22533, 5659, 91, 172, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1143678, 22629, 109, 1, 28, "Subsubtitle"],
Cell[1143790, 22632, 10115, 200, 512, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1153942, 22837, 159, 2, 28, "Subsubtitle"],
Cell[1154104, 22841, 17636, 273, 492, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1171777, 23119, 95, 1, 28, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1171897, 23124, 5611, 119, 232, "Input"],
Cell[CellGroupData[{
Cell[1177533, 23247, 3977, 100, 81, "Print"],
Cell[1181513, 23349, 3504, 78, 219, "Print"],
Cell[1185020, 23429, 961, 19, 23, "Print"],
Cell[1185984, 23450, 947, 19, 23, "Print"],
Cell[1186934, 23471, 1284, 25, 45, "Print"],
Cell[1188221, 23498, 1155, 22, 45, "Print"],
Cell[1189379, 23522, 522, 12, 43, "Print"],
Cell[1189904, 23536, 938, 19, 23, "Print"],
Cell[1190845, 23557, 213, 3, 23, "Print"],
Cell[1191061, 23562, 853, 18, 23, "Print"],
Cell[1191917, 23582, 847, 18, 23, "Print"],
Cell[1192767, 23602, 1064, 21, 26, "Print"],
Cell[1193834, 23625, 526, 12, 43, "Print"],
Cell[1194363, 23639, 845, 18, 23, "Print"]
}, Open  ]],
Cell[1195223, 23660, 1632, 31, 420, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1196892, 23696, 5657, 119, 232, "Input"],
Cell[CellGroupData[{
Cell[1202574, 23819, 3861, 98, 81, "Print"],
Cell[1206438, 23919, 3386, 76, 219, "Print"],
Cell[1209827, 23997, 846, 17, 23, "Print"],
Cell[1210676, 24016, 835, 17, 23, "Print"],
Cell[1211514, 24035, 1167, 24, 45, "Print"],
Cell[1212684, 24061, 1064, 20, 45, "Print"],
Cell[1213751, 24083, 408, 10, 43, "Print"],
Cell[1214162, 24095, 839, 17, 23, "Print"],
Cell[1215004, 24114, 95, 1, 23, "Print"],
Cell[1215102, 24117, 739, 16, 23, "Print"],
Cell[1215844, 24135, 731, 16, 23, "Print"],
Cell[1216578, 24153, 950, 19, 26, "Print"],
Cell[1217531, 24174, 408, 10, 43, "Print"],
Cell[1217942, 24186, 729, 16, 23, "Print"]
}, Open  ]],
Cell[1218686, 24205, 1304, 26, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1220027, 24236, 5768, 121, 232, "Input"],
Cell[CellGroupData[{
Cell[1225820, 24361, 3863, 98, 81, "Print"],
Cell[1229686, 24461, 3388, 76, 219, "Print"],
Cell[1233077, 24539, 843, 17, 23, "Print"],
Cell[1233923, 24558, 836, 17, 23, "Print"],
Cell[1234762, 24577, 1156, 24, 45, "Print"],
Cell[1235921, 24603, 1154, 22, 45, "Print"],
Cell[1237078, 24627, 408, 10, 43, "Print"],
Cell[1237489, 24639, 838, 17, 23, "Print"],
Cell[1238330, 24658, 97, 1, 23, "Print"],
Cell[1238430, 24661, 739, 16, 23, "Print"],
Cell[1239172, 24679, 723, 16, 23, "Print"],
Cell[1239898, 24697, 959, 19, 26, "Print"],
Cell[1240860, 24718, 408, 10, 43, "Print"],
Cell[1241271, 24730, 717, 16, 23, "Print"]
}, Open  ]],
Cell[1242003, 24749, 1273, 25, 143, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1243337, 24781, 213, 3, 65, "Subtitle"],
Cell[1243553, 24786, 2936, 103, 257, "Text"],
Cell[CellGroupData[{
Cell[1246514, 24893, 328, 5, 52, "Subsection"],
Cell[1246845, 24900, 148, 2, 29, "Text"],
Cell[1246996, 24904, 122, 2, 29, "Text"],
Cell[1247121, 24908, 96, 1, 29, "Text"],
Cell[1247220, 24911, 147, 2, 29, "Text"],
Cell[1247370, 24915, 510, 13, 44, "Text"],
Cell[1247883, 24930, 494, 12, 44, "Text"],
Cell[1248380, 24944, 164, 2, 29, "Text"],
Cell[1248547, 24948, 561, 14, 45, "Text"],
Cell[1249111, 24964, 660, 16, 45, "Text"],
Cell[1249774, 24982, 327, 5, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1250138, 24992, 254, 4, 52, "Subsection"],
Cell[1250395, 24998, 617, 19, 48, "Text"],
Cell[1251015, 25019, 145, 3, 29, "Text"],
Cell[1251163, 25024, 421, 12, 70, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1251621, 25041, 280, 5, 52, "Subsection"],
Cell[1251904, 25048, 537, 15, 173, "Text"],
Cell[1252444, 25065, 287, 4, 29, "Text"],
Cell[1252734, 25071, 596, 15, 44, "Text"],
Cell[1253333, 25088, 631, 17, 44, "Text"],
Cell[1253967, 25107, 1261, 38, 44, "Text"],
Cell[1255231, 25147, 567, 14, 64, "Text"],
Cell[1255801, 25163, 228, 3, 29, "Text"],
Cell[1256032, 25168, 245, 3, 29, "Text"],
Cell[1256280, 25173, 425, 12, 45, "Text"],
Cell[1256708, 25187, 87, 1, 29, "Text"],
Cell[1256798, 25190, 561, 13, 45, "Text"],
Cell[1257362, 25205, 693, 17, 64, "Text"],
Cell[1258058, 25224, 631, 16, 45, "Text"],
Cell[1258692, 25242, 821, 22, 45, "Text"],
Cell[1259516, 25266, 637, 17, 45, "Text"],
Cell[1260156, 25285, 631, 18, 45, "Text"],
Cell[1260790, 25305, 100, 1, 29, "Text"],
Cell[1260893, 25308, 1130, 32, 61, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1262072, 25346, 115, 1, 49, "Subtitle"],
Cell[CellGroupData[{
Cell[1262212, 25351, 143, 3, 71, "Section"],
Cell[1262358, 25356, 5876, 128, 328, "Input",
 InitializationCell->True],
Cell[1268237, 25486, 6070, 130, 328, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1274332, 25620, 2213, 43, 152, "Input"],
Cell[1276548, 25665, 4199, 102, 81, "Print"],
Cell[1280750, 25769, 196, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1280983, 25779, 2161, 42, 152, "Input"],
Cell[1283147, 25823, 4295, 103, 81, "Print"],
Cell[1287445, 25928, 494, 10, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1287988, 25944, 184, 4, 71, "Section"],
Cell[1288175, 25950, 8209, 168, 528, "Input",
 InitializationCell->True],
Cell[1296387, 26120, 182, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[1296594, 26127, 17775, 370, 752, "Input"],
Cell[CellGroupData[{
Cell[1314394, 26501, 488, 11, 23, "Print"],
Cell[1314885, 26514, 365, 8, 23, "Print"]
}, Open  ]],
Cell[1315265, 26525, 35853, 628, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1351155, 27158, 19002, 396, 792, "Input"],
Cell[CellGroupData[{
Cell[1370182, 27558, 175597, 2840, 290, "Print"],
Cell[1545782, 30400, 4348, 102, 81, "Print"],
Cell[1550133, 30504, 3479, 77, 219, "Print"],
Cell[1553615, 30583, 100843, 1670, 132, "Print"],
Cell[1654461, 32255, 190, 2, 23, "Print"],
Cell[1654654, 32259, 100964, 1671, 127, "Print"],
Cell[1755621, 33932, 532, 11, 23, "Print"]
}, Open  ]],
Cell[1756168, 33946, 41505, 718, 194, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1797722, 34670, 171, 3, 71, "Section"],
Cell[1797896, 34675, 3244, 89, 231, "Input"],
Cell[1801143, 34766, 3282, 90, 231, "Input",
 InitializationCell->True],
Cell[1804428, 34858, 1296, 32, 66, "Input",
 InitializationCell->True],
Cell[1805727, 34892, 673, 17, 31, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1806425, 34913, 1036, 22, 92, "Input"],
Cell[1807464, 34937, 334, 5, 30, "Output"]
}, Open  ]],
Cell[1807813, 34945, 646, 16, 31, "Input"],
Cell[1808462, 34963, 10040, 269, 496, "Input",
 InitializationCell->True],
Cell[1818505, 35234, 9996, 268, 496, "Input",
 InitializationCell->True],
Cell[1828504, 35504, 1883, 40, 92, "Input",
 InitializationCell->True],
Cell[1830390, 35546, 1877, 40, 92, "Input",
 InitializationCell->True],
Cell[1832270, 35588, 2044, 44, 93, "Input",
 InitializationCell->True],
Cell[1834317, 35634, 2085, 44, 93, "Input",
 InitializationCell->True],
Cell[1836405, 35680, 2052, 43, 93, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1838494, 35728, 197, 4, 71, "Section"],
Cell[1838694, 35734, 97, 1, 29, "Text"],
Cell[1838794, 35737, 2909, 102, 241, "Text"],
Cell[1841706, 35841, 93, 1, 29, "Text"],
Cell[1841802, 35844, 758, 22, 31, "Text"],
Cell[1842563, 35868, 188, 4, 29, "Text"],
Cell[1842754, 35874, 675, 20, 29, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1843478, 35900, 142, 2, 65, "Subtitle"],
Cell[CellGroupData[{
Cell[1843645, 35906, 106, 1, 36, "Subsection"],
Cell[1843754, 35909, 1021, 23, 172, "Input"],
Cell[1844778, 35934, 1708, 49, 151, "Input"],
Cell[CellGroupData[{
Cell[1846511, 35987, 407, 11, 31, "Input"],
Cell[1846921, 36000, 496, 14, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1847454, 36019, 303, 8, 31, "Input"],
Cell[1847760, 36029, 5608, 167, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1853405, 36201, 384, 10, 31, "Input"],
Cell[1853792, 36213, 2091, 63, 55, "Output"]
}, Open  ]],
Cell[1855898, 36279, 159, 3, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1856094, 36287, 108, 1, 36, "Subsection"],
Cell[1856205, 36290, 423, 11, 92, "Input"],
Cell[1856631, 36303, 590, 18, 67, "Input"],
Cell[CellGroupData[{
Cell[1857246, 36325, 406, 10, 31, "Input"],
Cell[1857655, 36337, 117, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1857809, 36344, 366, 9, 31, "Input"],
Cell[1858178, 36355, 142, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1858357, 36363, 311, 8, 31, "Input"],
Cell[1858671, 36373, 135, 2, 30, "Output"]
}, Open  ]],
Cell[1858821, 36378, 133, 1, 29, "Text"],
Cell[1858957, 36381, 147, 2, 29, "Text"],
Cell[1859107, 36385, 277, 7, 44, "Text"],
Cell[1859387, 36394, 311, 7, 45, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1859735, 36406, 139, 1, 71, "Section"],
Cell[1859877, 36409, 23085, 520, 933, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1882987, 36933, 2286, 50, 132, "Input"],
Cell[1885276, 36985, 1073, 22, 23, "Print"],
Cell[1886352, 37009, 432, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1886821, 37023, 187, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1887033, 37029, 7933, 169, 372, "Input"],
Cell[CellGroupData[{
Cell[1894991, 37202, 4005, 100, 81, "Print"],
Cell[1898999, 37304, 3530, 78, 219, "Print"],
Cell[1902532, 37384, 870, 16, 23, "Print"],
Cell[1903405, 37402, 950, 19, 23, "Print"],
Cell[1904358, 37423, 90421, 1498, 132, "Print"],
Cell[1994782, 38923, 3306, 56, 249, "Print"],
Cell[1998091, 38981, 987, 19, 23, "Print"],
Cell[1999081, 39002, 974, 19, 23, "Print"],
Cell[2000058, 39023, 1427, 29, 48, "Print"],
Cell[2001488, 39054, 550, 12, 43, "Print"],
Cell[2002041, 39068, 970, 19, 23, "Print"],
Cell[2003014, 39089, 239, 3, 23, "Print"],
Cell[2003256, 39094, 870, 16, 23, "Print"],
Cell[2004129, 39112, 855, 18, 23, "Print"],
Cell[2004987, 39132, 99108, 1641, 127, "Print"],
Cell[2104098, 40775, 3329, 56, 249, "Print"],
Cell[2107430, 40833, 886, 18, 23, "Print"],
Cell[2108319, 40853, 876, 18, 23, "Print"],
Cell[2109198, 40873, 1268, 26, 45, "Print"],
Cell[2110469, 40901, 550, 12, 43, "Print"],
Cell[2111022, 40915, 874, 18, 23, "Print"],
Cell[2111899, 40935, 740, 18, 23, "Print"],
Cell[2112642, 40955, 403, 8, 23, "Print"],
Cell[2113048, 40965, 395, 8, 23, "Print"],
Cell[2113446, 40975, 524, 10, 23, "Print"],
Cell[2113973, 40987, 406, 8, 23, "Print"],
Cell[2114382, 40997, 1339, 31, 95, "Print"],
Cell[2115724, 41030, 1901, 35, 43, "Print"],
Cell[2117628, 41067, 1503, 26, 43, "Print"],
Cell[2119134, 41095, 3040, 69, 62, "Print"],
Cell[2122177, 41166, 3041, 70, 62, "Print"]
}, Open  ]],
Cell[2125233, 41239, 2228, 40, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2127498, 41284, 8052, 171, 372, "Input"],
Cell[CellGroupData[{
Cell[2135575, 41459, 3934, 99, 81, "Print"],
Cell[2139512, 41560, 3461, 77, 219, "Print"],
Cell[2142976, 41639, 916, 18, 23, "Print"],
Cell[2143895, 41659, 903, 18, 23, "Print"],
Cell[2144801, 41679, 1356, 28, 48, "Print"],
Cell[2146160, 41709, 479, 11, 43, "Print"],
Cell[2146642, 41722, 901, 18, 23, "Print"],
Cell[2147546, 41742, 168, 2, 23, "Print"],
Cell[2147717, 41746, 813, 17, 23, "Print"],
Cell[2148533, 41765, 807, 17, 23, "Print"],
Cell[2149343, 41784, 1195, 25, 45, "Print"],
Cell[2150541, 41811, 479, 11, 43, "Print"],
Cell[2151023, 41824, 801, 17, 23, "Print"],
Cell[2151827, 41843, 671, 17, 23, "Print"],
Cell[2152501, 41862, 332, 7, 23, "Print"],
Cell[2152836, 41871, 326, 7, 23, "Print"],
Cell[2153165, 41880, 453, 9, 23, "Print"],
Cell[2153621, 41891, 335, 7, 23, "Print"],
Cell[2153959, 41900, 1265, 30, 95, "Print"],
Cell[2155227, 41932, 1845, 34, 23, "Print"],
Cell[2157075, 41968, 1427, 25, 43, "Print"],
Cell[2158505, 41995, 2967, 68, 62, "Print"],
Cell[2161475, 42065, 2965, 68, 62, "Print"]
}, Open  ]],
Cell[2164455, 42136, 2096, 38, 139, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2166612, 42181, 191, 4, 71, "Section"],
Cell[2166806, 42187, 6735, 136, 428, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2173566, 42327, 20778, 422, 812, "Input"],
Cell[CellGroupData[{
Cell[2194369, 42753, 5295, 117, 81, "Print"],
Cell[2199667, 42872, 1741, 32, 23, "Print"],
Cell[2201411, 42906, 1435, 22, 23, "Print"],
Cell[2202849, 42930, 1531, 25, 23, "Print"],
Cell[2204383, 42957, 1413, 22, 23, "Print"],
Cell[2205799, 42981, 1397, 22, 23, "Print"],
Cell[2207199, 43005, 1528, 24, 23, "Print"],
Cell[2208730, 43031, 1405, 22, 23, "Print"],
Cell[2210138, 43055, 2493, 48, 101, "Print"],
Cell[2212634, 43105, 2480, 43, 23, "Print"],
Cell[2215117, 43150, 2135, 35, 45, "Print"],
Cell[2217255, 43187, 1584, 26, 23, "Print"],
Cell[2218842, 43215, 3103, 62, 43, "Print"]
}, Open  ]],
Cell[2221960, 43280, 47151, 818, 98, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
