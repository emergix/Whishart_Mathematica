(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



<< "C:\\Documents and Settings\\ocroissant\\My Documents\\BiHeston\\BiHeston_Process.m"


<< "C:\\Documents and Settings\\ocroissant\\My Documents\\BiHeston\\BiHeston_VanillaInstruments.m"


InitializeMarketData[]:=Module[{},cms2Tab=Table[CMSData[[i,j]],{i,3,202},{j,1,10}];
cms5Tab=Table[CMSData[[i,j]],{i,3,202},{j,12,21}];
cms10Tab=Table[CMSData[[i,j]],{i,3,202},{j,23,32}];
cms20Tab=Table[CMSData[[i,j]],{i,3,202},{j,34,43}];
cms30Tab=Table[CMSData[[i,j]],{i,3,202},{j,45,54}];
NormalVol2Y10YTab=Table[CMSData[[i,j]],{i,215,261},{j,44,55}];
NormalVol2Y20YTab=Table[CMSData[[i,j]],{i,274,320},{j,44,55}];
NormalVol2Y30YTab=Table[CMSData[[i,j]],{i,333,379},{j,44,55}];
NormalVol5Y10YTab=Table[CMSData[[i,j]],{i,392,438},{j,44,55}];
NormalVol5Y20YTab=Table[CMSData[[i,j]],{i,451,497},{j,44,55}];
NormalVol5Y30YTab=Table[CMSData[[i,j]],{i,510,556},{j,44,55}];
spreadoptionMaturitiesTab=Table[CMSData[[i,1]],{i,215,261}];
]


(* ::Input:: *)
CMSData=Import["C:\\Documents and Settings\\ocroissant\\My Documents\\CMS_Spread_Market.csv"];
InitializeMarketData[];Length[CMSData]


MarketCMSSpreadOptionNormalVol[K_,T_,tenor1_,tenor2_]:=
Module[{tab,opt1,opt2,i,j,
StrikeList={-0.01,-0.0075,-0.005,-0.0025,0,0.0025,0.005,0.0075,0.01,0.015},
smile1,smile2,inter1,inter2
},tab=Switch[tenor1,
"cms2",Switch[tenor2,"cms10",NormalVol2Y10YTab,"cms20",NormalVol2Y20YTab,"cms30",NormalVol2Y30YTab],
"cms5",Switch[tenor2,"cms10",NormalVol5Y10YTab,"cms20",NormalVol5Y20YTab,"cms30",NormalVol5Y30YTab]
];
(* determination du rang de la maturit\[EAcute] *)
i=2;
While[(i<Length[spreadoptionMaturitiesTab])&&( T>spreadoptionMaturitiesTab[[i]]),i++];
(*interpolation *)
smile1=Table[{StrikeList[[j]],tab[[i-1,j]]},{j,1,Length[StrikeList]}];
smile2=Table[{StrikeList[[j]],tab[[i,j]]},{j,1,Length[StrikeList]}];
inter1=Interpolation[smile1];
inter2=Interpolation[smile2];
opt1=inter1[K];
opt2=inter2[K];
{opt1+(T-spreadoptionMaturitiesTab[[i-1]])/(spreadoptionMaturitiesTab[[i]]-spreadoptionMaturitiesTab[[i-1]]) (opt2-opt1),opt1,opt2}
]



MarketCMSOptionVol[K_,T_,tenor_]:=
Module[{tab,opt1,opt2,i},
tab=Switch[tenor,"cms2",cms2Tab,"cms5",cms5Tab,"cms10",cms10Tab,"cms20",cms20Tab,"cms30",cms30Tab];
(* determination du rang de la maturit\[EAcute] *)
i=2;
While[(i<Length[tab])&&( T>tab[[i,1]]),i++];
(*interpolation *)
opt1=SABROptionDirect2[tab[[i-1,2]],tab[[i-1,3]],tab[[i-1,4]],tab[[i-1,5]],tab[[i-1,6]],K,tab[[i-1,1]]][[1]];
opt2=SABROptionDirect2[tab[[i,2]],tab[[i,3]],tab[[i,4]],tab[[i,5]],tab[[i,6]],K,tab[[i,1]]][[1]];
{opt1+(T-tab[[i-1,1]])/(tab[[i,1]]-tab[[i-1,1]]) (opt2-opt1),opt1,opt2}
]


MarketCMSForward[T_,tenor_]:=
Module[{tab,opt1,opt2},tab=Switch[tenor,"cms2",cms2Tab,"cms5",cms5Tab,"cms10",cms10Tab,"cms20",cms20Tab,"cms30",cms30Tab];
(* determination du rang de la maturit\[EAcute] *)
i=2;
While[(i<Length[tab])&&( T>tab[[i,1]]),i++];
opt1=tab[[i-1,2]];
opt2=tab[[i,2]];
{opt1+(T-tab[[i-1,1]])/(tab[[i,1]]-tab[[i-1,1]]) (opt2-opt1),opt1,opt2}
]



